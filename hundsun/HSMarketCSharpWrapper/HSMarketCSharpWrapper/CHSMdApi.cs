//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace CTACSharp.HS.Market {

public class CHSMdApi : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CHSMdApi(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CHSMdApi obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual void ReleaseApi() {
    HSMarketCppWrapperPINVOKE.CHSMdApi_ReleaseApi(swigCPtr);
  }

  public virtual int Init(string pszLicFile, string pszPwd, string pszSslFile, string pszSslPwd) {
    int ret = HSMarketCppWrapperPINVOKE.CHSMdApi_Init__SWIG_0(swigCPtr, pszLicFile, pszPwd, pszSslFile, pszSslPwd);
    return ret;
  }

  public virtual int Init(string pszLicFile, string pszPwd, string pszSslFile) {
    int ret = HSMarketCppWrapperPINVOKE.CHSMdApi_Init__SWIG_1(swigCPtr, pszLicFile, pszPwd, pszSslFile);
    return ret;
  }

  public virtual int Init(string pszLicFile, string pszPwd) {
    int ret = HSMarketCppWrapperPINVOKE.CHSMdApi_Init__SWIG_2(swigCPtr, pszLicFile, pszPwd);
    return ret;
  }

  public virtual int Init(string pszLicFile) {
    int ret = HSMarketCppWrapperPINVOKE.CHSMdApi_Init__SWIG_3(swigCPtr, pszLicFile);
    return ret;
  }

  public virtual int Join() {
    int ret = HSMarketCppWrapperPINVOKE.CHSMdApi_Join(swigCPtr);
    return ret;
  }

  public virtual int RegisterFront(string pszFrontAddress) {
    int ret = HSMarketCppWrapperPINVOKE.CHSMdApi_RegisterFront(swigCPtr, pszFrontAddress);
    return ret;
  }

  public virtual int RegisterFensServer(string pszFensAddress, string pszAccountID) {
    int ret = HSMarketCppWrapperPINVOKE.CHSMdApi_RegisterFensServer(swigCPtr, pszFensAddress, pszAccountID);
    return ret;
  }

  public virtual void RegisterSpi(CHSMdSpi pSpi) {
    HSMarketCppWrapperPINVOKE.CHSMdApi_RegisterSpi(swigCPtr, CHSMdSpi.getCPtr(pSpi));
  }

  public virtual int ReqDepthMarketDataSubscribe(CHSReqDepthMarketDataField pReqDepthMarketDataSubscribe, int nCount, int nRequestID) {
    int ret = HSMarketCppWrapperPINVOKE.CHSMdApi_ReqDepthMarketDataSubscribe(swigCPtr, CHSReqDepthMarketDataField.getCPtr(pReqDepthMarketDataSubscribe), nCount, nRequestID);
    return ret;
  }

  public virtual int ReqDepthMarketDataCancel(CHSReqDepthMarketDataField pReqDepthMarketDataCancel, int nCount, int nRequestID) {
    int ret = HSMarketCppWrapperPINVOKE.CHSMdApi_ReqDepthMarketDataCancel(swigCPtr, CHSReqDepthMarketDataField.getCPtr(pReqDepthMarketDataCancel), nCount, nRequestID);
    return ret;
  }

  public virtual string GetApiErrorMsg(int nErrorCode) {
    string ret = HSMarketCppWrapperPINVOKE.CHSMdApi_GetApiErrorMsg(swigCPtr, nErrorCode);
    return ret;
  }

  public CHSMdApi() : this(HSMarketCppWrapperPINVOKE.new_CHSMdApi(), true) {
    SwigDirectorConnect();
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("ReleaseApi", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateCHSMdApi_0(SwigDirectorReleaseApi);
    if (SwigDerivedClassHasMethod("Init", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateCHSMdApi_1(SwigDirectorInit__SWIG_0);
    if (SwigDerivedClassHasMethod("Init", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateCHSMdApi_2(SwigDirectorInit__SWIG_1);
    if (SwigDerivedClassHasMethod("Init", swigMethodTypes3))
      swigDelegate3 = new SwigDelegateCHSMdApi_3(SwigDirectorInit__SWIG_2);
    if (SwigDerivedClassHasMethod("Init", swigMethodTypes4))
      swigDelegate4 = new SwigDelegateCHSMdApi_4(SwigDirectorInit__SWIG_3);
    if (SwigDerivedClassHasMethod("Join", swigMethodTypes5))
      swigDelegate5 = new SwigDelegateCHSMdApi_5(SwigDirectorJoin);
    if (SwigDerivedClassHasMethod("RegisterFront", swigMethodTypes6))
      swigDelegate6 = new SwigDelegateCHSMdApi_6(SwigDirectorRegisterFront);
    if (SwigDerivedClassHasMethod("RegisterFensServer", swigMethodTypes7))
      swigDelegate7 = new SwigDelegateCHSMdApi_7(SwigDirectorRegisterFensServer);
    if (SwigDerivedClassHasMethod("RegisterSpi", swigMethodTypes8))
      swigDelegate8 = new SwigDelegateCHSMdApi_8(SwigDirectorRegisterSpi);
    if (SwigDerivedClassHasMethod("ReqDepthMarketDataSubscribe", swigMethodTypes9))
      swigDelegate9 = new SwigDelegateCHSMdApi_9(SwigDirectorReqDepthMarketDataSubscribe);
    if (SwigDerivedClassHasMethod("ReqDepthMarketDataCancel", swigMethodTypes10))
      swigDelegate10 = new SwigDelegateCHSMdApi_10(SwigDirectorReqDepthMarketDataCancel);
    if (SwigDerivedClassHasMethod("GetApiErrorMsg", swigMethodTypes11))
      swigDelegate11 = new SwigDelegateCHSMdApi_11(SwigDirectorGetApiErrorMsg);
    HSMarketCppWrapperPINVOKE.CHSMdApi_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3, swigDelegate4, swigDelegate5, swigDelegate6, swigDelegate7, swigDelegate8, swigDelegate9, swigDelegate10, swigDelegate11);
  }

  private bool SwigDerivedClassHasMethod(string methodName, global::System.Type[] methodTypes) {
    global::System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(CHSMdApi));
    return hasDerivedMethod;
  }

  private void SwigDirectorReleaseApi() {
    ReleaseApi();
  }

  private int SwigDirectorInit__SWIG_0(string pszLicFile, string pszPwd, string pszSslFile, string pszSslPwd) {
    return Init(pszLicFile, pszPwd, pszSslFile, pszSslPwd);
  }

  private int SwigDirectorInit__SWIG_1(string pszLicFile, string pszPwd, string pszSslFile) {
    return Init(pszLicFile, pszPwd, pszSslFile);
  }

  private int SwigDirectorInit__SWIG_2(string pszLicFile, string pszPwd) {
    return Init(pszLicFile, pszPwd);
  }

  private int SwigDirectorInit__SWIG_3(string pszLicFile) {
    return Init(pszLicFile);
  }

  private int SwigDirectorJoin() {
    return Join();
  }

  private int SwigDirectorRegisterFront(string pszFrontAddress) {
    return RegisterFront(pszFrontAddress);
  }

  private int SwigDirectorRegisterFensServer(string pszFensAddress, string pszAccountID) {
    return RegisterFensServer(pszFensAddress, pszAccountID);
  }

  private void SwigDirectorRegisterSpi(global::System.IntPtr pSpi) {
    RegisterSpi((pSpi == global::System.IntPtr.Zero) ? null : new CHSMdSpi(pSpi, false));
  }

  private int SwigDirectorReqDepthMarketDataSubscribe(global::System.IntPtr pReqDepthMarketDataSubscribe, int nCount, int nRequestID) {
    return ReqDepthMarketDataSubscribe((pReqDepthMarketDataSubscribe == global::System.IntPtr.Zero) ? null : new CHSReqDepthMarketDataField(pReqDepthMarketDataSubscribe, false), nCount, nRequestID);
  }

  private int SwigDirectorReqDepthMarketDataCancel(global::System.IntPtr pReqDepthMarketDataCancel, int nCount, int nRequestID) {
    return ReqDepthMarketDataCancel((pReqDepthMarketDataCancel == global::System.IntPtr.Zero) ? null : new CHSReqDepthMarketDataField(pReqDepthMarketDataCancel, false), nCount, nRequestID);
  }

  private string SwigDirectorGetApiErrorMsg(int nErrorCode) {
    return GetApiErrorMsg(nErrorCode);
  }

  public delegate void SwigDelegateCHSMdApi_0();
  public delegate int SwigDelegateCHSMdApi_1(string pszLicFile, string pszPwd, string pszSslFile, string pszSslPwd);
  public delegate int SwigDelegateCHSMdApi_2(string pszLicFile, string pszPwd, string pszSslFile);
  public delegate int SwigDelegateCHSMdApi_3(string pszLicFile, string pszPwd);
  public delegate int SwigDelegateCHSMdApi_4(string pszLicFile);
  public delegate int SwigDelegateCHSMdApi_5();
  public delegate int SwigDelegateCHSMdApi_6(string pszFrontAddress);
  public delegate int SwigDelegateCHSMdApi_7(string pszFensAddress, string pszAccountID);
  public delegate void SwigDelegateCHSMdApi_8(global::System.IntPtr pSpi);
  public delegate int SwigDelegateCHSMdApi_9(global::System.IntPtr pReqDepthMarketDataSubscribe, int nCount, int nRequestID);
  public delegate int SwigDelegateCHSMdApi_10(global::System.IntPtr pReqDepthMarketDataCancel, int nCount, int nRequestID);
  public delegate string SwigDelegateCHSMdApi_11(int nErrorCode);

  private SwigDelegateCHSMdApi_0 swigDelegate0;
  private SwigDelegateCHSMdApi_1 swigDelegate1;
  private SwigDelegateCHSMdApi_2 swigDelegate2;
  private SwigDelegateCHSMdApi_3 swigDelegate3;
  private SwigDelegateCHSMdApi_4 swigDelegate4;
  private SwigDelegateCHSMdApi_5 swigDelegate5;
  private SwigDelegateCHSMdApi_6 swigDelegate6;
  private SwigDelegateCHSMdApi_7 swigDelegate7;
  private SwigDelegateCHSMdApi_8 swigDelegate8;
  private SwigDelegateCHSMdApi_9 swigDelegate9;
  private SwigDelegateCHSMdApi_10 swigDelegate10;
  private SwigDelegateCHSMdApi_11 swigDelegate11;

  private static global::System.Type[] swigMethodTypes0 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes1 = new global::System.Type[] { typeof(string), typeof(string), typeof(string), typeof(string) };
  private static global::System.Type[] swigMethodTypes2 = new global::System.Type[] { typeof(string), typeof(string), typeof(string) };
  private static global::System.Type[] swigMethodTypes3 = new global::System.Type[] { typeof(string), typeof(string) };
  private static global::System.Type[] swigMethodTypes4 = new global::System.Type[] { typeof(string) };
  private static global::System.Type[] swigMethodTypes5 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes6 = new global::System.Type[] { typeof(string) };
  private static global::System.Type[] swigMethodTypes7 = new global::System.Type[] { typeof(string), typeof(string) };
  private static global::System.Type[] swigMethodTypes8 = new global::System.Type[] { typeof(CHSMdSpi) };
  private static global::System.Type[] swigMethodTypes9 = new global::System.Type[] { typeof(CHSReqDepthMarketDataField), typeof(int), typeof(int) };
  private static global::System.Type[] swigMethodTypes10 = new global::System.Type[] { typeof(CHSReqDepthMarketDataField), typeof(int), typeof(int) };
  private static global::System.Type[] swigMethodTypes11 = new global::System.Type[] { typeof(int) };
}

}
