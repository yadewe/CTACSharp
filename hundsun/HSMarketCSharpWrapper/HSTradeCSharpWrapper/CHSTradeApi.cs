//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace CTACSharp.HS.Trade {

public class CHSTradeApi : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CHSTradeApi(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CHSTradeApi obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual void ReleaseApi() {
    HSTradeCppWrapperPINVOKE.CHSTradeApi_ReleaseApi(swigCPtr);
  }

  public virtual int Init(string pszLicFile, string pszPwd, string pszSslFile, string pszSslPwd) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_Init__SWIG_0(swigCPtr, pszLicFile, pszPwd, pszSslFile, pszSslPwd);
    return ret;
  }

  public virtual int Init(string pszLicFile, string pszPwd, string pszSslFile) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_Init__SWIG_1(swigCPtr, pszLicFile, pszPwd, pszSslFile);
    return ret;
  }

  public virtual int Init(string pszLicFile, string pszPwd) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_Init__SWIG_2(swigCPtr, pszLicFile, pszPwd);
    return ret;
  }

  public virtual int Init(string pszLicFile) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_Init__SWIG_3(swigCPtr, pszLicFile);
    return ret;
  }

  public virtual int Join() {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_Join(swigCPtr);
    return ret;
  }

  public virtual int RegisterSubModel(string pszSubModel) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_RegisterSubModel(swigCPtr, pszSubModel);
    return ret;
  }

  public virtual int RegisterFront(string pszFrontAddress) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_RegisterFront(swigCPtr, pszFrontAddress);
    return ret;
  }

  public virtual int RegisterFensServer(string pszFensAddress, string pszAccountID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_RegisterFensServer(swigCPtr, pszFensAddress, pszAccountID);
    return ret;
  }

  public virtual void RegisterSpi(CHSTradeSpi pSpi) {
    HSTradeCppWrapperPINVOKE.CHSTradeApi_RegisterSpi(swigCPtr, CHSTradeSpi.getCPtr(pSpi));
  }

  public virtual string GetApiErrorMsg(int nErrorCode) {
    string ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_GetApiErrorMsg(swigCPtr, nErrorCode);
    return ret;
  }

  public virtual int GetTradingDate() {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_GetTradingDate(swigCPtr);
    return ret;
  }

  public virtual int ReqUserLogin(CHSReqUserLoginField pReqUserLogin, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqUserLogin(swigCPtr, CHSReqUserLoginField.getCPtr(pReqUserLogin), nRequestID);
    return ret;
  }

  public virtual int ReqUserPasswordUpdate(CHSReqUserPasswordUpdateField pReqUserPasswordUpdate, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqUserPasswordUpdate(swigCPtr, CHSReqUserPasswordUpdateField.getCPtr(pReqUserPasswordUpdate), nRequestID);
    return ret;
  }

  public virtual int ReqOrderInsert(CHSReqOrderInsertField pReqOrderInsert, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqOrderInsert(swigCPtr, CHSReqOrderInsertField.getCPtr(pReqOrderInsert), nRequestID);
    return ret;
  }

  public virtual int ReqOrderAction(CHSReqOrderActionField pReqOrderAction, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqOrderAction(swigCPtr, CHSReqOrderActionField.getCPtr(pReqOrderAction), nRequestID);
    return ret;
  }

  public virtual int ReqExerciseOrderInsert(CHSReqExerciseOrderInsertField pReqExerciseOrderInsert, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqExerciseOrderInsert(swigCPtr, CHSReqExerciseOrderInsertField.getCPtr(pReqExerciseOrderInsert), nRequestID);
    return ret;
  }

  public virtual int ReqExerciseOrderAction(CHSReqExerciseOrderActionField pReqExerciseOrderAction, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqExerciseOrderAction(swigCPtr, CHSReqExerciseOrderActionField.getCPtr(pReqExerciseOrderAction), nRequestID);
    return ret;
  }

  public virtual int ReqLockInsert(CHSReqLockInsertField pReqLockInsert, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqLockInsert(swigCPtr, CHSReqLockInsertField.getCPtr(pReqLockInsert), nRequestID);
    return ret;
  }

  public virtual int ReqForQuoteInsert(CHSReqForQuoteInsertField pReqForQuoteInsert, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqForQuoteInsert(swigCPtr, CHSReqForQuoteInsertField.getCPtr(pReqForQuoteInsert), nRequestID);
    return ret;
  }

  public virtual int ReqCombActionInsert(CHSReqCombActionInsertField pReqCombActionInsert, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqCombActionInsert(swigCPtr, CHSReqCombActionInsertField.getCPtr(pReqCombActionInsert), nRequestID);
    return ret;
  }

  public virtual int ReqQueryMaxOrderVolume(CHSReqQueryMaxOrderVolumeField pReqQueryMaxOrderVolume, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqQueryMaxOrderVolume(swigCPtr, CHSReqQueryMaxOrderVolumeField.getCPtr(pReqQueryMaxOrderVolume), nRequestID);
    return ret;
  }

  public virtual int ReqQueryLockVolume(CHSReqQueryLockVolumeField pReqQueryLockVolume, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqQueryLockVolume(swigCPtr, CHSReqQueryLockVolumeField.getCPtr(pReqQueryLockVolume), nRequestID);
    return ret;
  }

  public virtual int ReqQueryExerciseVolume(CHSReqQueryExerciseVolumeField pReqQueryExerciseVolume, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqQueryExerciseVolume(swigCPtr, CHSReqQueryExerciseVolumeField.getCPtr(pReqQueryExerciseVolume), nRequestID);
    return ret;
  }

  public virtual int ReqQryPosition(CHSReqQryPositionField pReqQryPosition, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqQryPosition(swigCPtr, CHSReqQryPositionField.getCPtr(pReqQryPosition), nRequestID);
    return ret;
  }

  public virtual int ReqQryTradingAccount(CHSReqQryTradingAccountField pReqQryTradingAccount, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqQryTradingAccount(swigCPtr, CHSReqQryTradingAccountField.getCPtr(pReqQryTradingAccount), nRequestID);
    return ret;
  }

  public virtual int ReqQryOrder(CHSReqQryOrderField pReqQryOrder, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqQryOrder(swigCPtr, CHSReqQryOrderField.getCPtr(pReqQryOrder), nRequestID);
    return ret;
  }

  public virtual int ReqQryTrade(CHSReqQryTradeField pReqQryTrade, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqQryTrade(swigCPtr, CHSReqQryTradeField.getCPtr(pReqQryTrade), nRequestID);
    return ret;
  }

  public virtual int ReqQryExercise(CHSReqQryExerciseField pReqQryExercise, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqQryExercise(swigCPtr, CHSReqQryExerciseField.getCPtr(pReqQryExercise), nRequestID);
    return ret;
  }

  public virtual int ReqQryLock(CHSReqQryLockField pReqQryLock, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqQryLock(swigCPtr, CHSReqQryLockField.getCPtr(pReqQryLock), nRequestID);
    return ret;
  }

  public virtual int ReqQryCombAction(CHSReqQryCombActionField pReqQryCombAction, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqQryCombAction(swigCPtr, CHSReqQryCombActionField.getCPtr(pReqQryCombAction), nRequestID);
    return ret;
  }

  public virtual int ReqQryPositionCombineDetail(CHSReqQryPositionCombineDetailField pReqQryPositionCombineDetail, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqQryPositionCombineDetail(swigCPtr, CHSReqQryPositionCombineDetailField.getCPtr(pReqQryPositionCombineDetail), nRequestID);
    return ret;
  }

  public virtual int ReqQryInstrument(CHSReqQryInstrumentField pReqQryInstrument, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqQryInstrument(swigCPtr, CHSReqQryInstrumentField.getCPtr(pReqQryInstrument), nRequestID);
    return ret;
  }

  public virtual int ReqQryCoveredShort(CHSReqQryCoveredShortField pReqQryCoveredShort, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqQryCoveredShort(swigCPtr, CHSReqQryCoveredShortField.getCPtr(pReqQryCoveredShort), nRequestID);
    return ret;
  }

  public virtual int ReqQryExerciseAssign(CHSReqQryExerciseAssignField pReqQryExerciseAssign, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqQryExerciseAssign(swigCPtr, CHSReqQryExerciseAssignField.getCPtr(pReqQryExerciseAssign), nRequestID);
    return ret;
  }

  public virtual int ReqTransfer(CHSReqTransferField pReqTransfer, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqTransfer(swigCPtr, CHSReqTransferField.getCPtr(pReqTransfer), nRequestID);
    return ret;
  }

  public virtual int ReqQryTransfer(CHSReqQryTransferField pReqQryTransfer, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqQryTransfer(swigCPtr, CHSReqQryTransferField.getCPtr(pReqQryTransfer), nRequestID);
    return ret;
  }

  public virtual int ReqQueryBankBalance(CHSReqQueryBankBalanceField pReqQueryBankBalance, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqQueryBankBalance(swigCPtr, CHSReqQueryBankBalanceField.getCPtr(pReqQueryBankBalance), nRequestID);
    return ret;
  }

  public virtual int ReqQueryBankAccount(CHSReqQueryBankAccountField pReqQueryBankAccount, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqQueryBankAccount(swigCPtr, CHSReqQueryBankAccountField.getCPtr(pReqQueryBankAccount), nRequestID);
    return ret;
  }

  public virtual int ReqQueryBillContent(CHSReqQueryBillContentField pReqQueryBillContent, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqQueryBillContent(swigCPtr, CHSReqQueryBillContentField.getCPtr(pReqQueryBillContent), nRequestID);
    return ret;
  }

  public virtual int ReqBillConfirm(CHSReqBillConfirmField pReqBillConfirm, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqBillConfirm(swigCPtr, CHSReqBillConfirmField.getCPtr(pReqBillConfirm), nRequestID);
    return ret;
  }

  public virtual int ReqQryMargin(CHSReqQryMarginField pReqQryMargin, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqQryMargin(swigCPtr, CHSReqQryMarginField.getCPtr(pReqQryMargin), nRequestID);
    return ret;
  }

  public virtual int ReqQryCommission(CHSReqQryCommissionField pReqQryCommission, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqQryCommission(swigCPtr, CHSReqQryCommissionField.getCPtr(pReqQryCommission), nRequestID);
    return ret;
  }

  public virtual int ReqQryPositionDetail(CHSReqQryPositionDetailField pReqQryPositionDetail, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqQryPositionDetail(swigCPtr, CHSReqQryPositionDetailField.getCPtr(pReqQryPositionDetail), nRequestID);
    return ret;
  }

  public virtual int ReqQrySysConfig(CHSReqQrySysConfigField pReqQrySysConfig, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqQrySysConfig(swigCPtr, CHSReqQrySysConfigField.getCPtr(pReqQrySysConfig), nRequestID);
    return ret;
  }

  public virtual int ReqQryDepthMarketData(CHSReqQryDepthMarketDataField pReqQryDepthMarketData, int nRequestID) {
    int ret = HSTradeCppWrapperPINVOKE.CHSTradeApi_ReqQryDepthMarketData(swigCPtr, CHSReqQryDepthMarketDataField.getCPtr(pReqQryDepthMarketData), nRequestID);
    return ret;
  }

  public CHSTradeApi() : this(HSTradeCppWrapperPINVOKE.new_CHSTradeApi(), true) {
    SwigDirectorConnect();
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("ReleaseApi", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateCHSTradeApi_0(SwigDirectorReleaseApi);
    if (SwigDerivedClassHasMethod("Init", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateCHSTradeApi_1(SwigDirectorInit__SWIG_0);
    if (SwigDerivedClassHasMethod("Init", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateCHSTradeApi_2(SwigDirectorInit__SWIG_1);
    if (SwigDerivedClassHasMethod("Init", swigMethodTypes3))
      swigDelegate3 = new SwigDelegateCHSTradeApi_3(SwigDirectorInit__SWIG_2);
    if (SwigDerivedClassHasMethod("Init", swigMethodTypes4))
      swigDelegate4 = new SwigDelegateCHSTradeApi_4(SwigDirectorInit__SWIG_3);
    if (SwigDerivedClassHasMethod("Join", swigMethodTypes5))
      swigDelegate5 = new SwigDelegateCHSTradeApi_5(SwigDirectorJoin);
    if (SwigDerivedClassHasMethod("RegisterSubModel", swigMethodTypes6))
      swigDelegate6 = new SwigDelegateCHSTradeApi_6(SwigDirectorRegisterSubModel);
    if (SwigDerivedClassHasMethod("RegisterFront", swigMethodTypes7))
      swigDelegate7 = new SwigDelegateCHSTradeApi_7(SwigDirectorRegisterFront);
    if (SwigDerivedClassHasMethod("RegisterFensServer", swigMethodTypes8))
      swigDelegate8 = new SwigDelegateCHSTradeApi_8(SwigDirectorRegisterFensServer);
    if (SwigDerivedClassHasMethod("RegisterSpi", swigMethodTypes9))
      swigDelegate9 = new SwigDelegateCHSTradeApi_9(SwigDirectorRegisterSpi);
    if (SwigDerivedClassHasMethod("GetApiErrorMsg", swigMethodTypes10))
      swigDelegate10 = new SwigDelegateCHSTradeApi_10(SwigDirectorGetApiErrorMsg);
    if (SwigDerivedClassHasMethod("GetTradingDate", swigMethodTypes11))
      swigDelegate11 = new SwigDelegateCHSTradeApi_11(SwigDirectorGetTradingDate);
    if (SwigDerivedClassHasMethod("ReqUserLogin", swigMethodTypes12))
      swigDelegate12 = new SwigDelegateCHSTradeApi_12(SwigDirectorReqUserLogin);
    if (SwigDerivedClassHasMethod("ReqUserPasswordUpdate", swigMethodTypes13))
      swigDelegate13 = new SwigDelegateCHSTradeApi_13(SwigDirectorReqUserPasswordUpdate);
    if (SwigDerivedClassHasMethod("ReqOrderInsert", swigMethodTypes14))
      swigDelegate14 = new SwigDelegateCHSTradeApi_14(SwigDirectorReqOrderInsert);
    if (SwigDerivedClassHasMethod("ReqOrderAction", swigMethodTypes15))
      swigDelegate15 = new SwigDelegateCHSTradeApi_15(SwigDirectorReqOrderAction);
    if (SwigDerivedClassHasMethod("ReqExerciseOrderInsert", swigMethodTypes16))
      swigDelegate16 = new SwigDelegateCHSTradeApi_16(SwigDirectorReqExerciseOrderInsert);
    if (SwigDerivedClassHasMethod("ReqExerciseOrderAction", swigMethodTypes17))
      swigDelegate17 = new SwigDelegateCHSTradeApi_17(SwigDirectorReqExerciseOrderAction);
    if (SwigDerivedClassHasMethod("ReqLockInsert", swigMethodTypes18))
      swigDelegate18 = new SwigDelegateCHSTradeApi_18(SwigDirectorReqLockInsert);
    if (SwigDerivedClassHasMethod("ReqForQuoteInsert", swigMethodTypes19))
      swigDelegate19 = new SwigDelegateCHSTradeApi_19(SwigDirectorReqForQuoteInsert);
    if (SwigDerivedClassHasMethod("ReqCombActionInsert", swigMethodTypes20))
      swigDelegate20 = new SwigDelegateCHSTradeApi_20(SwigDirectorReqCombActionInsert);
    if (SwigDerivedClassHasMethod("ReqQueryMaxOrderVolume", swigMethodTypes21))
      swigDelegate21 = new SwigDelegateCHSTradeApi_21(SwigDirectorReqQueryMaxOrderVolume);
    if (SwigDerivedClassHasMethod("ReqQueryLockVolume", swigMethodTypes22))
      swigDelegate22 = new SwigDelegateCHSTradeApi_22(SwigDirectorReqQueryLockVolume);
    if (SwigDerivedClassHasMethod("ReqQueryExerciseVolume", swigMethodTypes23))
      swigDelegate23 = new SwigDelegateCHSTradeApi_23(SwigDirectorReqQueryExerciseVolume);
    if (SwigDerivedClassHasMethod("ReqQryPosition", swigMethodTypes24))
      swigDelegate24 = new SwigDelegateCHSTradeApi_24(SwigDirectorReqQryPosition);
    if (SwigDerivedClassHasMethod("ReqQryTradingAccount", swigMethodTypes25))
      swigDelegate25 = new SwigDelegateCHSTradeApi_25(SwigDirectorReqQryTradingAccount);
    if (SwigDerivedClassHasMethod("ReqQryOrder", swigMethodTypes26))
      swigDelegate26 = new SwigDelegateCHSTradeApi_26(SwigDirectorReqQryOrder);
    if (SwigDerivedClassHasMethod("ReqQryTrade", swigMethodTypes27))
      swigDelegate27 = new SwigDelegateCHSTradeApi_27(SwigDirectorReqQryTrade);
    if (SwigDerivedClassHasMethod("ReqQryExercise", swigMethodTypes28))
      swigDelegate28 = new SwigDelegateCHSTradeApi_28(SwigDirectorReqQryExercise);
    if (SwigDerivedClassHasMethod("ReqQryLock", swigMethodTypes29))
      swigDelegate29 = new SwigDelegateCHSTradeApi_29(SwigDirectorReqQryLock);
    if (SwigDerivedClassHasMethod("ReqQryCombAction", swigMethodTypes30))
      swigDelegate30 = new SwigDelegateCHSTradeApi_30(SwigDirectorReqQryCombAction);
    if (SwigDerivedClassHasMethod("ReqQryPositionCombineDetail", swigMethodTypes31))
      swigDelegate31 = new SwigDelegateCHSTradeApi_31(SwigDirectorReqQryPositionCombineDetail);
    if (SwigDerivedClassHasMethod("ReqQryInstrument", swigMethodTypes32))
      swigDelegate32 = new SwigDelegateCHSTradeApi_32(SwigDirectorReqQryInstrument);
    if (SwigDerivedClassHasMethod("ReqQryCoveredShort", swigMethodTypes33))
      swigDelegate33 = new SwigDelegateCHSTradeApi_33(SwigDirectorReqQryCoveredShort);
    if (SwigDerivedClassHasMethod("ReqQryExerciseAssign", swigMethodTypes34))
      swigDelegate34 = new SwigDelegateCHSTradeApi_34(SwigDirectorReqQryExerciseAssign);
    if (SwigDerivedClassHasMethod("ReqTransfer", swigMethodTypes35))
      swigDelegate35 = new SwigDelegateCHSTradeApi_35(SwigDirectorReqTransfer);
    if (SwigDerivedClassHasMethod("ReqQryTransfer", swigMethodTypes36))
      swigDelegate36 = new SwigDelegateCHSTradeApi_36(SwigDirectorReqQryTransfer);
    if (SwigDerivedClassHasMethod("ReqQueryBankBalance", swigMethodTypes37))
      swigDelegate37 = new SwigDelegateCHSTradeApi_37(SwigDirectorReqQueryBankBalance);
    if (SwigDerivedClassHasMethod("ReqQueryBankAccount", swigMethodTypes38))
      swigDelegate38 = new SwigDelegateCHSTradeApi_38(SwigDirectorReqQueryBankAccount);
    if (SwigDerivedClassHasMethod("ReqQueryBillContent", swigMethodTypes39))
      swigDelegate39 = new SwigDelegateCHSTradeApi_39(SwigDirectorReqQueryBillContent);
    if (SwigDerivedClassHasMethod("ReqBillConfirm", swigMethodTypes40))
      swigDelegate40 = new SwigDelegateCHSTradeApi_40(SwigDirectorReqBillConfirm);
    if (SwigDerivedClassHasMethod("ReqQryMargin", swigMethodTypes41))
      swigDelegate41 = new SwigDelegateCHSTradeApi_41(SwigDirectorReqQryMargin);
    if (SwigDerivedClassHasMethod("ReqQryCommission", swigMethodTypes42))
      swigDelegate42 = new SwigDelegateCHSTradeApi_42(SwigDirectorReqQryCommission);
    if (SwigDerivedClassHasMethod("ReqQryPositionDetail", swigMethodTypes43))
      swigDelegate43 = new SwigDelegateCHSTradeApi_43(SwigDirectorReqQryPositionDetail);
    if (SwigDerivedClassHasMethod("ReqQrySysConfig", swigMethodTypes44))
      swigDelegate44 = new SwigDelegateCHSTradeApi_44(SwigDirectorReqQrySysConfig);
    if (SwigDerivedClassHasMethod("ReqQryDepthMarketData", swigMethodTypes45))
      swigDelegate45 = new SwigDelegateCHSTradeApi_45(SwigDirectorReqQryDepthMarketData);
    HSTradeCppWrapperPINVOKE.CHSTradeApi_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3, swigDelegate4, swigDelegate5, swigDelegate6, swigDelegate7, swigDelegate8, swigDelegate9, swigDelegate10, swigDelegate11, swigDelegate12, swigDelegate13, swigDelegate14, swigDelegate15, swigDelegate16, swigDelegate17, swigDelegate18, swigDelegate19, swigDelegate20, swigDelegate21, swigDelegate22, swigDelegate23, swigDelegate24, swigDelegate25, swigDelegate26, swigDelegate27, swigDelegate28, swigDelegate29, swigDelegate30, swigDelegate31, swigDelegate32, swigDelegate33, swigDelegate34, swigDelegate35, swigDelegate36, swigDelegate37, swigDelegate38, swigDelegate39, swigDelegate40, swigDelegate41, swigDelegate42, swigDelegate43, swigDelegate44, swigDelegate45);
  }

  private bool SwigDerivedClassHasMethod(string methodName, global::System.Type[] methodTypes) {
    global::System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(CHSTradeApi));
    return hasDerivedMethod;
  }

  private void SwigDirectorReleaseApi() {
    ReleaseApi();
  }

  private int SwigDirectorInit__SWIG_0(string pszLicFile, string pszPwd, string pszSslFile, string pszSslPwd) {
    return Init(pszLicFile, pszPwd, pszSslFile, pszSslPwd);
  }

  private int SwigDirectorInit__SWIG_1(string pszLicFile, string pszPwd, string pszSslFile) {
    return Init(pszLicFile, pszPwd, pszSslFile);
  }

  private int SwigDirectorInit__SWIG_2(string pszLicFile, string pszPwd) {
    return Init(pszLicFile, pszPwd);
  }

  private int SwigDirectorInit__SWIG_3(string pszLicFile) {
    return Init(pszLicFile);
  }

  private int SwigDirectorJoin() {
    return Join();
  }

  private int SwigDirectorRegisterSubModel(string pszSubModel) {
    return RegisterSubModel(pszSubModel);
  }

  private int SwigDirectorRegisterFront(string pszFrontAddress) {
    return RegisterFront(pszFrontAddress);
  }

  private int SwigDirectorRegisterFensServer(string pszFensAddress, string pszAccountID) {
    return RegisterFensServer(pszFensAddress, pszAccountID);
  }

  private void SwigDirectorRegisterSpi(global::System.IntPtr pSpi) {
    RegisterSpi((pSpi == global::System.IntPtr.Zero) ? null : new CHSTradeSpi(pSpi, false));
  }

  private string SwigDirectorGetApiErrorMsg(int nErrorCode) {
    return GetApiErrorMsg(nErrorCode);
  }

  private int SwigDirectorGetTradingDate() {
    return GetTradingDate();
  }

  private int SwigDirectorReqUserLogin(global::System.IntPtr pReqUserLogin, int nRequestID) {
    return ReqUserLogin((pReqUserLogin == global::System.IntPtr.Zero) ? null : new CHSReqUserLoginField(pReqUserLogin, false), nRequestID);
  }

  private int SwigDirectorReqUserPasswordUpdate(global::System.IntPtr pReqUserPasswordUpdate, int nRequestID) {
    return ReqUserPasswordUpdate((pReqUserPasswordUpdate == global::System.IntPtr.Zero) ? null : new CHSReqUserPasswordUpdateField(pReqUserPasswordUpdate, false), nRequestID);
  }

  private int SwigDirectorReqOrderInsert(global::System.IntPtr pReqOrderInsert, int nRequestID) {
    return ReqOrderInsert((pReqOrderInsert == global::System.IntPtr.Zero) ? null : new CHSReqOrderInsertField(pReqOrderInsert, false), nRequestID);
  }

  private int SwigDirectorReqOrderAction(global::System.IntPtr pReqOrderAction, int nRequestID) {
    return ReqOrderAction((pReqOrderAction == global::System.IntPtr.Zero) ? null : new CHSReqOrderActionField(pReqOrderAction, false), nRequestID);
  }

  private int SwigDirectorReqExerciseOrderInsert(global::System.IntPtr pReqExerciseOrderInsert, int nRequestID) {
    return ReqExerciseOrderInsert((pReqExerciseOrderInsert == global::System.IntPtr.Zero) ? null : new CHSReqExerciseOrderInsertField(pReqExerciseOrderInsert, false), nRequestID);
  }

  private int SwigDirectorReqExerciseOrderAction(global::System.IntPtr pReqExerciseOrderAction, int nRequestID) {
    return ReqExerciseOrderAction((pReqExerciseOrderAction == global::System.IntPtr.Zero) ? null : new CHSReqExerciseOrderActionField(pReqExerciseOrderAction, false), nRequestID);
  }

  private int SwigDirectorReqLockInsert(global::System.IntPtr pReqLockInsert, int nRequestID) {
    return ReqLockInsert((pReqLockInsert == global::System.IntPtr.Zero) ? null : new CHSReqLockInsertField(pReqLockInsert, false), nRequestID);
  }

  private int SwigDirectorReqForQuoteInsert(global::System.IntPtr pReqForQuoteInsert, int nRequestID) {
    return ReqForQuoteInsert((pReqForQuoteInsert == global::System.IntPtr.Zero) ? null : new CHSReqForQuoteInsertField(pReqForQuoteInsert, false), nRequestID);
  }

  private int SwigDirectorReqCombActionInsert(global::System.IntPtr pReqCombActionInsert, int nRequestID) {
    return ReqCombActionInsert((pReqCombActionInsert == global::System.IntPtr.Zero) ? null : new CHSReqCombActionInsertField(pReqCombActionInsert, false), nRequestID);
  }

  private int SwigDirectorReqQueryMaxOrderVolume(global::System.IntPtr pReqQueryMaxOrderVolume, int nRequestID) {
    return ReqQueryMaxOrderVolume((pReqQueryMaxOrderVolume == global::System.IntPtr.Zero) ? null : new CHSReqQueryMaxOrderVolumeField(pReqQueryMaxOrderVolume, false), nRequestID);
  }

  private int SwigDirectorReqQueryLockVolume(global::System.IntPtr pReqQueryLockVolume, int nRequestID) {
    return ReqQueryLockVolume((pReqQueryLockVolume == global::System.IntPtr.Zero) ? null : new CHSReqQueryLockVolumeField(pReqQueryLockVolume, false), nRequestID);
  }

  private int SwigDirectorReqQueryExerciseVolume(global::System.IntPtr pReqQueryExerciseVolume, int nRequestID) {
    return ReqQueryExerciseVolume((pReqQueryExerciseVolume == global::System.IntPtr.Zero) ? null : new CHSReqQueryExerciseVolumeField(pReqQueryExerciseVolume, false), nRequestID);
  }

  private int SwigDirectorReqQryPosition(global::System.IntPtr pReqQryPosition, int nRequestID) {
    return ReqQryPosition((pReqQryPosition == global::System.IntPtr.Zero) ? null : new CHSReqQryPositionField(pReqQryPosition, false), nRequestID);
  }

  private int SwigDirectorReqQryTradingAccount(global::System.IntPtr pReqQryTradingAccount, int nRequestID) {
    return ReqQryTradingAccount((pReqQryTradingAccount == global::System.IntPtr.Zero) ? null : new CHSReqQryTradingAccountField(pReqQryTradingAccount, false), nRequestID);
  }

  private int SwigDirectorReqQryOrder(global::System.IntPtr pReqQryOrder, int nRequestID) {
    return ReqQryOrder((pReqQryOrder == global::System.IntPtr.Zero) ? null : new CHSReqQryOrderField(pReqQryOrder, false), nRequestID);
  }

  private int SwigDirectorReqQryTrade(global::System.IntPtr pReqQryTrade, int nRequestID) {
    return ReqQryTrade((pReqQryTrade == global::System.IntPtr.Zero) ? null : new CHSReqQryTradeField(pReqQryTrade, false), nRequestID);
  }

  private int SwigDirectorReqQryExercise(global::System.IntPtr pReqQryExercise, int nRequestID) {
    return ReqQryExercise((pReqQryExercise == global::System.IntPtr.Zero) ? null : new CHSReqQryExerciseField(pReqQryExercise, false), nRequestID);
  }

  private int SwigDirectorReqQryLock(global::System.IntPtr pReqQryLock, int nRequestID) {
    return ReqQryLock((pReqQryLock == global::System.IntPtr.Zero) ? null : new CHSReqQryLockField(pReqQryLock, false), nRequestID);
  }

  private int SwigDirectorReqQryCombAction(global::System.IntPtr pReqQryCombAction, int nRequestID) {
    return ReqQryCombAction((pReqQryCombAction == global::System.IntPtr.Zero) ? null : new CHSReqQryCombActionField(pReqQryCombAction, false), nRequestID);
  }

  private int SwigDirectorReqQryPositionCombineDetail(global::System.IntPtr pReqQryPositionCombineDetail, int nRequestID) {
    return ReqQryPositionCombineDetail((pReqQryPositionCombineDetail == global::System.IntPtr.Zero) ? null : new CHSReqQryPositionCombineDetailField(pReqQryPositionCombineDetail, false), nRequestID);
  }

  private int SwigDirectorReqQryInstrument(global::System.IntPtr pReqQryInstrument, int nRequestID) {
    return ReqQryInstrument((pReqQryInstrument == global::System.IntPtr.Zero) ? null : new CHSReqQryInstrumentField(pReqQryInstrument, false), nRequestID);
  }

  private int SwigDirectorReqQryCoveredShort(global::System.IntPtr pReqQryCoveredShort, int nRequestID) {
    return ReqQryCoveredShort((pReqQryCoveredShort == global::System.IntPtr.Zero) ? null : new CHSReqQryCoveredShortField(pReqQryCoveredShort, false), nRequestID);
  }

  private int SwigDirectorReqQryExerciseAssign(global::System.IntPtr pReqQryExerciseAssign, int nRequestID) {
    return ReqQryExerciseAssign((pReqQryExerciseAssign == global::System.IntPtr.Zero) ? null : new CHSReqQryExerciseAssignField(pReqQryExerciseAssign, false), nRequestID);
  }

  private int SwigDirectorReqTransfer(global::System.IntPtr pReqTransfer, int nRequestID) {
    return ReqTransfer((pReqTransfer == global::System.IntPtr.Zero) ? null : new CHSReqTransferField(pReqTransfer, false), nRequestID);
  }

  private int SwigDirectorReqQryTransfer(global::System.IntPtr pReqQryTransfer, int nRequestID) {
    return ReqQryTransfer((pReqQryTransfer == global::System.IntPtr.Zero) ? null : new CHSReqQryTransferField(pReqQryTransfer, false), nRequestID);
  }

  private int SwigDirectorReqQueryBankBalance(global::System.IntPtr pReqQueryBankBalance, int nRequestID) {
    return ReqQueryBankBalance((pReqQueryBankBalance == global::System.IntPtr.Zero) ? null : new CHSReqQueryBankBalanceField(pReqQueryBankBalance, false), nRequestID);
  }

  private int SwigDirectorReqQueryBankAccount(global::System.IntPtr pReqQueryBankAccount, int nRequestID) {
    return ReqQueryBankAccount((pReqQueryBankAccount == global::System.IntPtr.Zero) ? null : new CHSReqQueryBankAccountField(pReqQueryBankAccount, false), nRequestID);
  }

  private int SwigDirectorReqQueryBillContent(global::System.IntPtr pReqQueryBillContent, int nRequestID) {
    return ReqQueryBillContent((pReqQueryBillContent == global::System.IntPtr.Zero) ? null : new CHSReqQueryBillContentField(pReqQueryBillContent, false), nRequestID);
  }

  private int SwigDirectorReqBillConfirm(global::System.IntPtr pReqBillConfirm, int nRequestID) {
    return ReqBillConfirm((pReqBillConfirm == global::System.IntPtr.Zero) ? null : new CHSReqBillConfirmField(pReqBillConfirm, false), nRequestID);
  }

  private int SwigDirectorReqQryMargin(global::System.IntPtr pReqQryMargin, int nRequestID) {
    return ReqQryMargin((pReqQryMargin == global::System.IntPtr.Zero) ? null : new CHSReqQryMarginField(pReqQryMargin, false), nRequestID);
  }

  private int SwigDirectorReqQryCommission(global::System.IntPtr pReqQryCommission, int nRequestID) {
    return ReqQryCommission((pReqQryCommission == global::System.IntPtr.Zero) ? null : new CHSReqQryCommissionField(pReqQryCommission, false), nRequestID);
  }

  private int SwigDirectorReqQryPositionDetail(global::System.IntPtr pReqQryPositionDetail, int nRequestID) {
    return ReqQryPositionDetail((pReqQryPositionDetail == global::System.IntPtr.Zero) ? null : new CHSReqQryPositionDetailField(pReqQryPositionDetail, false), nRequestID);
  }

  private int SwigDirectorReqQrySysConfig(global::System.IntPtr pReqQrySysConfig, int nRequestID) {
    return ReqQrySysConfig((pReqQrySysConfig == global::System.IntPtr.Zero) ? null : new CHSReqQrySysConfigField(pReqQrySysConfig, false), nRequestID);
  }

  private int SwigDirectorReqQryDepthMarketData(global::System.IntPtr pReqQryDepthMarketData, int nRequestID) {
    return ReqQryDepthMarketData((pReqQryDepthMarketData == global::System.IntPtr.Zero) ? null : new CHSReqQryDepthMarketDataField(pReqQryDepthMarketData, false), nRequestID);
  }

  public delegate void SwigDelegateCHSTradeApi_0();
  public delegate int SwigDelegateCHSTradeApi_1(string pszLicFile, string pszPwd, string pszSslFile, string pszSslPwd);
  public delegate int SwigDelegateCHSTradeApi_2(string pszLicFile, string pszPwd, string pszSslFile);
  public delegate int SwigDelegateCHSTradeApi_3(string pszLicFile, string pszPwd);
  public delegate int SwigDelegateCHSTradeApi_4(string pszLicFile);
  public delegate int SwigDelegateCHSTradeApi_5();
  public delegate int SwigDelegateCHSTradeApi_6(string pszSubModel);
  public delegate int SwigDelegateCHSTradeApi_7(string pszFrontAddress);
  public delegate int SwigDelegateCHSTradeApi_8(string pszFensAddress, string pszAccountID);
  public delegate void SwigDelegateCHSTradeApi_9(global::System.IntPtr pSpi);
  public delegate string SwigDelegateCHSTradeApi_10(int nErrorCode);
  public delegate int SwigDelegateCHSTradeApi_11();
  public delegate int SwigDelegateCHSTradeApi_12(global::System.IntPtr pReqUserLogin, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_13(global::System.IntPtr pReqUserPasswordUpdate, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_14(global::System.IntPtr pReqOrderInsert, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_15(global::System.IntPtr pReqOrderAction, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_16(global::System.IntPtr pReqExerciseOrderInsert, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_17(global::System.IntPtr pReqExerciseOrderAction, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_18(global::System.IntPtr pReqLockInsert, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_19(global::System.IntPtr pReqForQuoteInsert, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_20(global::System.IntPtr pReqCombActionInsert, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_21(global::System.IntPtr pReqQueryMaxOrderVolume, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_22(global::System.IntPtr pReqQueryLockVolume, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_23(global::System.IntPtr pReqQueryExerciseVolume, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_24(global::System.IntPtr pReqQryPosition, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_25(global::System.IntPtr pReqQryTradingAccount, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_26(global::System.IntPtr pReqQryOrder, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_27(global::System.IntPtr pReqQryTrade, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_28(global::System.IntPtr pReqQryExercise, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_29(global::System.IntPtr pReqQryLock, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_30(global::System.IntPtr pReqQryCombAction, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_31(global::System.IntPtr pReqQryPositionCombineDetail, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_32(global::System.IntPtr pReqQryInstrument, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_33(global::System.IntPtr pReqQryCoveredShort, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_34(global::System.IntPtr pReqQryExerciseAssign, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_35(global::System.IntPtr pReqTransfer, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_36(global::System.IntPtr pReqQryTransfer, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_37(global::System.IntPtr pReqQueryBankBalance, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_38(global::System.IntPtr pReqQueryBankAccount, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_39(global::System.IntPtr pReqQueryBillContent, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_40(global::System.IntPtr pReqBillConfirm, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_41(global::System.IntPtr pReqQryMargin, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_42(global::System.IntPtr pReqQryCommission, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_43(global::System.IntPtr pReqQryPositionDetail, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_44(global::System.IntPtr pReqQrySysConfig, int nRequestID);
  public delegate int SwigDelegateCHSTradeApi_45(global::System.IntPtr pReqQryDepthMarketData, int nRequestID);

  private SwigDelegateCHSTradeApi_0 swigDelegate0;
  private SwigDelegateCHSTradeApi_1 swigDelegate1;
  private SwigDelegateCHSTradeApi_2 swigDelegate2;
  private SwigDelegateCHSTradeApi_3 swigDelegate3;
  private SwigDelegateCHSTradeApi_4 swigDelegate4;
  private SwigDelegateCHSTradeApi_5 swigDelegate5;
  private SwigDelegateCHSTradeApi_6 swigDelegate6;
  private SwigDelegateCHSTradeApi_7 swigDelegate7;
  private SwigDelegateCHSTradeApi_8 swigDelegate8;
  private SwigDelegateCHSTradeApi_9 swigDelegate9;
  private SwigDelegateCHSTradeApi_10 swigDelegate10;
  private SwigDelegateCHSTradeApi_11 swigDelegate11;
  private SwigDelegateCHSTradeApi_12 swigDelegate12;
  private SwigDelegateCHSTradeApi_13 swigDelegate13;
  private SwigDelegateCHSTradeApi_14 swigDelegate14;
  private SwigDelegateCHSTradeApi_15 swigDelegate15;
  private SwigDelegateCHSTradeApi_16 swigDelegate16;
  private SwigDelegateCHSTradeApi_17 swigDelegate17;
  private SwigDelegateCHSTradeApi_18 swigDelegate18;
  private SwigDelegateCHSTradeApi_19 swigDelegate19;
  private SwigDelegateCHSTradeApi_20 swigDelegate20;
  private SwigDelegateCHSTradeApi_21 swigDelegate21;
  private SwigDelegateCHSTradeApi_22 swigDelegate22;
  private SwigDelegateCHSTradeApi_23 swigDelegate23;
  private SwigDelegateCHSTradeApi_24 swigDelegate24;
  private SwigDelegateCHSTradeApi_25 swigDelegate25;
  private SwigDelegateCHSTradeApi_26 swigDelegate26;
  private SwigDelegateCHSTradeApi_27 swigDelegate27;
  private SwigDelegateCHSTradeApi_28 swigDelegate28;
  private SwigDelegateCHSTradeApi_29 swigDelegate29;
  private SwigDelegateCHSTradeApi_30 swigDelegate30;
  private SwigDelegateCHSTradeApi_31 swigDelegate31;
  private SwigDelegateCHSTradeApi_32 swigDelegate32;
  private SwigDelegateCHSTradeApi_33 swigDelegate33;
  private SwigDelegateCHSTradeApi_34 swigDelegate34;
  private SwigDelegateCHSTradeApi_35 swigDelegate35;
  private SwigDelegateCHSTradeApi_36 swigDelegate36;
  private SwigDelegateCHSTradeApi_37 swigDelegate37;
  private SwigDelegateCHSTradeApi_38 swigDelegate38;
  private SwigDelegateCHSTradeApi_39 swigDelegate39;
  private SwigDelegateCHSTradeApi_40 swigDelegate40;
  private SwigDelegateCHSTradeApi_41 swigDelegate41;
  private SwigDelegateCHSTradeApi_42 swigDelegate42;
  private SwigDelegateCHSTradeApi_43 swigDelegate43;
  private SwigDelegateCHSTradeApi_44 swigDelegate44;
  private SwigDelegateCHSTradeApi_45 swigDelegate45;

  private static global::System.Type[] swigMethodTypes0 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes1 = new global::System.Type[] { typeof(string), typeof(string), typeof(string), typeof(string) };
  private static global::System.Type[] swigMethodTypes2 = new global::System.Type[] { typeof(string), typeof(string), typeof(string) };
  private static global::System.Type[] swigMethodTypes3 = new global::System.Type[] { typeof(string), typeof(string) };
  private static global::System.Type[] swigMethodTypes4 = new global::System.Type[] { typeof(string) };
  private static global::System.Type[] swigMethodTypes5 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes6 = new global::System.Type[] { typeof(string) };
  private static global::System.Type[] swigMethodTypes7 = new global::System.Type[] { typeof(string) };
  private static global::System.Type[] swigMethodTypes8 = new global::System.Type[] { typeof(string), typeof(string) };
  private static global::System.Type[] swigMethodTypes9 = new global::System.Type[] { typeof(CHSTradeSpi) };
  private static global::System.Type[] swigMethodTypes10 = new global::System.Type[] { typeof(int) };
  private static global::System.Type[] swigMethodTypes11 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes12 = new global::System.Type[] { typeof(CHSReqUserLoginField), typeof(int) };
  private static global::System.Type[] swigMethodTypes13 = new global::System.Type[] { typeof(CHSReqUserPasswordUpdateField), typeof(int) };
  private static global::System.Type[] swigMethodTypes14 = new global::System.Type[] { typeof(CHSReqOrderInsertField), typeof(int) };
  private static global::System.Type[] swigMethodTypes15 = new global::System.Type[] { typeof(CHSReqOrderActionField), typeof(int) };
  private static global::System.Type[] swigMethodTypes16 = new global::System.Type[] { typeof(CHSReqExerciseOrderInsertField), typeof(int) };
  private static global::System.Type[] swigMethodTypes17 = new global::System.Type[] { typeof(CHSReqExerciseOrderActionField), typeof(int) };
  private static global::System.Type[] swigMethodTypes18 = new global::System.Type[] { typeof(CHSReqLockInsertField), typeof(int) };
  private static global::System.Type[] swigMethodTypes19 = new global::System.Type[] { typeof(CHSReqForQuoteInsertField), typeof(int) };
  private static global::System.Type[] swigMethodTypes20 = new global::System.Type[] { typeof(CHSReqCombActionInsertField), typeof(int) };
  private static global::System.Type[] swigMethodTypes21 = new global::System.Type[] { typeof(CHSReqQueryMaxOrderVolumeField), typeof(int) };
  private static global::System.Type[] swigMethodTypes22 = new global::System.Type[] { typeof(CHSReqQueryLockVolumeField), typeof(int) };
  private static global::System.Type[] swigMethodTypes23 = new global::System.Type[] { typeof(CHSReqQueryExerciseVolumeField), typeof(int) };
  private static global::System.Type[] swigMethodTypes24 = new global::System.Type[] { typeof(CHSReqQryPositionField), typeof(int) };
  private static global::System.Type[] swigMethodTypes25 = new global::System.Type[] { typeof(CHSReqQryTradingAccountField), typeof(int) };
  private static global::System.Type[] swigMethodTypes26 = new global::System.Type[] { typeof(CHSReqQryOrderField), typeof(int) };
  private static global::System.Type[] swigMethodTypes27 = new global::System.Type[] { typeof(CHSReqQryTradeField), typeof(int) };
  private static global::System.Type[] swigMethodTypes28 = new global::System.Type[] { typeof(CHSReqQryExerciseField), typeof(int) };
  private static global::System.Type[] swigMethodTypes29 = new global::System.Type[] { typeof(CHSReqQryLockField), typeof(int) };
  private static global::System.Type[] swigMethodTypes30 = new global::System.Type[] { typeof(CHSReqQryCombActionField), typeof(int) };
  private static global::System.Type[] swigMethodTypes31 = new global::System.Type[] { typeof(CHSReqQryPositionCombineDetailField), typeof(int) };
  private static global::System.Type[] swigMethodTypes32 = new global::System.Type[] { typeof(CHSReqQryInstrumentField), typeof(int) };
  private static global::System.Type[] swigMethodTypes33 = new global::System.Type[] { typeof(CHSReqQryCoveredShortField), typeof(int) };
  private static global::System.Type[] swigMethodTypes34 = new global::System.Type[] { typeof(CHSReqQryExerciseAssignField), typeof(int) };
  private static global::System.Type[] swigMethodTypes35 = new global::System.Type[] { typeof(CHSReqTransferField), typeof(int) };
  private static global::System.Type[] swigMethodTypes36 = new global::System.Type[] { typeof(CHSReqQryTransferField), typeof(int) };
  private static global::System.Type[] swigMethodTypes37 = new global::System.Type[] { typeof(CHSReqQueryBankBalanceField), typeof(int) };
  private static global::System.Type[] swigMethodTypes38 = new global::System.Type[] { typeof(CHSReqQueryBankAccountField), typeof(int) };
  private static global::System.Type[] swigMethodTypes39 = new global::System.Type[] { typeof(CHSReqQueryBillContentField), typeof(int) };
  private static global::System.Type[] swigMethodTypes40 = new global::System.Type[] { typeof(CHSReqBillConfirmField), typeof(int) };
  private static global::System.Type[] swigMethodTypes41 = new global::System.Type[] { typeof(CHSReqQryMarginField), typeof(int) };
  private static global::System.Type[] swigMethodTypes42 = new global::System.Type[] { typeof(CHSReqQryCommissionField), typeof(int) };
  private static global::System.Type[] swigMethodTypes43 = new global::System.Type[] { typeof(CHSReqQryPositionDetailField), typeof(int) };
  private static global::System.Type[] swigMethodTypes44 = new global::System.Type[] { typeof(CHSReqQrySysConfigField), typeof(int) };
  private static global::System.Type[] swigMethodTypes45 = new global::System.Type[] { typeof(CHSReqQryDepthMarketDataField), typeof(int) };
}

}
