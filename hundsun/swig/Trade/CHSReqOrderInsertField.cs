//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace CTACSharp.HS.Trade {

public class CHSReqOrderInsertField : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CHSReqOrderInsertField(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CHSReqOrderInsertField obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~CHSReqOrderInsertField() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          HSTradeCppWrapperPINVOKE.delete_CHSReqOrderInsertField(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public string OrderRef {
    set {
      HSTradeCppWrapperPINVOKE.CHSReqOrderInsertField_OrderRef_set(swigCPtr, value);
    } 
    get {
      string ret = HSTradeCppWrapperPINVOKE.CHSReqOrderInsertField_OrderRef_get(swigCPtr);
      return ret;
    } 
  }

  public string ExchangeID {
    set {
      HSTradeCppWrapperPINVOKE.CHSReqOrderInsertField_ExchangeID_set(swigCPtr, value);
    } 
    get {
      string ret = HSTradeCppWrapperPINVOKE.CHSReqOrderInsertField_ExchangeID_get(swigCPtr);
      return ret;
    } 
  }

  public string InstrumentID {
    set {
      HSTradeCppWrapperPINVOKE.CHSReqOrderInsertField_InstrumentID_set(swigCPtr, value);
    } 
    get {
      string ret = HSTradeCppWrapperPINVOKE.CHSReqOrderInsertField_InstrumentID_get(swigCPtr);
      return ret;
    } 
  }

  public char Direction {
    set {
      HSTradeCppWrapperPINVOKE.CHSReqOrderInsertField_Direction_set(swigCPtr, value);
    } 
    get {
      char ret = HSTradeCppWrapperPINVOKE.CHSReqOrderInsertField_Direction_get(swigCPtr);
      return ret;
    } 
  }

  public char OffsetFlag {
    set {
      HSTradeCppWrapperPINVOKE.CHSReqOrderInsertField_OffsetFlag_set(swigCPtr, value);
    } 
    get {
      char ret = HSTradeCppWrapperPINVOKE.CHSReqOrderInsertField_OffsetFlag_get(swigCPtr);
      return ret;
    } 
  }

  public char HedgeType {
    set {
      HSTradeCppWrapperPINVOKE.CHSReqOrderInsertField_HedgeType_set(swigCPtr, value);
    } 
    get {
      char ret = HSTradeCppWrapperPINVOKE.CHSReqOrderInsertField_HedgeType_get(swigCPtr);
      return ret;
    } 
  }

  public double OrderPrice {
    set {
      HSTradeCppWrapperPINVOKE.CHSReqOrderInsertField_OrderPrice_set(swigCPtr, value);
    } 
    get {
      double ret = HSTradeCppWrapperPINVOKE.CHSReqOrderInsertField_OrderPrice_get(swigCPtr);
      return ret;
    } 
  }

  public double OrderVolume {
    set {
      HSTradeCppWrapperPINVOKE.CHSReqOrderInsertField_OrderVolume_set(swigCPtr, value);
    } 
    get {
      double ret = HSTradeCppWrapperPINVOKE.CHSReqOrderInsertField_OrderVolume_get(swigCPtr);
      return ret;
    } 
  }

  public string OrderCommand {
    set {
      HSTradeCppWrapperPINVOKE.CHSReqOrderInsertField_OrderCommand_set(swigCPtr, value);
    } 
    get {
      string ret = HSTradeCppWrapperPINVOKE.CHSReqOrderInsertField_OrderCommand_get(swigCPtr);
      return ret;
    } 
  }

  public double MinVolume {
    set {
      HSTradeCppWrapperPINVOKE.CHSReqOrderInsertField_MinVolume_set(swigCPtr, value);
    } 
    get {
      double ret = HSTradeCppWrapperPINVOKE.CHSReqOrderInsertField_MinVolume_get(swigCPtr);
      return ret;
    } 
  }

  public double SpringPrice {
    set {
      HSTradeCppWrapperPINVOKE.CHSReqOrderInsertField_SpringPrice_set(swigCPtr, value);
    } 
    get {
      double ret = HSTradeCppWrapperPINVOKE.CHSReqOrderInsertField_SpringPrice_get(swigCPtr);
      return ret;
    } 
  }

  public char SwapOrderFlag {
    set {
      HSTradeCppWrapperPINVOKE.CHSReqOrderInsertField_SwapOrderFlag_set(swigCPtr, value);
    } 
    get {
      char ret = HSTradeCppWrapperPINVOKE.CHSReqOrderInsertField_SwapOrderFlag_get(swigCPtr);
      return ret;
    } 
  }

  public CHSReqOrderInsertField() : this(HSTradeCppWrapperPINVOKE.new_CHSReqOrderInsertField(), true) {
  }

}

}
