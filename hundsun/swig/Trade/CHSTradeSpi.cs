//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace CTACSharp.HS.Trade {

public class CHSTradeSpi : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CHSTradeSpi(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CHSTradeSpi obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~CHSTradeSpi() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          HSTradeCppWrapperPINVOKE.delete_CHSTradeSpi(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual void OnFrontConnected() {
    if (SwigDerivedClassHasMethod("OnFrontConnected", swigMethodTypes0)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnFrontConnectedSwigExplicitCHSTradeSpi(swigCPtr); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnFrontConnected(swigCPtr);
  }

  public virtual void OnFrontDisconnected(int nResult) {
    if (SwigDerivedClassHasMethod("OnFrontDisconnected", swigMethodTypes1)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnFrontDisconnectedSwigExplicitCHSTradeSpi(swigCPtr, nResult); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnFrontDisconnected(swigCPtr, nResult);
  }

  public virtual void OnRspUserLogin(CHSRspUserLoginField pRspUserLogin, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspUserLogin", swigMethodTypes2)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspUserLoginSwigExplicitCHSTradeSpi(swigCPtr, CHSRspUserLoginField.getCPtr(pRspUserLogin), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspUserLogin(swigCPtr, CHSRspUserLoginField.getCPtr(pRspUserLogin), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspUserPasswordUpdate(CHSRspUserPasswordUpdateField pRspUserPasswordUpdate, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspUserPasswordUpdate", swigMethodTypes3)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspUserPasswordUpdateSwigExplicitCHSTradeSpi(swigCPtr, CHSRspUserPasswordUpdateField.getCPtr(pRspUserPasswordUpdate), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspUserPasswordUpdate(swigCPtr, CHSRspUserPasswordUpdateField.getCPtr(pRspUserPasswordUpdate), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspErrorOrderInsert(CHSRspOrderInsertField pRspOrderInsert, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspErrorOrderInsert", swigMethodTypes4)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspErrorOrderInsertSwigExplicitCHSTradeSpi(swigCPtr, CHSRspOrderInsertField.getCPtr(pRspOrderInsert), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspErrorOrderInsert(swigCPtr, CHSRspOrderInsertField.getCPtr(pRspOrderInsert), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspOrderAction(CHSRspOrderActionField pRspOrderAction, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspOrderAction", swigMethodTypes5)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspOrderActionSwigExplicitCHSTradeSpi(swigCPtr, CHSRspOrderActionField.getCPtr(pRspOrderAction), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspOrderAction(swigCPtr, CHSRspOrderActionField.getCPtr(pRspOrderAction), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspErrorExerciseOrderInsert(CHSRspExerciseOrderInsertField pRspExerciseOrderInsert, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspErrorExerciseOrderInsert", swigMethodTypes6)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspErrorExerciseOrderInsertSwigExplicitCHSTradeSpi(swigCPtr, CHSRspExerciseOrderInsertField.getCPtr(pRspExerciseOrderInsert), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspErrorExerciseOrderInsert(swigCPtr, CHSRspExerciseOrderInsertField.getCPtr(pRspExerciseOrderInsert), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspExerciseOrderAction(CHSRspExerciseOrderActionField pRspExerciseOrderAction, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspExerciseOrderAction", swigMethodTypes7)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspExerciseOrderActionSwigExplicitCHSTradeSpi(swigCPtr, CHSRspExerciseOrderActionField.getCPtr(pRspExerciseOrderAction), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspExerciseOrderAction(swigCPtr, CHSRspExerciseOrderActionField.getCPtr(pRspExerciseOrderAction), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspErrorLockInsert(CHSRspLockInsertField pRspExerciseOrderAction, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspErrorLockInsert", swigMethodTypes8)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspErrorLockInsertSwigExplicitCHSTradeSpi(swigCPtr, CHSRspLockInsertField.getCPtr(pRspExerciseOrderAction), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspErrorLockInsert(swigCPtr, CHSRspLockInsertField.getCPtr(pRspExerciseOrderAction), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspForQuoteInsert(CHSRspForQuoteInsertField pRspForQuoteInsert, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspForQuoteInsert", swigMethodTypes9)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspForQuoteInsertSwigExplicitCHSTradeSpi(swigCPtr, CHSRspForQuoteInsertField.getCPtr(pRspForQuoteInsert), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspForQuoteInsert(swigCPtr, CHSRspForQuoteInsertField.getCPtr(pRspForQuoteInsert), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspErrorCombActionInsert(CHSRspCombActionInsertField pRspCombActionInsert, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspErrorCombActionInsert", swigMethodTypes10)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspErrorCombActionInsertSwigExplicitCHSTradeSpi(swigCPtr, CHSRspCombActionInsertField.getCPtr(pRspCombActionInsert), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspErrorCombActionInsert(swigCPtr, CHSRspCombActionInsertField.getCPtr(pRspCombActionInsert), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQueryMaxOrderVolume(CHSRspQueryMaxOrderVolumeField pRspQueryMaxOrderVolume, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQueryMaxOrderVolume", swigMethodTypes11)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQueryMaxOrderVolumeSwigExplicitCHSTradeSpi(swigCPtr, CHSRspQueryMaxOrderVolumeField.getCPtr(pRspQueryMaxOrderVolume), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQueryMaxOrderVolume(swigCPtr, CHSRspQueryMaxOrderVolumeField.getCPtr(pRspQueryMaxOrderVolume), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQueryLockVolume(CHSRspQueryLockVolumeField pRspQueryLockVolume, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQueryLockVolume", swigMethodTypes12)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQueryLockVolumeSwigExplicitCHSTradeSpi(swigCPtr, CHSRspQueryLockVolumeField.getCPtr(pRspQueryLockVolume), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQueryLockVolume(swigCPtr, CHSRspQueryLockVolumeField.getCPtr(pRspQueryLockVolume), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQueryExerciseVolume(CHSRspQueryExerciseVolumeField pRspQueryExerciseVolume, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQueryExerciseVolume", swigMethodTypes13)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQueryExerciseVolumeSwigExplicitCHSTradeSpi(swigCPtr, CHSRspQueryExerciseVolumeField.getCPtr(pRspQueryExerciseVolume), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQueryExerciseVolume(swigCPtr, CHSRspQueryExerciseVolumeField.getCPtr(pRspQueryExerciseVolume), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryPosition(CHSRspQryPositionField pRspQryPosition, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryPosition", swigMethodTypes14)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryPositionSwigExplicitCHSTradeSpi(swigCPtr, CHSRspQryPositionField.getCPtr(pRspQryPosition), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryPosition(swigCPtr, CHSRspQryPositionField.getCPtr(pRspQryPosition), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryTradingAccount(CHSRspQryTradingAccountField pRspQryTradingAccount, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryTradingAccount", swigMethodTypes15)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryTradingAccountSwigExplicitCHSTradeSpi(swigCPtr, CHSRspQryTradingAccountField.getCPtr(pRspQryTradingAccount), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryTradingAccount(swigCPtr, CHSRspQryTradingAccountField.getCPtr(pRspQryTradingAccount), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryOrder(CHSOrderField pRspQryOrder, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryOrder", swigMethodTypes16)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryOrderSwigExplicitCHSTradeSpi(swigCPtr, CHSOrderField.getCPtr(pRspQryOrder), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryOrder(swigCPtr, CHSOrderField.getCPtr(pRspQryOrder), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryTrade(CHSTradeField pRspQryTrade, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryTrade", swigMethodTypes17)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryTradeSwigExplicitCHSTradeSpi(swigCPtr, CHSTradeField.getCPtr(pRspQryTrade), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryTrade(swigCPtr, CHSTradeField.getCPtr(pRspQryTrade), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryExercise(CHSExerciseField pRspQryExercise, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryExercise", swigMethodTypes18)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryExerciseSwigExplicitCHSTradeSpi(swigCPtr, CHSExerciseField.getCPtr(pRspQryExercise), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryExercise(swigCPtr, CHSExerciseField.getCPtr(pRspQryExercise), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryLock(CHSLockField pRspQryLock, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryLock", swigMethodTypes19)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryLockSwigExplicitCHSTradeSpi(swigCPtr, CHSLockField.getCPtr(pRspQryLock), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryLock(swigCPtr, CHSLockField.getCPtr(pRspQryLock), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryCombAction(CHSCombActionField pRspQryCombAction, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryCombAction", swigMethodTypes20)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryCombActionSwigExplicitCHSTradeSpi(swigCPtr, CHSCombActionField.getCPtr(pRspQryCombAction), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryCombAction(swigCPtr, CHSCombActionField.getCPtr(pRspQryCombAction), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryPositionCombineDetail(CHSRspQryPositionCombineDetailField pRspQryPositionCombineDetail, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryPositionCombineDetail", swigMethodTypes21)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryPositionCombineDetailSwigExplicitCHSTradeSpi(swigCPtr, CHSRspQryPositionCombineDetailField.getCPtr(pRspQryPositionCombineDetail), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryPositionCombineDetail(swigCPtr, CHSRspQryPositionCombineDetailField.getCPtr(pRspQryPositionCombineDetail), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryInstrument(CHSRspQryInstrumentField pRspQryInstrument, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryInstrument", swigMethodTypes22)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryInstrumentSwigExplicitCHSTradeSpi(swigCPtr, CHSRspQryInstrumentField.getCPtr(pRspQryInstrument), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryInstrument(swigCPtr, CHSRspQryInstrumentField.getCPtr(pRspQryInstrument), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryCoveredShort(CHSRspQryCoveredShortField pRspQryCoveredShort, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryCoveredShort", swigMethodTypes23)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryCoveredShortSwigExplicitCHSTradeSpi(swigCPtr, CHSRspQryCoveredShortField.getCPtr(pRspQryCoveredShort), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryCoveredShort(swigCPtr, CHSRspQryCoveredShortField.getCPtr(pRspQryCoveredShort), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryExerciseAssign(CHSRspQryExerciseAssignField pRspQryExerciseAssign, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryExerciseAssign", swigMethodTypes24)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryExerciseAssignSwigExplicitCHSTradeSpi(swigCPtr, CHSRspQryExerciseAssignField.getCPtr(pRspQryExerciseAssign), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryExerciseAssign(swigCPtr, CHSRspQryExerciseAssignField.getCPtr(pRspQryExerciseAssign), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspTransfer(CHSRspTransferField pRspTransfer, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspTransfer", swigMethodTypes25)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspTransferSwigExplicitCHSTradeSpi(swigCPtr, CHSRspTransferField.getCPtr(pRspTransfer), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspTransfer(swigCPtr, CHSRspTransferField.getCPtr(pRspTransfer), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryTransfer(CHSRspQryTransferField pRspQryTransfer, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryTransfer", swigMethodTypes26)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryTransferSwigExplicitCHSTradeSpi(swigCPtr, CHSRspQryTransferField.getCPtr(pRspQryTransfer), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryTransfer(swigCPtr, CHSRspQryTransferField.getCPtr(pRspQryTransfer), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQueryBankBalance(CHSRspQueryBankBalanceField pRspQueryBankBalance, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQueryBankBalance", swigMethodTypes27)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQueryBankBalanceSwigExplicitCHSTradeSpi(swigCPtr, CHSRspQueryBankBalanceField.getCPtr(pRspQueryBankBalance), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQueryBankBalance(swigCPtr, CHSRspQueryBankBalanceField.getCPtr(pRspQueryBankBalance), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQueryBankAccount(CHSRspQueryBankAccountField pRspQueryBankAccount, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQueryBankAccount", swigMethodTypes28)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQueryBankAccountSwigExplicitCHSTradeSpi(swigCPtr, CHSRspQueryBankAccountField.getCPtr(pRspQueryBankAccount), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQueryBankAccount(swigCPtr, CHSRspQueryBankAccountField.getCPtr(pRspQueryBankAccount), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQueryBillContent(CHSRspQueryBillContentField pRspQueryBillContent, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQueryBillContent", swigMethodTypes29)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQueryBillContentSwigExplicitCHSTradeSpi(swigCPtr, CHSRspQueryBillContentField.getCPtr(pRspQueryBillContent), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQueryBillContent(swigCPtr, CHSRspQueryBillContentField.getCPtr(pRspQueryBillContent), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspBillConfirm(CHSRspBillConfirmField pRspBillConfirm, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspBillConfirm", swigMethodTypes30)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspBillConfirmSwigExplicitCHSTradeSpi(swigCPtr, CHSRspBillConfirmField.getCPtr(pRspBillConfirm), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspBillConfirm(swigCPtr, CHSRspBillConfirmField.getCPtr(pRspBillConfirm), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryMargin(CHSRspQryMarginField pRspQryMargin, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryMargin", swigMethodTypes31)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryMarginSwigExplicitCHSTradeSpi(swigCPtr, CHSRspQryMarginField.getCPtr(pRspQryMargin), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryMargin(swigCPtr, CHSRspQryMarginField.getCPtr(pRspQryMargin), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryCommission(CHSRspQryCommissionField pRspQryCommission, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryCommission", swigMethodTypes32)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryCommissionSwigExplicitCHSTradeSpi(swigCPtr, CHSRspQryCommissionField.getCPtr(pRspQryCommission), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryCommission(swigCPtr, CHSRspQryCommissionField.getCPtr(pRspQryCommission), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryPositionDetail(CHSRspQryPositionDetailField pRspQryPositionDetail, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryPositionDetail", swigMethodTypes33)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryPositionDetailSwigExplicitCHSTradeSpi(swigCPtr, CHSRspQryPositionDetailField.getCPtr(pRspQryPositionDetail), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryPositionDetail(swigCPtr, CHSRspQryPositionDetailField.getCPtr(pRspQryPositionDetail), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQrySysConfig(CHSRspQrySysConfigField pRspQrySysConfig, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQrySysConfig", swigMethodTypes34)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQrySysConfigSwigExplicitCHSTradeSpi(swigCPtr, CHSRspQrySysConfigField.getCPtr(pRspQrySysConfig), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQrySysConfig(swigCPtr, CHSRspQrySysConfigField.getCPtr(pRspQrySysConfig), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRspQryDepthMarketData(CHSDepthMarketDataField pRspQryDepthMarketData, CHSRspInfoField pRspInfo, int nRequestID, bool bIsLast) {
    if (SwigDerivedClassHasMethod("OnRspQryDepthMarketData", swigMethodTypes35)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryDepthMarketDataSwigExplicitCHSTradeSpi(swigCPtr, CHSDepthMarketDataField.getCPtr(pRspQryDepthMarketData), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRspQryDepthMarketData(swigCPtr, CHSDepthMarketDataField.getCPtr(pRspQryDepthMarketData), CHSRspInfoField.getCPtr(pRspInfo), nRequestID, bIsLast);
  }

  public virtual void OnRtnTrade(CHSTradeField pRtnTrade) {
    if (SwigDerivedClassHasMethod("OnRtnTrade", swigMethodTypes36)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRtnTradeSwigExplicitCHSTradeSpi(swigCPtr, CHSTradeField.getCPtr(pRtnTrade)); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRtnTrade(swigCPtr, CHSTradeField.getCPtr(pRtnTrade));
  }

  public virtual void OnRtnOrder(CHSOrderField pRtnOrder) {
    if (SwigDerivedClassHasMethod("OnRtnOrder", swigMethodTypes37)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRtnOrderSwigExplicitCHSTradeSpi(swigCPtr, CHSOrderField.getCPtr(pRtnOrder)); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRtnOrder(swigCPtr, CHSOrderField.getCPtr(pRtnOrder));
  }

  public virtual void OnRtnExercise(CHSExerciseField pRtnExercise) {
    if (SwigDerivedClassHasMethod("OnRtnExercise", swigMethodTypes38)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRtnExerciseSwigExplicitCHSTradeSpi(swigCPtr, CHSExerciseField.getCPtr(pRtnExercise)); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRtnExercise(swigCPtr, CHSExerciseField.getCPtr(pRtnExercise));
  }

  public virtual void OnRtnCombAction(CHSCombActionField pRtnCombAction) {
    if (SwigDerivedClassHasMethod("OnRtnCombAction", swigMethodTypes39)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRtnCombActionSwigExplicitCHSTradeSpi(swigCPtr, CHSCombActionField.getCPtr(pRtnCombAction)); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRtnCombAction(swigCPtr, CHSCombActionField.getCPtr(pRtnCombAction));
  }

  public virtual void OnRtnLock(CHSLockField pRtnLock) {
    if (SwigDerivedClassHasMethod("OnRtnLock", swigMethodTypes40)) HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRtnLockSwigExplicitCHSTradeSpi(swigCPtr, CHSLockField.getCPtr(pRtnLock)); else HSTradeCppWrapperPINVOKE.CHSTradeSpi_OnRtnLock(swigCPtr, CHSLockField.getCPtr(pRtnLock));
  }

  public CHSTradeSpi() : this(HSTradeCppWrapperPINVOKE.new_CHSTradeSpi(), true) {
    SwigDirectorConnect();
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("OnFrontConnected", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateCHSTradeSpi_0(SwigDirectorOnFrontConnected);
    if (SwigDerivedClassHasMethod("OnFrontDisconnected", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateCHSTradeSpi_1(SwigDirectorOnFrontDisconnected);
    if (SwigDerivedClassHasMethod("OnRspUserLogin", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateCHSTradeSpi_2(SwigDirectorOnRspUserLogin);
    if (SwigDerivedClassHasMethod("OnRspUserPasswordUpdate", swigMethodTypes3))
      swigDelegate3 = new SwigDelegateCHSTradeSpi_3(SwigDirectorOnRspUserPasswordUpdate);
    if (SwigDerivedClassHasMethod("OnRspErrorOrderInsert", swigMethodTypes4))
      swigDelegate4 = new SwigDelegateCHSTradeSpi_4(SwigDirectorOnRspErrorOrderInsert);
    if (SwigDerivedClassHasMethod("OnRspOrderAction", swigMethodTypes5))
      swigDelegate5 = new SwigDelegateCHSTradeSpi_5(SwigDirectorOnRspOrderAction);
    if (SwigDerivedClassHasMethod("OnRspErrorExerciseOrderInsert", swigMethodTypes6))
      swigDelegate6 = new SwigDelegateCHSTradeSpi_6(SwigDirectorOnRspErrorExerciseOrderInsert);
    if (SwigDerivedClassHasMethod("OnRspExerciseOrderAction", swigMethodTypes7))
      swigDelegate7 = new SwigDelegateCHSTradeSpi_7(SwigDirectorOnRspExerciseOrderAction);
    if (SwigDerivedClassHasMethod("OnRspErrorLockInsert", swigMethodTypes8))
      swigDelegate8 = new SwigDelegateCHSTradeSpi_8(SwigDirectorOnRspErrorLockInsert);
    if (SwigDerivedClassHasMethod("OnRspForQuoteInsert", swigMethodTypes9))
      swigDelegate9 = new SwigDelegateCHSTradeSpi_9(SwigDirectorOnRspForQuoteInsert);
    if (SwigDerivedClassHasMethod("OnRspErrorCombActionInsert", swigMethodTypes10))
      swigDelegate10 = new SwigDelegateCHSTradeSpi_10(SwigDirectorOnRspErrorCombActionInsert);
    if (SwigDerivedClassHasMethod("OnRspQueryMaxOrderVolume", swigMethodTypes11))
      swigDelegate11 = new SwigDelegateCHSTradeSpi_11(SwigDirectorOnRspQueryMaxOrderVolume);
    if (SwigDerivedClassHasMethod("OnRspQueryLockVolume", swigMethodTypes12))
      swigDelegate12 = new SwigDelegateCHSTradeSpi_12(SwigDirectorOnRspQueryLockVolume);
    if (SwigDerivedClassHasMethod("OnRspQueryExerciseVolume", swigMethodTypes13))
      swigDelegate13 = new SwigDelegateCHSTradeSpi_13(SwigDirectorOnRspQueryExerciseVolume);
    if (SwigDerivedClassHasMethod("OnRspQryPosition", swigMethodTypes14))
      swigDelegate14 = new SwigDelegateCHSTradeSpi_14(SwigDirectorOnRspQryPosition);
    if (SwigDerivedClassHasMethod("OnRspQryTradingAccount", swigMethodTypes15))
      swigDelegate15 = new SwigDelegateCHSTradeSpi_15(SwigDirectorOnRspQryTradingAccount);
    if (SwigDerivedClassHasMethod("OnRspQryOrder", swigMethodTypes16))
      swigDelegate16 = new SwigDelegateCHSTradeSpi_16(SwigDirectorOnRspQryOrder);
    if (SwigDerivedClassHasMethod("OnRspQryTrade", swigMethodTypes17))
      swigDelegate17 = new SwigDelegateCHSTradeSpi_17(SwigDirectorOnRspQryTrade);
    if (SwigDerivedClassHasMethod("OnRspQryExercise", swigMethodTypes18))
      swigDelegate18 = new SwigDelegateCHSTradeSpi_18(SwigDirectorOnRspQryExercise);
    if (SwigDerivedClassHasMethod("OnRspQryLock", swigMethodTypes19))
      swigDelegate19 = new SwigDelegateCHSTradeSpi_19(SwigDirectorOnRspQryLock);
    if (SwigDerivedClassHasMethod("OnRspQryCombAction", swigMethodTypes20))
      swigDelegate20 = new SwigDelegateCHSTradeSpi_20(SwigDirectorOnRspQryCombAction);
    if (SwigDerivedClassHasMethod("OnRspQryPositionCombineDetail", swigMethodTypes21))
      swigDelegate21 = new SwigDelegateCHSTradeSpi_21(SwigDirectorOnRspQryPositionCombineDetail);
    if (SwigDerivedClassHasMethod("OnRspQryInstrument", swigMethodTypes22))
      swigDelegate22 = new SwigDelegateCHSTradeSpi_22(SwigDirectorOnRspQryInstrument);
    if (SwigDerivedClassHasMethod("OnRspQryCoveredShort", swigMethodTypes23))
      swigDelegate23 = new SwigDelegateCHSTradeSpi_23(SwigDirectorOnRspQryCoveredShort);
    if (SwigDerivedClassHasMethod("OnRspQryExerciseAssign", swigMethodTypes24))
      swigDelegate24 = new SwigDelegateCHSTradeSpi_24(SwigDirectorOnRspQryExerciseAssign);
    if (SwigDerivedClassHasMethod("OnRspTransfer", swigMethodTypes25))
      swigDelegate25 = new SwigDelegateCHSTradeSpi_25(SwigDirectorOnRspTransfer);
    if (SwigDerivedClassHasMethod("OnRspQryTransfer", swigMethodTypes26))
      swigDelegate26 = new SwigDelegateCHSTradeSpi_26(SwigDirectorOnRspQryTransfer);
    if (SwigDerivedClassHasMethod("OnRspQueryBankBalance", swigMethodTypes27))
      swigDelegate27 = new SwigDelegateCHSTradeSpi_27(SwigDirectorOnRspQueryBankBalance);
    if (SwigDerivedClassHasMethod("OnRspQueryBankAccount", swigMethodTypes28))
      swigDelegate28 = new SwigDelegateCHSTradeSpi_28(SwigDirectorOnRspQueryBankAccount);
    if (SwigDerivedClassHasMethod("OnRspQueryBillContent", swigMethodTypes29))
      swigDelegate29 = new SwigDelegateCHSTradeSpi_29(SwigDirectorOnRspQueryBillContent);
    if (SwigDerivedClassHasMethod("OnRspBillConfirm", swigMethodTypes30))
      swigDelegate30 = new SwigDelegateCHSTradeSpi_30(SwigDirectorOnRspBillConfirm);
    if (SwigDerivedClassHasMethod("OnRspQryMargin", swigMethodTypes31))
      swigDelegate31 = new SwigDelegateCHSTradeSpi_31(SwigDirectorOnRspQryMargin);
    if (SwigDerivedClassHasMethod("OnRspQryCommission", swigMethodTypes32))
      swigDelegate32 = new SwigDelegateCHSTradeSpi_32(SwigDirectorOnRspQryCommission);
    if (SwigDerivedClassHasMethod("OnRspQryPositionDetail", swigMethodTypes33))
      swigDelegate33 = new SwigDelegateCHSTradeSpi_33(SwigDirectorOnRspQryPositionDetail);
    if (SwigDerivedClassHasMethod("OnRspQrySysConfig", swigMethodTypes34))
      swigDelegate34 = new SwigDelegateCHSTradeSpi_34(SwigDirectorOnRspQrySysConfig);
    if (SwigDerivedClassHasMethod("OnRspQryDepthMarketData", swigMethodTypes35))
      swigDelegate35 = new SwigDelegateCHSTradeSpi_35(SwigDirectorOnRspQryDepthMarketData);
    if (SwigDerivedClassHasMethod("OnRtnTrade", swigMethodTypes36))
      swigDelegate36 = new SwigDelegateCHSTradeSpi_36(SwigDirectorOnRtnTrade);
    if (SwigDerivedClassHasMethod("OnRtnOrder", swigMethodTypes37))
      swigDelegate37 = new SwigDelegateCHSTradeSpi_37(SwigDirectorOnRtnOrder);
    if (SwigDerivedClassHasMethod("OnRtnExercise", swigMethodTypes38))
      swigDelegate38 = new SwigDelegateCHSTradeSpi_38(SwigDirectorOnRtnExercise);
    if (SwigDerivedClassHasMethod("OnRtnCombAction", swigMethodTypes39))
      swigDelegate39 = new SwigDelegateCHSTradeSpi_39(SwigDirectorOnRtnCombAction);
    if (SwigDerivedClassHasMethod("OnRtnLock", swigMethodTypes40))
      swigDelegate40 = new SwigDelegateCHSTradeSpi_40(SwigDirectorOnRtnLock);
    HSTradeCppWrapperPINVOKE.CHSTradeSpi_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3, swigDelegate4, swigDelegate5, swigDelegate6, swigDelegate7, swigDelegate8, swigDelegate9, swigDelegate10, swigDelegate11, swigDelegate12, swigDelegate13, swigDelegate14, swigDelegate15, swigDelegate16, swigDelegate17, swigDelegate18, swigDelegate19, swigDelegate20, swigDelegate21, swigDelegate22, swigDelegate23, swigDelegate24, swigDelegate25, swigDelegate26, swigDelegate27, swigDelegate28, swigDelegate29, swigDelegate30, swigDelegate31, swigDelegate32, swigDelegate33, swigDelegate34, swigDelegate35, swigDelegate36, swigDelegate37, swigDelegate38, swigDelegate39, swigDelegate40);
  }

  private bool SwigDerivedClassHasMethod(string methodName, global::System.Type[] methodTypes) {
    global::System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(CHSTradeSpi));
    return hasDerivedMethod;
  }

  private void SwigDirectorOnFrontConnected() {
    OnFrontConnected();
  }

  private void SwigDirectorOnFrontDisconnected(int nResult) {
    OnFrontDisconnected(nResult);
  }

  private void SwigDirectorOnRspUserLogin(global::System.IntPtr pRspUserLogin, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspUserLogin((pRspUserLogin == global::System.IntPtr.Zero) ? null : new CHSRspUserLoginField(pRspUserLogin, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspUserPasswordUpdate(global::System.IntPtr pRspUserPasswordUpdate, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspUserPasswordUpdate((pRspUserPasswordUpdate == global::System.IntPtr.Zero) ? null : new CHSRspUserPasswordUpdateField(pRspUserPasswordUpdate, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspErrorOrderInsert(global::System.IntPtr pRspOrderInsert, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspErrorOrderInsert((pRspOrderInsert == global::System.IntPtr.Zero) ? null : new CHSRspOrderInsertField(pRspOrderInsert, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspOrderAction(global::System.IntPtr pRspOrderAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspOrderAction((pRspOrderAction == global::System.IntPtr.Zero) ? null : new CHSRspOrderActionField(pRspOrderAction, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspErrorExerciseOrderInsert(global::System.IntPtr pRspExerciseOrderInsert, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspErrorExerciseOrderInsert((pRspExerciseOrderInsert == global::System.IntPtr.Zero) ? null : new CHSRspExerciseOrderInsertField(pRspExerciseOrderInsert, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspExerciseOrderAction(global::System.IntPtr pRspExerciseOrderAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspExerciseOrderAction((pRspExerciseOrderAction == global::System.IntPtr.Zero) ? null : new CHSRspExerciseOrderActionField(pRspExerciseOrderAction, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspErrorLockInsert(global::System.IntPtr pRspExerciseOrderAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspErrorLockInsert((pRspExerciseOrderAction == global::System.IntPtr.Zero) ? null : new CHSRspLockInsertField(pRspExerciseOrderAction, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspForQuoteInsert(global::System.IntPtr pRspForQuoteInsert, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspForQuoteInsert((pRspForQuoteInsert == global::System.IntPtr.Zero) ? null : new CHSRspForQuoteInsertField(pRspForQuoteInsert, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspErrorCombActionInsert(global::System.IntPtr pRspCombActionInsert, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspErrorCombActionInsert((pRspCombActionInsert == global::System.IntPtr.Zero) ? null : new CHSRspCombActionInsertField(pRspCombActionInsert, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQueryMaxOrderVolume(global::System.IntPtr pRspQueryMaxOrderVolume, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQueryMaxOrderVolume((pRspQueryMaxOrderVolume == global::System.IntPtr.Zero) ? null : new CHSRspQueryMaxOrderVolumeField(pRspQueryMaxOrderVolume, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQueryLockVolume(global::System.IntPtr pRspQueryLockVolume, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQueryLockVolume((pRspQueryLockVolume == global::System.IntPtr.Zero) ? null : new CHSRspQueryLockVolumeField(pRspQueryLockVolume, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQueryExerciseVolume(global::System.IntPtr pRspQueryExerciseVolume, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQueryExerciseVolume((pRspQueryExerciseVolume == global::System.IntPtr.Zero) ? null : new CHSRspQueryExerciseVolumeField(pRspQueryExerciseVolume, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryPosition(global::System.IntPtr pRspQryPosition, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryPosition((pRspQryPosition == global::System.IntPtr.Zero) ? null : new CHSRspQryPositionField(pRspQryPosition, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryTradingAccount(global::System.IntPtr pRspQryTradingAccount, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryTradingAccount((pRspQryTradingAccount == global::System.IntPtr.Zero) ? null : new CHSRspQryTradingAccountField(pRspQryTradingAccount, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryOrder(global::System.IntPtr pRspQryOrder, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryOrder((pRspQryOrder == global::System.IntPtr.Zero) ? null : new CHSOrderField(pRspQryOrder, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryTrade(global::System.IntPtr pRspQryTrade, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryTrade((pRspQryTrade == global::System.IntPtr.Zero) ? null : new CHSTradeField(pRspQryTrade, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryExercise(global::System.IntPtr pRspQryExercise, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryExercise((pRspQryExercise == global::System.IntPtr.Zero) ? null : new CHSExerciseField(pRspQryExercise, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryLock(global::System.IntPtr pRspQryLock, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryLock((pRspQryLock == global::System.IntPtr.Zero) ? null : new CHSLockField(pRspQryLock, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryCombAction(global::System.IntPtr pRspQryCombAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryCombAction((pRspQryCombAction == global::System.IntPtr.Zero) ? null : new CHSCombActionField(pRspQryCombAction, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryPositionCombineDetail(global::System.IntPtr pRspQryPositionCombineDetail, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryPositionCombineDetail((pRspQryPositionCombineDetail == global::System.IntPtr.Zero) ? null : new CHSRspQryPositionCombineDetailField(pRspQryPositionCombineDetail, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryInstrument(global::System.IntPtr pRspQryInstrument, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryInstrument((pRspQryInstrument == global::System.IntPtr.Zero) ? null : new CHSRspQryInstrumentField(pRspQryInstrument, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryCoveredShort(global::System.IntPtr pRspQryCoveredShort, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryCoveredShort((pRspQryCoveredShort == global::System.IntPtr.Zero) ? null : new CHSRspQryCoveredShortField(pRspQryCoveredShort, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryExerciseAssign(global::System.IntPtr pRspQryExerciseAssign, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryExerciseAssign((pRspQryExerciseAssign == global::System.IntPtr.Zero) ? null : new CHSRspQryExerciseAssignField(pRspQryExerciseAssign, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspTransfer(global::System.IntPtr pRspTransfer, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspTransfer((pRspTransfer == global::System.IntPtr.Zero) ? null : new CHSRspTransferField(pRspTransfer, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryTransfer(global::System.IntPtr pRspQryTransfer, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryTransfer((pRspQryTransfer == global::System.IntPtr.Zero) ? null : new CHSRspQryTransferField(pRspQryTransfer, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQueryBankBalance(global::System.IntPtr pRspQueryBankBalance, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQueryBankBalance((pRspQueryBankBalance == global::System.IntPtr.Zero) ? null : new CHSRspQueryBankBalanceField(pRspQueryBankBalance, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQueryBankAccount(global::System.IntPtr pRspQueryBankAccount, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQueryBankAccount((pRspQueryBankAccount == global::System.IntPtr.Zero) ? null : new CHSRspQueryBankAccountField(pRspQueryBankAccount, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQueryBillContent(global::System.IntPtr pRspQueryBillContent, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQueryBillContent((pRspQueryBillContent == global::System.IntPtr.Zero) ? null : new CHSRspQueryBillContentField(pRspQueryBillContent, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspBillConfirm(global::System.IntPtr pRspBillConfirm, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspBillConfirm((pRspBillConfirm == global::System.IntPtr.Zero) ? null : new CHSRspBillConfirmField(pRspBillConfirm, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryMargin(global::System.IntPtr pRspQryMargin, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryMargin((pRspQryMargin == global::System.IntPtr.Zero) ? null : new CHSRspQryMarginField(pRspQryMargin, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryCommission(global::System.IntPtr pRspQryCommission, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryCommission((pRspQryCommission == global::System.IntPtr.Zero) ? null : new CHSRspQryCommissionField(pRspQryCommission, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryPositionDetail(global::System.IntPtr pRspQryPositionDetail, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryPositionDetail((pRspQryPositionDetail == global::System.IntPtr.Zero) ? null : new CHSRspQryPositionDetailField(pRspQryPositionDetail, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQrySysConfig(global::System.IntPtr pRspQrySysConfig, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQrySysConfig((pRspQrySysConfig == global::System.IntPtr.Zero) ? null : new CHSRspQrySysConfigField(pRspQrySysConfig, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRspQryDepthMarketData(global::System.IntPtr pRspQryDepthMarketData, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast) {
    OnRspQryDepthMarketData((pRspQryDepthMarketData == global::System.IntPtr.Zero) ? null : new CHSDepthMarketDataField(pRspQryDepthMarketData, false), (pRspInfo == global::System.IntPtr.Zero) ? null : new CHSRspInfoField(pRspInfo, false), nRequestID, bIsLast);
  }

  private void SwigDirectorOnRtnTrade(global::System.IntPtr pRtnTrade) {
    OnRtnTrade((pRtnTrade == global::System.IntPtr.Zero) ? null : new CHSTradeField(pRtnTrade, false));
  }

  private void SwigDirectorOnRtnOrder(global::System.IntPtr pRtnOrder) {
    OnRtnOrder((pRtnOrder == global::System.IntPtr.Zero) ? null : new CHSOrderField(pRtnOrder, false));
  }

  private void SwigDirectorOnRtnExercise(global::System.IntPtr pRtnExercise) {
    OnRtnExercise((pRtnExercise == global::System.IntPtr.Zero) ? null : new CHSExerciseField(pRtnExercise, false));
  }

  private void SwigDirectorOnRtnCombAction(global::System.IntPtr pRtnCombAction) {
    OnRtnCombAction((pRtnCombAction == global::System.IntPtr.Zero) ? null : new CHSCombActionField(pRtnCombAction, false));
  }

  private void SwigDirectorOnRtnLock(global::System.IntPtr pRtnLock) {
    OnRtnLock((pRtnLock == global::System.IntPtr.Zero) ? null : new CHSLockField(pRtnLock, false));
  }

  public delegate void SwigDelegateCHSTradeSpi_0();
  public delegate void SwigDelegateCHSTradeSpi_1(int nResult);
  public delegate void SwigDelegateCHSTradeSpi_2(global::System.IntPtr pRspUserLogin, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_3(global::System.IntPtr pRspUserPasswordUpdate, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_4(global::System.IntPtr pRspOrderInsert, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_5(global::System.IntPtr pRspOrderAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_6(global::System.IntPtr pRspExerciseOrderInsert, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_7(global::System.IntPtr pRspExerciseOrderAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_8(global::System.IntPtr pRspExerciseOrderAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_9(global::System.IntPtr pRspForQuoteInsert, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_10(global::System.IntPtr pRspCombActionInsert, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_11(global::System.IntPtr pRspQueryMaxOrderVolume, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_12(global::System.IntPtr pRspQueryLockVolume, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_13(global::System.IntPtr pRspQueryExerciseVolume, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_14(global::System.IntPtr pRspQryPosition, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_15(global::System.IntPtr pRspQryTradingAccount, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_16(global::System.IntPtr pRspQryOrder, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_17(global::System.IntPtr pRspQryTrade, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_18(global::System.IntPtr pRspQryExercise, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_19(global::System.IntPtr pRspQryLock, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_20(global::System.IntPtr pRspQryCombAction, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_21(global::System.IntPtr pRspQryPositionCombineDetail, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_22(global::System.IntPtr pRspQryInstrument, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_23(global::System.IntPtr pRspQryCoveredShort, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_24(global::System.IntPtr pRspQryExerciseAssign, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_25(global::System.IntPtr pRspTransfer, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_26(global::System.IntPtr pRspQryTransfer, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_27(global::System.IntPtr pRspQueryBankBalance, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_28(global::System.IntPtr pRspQueryBankAccount, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_29(global::System.IntPtr pRspQueryBillContent, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_30(global::System.IntPtr pRspBillConfirm, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_31(global::System.IntPtr pRspQryMargin, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_32(global::System.IntPtr pRspQryCommission, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_33(global::System.IntPtr pRspQryPositionDetail, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_34(global::System.IntPtr pRspQrySysConfig, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_35(global::System.IntPtr pRspQryDepthMarketData, global::System.IntPtr pRspInfo, int nRequestID, bool bIsLast);
  public delegate void SwigDelegateCHSTradeSpi_36(global::System.IntPtr pRtnTrade);
  public delegate void SwigDelegateCHSTradeSpi_37(global::System.IntPtr pRtnOrder);
  public delegate void SwigDelegateCHSTradeSpi_38(global::System.IntPtr pRtnExercise);
  public delegate void SwigDelegateCHSTradeSpi_39(global::System.IntPtr pRtnCombAction);
  public delegate void SwigDelegateCHSTradeSpi_40(global::System.IntPtr pRtnLock);

  private SwigDelegateCHSTradeSpi_0 swigDelegate0;
  private SwigDelegateCHSTradeSpi_1 swigDelegate1;
  private SwigDelegateCHSTradeSpi_2 swigDelegate2;
  private SwigDelegateCHSTradeSpi_3 swigDelegate3;
  private SwigDelegateCHSTradeSpi_4 swigDelegate4;
  private SwigDelegateCHSTradeSpi_5 swigDelegate5;
  private SwigDelegateCHSTradeSpi_6 swigDelegate6;
  private SwigDelegateCHSTradeSpi_7 swigDelegate7;
  private SwigDelegateCHSTradeSpi_8 swigDelegate8;
  private SwigDelegateCHSTradeSpi_9 swigDelegate9;
  private SwigDelegateCHSTradeSpi_10 swigDelegate10;
  private SwigDelegateCHSTradeSpi_11 swigDelegate11;
  private SwigDelegateCHSTradeSpi_12 swigDelegate12;
  private SwigDelegateCHSTradeSpi_13 swigDelegate13;
  private SwigDelegateCHSTradeSpi_14 swigDelegate14;
  private SwigDelegateCHSTradeSpi_15 swigDelegate15;
  private SwigDelegateCHSTradeSpi_16 swigDelegate16;
  private SwigDelegateCHSTradeSpi_17 swigDelegate17;
  private SwigDelegateCHSTradeSpi_18 swigDelegate18;
  private SwigDelegateCHSTradeSpi_19 swigDelegate19;
  private SwigDelegateCHSTradeSpi_20 swigDelegate20;
  private SwigDelegateCHSTradeSpi_21 swigDelegate21;
  private SwigDelegateCHSTradeSpi_22 swigDelegate22;
  private SwigDelegateCHSTradeSpi_23 swigDelegate23;
  private SwigDelegateCHSTradeSpi_24 swigDelegate24;
  private SwigDelegateCHSTradeSpi_25 swigDelegate25;
  private SwigDelegateCHSTradeSpi_26 swigDelegate26;
  private SwigDelegateCHSTradeSpi_27 swigDelegate27;
  private SwigDelegateCHSTradeSpi_28 swigDelegate28;
  private SwigDelegateCHSTradeSpi_29 swigDelegate29;
  private SwigDelegateCHSTradeSpi_30 swigDelegate30;
  private SwigDelegateCHSTradeSpi_31 swigDelegate31;
  private SwigDelegateCHSTradeSpi_32 swigDelegate32;
  private SwigDelegateCHSTradeSpi_33 swigDelegate33;
  private SwigDelegateCHSTradeSpi_34 swigDelegate34;
  private SwigDelegateCHSTradeSpi_35 swigDelegate35;
  private SwigDelegateCHSTradeSpi_36 swigDelegate36;
  private SwigDelegateCHSTradeSpi_37 swigDelegate37;
  private SwigDelegateCHSTradeSpi_38 swigDelegate38;
  private SwigDelegateCHSTradeSpi_39 swigDelegate39;
  private SwigDelegateCHSTradeSpi_40 swigDelegate40;

  private static global::System.Type[] swigMethodTypes0 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes1 = new global::System.Type[] { typeof(int) };
  private static global::System.Type[] swigMethodTypes2 = new global::System.Type[] { typeof(CHSRspUserLoginField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes3 = new global::System.Type[] { typeof(CHSRspUserPasswordUpdateField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes4 = new global::System.Type[] { typeof(CHSRspOrderInsertField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes5 = new global::System.Type[] { typeof(CHSRspOrderActionField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes6 = new global::System.Type[] { typeof(CHSRspExerciseOrderInsertField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes7 = new global::System.Type[] { typeof(CHSRspExerciseOrderActionField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes8 = new global::System.Type[] { typeof(CHSRspLockInsertField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes9 = new global::System.Type[] { typeof(CHSRspForQuoteInsertField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes10 = new global::System.Type[] { typeof(CHSRspCombActionInsertField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes11 = new global::System.Type[] { typeof(CHSRspQueryMaxOrderVolumeField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes12 = new global::System.Type[] { typeof(CHSRspQueryLockVolumeField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes13 = new global::System.Type[] { typeof(CHSRspQueryExerciseVolumeField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes14 = new global::System.Type[] { typeof(CHSRspQryPositionField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes15 = new global::System.Type[] { typeof(CHSRspQryTradingAccountField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes16 = new global::System.Type[] { typeof(CHSOrderField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes17 = new global::System.Type[] { typeof(CHSTradeField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes18 = new global::System.Type[] { typeof(CHSExerciseField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes19 = new global::System.Type[] { typeof(CHSLockField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes20 = new global::System.Type[] { typeof(CHSCombActionField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes21 = new global::System.Type[] { typeof(CHSRspQryPositionCombineDetailField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes22 = new global::System.Type[] { typeof(CHSRspQryInstrumentField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes23 = new global::System.Type[] { typeof(CHSRspQryCoveredShortField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes24 = new global::System.Type[] { typeof(CHSRspQryExerciseAssignField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes25 = new global::System.Type[] { typeof(CHSRspTransferField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes26 = new global::System.Type[] { typeof(CHSRspQryTransferField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes27 = new global::System.Type[] { typeof(CHSRspQueryBankBalanceField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes28 = new global::System.Type[] { typeof(CHSRspQueryBankAccountField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes29 = new global::System.Type[] { typeof(CHSRspQueryBillContentField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes30 = new global::System.Type[] { typeof(CHSRspBillConfirmField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes31 = new global::System.Type[] { typeof(CHSRspQryMarginField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes32 = new global::System.Type[] { typeof(CHSRspQryCommissionField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes33 = new global::System.Type[] { typeof(CHSRspQryPositionDetailField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes34 = new global::System.Type[] { typeof(CHSRspQrySysConfigField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes35 = new global::System.Type[] { typeof(CHSDepthMarketDataField), typeof(CHSRspInfoField), typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes36 = new global::System.Type[] { typeof(CHSTradeField) };
  private static global::System.Type[] swigMethodTypes37 = new global::System.Type[] { typeof(CHSOrderField) };
  private static global::System.Type[] swigMethodTypes38 = new global::System.Type[] { typeof(CHSExerciseField) };
  private static global::System.Type[] swigMethodTypes39 = new global::System.Type[] { typeof(CHSCombActionField) };
  private static global::System.Type[] swigMethodTypes40 = new global::System.Type[] { typeof(CHSLockField) };
}

}
