/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */


#ifndef SWIGCSHARP
#define SWIGCSHARP
#endif

#define SWIG_DIRECTORS


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stdlib.h>
#include <string.h>
#include <stdio.h>


/* Support for throwing C# exceptions from C/C++. There are two types: 
 * Exceptions that take a message and ArgumentExceptions that take a message and a parameter name. */
typedef enum {
  SWIG_CSharpApplicationException,
  SWIG_CSharpArithmeticException,
  SWIG_CSharpDivideByZeroException,
  SWIG_CSharpIndexOutOfRangeException,
  SWIG_CSharpInvalidCastException,
  SWIG_CSharpInvalidOperationException,
  SWIG_CSharpIOException,
  SWIG_CSharpNullReferenceException,
  SWIG_CSharpOutOfMemoryException,
  SWIG_CSharpOverflowException,
  SWIG_CSharpSystemException
} SWIG_CSharpExceptionCodes;

typedef enum {
  SWIG_CSharpArgumentException,
  SWIG_CSharpArgumentNullException,
  SWIG_CSharpArgumentOutOfRangeException
} SWIG_CSharpExceptionArgumentCodes;

typedef void (SWIGSTDCALL* SWIG_CSharpExceptionCallback_t)(const char *);
typedef void (SWIGSTDCALL* SWIG_CSharpExceptionArgumentCallback_t)(const char *, const char *);

typedef struct {
  SWIG_CSharpExceptionCodes code;
  SWIG_CSharpExceptionCallback_t callback;
} SWIG_CSharpException_t;

typedef struct {
  SWIG_CSharpExceptionArgumentCodes code;
  SWIG_CSharpExceptionArgumentCallback_t callback;
} SWIG_CSharpExceptionArgument_t;

static SWIG_CSharpException_t SWIG_csharp_exceptions[] = {
  { SWIG_CSharpApplicationException, NULL },
  { SWIG_CSharpArithmeticException, NULL },
  { SWIG_CSharpDivideByZeroException, NULL },
  { SWIG_CSharpIndexOutOfRangeException, NULL },
  { SWIG_CSharpInvalidCastException, NULL },
  { SWIG_CSharpInvalidOperationException, NULL },
  { SWIG_CSharpIOException, NULL },
  { SWIG_CSharpNullReferenceException, NULL },
  { SWIG_CSharpOutOfMemoryException, NULL },
  { SWIG_CSharpOverflowException, NULL },
  { SWIG_CSharpSystemException, NULL }
};

static SWIG_CSharpExceptionArgument_t SWIG_csharp_exceptions_argument[] = {
  { SWIG_CSharpArgumentException, NULL },
  { SWIG_CSharpArgumentNullException, NULL },
  { SWIG_CSharpArgumentOutOfRangeException, NULL }
};

static void SWIGUNUSED SWIG_CSharpSetPendingException(SWIG_CSharpExceptionCodes code, const char *msg) {
  SWIG_CSharpExceptionCallback_t callback = SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions)/sizeof(SWIG_CSharpException_t)) {
    callback = SWIG_csharp_exceptions[code].callback;
  }
  callback(msg);
}

static void SWIGUNUSED SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpExceptionArgumentCodes code, const char *msg, const char *param_name) {
  SWIG_CSharpExceptionArgumentCallback_t callback = SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions_argument)/sizeof(SWIG_CSharpExceptionArgument_t)) {
    callback = SWIG_csharp_exceptions_argument[code].callback;
  }
  callback(msg, param_name);
}


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionCallbacks_TapTradeCppWrapper(
                                                SWIG_CSharpExceptionCallback_t applicationCallback,
                                                SWIG_CSharpExceptionCallback_t arithmeticCallback,
                                                SWIG_CSharpExceptionCallback_t divideByZeroCallback, 
                                                SWIG_CSharpExceptionCallback_t indexOutOfRangeCallback, 
                                                SWIG_CSharpExceptionCallback_t invalidCastCallback,
                                                SWIG_CSharpExceptionCallback_t invalidOperationCallback,
                                                SWIG_CSharpExceptionCallback_t ioCallback,
                                                SWIG_CSharpExceptionCallback_t nullReferenceCallback,
                                                SWIG_CSharpExceptionCallback_t outOfMemoryCallback, 
                                                SWIG_CSharpExceptionCallback_t overflowCallback, 
                                                SWIG_CSharpExceptionCallback_t systemCallback) {
  SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback = applicationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpArithmeticException].callback = arithmeticCallback;
  SWIG_csharp_exceptions[SWIG_CSharpDivideByZeroException].callback = divideByZeroCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIndexOutOfRangeException].callback = indexOutOfRangeCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidCastException].callback = invalidCastCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidOperationException].callback = invalidOperationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIOException].callback = ioCallback;
  SWIG_csharp_exceptions[SWIG_CSharpNullReferenceException].callback = nullReferenceCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOutOfMemoryException].callback = outOfMemoryCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOverflowException].callback = overflowCallback;
  SWIG_csharp_exceptions[SWIG_CSharpSystemException].callback = systemCallback;
}

#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionArgumentCallbacks_TapTradeCppWrapper(
                                                SWIG_CSharpExceptionArgumentCallback_t argumentCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentNullCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentOutOfRangeCallback) {
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback = argumentCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentNullException].callback = argumentNullCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentOutOfRangeException].callback = argumentOutOfRangeCallback;
}


/* Callback for returning strings to C# without leaking memory */
typedef char * (SWIGSTDCALL* SWIG_CSharpStringHelperCallback)(const char *);
static SWIG_CSharpStringHelperCallback SWIG_csharp_string_callback = NULL;


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterStringCallback_TapTradeCppWrapper(SWIG_CSharpStringHelperCallback callback) {
  SWIG_csharp_string_callback = callback;
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, msg, ""); return nullreturn; } else

/* -----------------------------------------------------------------------------
 * director_common.swg
 *
 * This file contains support for director classes which is common between
 * languages.
 * ----------------------------------------------------------------------------- */

/*
  Use -DSWIG_DIRECTOR_STATIC if you prefer to avoid the use of the
  'Swig' namespace. This could be useful for multi-modules projects.
*/
#ifdef SWIG_DIRECTOR_STATIC
/* Force anonymous (static) namespace */
#define Swig
#endif
/* -----------------------------------------------------------------------------
 * director.swg
 *
 * This file contains support for director classes so that C# proxy
 * methods can be called from C++.
 * ----------------------------------------------------------------------------- */

#if defined(DEBUG_DIRECTOR_OWNED)
#include <iostream>
#endif
#include <string>
#include <exception>

namespace Swig {
  /* Director base class - not currently used in C# directors */
  class Director {
  };

  /* Base class for director exceptions */
  class DirectorException : public std::exception {
  protected:
    std::string swig_msg;

  public:
    DirectorException(const char *msg) : swig_msg(msg) {
    }

    DirectorException(const std::string &msg) : swig_msg(msg) {
    }

    virtual ~DirectorException() throw() {
    }

    const char *what() const throw() {
      return swig_msg.c_str();
    }
  };

  /* Pure virtual method exception */
  class DirectorPureVirtualException : public DirectorException {
  public:
    DirectorPureVirtualException(const char *msg) : DirectorException(std::string("Attempt to invoke pure virtual method ") + msg) {
    }
  };
}


#include "TapAPICommDef.h"
#include "TapAPIError.h"
#include "TapTradeAPIDataType.h"
#include "TapTradeAPI.h"

extern "C" ITapTradeAPI *CreateTapTradeAPI(TapAPIApplicationInfo const *,TAPIINT32 &);
extern "C" void FreeTapTradeAPI(ITapTradeAPI *);
extern "C" TAPICHAR const *GetTapTradeAPIVersion();
extern "C" TAPIINT32 SetTapTradeAPIDataPath(TAPICHAR const *);
extern "C" TAPIINT32 SetTapTradeAPILogLevel(TAPILOGLEVEL);


/* ---------------------------------------------------
 * C++ director class methods
 * --------------------------------------------------- */

#include "TapTradeCppWrapper_wrap.h"

SwigDirector_ITapTradeAPINotify::SwigDirector_ITapTradeAPINotify() : ITapTradeAPINotify(), Swig::Director() {
  swig_init_callbacks();
}

void SwigDirector_ITapTradeAPINotify::OnConnect() {
  if (!swig_callbackOnConnect) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnConnect");
  } else {
    swig_callbackOnConnect();
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspLogin(TAPIINT32 errorCode, TapAPITradeLoginRspInfo const *loginRspInfo) {
  int jerrorCode  ;
  void * jloginRspInfo = 0 ;
  
  if (!swig_callbackOnRspLogin) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnRspLogin");
  } else {
    jerrorCode = errorCode;
    jloginRspInfo = (void *) loginRspInfo; 
    swig_callbackOnRspLogin(jerrorCode, jloginRspInfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnAPIReady(TAPIINT32 errorCode) {
  int jerrorCode  ;
  if (!swig_callbackOnAPIReady) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnAPIReady");
  } else {
    jerrorCode = errorCode;
    swig_callbackOnAPIReady(jerrorCode);
  }
}

void SwigDirector_ITapTradeAPINotify::OnDisconnect(TAPIINT32 reasonCode) {
  int jreasonCode  ;
  
  if (!swig_callbackOnDisconnect) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnDisconnect");
  } else {
    jreasonCode = reasonCode;
    swig_callbackOnDisconnect(jreasonCode);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspChangePassword(TAPIUINT32 sessionID, TAPIINT32 errorCode) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  
  if (!swig_callbackOnRspChangePassword) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnRspChangePassword");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    swig_callbackOnRspChangePassword(jsessionID, jerrorCode);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspSetReservedInfo(TAPIUINT32 sessionID, TAPIINT32 errorCode, TAPISTR_50 const info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char * jinfo  ;
  
  if (!swig_callbackOnRspSetReservedInfo) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnRspSetReservedInfo");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jinfo = SWIG_csharp_string_callback((const char *)info); 
    swig_callbackOnRspSetReservedInfo(jsessionID, jerrorCode, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryAccount(TAPIUINT32 sessionID, TAPIUINT32 errorCode, TAPIYNFLAG isLast, TapAPIAccountInfo const *info) {
  unsigned int jsessionID  ;
  unsigned int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryAccount) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnRspQryAccount");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryAccount(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryFund(TAPIUINT32 sessionID, TAPIINT32 errorCode, TAPIYNFLAG isLast, TapAPIFundData const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryFund) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnRspQryFund");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryFund(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRtnFund(TapAPIFundData const *info) {
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRtnFund) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnRtnFund");
  } else {
    jinfo = (void *) info; 
    swig_callbackOnRtnFund(jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryExchange(TAPIUINT32 sessionID, TAPIINT32 errorCode, TAPIYNFLAG isLast, TapAPIExchangeInfo const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryExchange) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnRspQryExchange");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryExchange(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryCommodity(TAPIUINT32 sessionID, TAPIINT32 errorCode, TAPIYNFLAG isLast, TapAPICommodityInfo const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryCommodity) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnRspQryCommodity");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryCommodity(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryContract(TAPIUINT32 sessionID, TAPIINT32 errorCode, TAPIYNFLAG isLast, TapAPITradeContractInfo const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryContract) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnRspQryContract");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryContract(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRtnContract(TapAPITradeContractInfo const *info) {
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRtnContract) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnRtnContract");
  } else {
    jinfo = (void *) info; 
    swig_callbackOnRtnContract(jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRtnOrder(TapAPIOrderInfoNotice const *info) {
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRtnOrder) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnRtnOrder");
  } else {
    jinfo = (void *) info; 
    swig_callbackOnRtnOrder(jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspOrderAction(TAPIUINT32 sessionID, TAPIUINT32 errorCode, TapAPIOrderActionRsp const *info) {
  unsigned int jsessionID  ;
  unsigned int jerrorCode  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspOrderAction) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnRspOrderAction");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jinfo = (void *) info; 
    swig_callbackOnRspOrderAction(jsessionID, jerrorCode, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryOrder(TAPIUINT32 sessionID, TAPIINT32 errorCode, TAPIYNFLAG isLast, TapAPIOrderInfo const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryOrder) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnRspQryOrder");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryOrder(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryOrderProcess(TAPIUINT32 sessionID, TAPIINT32 errorCode, TAPIYNFLAG isLast, TapAPIOrderInfo const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryOrderProcess) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnRspQryOrderProcess");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryOrderProcess(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryFill(TAPIUINT32 sessionID, TAPIINT32 errorCode, TAPIYNFLAG isLast, TapAPIFillInfo const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryFill) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnRspQryFill");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryFill(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRtnFill(TapAPIFillInfo const *info) {
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRtnFill) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnRtnFill");
  } else {
    jinfo = (void *) info; 
    swig_callbackOnRtnFill(jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryPosition(TAPIUINT32 sessionID, TAPIINT32 errorCode, TAPIYNFLAG isLast, TapAPIPositionInfo const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryPosition) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnRspQryPosition");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryPosition(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRtnPosition(TapAPIPositionInfo const *info) {
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRtnPosition) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnRtnPosition");
  } else {
    jinfo = (void *) info; 
    swig_callbackOnRtnPosition(jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryClose(TAPIUINT32 sessionID, TAPIINT32 errorCode, TAPIYNFLAG isLast, TapAPICloseInfo const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryClose) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnRspQryClose");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryClose(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRtnClose(TapAPICloseInfo const *info) {
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRtnClose) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnRtnClose");
  } else {
    jinfo = (void *) info; 
    swig_callbackOnRtnClose(jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRtnPositionProfit(TapAPIPositionProfitNotice const *info) {
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRtnPositionProfit) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnRtnPositionProfit");
  } else {
    jinfo = (void *) info; 
    swig_callbackOnRtnPositionProfit(jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryDeepQuote(TAPIUINT32 sessionID, TAPIINT32 errorCode, TAPIYNFLAG isLast, TapAPIDeepQuoteQryRsp const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryDeepQuote) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnRspQryDeepQuote");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryDeepQuote(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryExchangeStateInfo(TAPIUINT32 sessionID, TAPIINT32 errorCode, TAPIYNFLAG isLast, TapAPIExchangeStateInfo const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryExchangeStateInfo) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnRspQryExchangeStateInfo");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryExchangeStateInfo(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRtnExchangeStateInfo(TapAPIExchangeStateInfoNotice const *info) {
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRtnExchangeStateInfo) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnRtnExchangeStateInfo");
  } else {
    jinfo = (void *) info; 
    swig_callbackOnRtnExchangeStateInfo(jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRtnReqQuoteNotice(TapAPIReqQuoteNotice const *info) {
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRtnReqQuoteNotice) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnRtnReqQuoteNotice");
  } else {
    jinfo = (void *) info; 
    swig_callbackOnRtnReqQuoteNotice(jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspUpperChannelInfo(TAPIUINT32 sessionID, TAPIINT32 errorCode, TAPIYNFLAG isLast, TapAPIUpperChannelInfo const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspUpperChannelInfo) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnRspUpperChannelInfo");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspUpperChannelInfo(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspAccountRentInfo(TAPIUINT32 sessionID, TAPIINT32 errorCode, TAPIYNFLAG isLast, TapAPIAccountRentInfo const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspAccountRentInfo) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPINotify::OnRspAccountRentInfo");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspAccountRentInfo(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::swig_connect_director(SWIG_Callback0_t callbackOnConnect, SWIG_Callback1_t callbackOnRspLogin, SWIG_Callback2_t callbackOnAPIReady, SWIG_Callback3_t callbackOnDisconnect, SWIG_Callback4_t callbackOnRspChangePassword, SWIG_Callback5_t callbackOnRspSetReservedInfo, SWIG_Callback6_t callbackOnRspQryAccount, SWIG_Callback7_t callbackOnRspQryFund, SWIG_Callback8_t callbackOnRtnFund, SWIG_Callback9_t callbackOnRspQryExchange, SWIG_Callback10_t callbackOnRspQryCommodity, SWIG_Callback11_t callbackOnRspQryContract, SWIG_Callback12_t callbackOnRtnContract, SWIG_Callback13_t callbackOnRtnOrder, SWIG_Callback14_t callbackOnRspOrderAction, SWIG_Callback15_t callbackOnRspQryOrder, SWIG_Callback16_t callbackOnRspQryOrderProcess, SWIG_Callback17_t callbackOnRspQryFill, SWIG_Callback18_t callbackOnRtnFill, SWIG_Callback19_t callbackOnRspQryPosition, SWIG_Callback20_t callbackOnRtnPosition, SWIG_Callback21_t callbackOnRspQryClose, SWIG_Callback22_t callbackOnRtnClose, SWIG_Callback23_t callbackOnRtnPositionProfit, SWIG_Callback24_t callbackOnRspQryDeepQuote, SWIG_Callback25_t callbackOnRspQryExchangeStateInfo, SWIG_Callback26_t callbackOnRtnExchangeStateInfo, SWIG_Callback27_t callbackOnRtnReqQuoteNotice, SWIG_Callback28_t callbackOnRspUpperChannelInfo, SWIG_Callback29_t callbackOnRspAccountRentInfo) {
  swig_callbackOnConnect = callbackOnConnect;
  swig_callbackOnRspLogin = callbackOnRspLogin;
  swig_callbackOnAPIReady = callbackOnAPIReady;
  swig_callbackOnDisconnect = callbackOnDisconnect;
  swig_callbackOnRspChangePassword = callbackOnRspChangePassword;
  swig_callbackOnRspSetReservedInfo = callbackOnRspSetReservedInfo;
  swig_callbackOnRspQryAccount = callbackOnRspQryAccount;
  swig_callbackOnRspQryFund = callbackOnRspQryFund;
  swig_callbackOnRtnFund = callbackOnRtnFund;
  swig_callbackOnRspQryExchange = callbackOnRspQryExchange;
  swig_callbackOnRspQryCommodity = callbackOnRspQryCommodity;
  swig_callbackOnRspQryContract = callbackOnRspQryContract;
  swig_callbackOnRtnContract = callbackOnRtnContract;
  swig_callbackOnRtnOrder = callbackOnRtnOrder;
  swig_callbackOnRspOrderAction = callbackOnRspOrderAction;
  swig_callbackOnRspQryOrder = callbackOnRspQryOrder;
  swig_callbackOnRspQryOrderProcess = callbackOnRspQryOrderProcess;
  swig_callbackOnRspQryFill = callbackOnRspQryFill;
  swig_callbackOnRtnFill = callbackOnRtnFill;
  swig_callbackOnRspQryPosition = callbackOnRspQryPosition;
  swig_callbackOnRtnPosition = callbackOnRtnPosition;
  swig_callbackOnRspQryClose = callbackOnRspQryClose;
  swig_callbackOnRtnClose = callbackOnRtnClose;
  swig_callbackOnRtnPositionProfit = callbackOnRtnPositionProfit;
  swig_callbackOnRspQryDeepQuote = callbackOnRspQryDeepQuote;
  swig_callbackOnRspQryExchangeStateInfo = callbackOnRspQryExchangeStateInfo;
  swig_callbackOnRtnExchangeStateInfo = callbackOnRtnExchangeStateInfo;
  swig_callbackOnRtnReqQuoteNotice = callbackOnRtnReqQuoteNotice;
  swig_callbackOnRspUpperChannelInfo = callbackOnRspUpperChannelInfo;
  swig_callbackOnRspAccountRentInfo = callbackOnRspAccountRentInfo;
}

void SwigDirector_ITapTradeAPINotify::swig_init_callbacks() {
  swig_callbackOnConnect = 0;
  swig_callbackOnRspLogin = 0;
  swig_callbackOnAPIReady = 0;
  swig_callbackOnDisconnect = 0;
  swig_callbackOnRspChangePassword = 0;
  swig_callbackOnRspSetReservedInfo = 0;
  swig_callbackOnRspQryAccount = 0;
  swig_callbackOnRspQryFund = 0;
  swig_callbackOnRtnFund = 0;
  swig_callbackOnRspQryExchange = 0;
  swig_callbackOnRspQryCommodity = 0;
  swig_callbackOnRspQryContract = 0;
  swig_callbackOnRtnContract = 0;
  swig_callbackOnRtnOrder = 0;
  swig_callbackOnRspOrderAction = 0;
  swig_callbackOnRspQryOrder = 0;
  swig_callbackOnRspQryOrderProcess = 0;
  swig_callbackOnRspQryFill = 0;
  swig_callbackOnRtnFill = 0;
  swig_callbackOnRspQryPosition = 0;
  swig_callbackOnRtnPosition = 0;
  swig_callbackOnRspQryClose = 0;
  swig_callbackOnRtnClose = 0;
  swig_callbackOnRtnPositionProfit = 0;
  swig_callbackOnRspQryDeepQuote = 0;
  swig_callbackOnRspQryExchangeStateInfo = 0;
  swig_callbackOnRtnExchangeStateInfo = 0;
  swig_callbackOnRtnReqQuoteNotice = 0;
  swig_callbackOnRspUpperChannelInfo = 0;
  swig_callbackOnRspAccountRentInfo = 0;
}

SwigDirector_ITapTradeAPI::SwigDirector_ITapTradeAPI() : ITapTradeAPI(), Swig::Director() {
  swig_init_callbacks();
}

TAPIINT32 SwigDirector_ITapTradeAPI::SetAPINotify(ITapTradeAPINotify *apiNotify) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  void * japiNotify = 0 ;
  
  if (!swig_callbackSetAPINotify) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPI::SetAPINotify");
  } else {
    japiNotify = (void *) apiNotify; 
    jresult = (int) swig_callbackSetAPINotify(japiNotify);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapTradeAPI::SetHostAddress(TAPICHAR const *IP, TAPIUINT16 port) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  char * jIP = 0 ;
  unsigned short jport  ;
  
  if (!swig_callbackSetHostAddress) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPI::SetHostAddress");
  } else {
    jIP = SWIG_csharp_string_callback((const char *)IP); 
    jport = port;
    jresult = (int) swig_callbackSetHostAddress(jIP, jport);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapTradeAPI::Login(TapAPITradeLoginAuth const *loginAuth) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  void * jloginAuth = 0 ;
  
  if (!swig_callbackLogin) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPI::Login");
  } else {
    jloginAuth = (void *) loginAuth; 
    jresult = (int) swig_callbackLogin(jloginAuth);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapTradeAPI::Disconnect() {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  
  if (!swig_callbackDisconnect) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPI::Disconnect");
  } else {
    jresult = (int) swig_callbackDisconnect();
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapTradeAPI::ChangePassword(TAPIUINT32 *sessionID, TapAPIChangePasswordReq const *req) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jreq = 0 ;
  
  if (!swig_callbackChangePassword) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPI::ChangePassword");
  } else {
    jsessionID = (void *) sessionID; 
    jreq = (void *) req; 
    jresult = (int) swig_callbackChangePassword(jsessionID, jreq);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapTradeAPI::HaveCertainRight(TAPIRightIDType rightID) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  int jrightID  ;
  
  if (!swig_callbackHaveCertainRight) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPI::HaveCertainRight");
  } else {
    jrightID = rightID;
    jresult = (int) swig_callbackHaveCertainRight(jrightID);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapTradeAPI::SetReservedInfo(TAPIUINT32 *sessionID, TAPISTR_50 const info) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  char * jinfo  ;
  
  if (!swig_callbackSetReservedInfo) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPI::SetReservedInfo");
  } else {
    jsessionID = (void *) sessionID; 
    jinfo = SWIG_csharp_string_callback((const char *)info); 
    jresult = (int) swig_callbackSetReservedInfo(jsessionID, jinfo);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapTradeAPI::QryAccount(TAPIUINT32 *sessionID, TapAPIAccQryReq const *qryReq) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryAccount) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPI::QryAccount");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryAccount(jsessionID, jqryReq);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapTradeAPI::QryFund(TAPIUINT32 *sessionID, TapAPIFundReq const *qryReq) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryFund) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPI::QryFund");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryFund(jsessionID, jqryReq);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapTradeAPI::QryExchange(TAPIUINT32 *sessionID) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  
  if (!swig_callbackQryExchange) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPI::QryExchange");
  } else {
    jsessionID = (void *) sessionID; 
    jresult = (int) swig_callbackQryExchange(jsessionID);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapTradeAPI::QryCommodity(TAPIUINT32 *sessionID) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  
  if (!swig_callbackQryCommodity) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPI::QryCommodity");
  } else {
    jsessionID = (void *) sessionID; 
    jresult = (int) swig_callbackQryCommodity(jsessionID);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapTradeAPI::QryContract(TAPIUINT32 *sessionID, TapAPICommodity const *qryReq) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryContract) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPI::QryContract");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryContract(jsessionID, jqryReq);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapTradeAPI::InsertOrder(TAPIUINT32 *sessionID, TapAPINewOrder const *order) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jorder = 0 ;
  
  if (!swig_callbackInsertOrder) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPI::InsertOrder");
  } else {
    jsessionID = (void *) sessionID; 
    jorder = (void *) order; 
    jresult = (int) swig_callbackInsertOrder(jsessionID, jorder);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapTradeAPI::CancelOrder(TAPIUINT32 *sessionID, TapAPIOrderCancelReq const *order) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jorder = 0 ;
  
  if (!swig_callbackCancelOrder) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPI::CancelOrder");
  } else {
    jsessionID = (void *) sessionID; 
    jorder = (void *) order; 
    jresult = (int) swig_callbackCancelOrder(jsessionID, jorder);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapTradeAPI::QryOrder(TAPIUINT32 *sessionID, TapAPIOrderQryReq const *qryReq) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryOrder) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPI::QryOrder");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryOrder(jsessionID, jqryReq);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapTradeAPI::QryOrderProcess(TAPIUINT32 *sessionID, TapAPIOrderProcessQryReq const *qryReq) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryOrderProcess) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPI::QryOrderProcess");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryOrderProcess(jsessionID, jqryReq);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapTradeAPI::QryFill(TAPIUINT32 *sessionID, TapAPIFillQryReq const *qryReq) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryFill) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPI::QryFill");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryFill(jsessionID, jqryReq);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapTradeAPI::QryPosition(TAPIUINT32 *sessionID, TapAPIPositionQryReq const *qryReq) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryPosition) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPI::QryPosition");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryPosition(jsessionID, jqryReq);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapTradeAPI::QryClose(TAPIUINT32 *sessionID, TapAPICloseQryReq const *qryReq) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryClose) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPI::QryClose");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryClose(jsessionID, jqryReq);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapTradeAPI::QryDeepQuote(TAPIUINT32 *sessionID, TapAPIContract const *qryReq) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryDeepQuote) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPI::QryDeepQuote");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryDeepQuote(jsessionID, jqryReq);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapTradeAPI::QryExchangeStateInfo(TAPIUINT32 *sessionID, TapAPIExchangeStateInfoQryReq const *qryReq) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryExchangeStateInfo) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPI::QryExchangeStateInfo");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryExchangeStateInfo(jsessionID, jqryReq);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapTradeAPI::QryUpperChannel(TAPIUINT32 *sessionID, TapAPIUpperChannelQryReq const *qryReq) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryUpperChannel) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPI::QryUpperChannel");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryUpperChannel(jsessionID, jqryReq);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapTradeAPI::QryAccountRent(TAPIUINT32 *sessionID, TapAPIAccountRentQryReq const *qryReq) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryAccountRent) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPI::QryAccountRent");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryAccountRent(jsessionID, jqryReq);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapTradeAPI::ActivateOrder(TAPIUINT32 *sessionID, TapAPIOrderActivateReq const *qryReq) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackActivateOrder) {
    throw Swig::DirectorPureVirtualException("ITapTradeAPI::ActivateOrder");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackActivateOrder(jsessionID, jqryReq);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

void SwigDirector_ITapTradeAPI::swig_connect_director(SWIG_Callback0_t callbackSetAPINotify, SWIG_Callback1_t callbackSetHostAddress, SWIG_Callback2_t callbackLogin, SWIG_Callback3_t callbackDisconnect, SWIG_Callback4_t callbackChangePassword, SWIG_Callback5_t callbackHaveCertainRight, SWIG_Callback6_t callbackSetReservedInfo, SWIG_Callback7_t callbackQryAccount, SWIG_Callback8_t callbackQryFund, SWIG_Callback9_t callbackQryExchange, SWIG_Callback10_t callbackQryCommodity, SWIG_Callback11_t callbackQryContract, SWIG_Callback12_t callbackInsertOrder, SWIG_Callback13_t callbackCancelOrder, SWIG_Callback14_t callbackQryOrder, SWIG_Callback15_t callbackQryOrderProcess, SWIG_Callback16_t callbackQryFill, SWIG_Callback17_t callbackQryPosition, SWIG_Callback18_t callbackQryClose, SWIG_Callback19_t callbackQryDeepQuote, SWIG_Callback20_t callbackQryExchangeStateInfo, SWIG_Callback21_t callbackQryUpperChannel, SWIG_Callback22_t callbackQryAccountRent, SWIG_Callback23_t callbackActivateOrder) {
  swig_callbackSetAPINotify = callbackSetAPINotify;
  swig_callbackSetHostAddress = callbackSetHostAddress;
  swig_callbackLogin = callbackLogin;
  swig_callbackDisconnect = callbackDisconnect;
  swig_callbackChangePassword = callbackChangePassword;
  swig_callbackHaveCertainRight = callbackHaveCertainRight;
  swig_callbackSetReservedInfo = callbackSetReservedInfo;
  swig_callbackQryAccount = callbackQryAccount;
  swig_callbackQryFund = callbackQryFund;
  swig_callbackQryExchange = callbackQryExchange;
  swig_callbackQryCommodity = callbackQryCommodity;
  swig_callbackQryContract = callbackQryContract;
  swig_callbackInsertOrder = callbackInsertOrder;
  swig_callbackCancelOrder = callbackCancelOrder;
  swig_callbackQryOrder = callbackQryOrder;
  swig_callbackQryOrderProcess = callbackQryOrderProcess;
  swig_callbackQryFill = callbackQryFill;
  swig_callbackQryPosition = callbackQryPosition;
  swig_callbackQryClose = callbackQryClose;
  swig_callbackQryDeepQuote = callbackQryDeepQuote;
  swig_callbackQryExchangeStateInfo = callbackQryExchangeStateInfo;
  swig_callbackQryUpperChannel = callbackQryUpperChannel;
  swig_callbackQryAccountRent = callbackQryAccountRent;
  swig_callbackActivateOrder = callbackActivateOrder;
}

void SwigDirector_ITapTradeAPI::swig_init_callbacks() {
  swig_callbackSetAPINotify = 0;
  swig_callbackSetHostAddress = 0;
  swig_callbackLogin = 0;
  swig_callbackDisconnect = 0;
  swig_callbackChangePassword = 0;
  swig_callbackHaveCertainRight = 0;
  swig_callbackSetReservedInfo = 0;
  swig_callbackQryAccount = 0;
  swig_callbackQryFund = 0;
  swig_callbackQryExchange = 0;
  swig_callbackQryCommodity = 0;
  swig_callbackQryContract = 0;
  swig_callbackInsertOrder = 0;
  swig_callbackCancelOrder = 0;
  swig_callbackQryOrder = 0;
  swig_callbackQryOrderProcess = 0;
  swig_callbackQryFill = 0;
  swig_callbackQryPosition = 0;
  swig_callbackQryClose = 0;
  swig_callbackQryDeepQuote = 0;
  swig_callbackQryExchangeStateInfo = 0;
  swig_callbackQryUpperChannel = 0;
  swig_callbackQryAccountRent = 0;
  swig_callbackActivateOrder = 0;
}


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT char SWIGSTDCALL CSharp_APIYNFLAG_YES_get() {
  char jresult ;
  TAPIYNFLAG result;
  
  result = (TAPIYNFLAG)(TAPIYNFLAG)APIYNFLAG_YES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APIYNFLAG_NO_get() {
  char jresult ;
  TAPIYNFLAG result;
  
  result = (TAPIYNFLAG)(TAPIYNFLAG)APIYNFLAG_NO;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APILOGLEVEL_NONE_get() {
  char jresult ;
  TAPILOGLEVEL result;
  
  result = (TAPILOGLEVEL)(TAPILOGLEVEL)APILOGLEVEL_NONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APILOGLEVEL_ERROR_get() {
  char jresult ;
  TAPILOGLEVEL result;
  
  result = (TAPILOGLEVEL)(TAPILOGLEVEL)APILOGLEVEL_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APILOGLEVEL_WARNING_get() {
  char jresult ;
  TAPILOGLEVEL result;
  
  result = (TAPILOGLEVEL)(TAPILOGLEVEL)APILOGLEVEL_WARNING;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APILOGLEVEL_DEBUG_get() {
  char jresult ;
  TAPILOGLEVEL result;
  
  result = (TAPILOGLEVEL)(TAPILOGLEVEL)APILOGLEVEL_DEBUG;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_NONE_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_NONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_SPOT_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_SPOT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_FUTURES_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_FUTURES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_OPTION_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_OPTION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_SPREAD_MONTH_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_SPREAD_MONTH;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_SPREAD_COMMODITY_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_SPREAD_COMMODITY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_BUL_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_BUL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_BER_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_BER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_STD_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_STD;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_STG_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_STG;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_PRT_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_PRT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_DIRECTFOREX_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_DIRECTFOREX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_INDIRECTFOREX_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_INDIRECTFOREX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_CROSSFOREX_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_CROSSFOREX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_INDEX_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_INDEX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_STOCK_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_STOCK;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_SPOT_TRADINGDEFER_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_SPOT_TRADINGDEFER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CALLPUT_FLAG_CALL_get() {
  char jresult ;
  TAPICallOrPutFlagType result;
  
  result = (TAPICallOrPutFlagType)(TAPICallOrPutFlagType)TAPI_CALLPUT_FLAG_CALL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CALLPUT_FLAG_PUT_get() {
  char jresult ;
  TAPICallOrPutFlagType result;
  
  result = (TAPICallOrPutFlagType)(TAPICallOrPutFlagType)TAPI_CALLPUT_FLAG_PUT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CALLPUT_FLAG_NONE_get() {
  char jresult ;
  TAPICallOrPutFlagType result;
  
  result = (TAPICallOrPutFlagType)(TAPICallOrPutFlagType)TAPI_CALLPUT_FLAG_NONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIApplicationInfo_AuthCode_set(void * jarg1, char * jarg2) {
  TapAPIApplicationInfo *arg1 = (TapAPIApplicationInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIApplicationInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AuthCode, (const char *)arg2, 513-1);
      arg1->AuthCode[513-1] = 0;
    } else {
      arg1->AuthCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIApplicationInfo_AuthCode_get(void * jarg1) {
  char * jresult ;
  TapAPIApplicationInfo *arg1 = (TapAPIApplicationInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIApplicationInfo *)jarg1; 
  result = (char *) ((arg1)->AuthCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIApplicationInfo_KeyOperationLogPath_set(void * jarg1, char * jarg2) {
  TapAPIApplicationInfo *arg1 = (TapAPIApplicationInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIApplicationInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->KeyOperationLogPath, (const char *)arg2, 301-1);
      arg1->KeyOperationLogPath[301-1] = 0;
    } else {
      arg1->KeyOperationLogPath[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIApplicationInfo_KeyOperationLogPath_get(void * jarg1) {
  char * jresult ;
  TapAPIApplicationInfo *arg1 = (TapAPIApplicationInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIApplicationInfo *)jarg1; 
  result = (char *) ((arg1)->KeyOperationLogPath);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIApplicationInfo() {
  void * jresult ;
  TapAPIApplicationInfo *result = 0 ;
  
  result = (TapAPIApplicationInfo *)new TapAPIApplicationInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIApplicationInfo(void * jarg1) {
  TapAPIApplicationInfo *arg1 = (TapAPIApplicationInfo *) 0 ;
  
  arg1 = (TapAPIApplicationInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodity_ExchangeNo_set(void * jarg1, char * jarg2) {
  TapAPICommodity *arg1 = (TapAPICommodity *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICommodity *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodity_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  TapAPICommodity *arg1 = (TapAPICommodity *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICommodity *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodity_CommodityType_set(void * jarg1, char jarg2) {
  TapAPICommodity *arg1 = (TapAPICommodity *) 0 ;
  TAPICommodityType arg2 ;
  
  arg1 = (TapAPICommodity *)jarg1; 
  arg2 = (TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICommodity_CommodityType_get(void * jarg1) {
  char jresult ;
  TapAPICommodity *arg1 = (TapAPICommodity *) 0 ;
  TAPICommodityType result;
  
  arg1 = (TapAPICommodity *)jarg1; 
  result = (TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodity_CommodityNo_set(void * jarg1, char * jarg2) {
  TapAPICommodity *arg1 = (TapAPICommodity *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICommodity *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodity_CommodityNo_get(void * jarg1) {
  char * jresult ;
  TapAPICommodity *arg1 = (TapAPICommodity *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICommodity *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPICommodity() {
  void * jresult ;
  TapAPICommodity *result = 0 ;
  
  result = (TapAPICommodity *)new TapAPICommodity();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPICommodity(void * jarg1) {
  TapAPICommodity *arg1 = (TapAPICommodity *) 0 ;
  
  arg1 = (TapAPICommodity *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIContract_Commodity_set(void * jarg1, void * jarg2) {
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  TapAPICommodity *arg2 = (TapAPICommodity *) 0 ;
  
  arg1 = (TapAPIContract *)jarg1; 
  arg2 = (TapAPICommodity *)jarg2; 
  if (arg1) (arg1)->Commodity = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPIContract_Commodity_get(void * jarg1) {
  void * jresult ;
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  TapAPICommodity *result = 0 ;
  
  arg1 = (TapAPIContract *)jarg1; 
  result = (TapAPICommodity *)& ((arg1)->Commodity);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIContract_ContractNo1_set(void * jarg1, char * jarg2) {
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIContract *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo1, (const char *)arg2, 11-1);
      arg1->ContractNo1[11-1] = 0;
    } else {
      arg1->ContractNo1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIContract_ContractNo1_get(void * jarg1) {
  char * jresult ;
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIContract *)jarg1; 
  result = (char *) ((arg1)->ContractNo1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIContract_StrikePrice1_set(void * jarg1, char * jarg2) {
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIContract *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice1, (const char *)arg2, 11-1);
      arg1->StrikePrice1[11-1] = 0;
    } else {
      arg1->StrikePrice1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIContract_StrikePrice1_get(void * jarg1) {
  char * jresult ;
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIContract *)jarg1; 
  result = (char *) ((arg1)->StrikePrice1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIContract_CallOrPutFlag1_set(void * jarg1, char jarg2) {
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  TAPICallOrPutFlagType arg2 ;
  
  arg1 = (TapAPIContract *)jarg1; 
  arg2 = (TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag1 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIContract_CallOrPutFlag1_get(void * jarg1) {
  char jresult ;
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  TAPICallOrPutFlagType result;
  
  arg1 = (TapAPIContract *)jarg1; 
  result = (TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIContract_ContractNo2_set(void * jarg1, char * jarg2) {
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIContract *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo2, (const char *)arg2, 11-1);
      arg1->ContractNo2[11-1] = 0;
    } else {
      arg1->ContractNo2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIContract_ContractNo2_get(void * jarg1) {
  char * jresult ;
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIContract *)jarg1; 
  result = (char *) ((arg1)->ContractNo2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIContract_StrikePrice2_set(void * jarg1, char * jarg2) {
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIContract *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice2, (const char *)arg2, 11-1);
      arg1->StrikePrice2[11-1] = 0;
    } else {
      arg1->StrikePrice2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIContract_StrikePrice2_get(void * jarg1) {
  char * jresult ;
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIContract *)jarg1; 
  result = (char *) ((arg1)->StrikePrice2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIContract_CallOrPutFlag2_set(void * jarg1, char jarg2) {
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  TAPICallOrPutFlagType arg2 ;
  
  arg1 = (TapAPIContract *)jarg1; 
  arg2 = (TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIContract_CallOrPutFlag2_get(void * jarg1) {
  char jresult ;
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  TAPICallOrPutFlagType result;
  
  arg1 = (TapAPIContract *)jarg1; 
  result = (TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIContract() {
  void * jresult ;
  TapAPIContract *result = 0 ;
  
  result = (TapAPIContract *)new TapAPIContract();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIContract(void * jarg1) {
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  
  arg1 = (TapAPIContract *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIExchangeInfo_ExchangeNo_set(void * jarg1, char * jarg2) {
  TapAPIExchangeInfo *arg1 = (TapAPIExchangeInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIExchangeInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIExchangeInfo_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  TapAPIExchangeInfo *arg1 = (TapAPIExchangeInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIExchangeInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIExchangeInfo_ExchangeName_set(void * jarg1, char * jarg2) {
  TapAPIExchangeInfo *arg1 = (TapAPIExchangeInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIExchangeInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeName, (const char *)arg2, 21-1);
      arg1->ExchangeName[21-1] = 0;
    } else {
      arg1->ExchangeName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIExchangeInfo_ExchangeName_get(void * jarg1) {
  char * jresult ;
  TapAPIExchangeInfo *arg1 = (TapAPIExchangeInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIExchangeInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIExchangeInfo() {
  void * jresult ;
  TapAPIExchangeInfo *result = 0 ;
  
  result = (TapAPIExchangeInfo *)new TapAPIExchangeInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIExchangeInfo(void * jarg1) {
  TapAPIExchangeInfo *arg1 = (TapAPIExchangeInfo *) 0 ;
  
  arg1 = (TapAPIExchangeInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIChangePasswordReq_OldPassword_set(void * jarg1, char * jarg2) {
  TapAPIChangePasswordReq *arg1 = (TapAPIChangePasswordReq *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIChangePasswordReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OldPassword, (const char *)arg2, 21-1);
      arg1->OldPassword[21-1] = 0;
    } else {
      arg1->OldPassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIChangePasswordReq_OldPassword_get(void * jarg1) {
  char * jresult ;
  TapAPIChangePasswordReq *arg1 = (TapAPIChangePasswordReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIChangePasswordReq *)jarg1; 
  result = (char *) ((arg1)->OldPassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIChangePasswordReq_NewPassword_set(void * jarg1, char * jarg2) {
  TapAPIChangePasswordReq *arg1 = (TapAPIChangePasswordReq *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIChangePasswordReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->NewPassword, (const char *)arg2, 21-1);
      arg1->NewPassword[21-1] = 0;
    } else {
      arg1->NewPassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIChangePasswordReq_NewPassword_get(void * jarg1) {
  char * jresult ;
  TapAPIChangePasswordReq *arg1 = (TapAPIChangePasswordReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIChangePasswordReq *)jarg1; 
  result = (char *) ((arg1)->NewPassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIChangePasswordReq() {
  void * jresult ;
  TapAPIChangePasswordReq *result = 0 ;
  
  result = (TapAPIChangePasswordReq *)new TapAPIChangePasswordReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIChangePasswordReq(void * jarg1) {
  TapAPIChangePasswordReq *arg1 = (TapAPIChangePasswordReq *) 0 ;
  
  arg1 = (TapAPIChangePasswordReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_SUCCEED_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_SUCCEED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ConnectFail_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ConnectFail;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LinkAuthFail_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LinkAuthFail;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_HostUnavailable_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_HostUnavailable;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_SendDataError_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_SendDataError;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_TestIDError_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_TestIDError;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_NotReadyTestNetwork_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_NotReadyTestNetwork;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_CurTestNotOver_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_CurTestNotOver;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_NOFrontAvailable_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_NOFrontAvailable;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DataPathAvaiable_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DataPathAvaiable;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_RepeatLogin_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_RepeatLogin;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_InnerError_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_InnerError;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LastReqNotFinish_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LastReqNotFinish;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_InputValueError_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_InputValueError;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_AuthCode_Invalid_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_AuthCode_Invalid;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_AuthCode_Expired_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_AuthCode_Expired;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_AuthCode_TypeNotMatch_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_AuthCode_TypeNotMatch;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_API_NotReady_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_API_NotReady;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_UDP_LISTEN_FAILED_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_UDP_LISTEN_FAILED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_UDP_LISTENING_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_UDP_LISTENING;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_NotImplemented_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_NotImplemented;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_CallOneTimeOnly_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_CallOneTimeOnly;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_Frequently_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_Frequently;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_NULL_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_NULL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIYNFLAG_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIYNFLAG;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPILOGLEVEL_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPILOGLEVEL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPICommodityType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPICommodityType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPICallOrPutFlagType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPICallOrPutFlagType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIAccountType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIAccountType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIAccountState_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIAccountState;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIAccountFamilyType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIAccountFamilyType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIOrderTypeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIOrderTypeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIOrderSourceType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIOrderSourceType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPITimeInForceType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPITimeInForceType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPISideType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPISideType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIPositionEffectType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIPositionEffectType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIHedgeFlagType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIHedgeFlagType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIOrderStateType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIOrderStateType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPICalculateModeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPICalculateModeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIMatchSourceType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIMatchSourceType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIOpenCloseModeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIOpenCloseModeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIFutureAlgType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIFutureAlgType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIOptionAlgType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIOptionAlgType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIBankAccountLWFlagType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIBankAccountLWFlagType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIMarginCalculateModeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIMarginCalculateModeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIOptionMarginCalculateModeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIOptionMarginCalculateModeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPICmbDirectType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPICmbDirectType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIDeliveryModeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIDeliveryModeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIContractTypeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIContractTypeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPITacticsTypeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPITacticsTypeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIORDERACT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIORDERACT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPITriggerConditionType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPITriggerConditionType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPITriggerPriceTypeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPITriggerPriceTypeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPITradingStateType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPITradingStateType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIMarketLevelType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIMarketLevelType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIOrderQryTypeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIOrderQryTypeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_CLOSE_INIT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DISCONNECT_CLOSE_INIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_CLOSE_PASS_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DISCONNECT_CLOSE_PASS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_READ_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DISCONNECT_READ_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_WRITE_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DISCONNECT_WRITE_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_BUF_FULL_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DISCONNECT_BUF_FULL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_IOCP_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DISCONNECT_IOCP_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_PARSE_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DISCONNECT_PARSE_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_CONNECT_TIMEOUT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DISCONNECT_CONNECT_TIMEOUT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_INIT_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DISCONNECT_INIT_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_HAS_CONNECTED_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DISCONNECT_HAS_CONNECTED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_HAS_EXIT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DISCONNECT_HAS_EXIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_TRY_LATER_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DISCONNECT_TRY_LATER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_HEARTBEAT_FAILED_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DISCONNECT_HEARTBEAT_FAILED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LOGIN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_USER_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LOGIN_USER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_DDA_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LOGIN_DDA;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_LICENSE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LOGIN_LICENSE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_MODULE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LOGIN_MODULE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_FORCE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LOGIN_FORCE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_STATE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LOGIN_STATE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_PASS_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LOGIN_PASS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_RIGHT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LOGIN_RIGHT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_COUNT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LOGIN_COUNT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_NOTIN_SERVERFLAGUSRES_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LOGIN_NOTIN_SERVERFLAGUSRES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_USER_EXPIRED_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LOGIN_USER_EXPIRED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_NO_ACCOUNT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LOGIN_NO_ACCOUNT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_USERINFO_QRY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_USERINFO_QRY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_USERALLRIGHT_QRY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_USERALLRIGHT_QRY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_USERALLACCOUNT_QRY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_USERALLACCOUNT_QRY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_USERPASSWORD_MOD_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_USERPASSWORD_MOD;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_USERPASSWORD_MOD_SOURCE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_USERPASSWORD_MOD_SOURCE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_USERPASSWORD_MOD_SAME_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_USERPASSWORD_MOD_SAME;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_USERPASSWORD_MOD_COMPLEXITY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_USERPASSWORD_MOD_COMPLEXITY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ACCOUNTINFO_QRY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ACCOUNTINFO_QRY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_TRADENO_QRY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_TRADENO_QRY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_CONTRACTINFO_QRY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_CONTRACTINFO_QRY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_SPECIALOPTIONFUTURE_QRY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_SPECIALOPTIONFUTURE_QRY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_COMMODITYORDERTYPE_QRY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_COMMODITYORDERTYPE_QRY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERTIMEINFORCE_QRY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERTIMEINFORCE_QRY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_USER_ORDER_FREQUENCE_QRY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_USER_ORDER_FREQUENCE_QRY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_ACCOUNT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_ACCOUNT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_ACCOUNT_STATE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_ACCOUNT_STATE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_CONTRACT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_CONTRACT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_TRADEROUTE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_TRADEROUTE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_POSITIONMAX_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_POSITIONMAX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_NOTRADE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDER_NOTRADE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_CLOSE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDER_CLOSE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_NOTENOUGHFUND_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_NOTENOUGHFUND;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_ORDERTYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_ORDERTYPE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_TIMEINFORCE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_TIMEINFORCE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_NO_TACTICS_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_NO_TACTICS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_POSITION_CANNOT_CLOSE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_POSITION_CANNOT_CLOSE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_AUTOCHECK_FAIL_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_AUTOCHECK_FAIL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_LME_NOTREADY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_LME_NOTREADY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_CLOSEMODE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_CLOSEMODE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_PARENTNOTENOUGHFUND_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_PARENTNOTENOUGHFUND;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_SWAP_CONTRACT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_SWAP_CONTRACT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_USERNO_NOTHAS_ACCOUNT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_USERNO_NOTHAS_ACCOUNT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_UPPERCHANNEL_BROKEN_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_UPPERCHANNEL_BROKEN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_UPPERCHANNEL_NOT_EXIST_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_UPPERCHANNEL_NOT_EXIST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERDELETE_NOT_SYSNO_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERDELETE_NOT_SYSNO;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERDELETE_NOT_STATE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERDELETE_NOT_STATE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERACTIVE_NOT_STATE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERACTIVE_NOT_STATE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERCHECK_NOT_STATE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERCHECK_NOT_STATE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERCHECK_FAIL_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERCHECK_FAIL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERMODIFY_NOT_STATE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERMODIFY_NOT_STATE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERMODIFY_BACK_INPUT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERMODIFY_BACK_INPUT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_FEE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_FEE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_MARGIN_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_MARGIN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_NO_PERMIT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDER_NO_PERMIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_RSPQUOTE_NO_PERMIT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_RSPQUOTE_NO_PERMIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_RSPQUOTE_CHILD_NO_PERMIT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_RSPQUOTE_CHILD_NO_PERMIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_TRADENO_NOT_FIND_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_TRADENO_NOT_FIND;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_NO_CLOSE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDER_NO_CLOSE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_QRY_QUOTE_NO_PERMIT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_QRY_QUOTE_NO_PERMIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_EXPIREDATE_NO_PERMIT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_EXPIREDATE_NO_PERMIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_CMB_NO_PERMIT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_CMB_NO_PERMIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERSERVER_NO_PERMIT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERSERVER_NO_PERMIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_POSITION_CANNOT_EXEC_OR_ABANDON_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_POSITION_CANNOT_EXEC_OR_ABANDON;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERCHECK_NO_PERMIT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERCHECK_NO_PERMIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERMAXOPENVOL_NO_PERMIT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERMAXOPENVOL_NO_PERMIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_QTY_NO_PERMIT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDER_QTY_NO_PERMIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_FREQUENCY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDER_FREQUENCY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_QUERYING_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDER_QUERYING;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_SUBSCRIBEQUOTE_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_SUBSCRIBEQUOTE_MAX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_SUBSCRIBEQUOTE_EXCHANGE_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_SUBSCRIBEQUOTE_EXCHANGE_MAX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_SUBSCRIBEQUOTE_NO_RIGHT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_SUBSCRIBEQUOTE_NO_RIGHT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_SUBSCRIBEQUOTE_NO_EXCHANGE_RIGHT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_SUBSCRIBEQUOTE_NO_EXCHANGE_RIGHT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_SUBSCRIBEQUOTE_COMMODITY_NOT_EXIST_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_SUBSCRIBEQUOTE_COMMODITY_NOT_EXIST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_SUBSCRIBEQUOTE_CONTRACT_MAY_NOT_EXIST_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_SUBSCRIBEQUOTE_CONTRACT_MAY_NOT_EXIST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_QUOTEFRONT_UNKNOWN_PROTOCOL_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_QUOTEFRONT_UNKNOWN_PROTOCOL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ACCOUNT_TYPE_PERSON_get() {
  char jresult ;
  TAPIAccountType result;
  
  result = (TAPIAccountType)(TAPIAccountType)TAPI_ACCOUNT_TYPE_PERSON;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ACCOUNT_TYPE_ORGANIZATION_get() {
  char jresult ;
  TAPIAccountType result;
  
  result = (TAPIAccountType)(TAPIAccountType)TAPI_ACCOUNT_TYPE_ORGANIZATION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPI_RIGHT_ORDER_DEL_get() {
  int jresult ;
  TAPIRightIDType result;
  
  result = (TAPIRightIDType)(TAPIRightIDType)TAPI_RIGHT_ORDER_DEL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPI_RIGHT_ORDER_CHECK_get() {
  int jresult ;
  TAPIRightIDType result;
  
  result = (TAPIRightIDType)(TAPIRightIDType)TAPI_RIGHT_ORDER_CHECK;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPI_RIGHT_ONLY_QRY_get() {
  int jresult ;
  TAPIRightIDType result;
  
  result = (TAPIRightIDType)(TAPIRightIDType)TAPI_RIGHT_ONLY_QRY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPI_RIGHT_ONLY_OPEN_get() {
  int jresult ;
  TAPIRightIDType result;
  
  result = (TAPIRightIDType)(TAPIRightIDType)TAPI_RIGHT_ONLY_OPEN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPI_RIGHT_SHFE_QUOTE_get() {
  int jresult ;
  TAPIRightIDType result;
  
  result = (TAPIRightIDType)(TAPIRightIDType)TAPI_RIGHT_SHFE_QUOTE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPI_USERTYPE_CLIENT_get() {
  int jresult ;
  TAPIUserTypeType result;
  
  result = (TAPIUserTypeType)(TAPIUserTypeType)TAPI_USERTYPE_CLIENT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPI_USERTYPE_BROKER_get() {
  int jresult ;
  TAPIUserTypeType result;
  
  result = (TAPIUserTypeType)(TAPIUserTypeType)TAPI_USERTYPE_BROKER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPI_USERTYPE_TRADER_get() {
  int jresult ;
  TAPIUserTypeType result;
  
  result = (TAPIUserTypeType)(TAPIUserTypeType)TAPI_USERTYPE_TRADER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPI_USERTYPE_RISK_get() {
  int jresult ;
  TAPIUserTypeType result;
  
  result = (TAPIUserTypeType)(TAPIUserTypeType)TAPI_USERTYPE_RISK;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPI_USERTYPE_MANAGER_get() {
  int jresult ;
  TAPIUserTypeType result;
  
  result = (TAPIUserTypeType)(TAPIUserTypeType)TAPI_USERTYPE_MANAGER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPI_USERTYPE_QUOTE_get() {
  int jresult ;
  TAPIUserTypeType result;
  
  result = (TAPIUserTypeType)(TAPIUserTypeType)TAPI_USERTYPE_QUOTE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ACCOUNT_STATE_NORMAL_get() {
  char jresult ;
  TAPIAccountState result;
  
  result = (TAPIAccountState)(TAPIAccountState)TAPI_ACCOUNT_STATE_NORMAL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ACCOUNT_STATE_CANCEL_get() {
  char jresult ;
  TAPIAccountState result;
  
  result = (TAPIAccountState)(TAPIAccountState)TAPI_ACCOUNT_STATE_CANCEL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ACCOUNT_STATE_SLEEP_get() {
  char jresult ;
  TAPIAccountState result;
  
  result = (TAPIAccountState)(TAPIAccountState)TAPI_ACCOUNT_STATE_SLEEP;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ACCOUNT_FAMILYTYPE_NOMAL_get() {
  char jresult ;
  TAPIAccountFamilyType result;
  
  result = (TAPIAccountFamilyType)(TAPIAccountFamilyType)TAPI_ACCOUNT_FAMILYTYPE_NOMAL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ACCOUNT_FAMILYTYPE_CHILD_get() {
  char jresult ;
  TAPIAccountFamilyType result;
  
  result = (TAPIAccountFamilyType)(TAPIAccountFamilyType)TAPI_ACCOUNT_FAMILYTYPE_CHILD;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TYPE_MARKET_get() {
  char jresult ;
  TAPIOrderTypeType result;
  
  result = (TAPIOrderTypeType)(TAPIOrderTypeType)TAPI_ORDER_TYPE_MARKET;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TYPE_LIMIT_get() {
  char jresult ;
  TAPIOrderTypeType result;
  
  result = (TAPIOrderTypeType)(TAPIOrderTypeType)TAPI_ORDER_TYPE_LIMIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TYPE_STOP_MARKET_get() {
  char jresult ;
  TAPIOrderTypeType result;
  
  result = (TAPIOrderTypeType)(TAPIOrderTypeType)TAPI_ORDER_TYPE_STOP_MARKET;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TYPE_STOP_LIMIT_get() {
  char jresult ;
  TAPIOrderTypeType result;
  
  result = (TAPIOrderTypeType)(TAPIOrderTypeType)TAPI_ORDER_TYPE_STOP_LIMIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TYPE_OPT_EXEC_get() {
  char jresult ;
  TAPIOrderTypeType result;
  
  result = (TAPIOrderTypeType)(TAPIOrderTypeType)TAPI_ORDER_TYPE_OPT_EXEC;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TYPE_OPT_ABANDON_get() {
  char jresult ;
  TAPIOrderTypeType result;
  
  result = (TAPIOrderTypeType)(TAPIOrderTypeType)TAPI_ORDER_TYPE_OPT_ABANDON;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TYPE_REQQUOT_get() {
  char jresult ;
  TAPIOrderTypeType result;
  
  result = (TAPIOrderTypeType)(TAPIOrderTypeType)TAPI_ORDER_TYPE_REQQUOT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TYPE_RSPQUOT_get() {
  char jresult ;
  TAPIOrderTypeType result;
  
  result = (TAPIOrderTypeType)(TAPIOrderTypeType)TAPI_ORDER_TYPE_RSPQUOT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TYPE_SWAP_get() {
  char jresult ;
  TAPIOrderTypeType result;
  
  result = (TAPIOrderTypeType)(TAPIOrderTypeType)TAPI_ORDER_TYPE_SWAP;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_SOURCE_SELF_ETRADER_get() {
  char jresult ;
  TAPIOrderSourceType result;
  
  result = (TAPIOrderSourceType)(TAPIOrderSourceType)TAPI_ORDER_SOURCE_SELF_ETRADER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_SOURCE_PROXY_ETRADER_get() {
  char jresult ;
  TAPIOrderSourceType result;
  
  result = (TAPIOrderSourceType)(TAPIOrderSourceType)TAPI_ORDER_SOURCE_PROXY_ETRADER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_SOURCE_JTRADER_get() {
  char jresult ;
  TAPIOrderSourceType result;
  
  result = (TAPIOrderSourceType)(TAPIOrderSourceType)TAPI_ORDER_SOURCE_JTRADER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_SOURCE_MANUAL_get() {
  char jresult ;
  TAPIOrderSourceType result;
  
  result = (TAPIOrderSourceType)(TAPIOrderSourceType)TAPI_ORDER_SOURCE_MANUAL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_SOURCE_CARRY_get() {
  char jresult ;
  TAPIOrderSourceType result;
  
  result = (TAPIOrderSourceType)(TAPIOrderSourceType)TAPI_ORDER_SOURCE_CARRY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_SOURCE_PROGRAM_get() {
  char jresult ;
  TAPIOrderSourceType result;
  
  result = (TAPIOrderSourceType)(TAPIOrderSourceType)TAPI_ORDER_SOURCE_PROGRAM;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_SOURCE_DELIVERY_get() {
  char jresult ;
  TAPIOrderSourceType result;
  
  result = (TAPIOrderSourceType)(TAPIOrderSourceType)TAPI_ORDER_SOURCE_DELIVERY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_SOURCE_ABANDON_get() {
  char jresult ;
  TAPIOrderSourceType result;
  
  result = (TAPIOrderSourceType)(TAPIOrderSourceType)TAPI_ORDER_SOURCE_ABANDON;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_SOURCE_CHANNEL_get() {
  char jresult ;
  TAPIOrderSourceType result;
  
  result = (TAPIOrderSourceType)(TAPIOrderSourceType)TAPI_ORDER_SOURCE_CHANNEL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_SOURCE_ESUNNY_API_get() {
  char jresult ;
  TAPIOrderSourceType result;
  
  result = (TAPIOrderSourceType)(TAPIOrderSourceType)TAPI_ORDER_SOURCE_ESUNNY_API;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TIMEINFORCE_GFD_get() {
  char jresult ;
  TAPITimeInForceType result;
  
  result = (TAPITimeInForceType)(TAPITimeInForceType)TAPI_ORDER_TIMEINFORCE_GFD;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TIMEINFORCE_GTC_get() {
  char jresult ;
  TAPITimeInForceType result;
  
  result = (TAPITimeInForceType)(TAPITimeInForceType)TAPI_ORDER_TIMEINFORCE_GTC;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TIMEINFORCE_GTD_get() {
  char jresult ;
  TAPITimeInForceType result;
  
  result = (TAPITimeInForceType)(TAPITimeInForceType)TAPI_ORDER_TIMEINFORCE_GTD;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TIMEINFORCE_FAK_get() {
  char jresult ;
  TAPITimeInForceType result;
  
  result = (TAPITimeInForceType)(TAPITimeInForceType)TAPI_ORDER_TIMEINFORCE_FAK;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TIMEINFORCE_FOK_get() {
  char jresult ;
  TAPITimeInForceType result;
  
  result = (TAPITimeInForceType)(TAPITimeInForceType)TAPI_ORDER_TIMEINFORCE_FOK;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_SIDE_NONE_get() {
  char jresult ;
  TAPISideType result;
  
  result = (TAPISideType)(TAPISideType)TAPI_SIDE_NONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_SIDE_BUY_get() {
  char jresult ;
  TAPISideType result;
  
  result = (TAPISideType)(TAPISideType)TAPI_SIDE_BUY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_SIDE_SELL_get() {
  char jresult ;
  TAPISideType result;
  
  result = (TAPISideType)(TAPISideType)TAPI_SIDE_SELL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_SIDE_ALL_get() {
  char jresult ;
  TAPISideType result;
  
  result = (TAPISideType)(TAPISideType)TAPI_SIDE_ALL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_PositionEffect_NONE_get() {
  char jresult ;
  TAPIPositionEffectType result;
  
  result = (TAPIPositionEffectType)(TAPIPositionEffectType)TAPI_PositionEffect_NONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_PositionEffect_OPEN_get() {
  char jresult ;
  TAPIPositionEffectType result;
  
  result = (TAPIPositionEffectType)(TAPIPositionEffectType)TAPI_PositionEffect_OPEN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_PositionEffect_COVER_get() {
  char jresult ;
  TAPIPositionEffectType result;
  
  result = (TAPIPositionEffectType)(TAPIPositionEffectType)TAPI_PositionEffect_COVER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_PositionEffect_COVER_TODAY_get() {
  char jresult ;
  TAPIPositionEffectType result;
  
  result = (TAPIPositionEffectType)(TAPIPositionEffectType)TAPI_PositionEffect_COVER_TODAY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_HEDGEFLAG_NONE_get() {
  char jresult ;
  TAPIHedgeFlagType result;
  
  result = (TAPIHedgeFlagType)(TAPIHedgeFlagType)TAPI_HEDGEFLAG_NONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_HEDGEFLAG_T_get() {
  char jresult ;
  TAPIHedgeFlagType result;
  
  result = (TAPIHedgeFlagType)(TAPIHedgeFlagType)TAPI_HEDGEFLAG_T;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_HEDGEFLAG_B_get() {
  char jresult ;
  TAPIHedgeFlagType result;
  
  result = (TAPIHedgeFlagType)(TAPIHedgeFlagType)TAPI_HEDGEFLAG_B;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_HEDGEFLAG_L_get() {
  char jresult ;
  TAPIHedgeFlagType result;
  
  result = (TAPIHedgeFlagType)(TAPIHedgeFlagType)TAPI_HEDGEFLAG_L;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_SUBMIT_get() {
  char jresult ;
  TAPIOrderStateType result;
  
  result = (TAPIOrderStateType)(TAPIOrderStateType)TAPI_ORDER_STATE_SUBMIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_ACCEPT_get() {
  char jresult ;
  TAPIOrderStateType result;
  
  result = (TAPIOrderStateType)(TAPIOrderStateType)TAPI_ORDER_STATE_ACCEPT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_TRIGGERING_get() {
  char jresult ;
  TAPIOrderStateType result;
  
  result = (TAPIOrderStateType)(TAPIOrderStateType)TAPI_ORDER_STATE_TRIGGERING;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_EXCTRIGGERING_get() {
  char jresult ;
  TAPIOrderStateType result;
  
  result = (TAPIOrderStateType)(TAPIOrderStateType)TAPI_ORDER_STATE_EXCTRIGGERING;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_QUEUED_get() {
  char jresult ;
  TAPIOrderStateType result;
  
  result = (TAPIOrderStateType)(TAPIOrderStateType)TAPI_ORDER_STATE_QUEUED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_PARTFINISHED_get() {
  char jresult ;
  TAPIOrderStateType result;
  
  result = (TAPIOrderStateType)(TAPIOrderStateType)TAPI_ORDER_STATE_PARTFINISHED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_FINISHED_get() {
  char jresult ;
  TAPIOrderStateType result;
  
  result = (TAPIOrderStateType)(TAPIOrderStateType)TAPI_ORDER_STATE_FINISHED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_CANCELING_get() {
  char jresult ;
  TAPIOrderStateType result;
  
  result = (TAPIOrderStateType)(TAPIOrderStateType)TAPI_ORDER_STATE_CANCELING;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_MODIFYING_get() {
  char jresult ;
  TAPIOrderStateType result;
  
  result = (TAPIOrderStateType)(TAPIOrderStateType)TAPI_ORDER_STATE_MODIFYING;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_CANCELED_get() {
  char jresult ;
  TAPIOrderStateType result;
  
  result = (TAPIOrderStateType)(TAPIOrderStateType)TAPI_ORDER_STATE_CANCELED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_LEFTDELETED_get() {
  char jresult ;
  TAPIOrderStateType result;
  
  result = (TAPIOrderStateType)(TAPIOrderStateType)TAPI_ORDER_STATE_LEFTDELETED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_FAIL_get() {
  char jresult ;
  TAPIOrderStateType result;
  
  result = (TAPIOrderStateType)(TAPIOrderStateType)TAPI_ORDER_STATE_FAIL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_DELETED_get() {
  char jresult ;
  TAPIOrderStateType result;
  
  result = (TAPIOrderStateType)(TAPIOrderStateType)TAPI_ORDER_STATE_DELETED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_SUPPENDED_get() {
  char jresult ;
  TAPIOrderStateType result;
  
  result = (TAPIOrderStateType)(TAPIOrderStateType)TAPI_ORDER_STATE_SUPPENDED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_DELETEDFOREXPIRE_get() {
  char jresult ;
  TAPIOrderStateType result;
  
  result = (TAPIOrderStateType)(TAPIOrderStateType)TAPI_ORDER_STATE_DELETEDFOREXPIRE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_EFFECT_get() {
  char jresult ;
  TAPIOrderStateType result;
  
  result = (TAPIOrderStateType)(TAPIOrderStateType)TAPI_ORDER_STATE_EFFECT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_APPLY_get() {
  char jresult ;
  TAPIOrderStateType result;
  
  result = (TAPIOrderStateType)(TAPIOrderStateType)TAPI_ORDER_STATE_APPLY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CALCULATE_MODE_PERCENTAGE_get() {
  char jresult ;
  TAPICalculateModeType result;
  
  result = (TAPICalculateModeType)(TAPICalculateModeType)TAPI_CALCULATE_MODE_PERCENTAGE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CALCULATE_MODE_QUOTA_get() {
  char jresult ;
  TAPICalculateModeType result;
  
  result = (TAPICalculateModeType)(TAPICalculateModeType)TAPI_CALCULATE_MODE_QUOTA;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CALCULATE_MODE_ABSOLUTE_get() {
  char jresult ;
  TAPICalculateModeType result;
  
  result = (TAPICalculateModeType)(TAPICalculateModeType)TAPI_CALCULATE_MODE_ABSOLUTE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MATCH_SOURCE_ALL_get() {
  char jresult ;
  TAPIMatchSourceType result;
  
  result = (TAPIMatchSourceType)(TAPIMatchSourceType)TAPI_MATCH_SOURCE_ALL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MATCH_SOURCE_SELF_ETRADER_get() {
  char jresult ;
  TAPIMatchSourceType result;
  
  result = (TAPIMatchSourceType)(TAPIMatchSourceType)TAPI_MATCH_SOURCE_SELF_ETRADER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MATCH_SOURCE_PROXY_ETRADER_get() {
  char jresult ;
  TAPIMatchSourceType result;
  
  result = (TAPIMatchSourceType)(TAPIMatchSourceType)TAPI_MATCH_SOURCE_PROXY_ETRADER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MATCH_SOURCE_JTRADER_get() {
  char jresult ;
  TAPIMatchSourceType result;
  
  result = (TAPIMatchSourceType)(TAPIMatchSourceType)TAPI_MATCH_SOURCE_JTRADER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MATCH_SOURCE_MANUAL_get() {
  char jresult ;
  TAPIMatchSourceType result;
  
  result = (TAPIMatchSourceType)(TAPIMatchSourceType)TAPI_MATCH_SOURCE_MANUAL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MATCH_SOURCE_CARRY_get() {
  char jresult ;
  TAPIMatchSourceType result;
  
  result = (TAPIMatchSourceType)(TAPIMatchSourceType)TAPI_MATCH_SOURCE_CARRY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MATCH_SOURCE_PROGRAM_get() {
  char jresult ;
  TAPIMatchSourceType result;
  
  result = (TAPIMatchSourceType)(TAPIMatchSourceType)TAPI_MATCH_SOURCE_PROGRAM;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MATCH_SOURCE_DELIVERY_get() {
  char jresult ;
  TAPIMatchSourceType result;
  
  result = (TAPIMatchSourceType)(TAPIMatchSourceType)TAPI_MATCH_SOURCE_DELIVERY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MATCH_SOURCE_ABANDON_get() {
  char jresult ;
  TAPIMatchSourceType result;
  
  result = (TAPIMatchSourceType)(TAPIMatchSourceType)TAPI_MATCH_SOURCE_ABANDON;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MATCH_SOURCE_CHANNEL_get() {
  char jresult ;
  TAPIMatchSourceType result;
  
  result = (TAPIMatchSourceType)(TAPIMatchSourceType)TAPI_MATCH_SOURCE_CHANNEL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MATCH_SOURCE_ESUNNY_API_get() {
  char jresult ;
  TAPIMatchSourceType result;
  
  result = (TAPIMatchSourceType)(TAPIMatchSourceType)TAPI_MATCH_SOURCE_ESUNNY_API;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CLOSE_MODE_NONE_get() {
  char jresult ;
  TAPIOpenCloseModeType result;
  
  result = (TAPIOpenCloseModeType)(TAPIOpenCloseModeType)TAPI_CLOSE_MODE_NONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CLOSE_MODE_UNFINISHED_get() {
  char jresult ;
  TAPIOpenCloseModeType result;
  
  result = (TAPIOpenCloseModeType)(TAPIOpenCloseModeType)TAPI_CLOSE_MODE_UNFINISHED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CLOSE_MODE_OPENCOVER_get() {
  char jresult ;
  TAPIOpenCloseModeType result;
  
  result = (TAPIOpenCloseModeType)(TAPIOpenCloseModeType)TAPI_CLOSE_MODE_OPENCOVER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CLOSE_MODE_CLOSETODAY_get() {
  char jresult ;
  TAPIOpenCloseModeType result;
  
  result = (TAPIOpenCloseModeType)(TAPIOpenCloseModeType)TAPI_CLOSE_MODE_CLOSETODAY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_FUTURES_ALG_ZHUBI_get() {
  char jresult ;
  TAPIFutureAlgType result;
  
  result = (TAPIFutureAlgType)(TAPIFutureAlgType)TAPI_FUTURES_ALG_ZHUBI;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_FUTURES_ALG_DINGSHI_get() {
  char jresult ;
  TAPIFutureAlgType result;
  
  result = (TAPIFutureAlgType)(TAPIFutureAlgType)TAPI_FUTURES_ALG_DINGSHI;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_OPTION_ALG_FUTURES_get() {
  char jresult ;
  TAPIOptionAlgType result;
  
  result = (TAPIOptionAlgType)(TAPIOptionAlgType)TAPI_OPTION_ALG_FUTURES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_OPTION_ALG_OPTION_get() {
  char jresult ;
  TAPIOptionAlgType result;
  
  result = (TAPIOptionAlgType)(TAPIOptionAlgType)TAPI_OPTION_ALG_OPTION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_LWFlag_L_get() {
  char jresult ;
  TAPIBankAccountLWFlagType result;
  
  result = (TAPIBankAccountLWFlagType)(TAPIBankAccountLWFlagType)TAPI_LWFlag_L;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_LWFlag_W_get() {
  char jresult ;
  TAPIBankAccountLWFlagType result;
  
  result = (TAPIBankAccountLWFlagType)(TAPIBankAccountLWFlagType)TAPI_LWFlag_W;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_DEPOSITCALCULATE_MODE_FEN_get() {
  char jresult ;
  TAPIMarginCalculateModeType result;
  
  result = (TAPIMarginCalculateModeType)(TAPIMarginCalculateModeType)TAPI_DEPOSITCALCULATE_MODE_FEN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_DEPOSITCALCULATE_MODE_SUO_get() {
  char jresult ;
  TAPIMarginCalculateModeType result;
  
  result = (TAPIMarginCalculateModeType)(TAPIMarginCalculateModeType)TAPI_DEPOSITCALCULATE_MODE_SUO;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CMB_DIRECT_FIRST_get() {
  char jresult ;
  TAPICmbDirectType result;
  
  result = (TAPICmbDirectType)(TAPICmbDirectType)TAPI_CMB_DIRECT_FIRST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CMB_DIRECT_SECOND_get() {
  char jresult ;
  TAPICmbDirectType result;
  
  result = (TAPICmbDirectType)(TAPICmbDirectType)TAPI_CMB_DIRECT_SECOND;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_DELIVERY_MODE_GOODS_get() {
  char jresult ;
  TAPIDeliveryModeType result;
  
  result = (TAPIDeliveryModeType)(TAPIDeliveryModeType)TAPI_DELIVERY_MODE_GOODS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_DELIVERY_MODE_CASH_get() {
  char jresult ;
  TAPIDeliveryModeType result;
  
  result = (TAPIDeliveryModeType)(TAPIDeliveryModeType)TAPI_DELIVERY_MODE_CASH;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_DELIVERY_MODE_EXECUTE_get() {
  char jresult ;
  TAPIDeliveryModeType result;
  
  result = (TAPIDeliveryModeType)(TAPIDeliveryModeType)TAPI_DELIVERY_MODE_EXECUTE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_DELIVERY_MODE_ABANDON_get() {
  char jresult ;
  TAPIDeliveryModeType result;
  
  result = (TAPIDeliveryModeType)(TAPIDeliveryModeType)TAPI_DELIVERY_MODE_ABANDON;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_DELIVERY_MODE_HKF_get() {
  char jresult ;
  TAPIDeliveryModeType result;
  
  result = (TAPIDeliveryModeType)(TAPIDeliveryModeType)TAPI_DELIVERY_MODE_HKF;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CONTRACT_TYPE_TRADEQUOTE_get() {
  char jresult ;
  TAPIContractTypeType result;
  
  result = (TAPIContractTypeType)(TAPIContractTypeType)TAPI_CONTRACT_TYPE_TRADEQUOTE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CONTRACT_TYPE_QUOTE_get() {
  char jresult ;
  TAPIContractTypeType result;
  
  result = (TAPIContractTypeType)(TAPIContractTypeType)TAPI_CONTRACT_TYPE_QUOTE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TACTICS_TYPE_NONE_get() {
  char jresult ;
  TAPITacticsTypeType result;
  
  result = (TAPITacticsTypeType)(TAPITacticsTypeType)TAPI_TACTICS_TYPE_NONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TACTICS_TYPE_READY_get() {
  char jresult ;
  TAPITacticsTypeType result;
  
  result = (TAPITacticsTypeType)(TAPITacticsTypeType)TAPI_TACTICS_TYPE_READY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TACTICS_TYPE_ATUO_get() {
  char jresult ;
  TAPITacticsTypeType result;
  
  result = (TAPITacticsTypeType)(TAPITacticsTypeType)TAPI_TACTICS_TYPE_ATUO;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TACTICS_TYPE_CONDITION_get() {
  char jresult ;
  TAPITacticsTypeType result;
  
  result = (TAPITacticsTypeType)(TAPITacticsTypeType)TAPI_TACTICS_TYPE_CONDITION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APIORDER_INSERT_get() {
  char jresult ;
  TAPIORDERACT result;
  
  result = (TAPIORDERACT)(TAPIORDERACT)APIORDER_INSERT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APIORDER_MODIFY_get() {
  char jresult ;
  TAPIORDERACT result;
  
  result = (TAPIORDERACT)(TAPIORDERACT)APIORDER_MODIFY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APIORDER_DELETE_get() {
  char jresult ;
  TAPIORDERACT result;
  
  result = (TAPIORDERACT)(TAPIORDERACT)APIORDER_DELETE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APIORDER_SUSPEND_get() {
  char jresult ;
  TAPIORDERACT result;
  
  result = (TAPIORDERACT)(TAPIORDERACT)APIORDER_SUSPEND;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APIORDER_ACTIVATE_get() {
  char jresult ;
  TAPIORDERACT result;
  
  result = (TAPIORDERACT)(TAPIORDERACT)APIORDER_ACTIVATE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APIORDER_SYSTEM_DELETE_get() {
  char jresult ;
  TAPIORDERACT result;
  
  result = (TAPIORDERACT)(TAPIORDERACT)APIORDER_SYSTEM_DELETE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRIGGER_CONDITION_NONE_get() {
  char jresult ;
  TAPITriggerConditionType result;
  
  result = (TAPITriggerConditionType)(TAPITriggerConditionType)TAPI_TRIGGER_CONDITION_NONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRIGGER_CONDITION_GREAT_get() {
  char jresult ;
  TAPITriggerConditionType result;
  
  result = (TAPITriggerConditionType)(TAPITriggerConditionType)TAPI_TRIGGER_CONDITION_GREAT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRIGGER_CONDITION_LITTLE_get() {
  char jresult ;
  TAPITriggerConditionType result;
  
  result = (TAPITriggerConditionType)(TAPITriggerConditionType)TAPI_TRIGGER_CONDITION_LITTLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRIGGER_PRICE_NONE_get() {
  char jresult ;
  TAPITriggerPriceTypeType result;
  
  result = (TAPITriggerPriceTypeType)(TAPITriggerPriceTypeType)TAPI_TRIGGER_PRICE_NONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRIGGER_PRICE_BUY_get() {
  char jresult ;
  TAPITriggerPriceTypeType result;
  
  result = (TAPITriggerPriceTypeType)(TAPITriggerPriceTypeType)TAPI_TRIGGER_PRICE_BUY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRIGGER_PRICE_SELL_get() {
  char jresult ;
  TAPITriggerPriceTypeType result;
  
  result = (TAPITriggerPriceTypeType)(TAPITriggerPriceTypeType)TAPI_TRIGGER_PRICE_SELL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRIGGER_PRICE_LAST_get() {
  char jresult ;
  TAPITriggerPriceTypeType result;
  
  result = (TAPITriggerPriceTypeType)(TAPITriggerPriceTypeType)TAPI_TRIGGER_PRICE_LAST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_TAPI_MARKET_LEVEL_0_get() {
  unsigned char jresult ;
  TAPIMarketLevelType result;
  
  result = (TAPIMarketLevelType)(TAPIMarketLevelType)TAPI_MARKET_LEVEL_0;
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_TAPI_MARKET_LEVEL_1_get() {
  unsigned char jresult ;
  TAPIMarketLevelType result;
  
  result = (TAPIMarketLevelType)(TAPIMarketLevelType)TAPI_MARKET_LEVEL_1;
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_TAPI_MARKET_LEVEL_5_get() {
  unsigned char jresult ;
  TAPIMarketLevelType result;
  
  result = (TAPIMarketLevelType)(TAPIMarketLevelType)TAPI_MARKET_LEVEL_5;
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_TAPI_MARKET_LEVEL_10_get() {
  unsigned char jresult ;
  TAPIMarketLevelType result;
  
  result = (TAPIMarketLevelType)(TAPIMarketLevelType)TAPI_MARKET_LEVEL_10;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRADE_STATE_BID_get() {
  char jresult ;
  TAPITradingStateType result;
  
  result = (TAPITradingStateType)(TAPITradingStateType)TAPI_TRADE_STATE_BID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRADE_STATE_MATCH_get() {
  char jresult ;
  TAPITradingStateType result;
  
  result = (TAPITradingStateType)(TAPITradingStateType)TAPI_TRADE_STATE_MATCH;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRADE_STATE_CONTINUOUS_get() {
  char jresult ;
  TAPITradingStateType result;
  
  result = (TAPITradingStateType)(TAPITradingStateType)TAPI_TRADE_STATE_CONTINUOUS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRADE_STATE_PAUSED_get() {
  char jresult ;
  TAPITradingStateType result;
  
  result = (TAPITradingStateType)(TAPITradingStateType)TAPI_TRADE_STATE_PAUSED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRADE_STATE_CLOSE_get() {
  char jresult ;
  TAPITradingStateType result;
  
  result = (TAPITradingStateType)(TAPITradingStateType)TAPI_TRADE_STATE_CLOSE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRADE_STATE_DEALLAST_get() {
  char jresult ;
  TAPITradingStateType result;
  
  result = (TAPITradingStateType)(TAPITradingStateType)TAPI_TRADE_STATE_DEALLAST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRADE_STATE_GWDISCONNECT_get() {
  char jresult ;
  TAPITradingStateType result;
  
  result = (TAPITradingStateType)(TAPITradingStateType)TAPI_TRADE_STATE_GWDISCONNECT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRADE_STATE_UNKNOWN_get() {
  char jresult ;
  TAPITradingStateType result;
  
  result = (TAPITradingStateType)(TAPITradingStateType)TAPI_TRADE_STATE_UNKNOWN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRADE_STATE_INITIALIZE_get() {
  char jresult ;
  TAPITradingStateType result;
  
  result = (TAPITradingStateType)(TAPITradingStateType)TAPI_TRADE_STATE_INITIALIZE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRADE_STATE_READY_get() {
  char jresult ;
  TAPITradingStateType result;
  
  result = (TAPITradingStateType)(TAPITradingStateType)TAPI_TRADE_STATE_READY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TAPI_NOTICE_IGNORE_NONE_get() {
  unsigned int jresult ;
  TAPINoticeIgnoreFlagType result;
  
  result = (TAPINoticeIgnoreFlagType)(TAPINoticeIgnoreFlagType)TAPI_NOTICE_IGNORE_NONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TAPI_NOTICE_IGNORE_ALL_get() {
  unsigned int jresult ;
  TAPINoticeIgnoreFlagType result;
  
  result = (TAPINoticeIgnoreFlagType)(TAPINoticeIgnoreFlagType)TAPI_NOTICE_IGNORE_ALL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TAPI_NOTICE_IGNORE_FUND_get() {
  unsigned int jresult ;
  TAPINoticeIgnoreFlagType result;
  
  result = (TAPINoticeIgnoreFlagType)(TAPINoticeIgnoreFlagType)TAPI_NOTICE_IGNORE_FUND;
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TAPI_NOTICE_IGNORE_ORDER_get() {
  unsigned int jresult ;
  TAPINoticeIgnoreFlagType result;
  
  result = (TAPINoticeIgnoreFlagType)(TAPINoticeIgnoreFlagType)TAPI_NOTICE_IGNORE_ORDER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TAPI_NOTICE_IGNORE_FILL_get() {
  unsigned int jresult ;
  TAPINoticeIgnoreFlagType result;
  
  result = (TAPINoticeIgnoreFlagType)(TAPINoticeIgnoreFlagType)TAPI_NOTICE_IGNORE_FILL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TAPI_NOTICE_IGNORE_POSITION_get() {
  unsigned int jresult ;
  TAPINoticeIgnoreFlagType result;
  
  result = (TAPINoticeIgnoreFlagType)(TAPINoticeIgnoreFlagType)TAPI_NOTICE_IGNORE_POSITION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TAPI_NOTICE_IGNORE_CLOSE_get() {
  unsigned int jresult ;
  TAPINoticeIgnoreFlagType result;
  
  result = (TAPINoticeIgnoreFlagType)(TAPINoticeIgnoreFlagType)TAPI_NOTICE_IGNORE_CLOSE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TAPI_NOTICE_IGNORE_POSITIONPROFIT_get() {
  unsigned int jresult ;
  TAPINoticeIgnoreFlagType result;
  
  result = (TAPINoticeIgnoreFlagType)(TAPINoticeIgnoreFlagType)TAPI_NOTICE_IGNORE_POSITIONPROFIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_QRY_TYPE_ALL_get() {
  char jresult ;
  TAPIOrderQryTypeType result;
  
  result = (TAPIOrderQryTypeType)(TAPIOrderQryTypeType)TAPI_ORDER_QRY_TYPE_ALL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_QRY_TYPE_UNENDED_get() {
  char jresult ;
  TAPIOrderQryTypeType result;
  
  result = (TAPIOrderQryTypeType)(TAPIOrderQryTypeType)TAPI_ORDER_QRY_TYPE_UNENDED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginAuth_UserNo_set(void * jarg1, char * jarg2) {
  TapAPITradeLoginAuth *arg1 = (TapAPITradeLoginAuth *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPITradeLoginAuth *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserNo, (const char *)arg2, 21-1);
      arg1->UserNo[21-1] = 0;
    } else {
      arg1->UserNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginAuth_UserNo_get(void * jarg1) {
  char * jresult ;
  TapAPITradeLoginAuth *arg1 = (TapAPITradeLoginAuth *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPITradeLoginAuth *)jarg1; 
  result = (char *) ((arg1)->UserNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginAuth_ISModifyPassword_set(void * jarg1, char jarg2) {
  TapAPITradeLoginAuth *arg1 = (TapAPITradeLoginAuth *) 0 ;
  TAPIYNFLAG arg2 ;
  
  arg1 = (TapAPITradeLoginAuth *)jarg1; 
  arg2 = (TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->ISModifyPassword = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPITradeLoginAuth_ISModifyPassword_get(void * jarg1) {
  char jresult ;
  TapAPITradeLoginAuth *arg1 = (TapAPITradeLoginAuth *) 0 ;
  TAPIYNFLAG result;
  
  arg1 = (TapAPITradeLoginAuth *)jarg1; 
  result = (TAPIYNFLAG) ((arg1)->ISModifyPassword);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginAuth_Password_set(void * jarg1, char * jarg2) {
  TapAPITradeLoginAuth *arg1 = (TapAPITradeLoginAuth *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPITradeLoginAuth *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 21-1);
      arg1->Password[21-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginAuth_Password_get(void * jarg1) {
  char * jresult ;
  TapAPITradeLoginAuth *arg1 = (TapAPITradeLoginAuth *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPITradeLoginAuth *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginAuth_NewPassword_set(void * jarg1, char * jarg2) {
  TapAPITradeLoginAuth *arg1 = (TapAPITradeLoginAuth *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPITradeLoginAuth *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->NewPassword, (const char *)arg2, 21-1);
      arg1->NewPassword[21-1] = 0;
    } else {
      arg1->NewPassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginAuth_NewPassword_get(void * jarg1) {
  char * jresult ;
  TapAPITradeLoginAuth *arg1 = (TapAPITradeLoginAuth *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPITradeLoginAuth *)jarg1; 
  result = (char *) ((arg1)->NewPassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginAuth_ISDDA_set(void * jarg1, char jarg2) {
  TapAPITradeLoginAuth *arg1 = (TapAPITradeLoginAuth *) 0 ;
  TAPIYNFLAG arg2 ;
  
  arg1 = (TapAPITradeLoginAuth *)jarg1; 
  arg2 = (TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->ISDDA = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPITradeLoginAuth_ISDDA_get(void * jarg1) {
  char jresult ;
  TapAPITradeLoginAuth *arg1 = (TapAPITradeLoginAuth *) 0 ;
  TAPIYNFLAG result;
  
  arg1 = (TapAPITradeLoginAuth *)jarg1; 
  result = (TAPIYNFLAG) ((arg1)->ISDDA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginAuth_DDASerialNo_set(void * jarg1, char * jarg2) {
  TapAPITradeLoginAuth *arg1 = (TapAPITradeLoginAuth *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPITradeLoginAuth *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DDASerialNo, (const char *)arg2, 31-1);
      arg1->DDASerialNo[31-1] = 0;
    } else {
      arg1->DDASerialNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginAuth_DDASerialNo_get(void * jarg1) {
  char * jresult ;
  TapAPITradeLoginAuth *arg1 = (TapAPITradeLoginAuth *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPITradeLoginAuth *)jarg1; 
  result = (char *) ((arg1)->DDASerialNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginAuth_NoticeIgnoreFlag_set(void * jarg1, unsigned int jarg2) {
  TapAPITradeLoginAuth *arg1 = (TapAPITradeLoginAuth *) 0 ;
  TAPINoticeIgnoreFlagType arg2 ;
  
  arg1 = (TapAPITradeLoginAuth *)jarg1; 
  arg2 = (TAPINoticeIgnoreFlagType)jarg2; 
  if (arg1) (arg1)->NoticeIgnoreFlag = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPITradeLoginAuth_NoticeIgnoreFlag_get(void * jarg1) {
  unsigned int jresult ;
  TapAPITradeLoginAuth *arg1 = (TapAPITradeLoginAuth *) 0 ;
  TAPINoticeIgnoreFlagType result;
  
  arg1 = (TapAPITradeLoginAuth *)jarg1; 
  result = (TAPINoticeIgnoreFlagType) ((arg1)->NoticeIgnoreFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPITradeLoginAuth() {
  void * jresult ;
  TapAPITradeLoginAuth *result = 0 ;
  
  result = (TapAPITradeLoginAuth *)new TapAPITradeLoginAuth();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPITradeLoginAuth(void * jarg1) {
  TapAPITradeLoginAuth *arg1 = (TapAPITradeLoginAuth *) 0 ;
  
  arg1 = (TapAPITradeLoginAuth *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_UserNo_set(void * jarg1, char * jarg2) {
  TapAPITradeLoginRspInfo *arg1 = (TapAPITradeLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPITradeLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserNo, (const char *)arg2, 21-1);
      arg1->UserNo[21-1] = 0;
    } else {
      arg1->UserNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_UserNo_get(void * jarg1) {
  char * jresult ;
  TapAPITradeLoginRspInfo *arg1 = (TapAPITradeLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPITradeLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->UserNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_UserType_set(void * jarg1, int jarg2) {
  TapAPITradeLoginRspInfo *arg1 = (TapAPITradeLoginRspInfo *) 0 ;
  TAPIUserTypeType arg2 ;
  
  arg1 = (TapAPITradeLoginRspInfo *)jarg1; 
  arg2 = (TAPIUserTypeType)jarg2; 
  if (arg1) (arg1)->UserType = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_UserType_get(void * jarg1) {
  int jresult ;
  TapAPITradeLoginRspInfo *arg1 = (TapAPITradeLoginRspInfo *) 0 ;
  TAPIUserTypeType result;
  
  arg1 = (TapAPITradeLoginRspInfo *)jarg1; 
  result = (TAPIUserTypeType) ((arg1)->UserType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_UserName_set(void * jarg1, char * jarg2) {
  TapAPITradeLoginRspInfo *arg1 = (TapAPITradeLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPITradeLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserName, (const char *)arg2, 21-1);
      arg1->UserName[21-1] = 0;
    } else {
      arg1->UserName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_UserName_get(void * jarg1) {
  char * jresult ;
  TapAPITradeLoginRspInfo *arg1 = (TapAPITradeLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPITradeLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->UserName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_QuoteTempPassword_set(void * jarg1, char * jarg2) {
  TapAPITradeLoginRspInfo *arg1 = (TapAPITradeLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPITradeLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteTempPassword, (const char *)arg2, 21-1);
      arg1->QuoteTempPassword[21-1] = 0;
    } else {
      arg1->QuoteTempPassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_QuoteTempPassword_get(void * jarg1) {
  char * jresult ;
  TapAPITradeLoginRspInfo *arg1 = (TapAPITradeLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPITradeLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->QuoteTempPassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_ReservedInfo_set(void * jarg1, char * jarg2) {
  TapAPITradeLoginRspInfo *arg1 = (TapAPITradeLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPITradeLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ReservedInfo, (const char *)arg2, 51-1);
      arg1->ReservedInfo[51-1] = 0;
    } else {
      arg1->ReservedInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_ReservedInfo_get(void * jarg1) {
  char * jresult ;
  TapAPITradeLoginRspInfo *arg1 = (TapAPITradeLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPITradeLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->ReservedInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_LastLoginIP_set(void * jarg1, char * jarg2) {
  TapAPITradeLoginRspInfo *arg1 = (TapAPITradeLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPITradeLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastLoginIP, (const char *)arg2, 41-1);
      arg1->LastLoginIP[41-1] = 0;
    } else {
      arg1->LastLoginIP[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_LastLoginIP_get(void * jarg1) {
  char * jresult ;
  TapAPITradeLoginRspInfo *arg1 = (TapAPITradeLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPITradeLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->LastLoginIP);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_LastLoginProt_set(void * jarg1, unsigned int jarg2) {
  TapAPITradeLoginRspInfo *arg1 = (TapAPITradeLoginRspInfo *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPITradeLoginRspInfo *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->LastLoginProt = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_LastLoginProt_get(void * jarg1) {
  unsigned int jresult ;
  TapAPITradeLoginRspInfo *arg1 = (TapAPITradeLoginRspInfo *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPITradeLoginRspInfo *)jarg1; 
  result = (TAPIUINT32) ((arg1)->LastLoginProt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_LastLoginTime_set(void * jarg1, char * jarg2) {
  TapAPITradeLoginRspInfo *arg1 = (TapAPITradeLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPITradeLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastLoginTime, (const char *)arg2, 20-1);
      arg1->LastLoginTime[20-1] = 0;
    } else {
      arg1->LastLoginTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_LastLoginTime_get(void * jarg1) {
  char * jresult ;
  TapAPITradeLoginRspInfo *arg1 = (TapAPITradeLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPITradeLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->LastLoginTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_LastLogoutTime_set(void * jarg1, char * jarg2) {
  TapAPITradeLoginRspInfo *arg1 = (TapAPITradeLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPITradeLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastLogoutTime, (const char *)arg2, 20-1);
      arg1->LastLogoutTime[20-1] = 0;
    } else {
      arg1->LastLogoutTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_LastLogoutTime_get(void * jarg1) {
  char * jresult ;
  TapAPITradeLoginRspInfo *arg1 = (TapAPITradeLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPITradeLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->LastLogoutTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_TradeDate_set(void * jarg1, char * jarg2) {
  TapAPITradeLoginRspInfo *arg1 = (TapAPITradeLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPITradeLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 11-1);
      arg1->TradeDate[11-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_TradeDate_get(void * jarg1) {
  char * jresult ;
  TapAPITradeLoginRspInfo *arg1 = (TapAPITradeLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPITradeLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_LastSettleTime_set(void * jarg1, char * jarg2) {
  TapAPITradeLoginRspInfo *arg1 = (TapAPITradeLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPITradeLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastSettleTime, (const char *)arg2, 20-1);
      arg1->LastSettleTime[20-1] = 0;
    } else {
      arg1->LastSettleTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_LastSettleTime_get(void * jarg1) {
  char * jresult ;
  TapAPITradeLoginRspInfo *arg1 = (TapAPITradeLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPITradeLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->LastSettleTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_StartTime_set(void * jarg1, char * jarg2) {
  TapAPITradeLoginRspInfo *arg1 = (TapAPITradeLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPITradeLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StartTime, (const char *)arg2, 20-1);
      arg1->StartTime[20-1] = 0;
    } else {
      arg1->StartTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_StartTime_get(void * jarg1) {
  char * jresult ;
  TapAPITradeLoginRspInfo *arg1 = (TapAPITradeLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPITradeLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->StartTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_InitTime_set(void * jarg1, char * jarg2) {
  TapAPITradeLoginRspInfo *arg1 = (TapAPITradeLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPITradeLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InitTime, (const char *)arg2, 20-1);
      arg1->InitTime[20-1] = 0;
    } else {
      arg1->InitTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_InitTime_get(void * jarg1) {
  char * jresult ;
  TapAPITradeLoginRspInfo *arg1 = (TapAPITradeLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPITradeLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->InitTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPITradeLoginRspInfo() {
  void * jresult ;
  TapAPITradeLoginRspInfo *result = 0 ;
  
  result = (TapAPITradeLoginRspInfo *)new TapAPITradeLoginRspInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPITradeLoginRspInfo(void * jarg1) {
  TapAPITradeLoginRspInfo *arg1 = (TapAPITradeLoginRspInfo *) 0 ;
  
  arg1 = (TapAPITradeLoginRspInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccQryReq_AccountNo_set(void * jarg1, char * jarg2) {
  TapAPIAccQryReq *arg1 = (TapAPIAccQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIAccQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccQryReq_AccountNo_get(void * jarg1) {
  char * jresult ;
  TapAPIAccQryReq *arg1 = (TapAPIAccQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIAccQryReq *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIAccQryReq() {
  void * jresult ;
  TapAPIAccQryReq *result = 0 ;
  
  result = (TapAPIAccQryReq *)new TapAPIAccQryReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIAccQryReq(void * jarg1) {
  TapAPIAccQryReq *arg1 = (TapAPIAccQryReq *) 0 ;
  
  arg1 = (TapAPIAccQryReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountInfo_AccountNo_set(void * jarg1, char * jarg2) {
  TapAPIAccountInfo *arg1 = (TapAPIAccountInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIAccountInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountInfo_AccountNo_get(void * jarg1) {
  char * jresult ;
  TapAPIAccountInfo *arg1 = (TapAPIAccountInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIAccountInfo *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountInfo_AccountType_set(void * jarg1, char jarg2) {
  TapAPIAccountInfo *arg1 = (TapAPIAccountInfo *) 0 ;
  TAPIAccountType arg2 ;
  
  arg1 = (TapAPIAccountInfo *)jarg1; 
  arg2 = (TAPIAccountType)jarg2; 
  if (arg1) (arg1)->AccountType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIAccountInfo_AccountType_get(void * jarg1) {
  char jresult ;
  TapAPIAccountInfo *arg1 = (TapAPIAccountInfo *) 0 ;
  TAPIAccountType result;
  
  arg1 = (TapAPIAccountInfo *)jarg1; 
  result = (TAPIAccountType) ((arg1)->AccountType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountInfo_AccountState_set(void * jarg1, char jarg2) {
  TapAPIAccountInfo *arg1 = (TapAPIAccountInfo *) 0 ;
  TAPIAccountState arg2 ;
  
  arg1 = (TapAPIAccountInfo *)jarg1; 
  arg2 = (TAPIAccountState)jarg2; 
  if (arg1) (arg1)->AccountState = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIAccountInfo_AccountState_get(void * jarg1) {
  char jresult ;
  TapAPIAccountInfo *arg1 = (TapAPIAccountInfo *) 0 ;
  TAPIAccountState result;
  
  arg1 = (TapAPIAccountInfo *)jarg1; 
  result = (TAPIAccountState) ((arg1)->AccountState);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountInfo_AccountShortName_set(void * jarg1, char * jarg2) {
  TapAPIAccountInfo *arg1 = (TapAPIAccountInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIAccountInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountShortName, (const char *)arg2, 21-1);
      arg1->AccountShortName[21-1] = 0;
    } else {
      arg1->AccountShortName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountInfo_AccountShortName_get(void * jarg1) {
  char * jresult ;
  TapAPIAccountInfo *arg1 = (TapAPIAccountInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIAccountInfo *)jarg1; 
  result = (char *) ((arg1)->AccountShortName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountInfo_AccountIsDocHolder_set(void * jarg1, char jarg2) {
  TapAPIAccountInfo *arg1 = (TapAPIAccountInfo *) 0 ;
  TAPIYNFLAG arg2 ;
  
  arg1 = (TapAPIAccountInfo *)jarg1; 
  arg2 = (TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->AccountIsDocHolder = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIAccountInfo_AccountIsDocHolder_get(void * jarg1) {
  char jresult ;
  TapAPIAccountInfo *arg1 = (TapAPIAccountInfo *) 0 ;
  TAPIYNFLAG result;
  
  arg1 = (TapAPIAccountInfo *)jarg1; 
  result = (TAPIYNFLAG) ((arg1)->AccountIsDocHolder);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountInfo_IsMarketMaker_set(void * jarg1, char jarg2) {
  TapAPIAccountInfo *arg1 = (TapAPIAccountInfo *) 0 ;
  TAPIYNFLAG arg2 ;
  
  arg1 = (TapAPIAccountInfo *)jarg1; 
  arg2 = (TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsMarketMaker = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIAccountInfo_IsMarketMaker_get(void * jarg1) {
  char jresult ;
  TapAPIAccountInfo *arg1 = (TapAPIAccountInfo *) 0 ;
  TAPIYNFLAG result;
  
  arg1 = (TapAPIAccountInfo *)jarg1; 
  result = (TAPIYNFLAG) ((arg1)->IsMarketMaker);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountInfo_AccountFamilyType_set(void * jarg1, char jarg2) {
  TapAPIAccountInfo *arg1 = (TapAPIAccountInfo *) 0 ;
  TAPIAccountFamilyType arg2 ;
  
  arg1 = (TapAPIAccountInfo *)jarg1; 
  arg2 = (TAPIAccountFamilyType)jarg2; 
  if (arg1) (arg1)->AccountFamilyType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIAccountInfo_AccountFamilyType_get(void * jarg1) {
  char jresult ;
  TapAPIAccountInfo *arg1 = (TapAPIAccountInfo *) 0 ;
  TAPIAccountFamilyType result;
  
  arg1 = (TapAPIAccountInfo *)jarg1; 
  result = (TAPIAccountFamilyType) ((arg1)->AccountFamilyType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIAccountInfo() {
  void * jresult ;
  TapAPIAccountInfo *result = 0 ;
  
  result = (TapAPIAccountInfo *)new TapAPIAccountInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIAccountInfo(void * jarg1) {
  TapAPIAccountInfo *arg1 = (TapAPIAccountInfo *) 0 ;
  
  arg1 = (TapAPIAccountInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_AccountNo_set(void * jarg1, char * jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPINewOrder_AccountNo_get(void * jarg1) {
  char * jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_ExchangeNo_set(void * jarg1, char * jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPINewOrder_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_CommodityType_set(void * jarg1, char jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPICommodityType arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_CommodityType_get(void * jarg1) {
  char jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPICommodityType result;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_CommodityNo_set(void * jarg1, char * jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPINewOrder_CommodityNo_get(void * jarg1) {
  char * jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_ContractNo_set(void * jarg1, char * jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPINewOrder_ContractNo_get(void * jarg1) {
  char * jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_StrikePrice_set(void * jarg1, char * jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice, (const char *)arg2, 11-1);
      arg1->StrikePrice[11-1] = 0;
    } else {
      arg1->StrikePrice[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPINewOrder_StrikePrice_get(void * jarg1) {
  char * jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (char *) ((arg1)->StrikePrice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_CallOrPutFlag_set(void * jarg1, char jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPICallOrPutFlagType arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_CallOrPutFlag_get(void * jarg1) {
  char jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPICallOrPutFlagType result;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_ContractNo2_set(void * jarg1, char * jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo2, (const char *)arg2, 11-1);
      arg1->ContractNo2[11-1] = 0;
    } else {
      arg1->ContractNo2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPINewOrder_ContractNo2_get(void * jarg1) {
  char * jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (char *) ((arg1)->ContractNo2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_StrikePrice2_set(void * jarg1, char * jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice2, (const char *)arg2, 11-1);
      arg1->StrikePrice2[11-1] = 0;
    } else {
      arg1->StrikePrice2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPINewOrder_StrikePrice2_get(void * jarg1) {
  char * jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (char *) ((arg1)->StrikePrice2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_CallOrPutFlag2_set(void * jarg1, char jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPICallOrPutFlagType arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_CallOrPutFlag2_get(void * jarg1) {
  char jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPICallOrPutFlagType result;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_OrderType_set(void * jarg1, char jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIOrderTypeType arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (TAPIOrderTypeType)jarg2; 
  if (arg1) (arg1)->OrderType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_OrderType_get(void * jarg1) {
  char jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIOrderTypeType result;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (TAPIOrderTypeType) ((arg1)->OrderType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_OrderSource_set(void * jarg1, char jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIOrderSourceType arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (TAPIOrderSourceType)jarg2; 
  if (arg1) (arg1)->OrderSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_OrderSource_get(void * jarg1) {
  char jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIOrderSourceType result;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (TAPIOrderSourceType) ((arg1)->OrderSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_TimeInForce_set(void * jarg1, char jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPITimeInForceType arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (TAPITimeInForceType)jarg2; 
  if (arg1) (arg1)->TimeInForce = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_TimeInForce_get(void * jarg1) {
  char jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPITimeInForceType result;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (TAPITimeInForceType) ((arg1)->TimeInForce);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_ExpireTime_set(void * jarg1, char * jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExpireTime, (const char *)arg2, 20-1);
      arg1->ExpireTime[20-1] = 0;
    } else {
      arg1->ExpireTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPINewOrder_ExpireTime_get(void * jarg1) {
  char * jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (char *) ((arg1)->ExpireTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_IsRiskOrder_set(void * jarg1, char jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIYNFLAG arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsRiskOrder = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_IsRiskOrder_get(void * jarg1) {
  char jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIYNFLAG result;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (TAPIYNFLAG) ((arg1)->IsRiskOrder);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_OrderSide_set(void * jarg1, char jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPISideType arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (TAPISideType)jarg2; 
  if (arg1) (arg1)->OrderSide = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_OrderSide_get(void * jarg1) {
  char jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPISideType result;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (TAPISideType) ((arg1)->OrderSide);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_PositionEffect_set(void * jarg1, char jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIPositionEffectType arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (TAPIPositionEffectType)jarg2; 
  if (arg1) (arg1)->PositionEffect = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_PositionEffect_get(void * jarg1) {
  char jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIPositionEffectType result;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (TAPIPositionEffectType) ((arg1)->PositionEffect);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_PositionEffect2_set(void * jarg1, char jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIPositionEffectType arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (TAPIPositionEffectType)jarg2; 
  if (arg1) (arg1)->PositionEffect2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_PositionEffect2_get(void * jarg1) {
  char jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIPositionEffectType result;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (TAPIPositionEffectType) ((arg1)->PositionEffect2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_InquiryNo_set(void * jarg1, char * jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InquiryNo, (const char *)arg2, 51-1);
      arg1->InquiryNo[51-1] = 0;
    } else {
      arg1->InquiryNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPINewOrder_InquiryNo_get(void * jarg1) {
  char * jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (char *) ((arg1)->InquiryNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_HedgeFlag_set(void * jarg1, char jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIHedgeFlagType arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (TAPIHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_HedgeFlag_get(void * jarg1) {
  char jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIHedgeFlagType result;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (TAPIHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_OrderPrice_set(void * jarg1, double jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OrderPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPINewOrder_OrderPrice_get(void * jarg1) {
  double jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (TAPIREAL64) ((arg1)->OrderPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_OrderPrice2_set(void * jarg1, double jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OrderPrice2 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPINewOrder_OrderPrice2_get(void * jarg1) {
  double jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (TAPIREAL64) ((arg1)->OrderPrice2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_StopPrice_set(void * jarg1, double jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->StopPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPINewOrder_StopPrice_get(void * jarg1) {
  double jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (TAPIREAL64) ((arg1)->StopPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_OrderQty_set(void * jarg1, unsigned int jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPINewOrder_OrderQty_get(void * jarg1) {
  unsigned int jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (TAPIUINT32) ((arg1)->OrderQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_OrderMinQty_set(void * jarg1, unsigned int jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderMinQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPINewOrder_OrderMinQty_get(void * jarg1) {
  unsigned int jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (TAPIUINT32) ((arg1)->OrderMinQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_MinClipSize_set(void * jarg1, unsigned int jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->MinClipSize = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPINewOrder_MinClipSize_get(void * jarg1) {
  unsigned int jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (TAPIUINT32) ((arg1)->MinClipSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_MaxClipSize_set(void * jarg1, unsigned int jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->MaxClipSize = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPINewOrder_MaxClipSize_get(void * jarg1) {
  unsigned int jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (TAPIUINT32) ((arg1)->MaxClipSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_RefInt_set(void * jarg1, int jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIINT32 arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (TAPIINT32)jarg2; 
  if (arg1) (arg1)->RefInt = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TapAPINewOrder_RefInt_get(void * jarg1) {
  int jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIINT32 result;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (TAPIINT32) ((arg1)->RefInt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_RefString_set(void * jarg1, char * jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RefString, (const char *)arg2, 51-1);
      arg1->RefString[51-1] = 0;
    } else {
      arg1->RefString[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPINewOrder_RefString_get(void * jarg1) {
  char * jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (char *) ((arg1)->RefString);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_TacticsType_set(void * jarg1, char jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPITacticsTypeType arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (TAPITacticsTypeType)jarg2; 
  if (arg1) (arg1)->TacticsType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_TacticsType_get(void * jarg1) {
  char jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPITacticsTypeType result;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (TAPITacticsTypeType) ((arg1)->TacticsType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_TriggerCondition_set(void * jarg1, char jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPITriggerConditionType arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (TAPITriggerConditionType)jarg2; 
  if (arg1) (arg1)->TriggerCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_TriggerCondition_get(void * jarg1) {
  char jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPITriggerConditionType result;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (TAPITriggerConditionType) ((arg1)->TriggerCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_TriggerPriceType_set(void * jarg1, char jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPITriggerPriceTypeType arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (TAPITriggerPriceTypeType)jarg2; 
  if (arg1) (arg1)->TriggerPriceType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_TriggerPriceType_get(void * jarg1) {
  char jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPITriggerPriceTypeType result;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (TAPITriggerPriceTypeType) ((arg1)->TriggerPriceType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_AddOneIsValid_set(void * jarg1, char jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIYNFLAG arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->AddOneIsValid = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_AddOneIsValid_get(void * jarg1) {
  char jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIYNFLAG result;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (TAPIYNFLAG) ((arg1)->AddOneIsValid);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_OrderQty2_set(void * jarg1, unsigned int jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderQty2 = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPINewOrder_OrderQty2_get(void * jarg1) {
  unsigned int jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (TAPIUINT32) ((arg1)->OrderQty2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_HedgeFlag2_set(void * jarg1, char jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIHedgeFlagType arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (TAPIHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_HedgeFlag2_get(void * jarg1) {
  char jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIHedgeFlagType result;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (TAPIHedgeFlagType) ((arg1)->HedgeFlag2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_MarketLevel_set(void * jarg1, unsigned char jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIMarketLevelType arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (TAPIMarketLevelType)jarg2; 
  if (arg1) (arg1)->MarketLevel = arg2;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_TapAPINewOrder_MarketLevel_get(void * jarg1) {
  unsigned char jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIMarketLevelType result;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (TAPIMarketLevelType) ((arg1)->MarketLevel);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_OrderDeleteByDisConnFlag_set(void * jarg1, char jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIYNFLAG arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->OrderDeleteByDisConnFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_OrderDeleteByDisConnFlag_get(void * jarg1) {
  char jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  TAPIYNFLAG result;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (TAPIYNFLAG) ((arg1)->OrderDeleteByDisConnFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_UpperChannelNo_set(void * jarg1, char * jarg2) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperChannelNo, (const char *)arg2, 11-1);
      arg1->UpperChannelNo[11-1] = 0;
    } else {
      arg1->UpperChannelNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPINewOrder_UpperChannelNo_get(void * jarg1) {
  char * jresult ;
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  result = (char *) ((arg1)->UpperChannelNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPINewOrder() {
  void * jresult ;
  TapAPINewOrder *result = 0 ;
  
  result = (TapAPINewOrder *)new TapAPINewOrder();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPINewOrder(void * jarg1) {
  TapAPINewOrder *arg1 = (TapAPINewOrder *) 0 ;
  
  arg1 = (TapAPINewOrder *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityOrderTypeQryRsp_Commodity_set(void * jarg1, void * jarg2) {
  TapAPICommodityOrderTypeQryRsp *arg1 = (TapAPICommodityOrderTypeQryRsp *) 0 ;
  TapAPICommodity *arg2 = (TapAPICommodity *) 0 ;
  
  arg1 = (TapAPICommodityOrderTypeQryRsp *)jarg1; 
  arg2 = (TapAPICommodity *)jarg2; 
  if (arg1) (arg1)->Commodity = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPICommodityOrderTypeQryRsp_Commodity_get(void * jarg1) {
  void * jresult ;
  TapAPICommodityOrderTypeQryRsp *arg1 = (TapAPICommodityOrderTypeQryRsp *) 0 ;
  TapAPICommodity *result = 0 ;
  
  arg1 = (TapAPICommodityOrderTypeQryRsp *)jarg1; 
  result = (TapAPICommodity *)& ((arg1)->Commodity);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityOrderTypeQryRsp_Count_set(void * jarg1, int jarg2) {
  TapAPICommodityOrderTypeQryRsp *arg1 = (TapAPICommodityOrderTypeQryRsp *) 0 ;
  TAPIINT32 arg2 ;
  
  arg1 = (TapAPICommodityOrderTypeQryRsp *)jarg1; 
  arg2 = (TAPIINT32)jarg2; 
  if (arg1) (arg1)->Count = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TapAPICommodityOrderTypeQryRsp_Count_get(void * jarg1) {
  int jresult ;
  TapAPICommodityOrderTypeQryRsp *arg1 = (TapAPICommodityOrderTypeQryRsp *) 0 ;
  TAPIINT32 result;
  
  arg1 = (TapAPICommodityOrderTypeQryRsp *)jarg1; 
  result = (TAPIINT32) ((arg1)->Count);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityOrderTypeQryRsp_OrderTypes_set(void * jarg1, char * jarg2) {
  TapAPICommodityOrderTypeQryRsp *arg1 = (TapAPICommodityOrderTypeQryRsp *) 0 ;
  TAPIOrderTypeType *arg2 = (TAPIOrderTypeType *) 0 ;
  
  arg1 = (TapAPICommodityOrderTypeQryRsp *)jarg1; 
  arg2 = (TAPIOrderTypeType *)jarg2; 
  {
    delete [] arg1->OrderTypes;
    if (arg2) {
      arg1->OrderTypes = (TAPIOrderTypeType *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->OrderTypes, (const char *)arg2);
    } else {
      arg1->OrderTypes = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodityOrderTypeQryRsp_OrderTypes_get(void * jarg1) {
  char * jresult ;
  TapAPICommodityOrderTypeQryRsp *arg1 = (TapAPICommodityOrderTypeQryRsp *) 0 ;
  TAPIOrderTypeType *result = 0 ;
  
  arg1 = (TapAPICommodityOrderTypeQryRsp *)jarg1; 
  result = (TAPIOrderTypeType *) ((arg1)->OrderTypes);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPICommodityOrderTypeQryRsp() {
  void * jresult ;
  TapAPICommodityOrderTypeQryRsp *result = 0 ;
  
  result = (TapAPICommodityOrderTypeQryRsp *)new TapAPICommodityOrderTypeQryRsp();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPICommodityOrderTypeQryRsp(void * jarg1) {
  TapAPICommodityOrderTypeQryRsp *arg1 = (TapAPICommodityOrderTypeQryRsp *) 0 ;
  
  arg1 = (TapAPICommodityOrderTypeQryRsp *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityOrderTimeInForceQryRsp_Commodity_set(void * jarg1, void * jarg2) {
  TapAPICommodityOrderTimeInForceQryRsp *arg1 = (TapAPICommodityOrderTimeInForceQryRsp *) 0 ;
  TapAPICommodity *arg2 = (TapAPICommodity *) 0 ;
  
  arg1 = (TapAPICommodityOrderTimeInForceQryRsp *)jarg1; 
  arg2 = (TapAPICommodity *)jarg2; 
  if (arg1) (arg1)->Commodity = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPICommodityOrderTimeInForceQryRsp_Commodity_get(void * jarg1) {
  void * jresult ;
  TapAPICommodityOrderTimeInForceQryRsp *arg1 = (TapAPICommodityOrderTimeInForceQryRsp *) 0 ;
  TapAPICommodity *result = 0 ;
  
  arg1 = (TapAPICommodityOrderTimeInForceQryRsp *)jarg1; 
  result = (TapAPICommodity *)& ((arg1)->Commodity);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityOrderTimeInForceQryRsp_Count_set(void * jarg1, int jarg2) {
  TapAPICommodityOrderTimeInForceQryRsp *arg1 = (TapAPICommodityOrderTimeInForceQryRsp *) 0 ;
  TAPIINT32 arg2 ;
  
  arg1 = (TapAPICommodityOrderTimeInForceQryRsp *)jarg1; 
  arg2 = (TAPIINT32)jarg2; 
  if (arg1) (arg1)->Count = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TapAPICommodityOrderTimeInForceQryRsp_Count_get(void * jarg1) {
  int jresult ;
  TapAPICommodityOrderTimeInForceQryRsp *arg1 = (TapAPICommodityOrderTimeInForceQryRsp *) 0 ;
  TAPIINT32 result;
  
  arg1 = (TapAPICommodityOrderTimeInForceQryRsp *)jarg1; 
  result = (TAPIINT32) ((arg1)->Count);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityOrderTimeInForceQryRsp_OrderTimeInForces_set(void * jarg1, char * jarg2) {
  TapAPICommodityOrderTimeInForceQryRsp *arg1 = (TapAPICommodityOrderTimeInForceQryRsp *) 0 ;
  TAPITimeInForceType *arg2 = (TAPITimeInForceType *) 0 ;
  
  arg1 = (TapAPICommodityOrderTimeInForceQryRsp *)jarg1; 
  arg2 = (TAPITimeInForceType *)jarg2; 
  {
    delete [] arg1->OrderTimeInForces;
    if (arg2) {
      arg1->OrderTimeInForces = (TAPITimeInForceType *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->OrderTimeInForces, (const char *)arg2);
    } else {
      arg1->OrderTimeInForces = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodityOrderTimeInForceQryRsp_OrderTimeInForces_get(void * jarg1) {
  char * jresult ;
  TapAPICommodityOrderTimeInForceQryRsp *arg1 = (TapAPICommodityOrderTimeInForceQryRsp *) 0 ;
  TAPITimeInForceType *result = 0 ;
  
  arg1 = (TapAPICommodityOrderTimeInForceQryRsp *)jarg1; 
  result = (TAPITimeInForceType *) ((arg1)->OrderTimeInForces);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPICommodityOrderTimeInForceQryRsp() {
  void * jresult ;
  TapAPICommodityOrderTimeInForceQryRsp *result = 0 ;
  
  result = (TapAPICommodityOrderTimeInForceQryRsp *)new TapAPICommodityOrderTimeInForceQryRsp();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPICommodityOrderTimeInForceQryRsp(void * jarg1) {
  TapAPICommodityOrderTimeInForceQryRsp *arg1 = (TapAPICommodityOrderTimeInForceQryRsp *) 0 ;
  
  arg1 = (TapAPICommodityOrderTimeInForceQryRsp *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_AccountNo_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_AccountNo_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_ExchangeNo_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_CommodityType_set(void * jarg1, char jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPICommodityType arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_CommodityType_get(void * jarg1) {
  char jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPICommodityType result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_CommodityNo_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_CommodityNo_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_ContractNo_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_ContractNo_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_StrikePrice_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice, (const char *)arg2, 11-1);
      arg1->StrikePrice[11-1] = 0;
    } else {
      arg1->StrikePrice[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_StrikePrice_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->StrikePrice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_CallOrPutFlag_set(void * jarg1, char jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPICallOrPutFlagType arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_CallOrPutFlag_get(void * jarg1) {
  char jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPICallOrPutFlagType result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_ContractNo2_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo2, (const char *)arg2, 11-1);
      arg1->ContractNo2[11-1] = 0;
    } else {
      arg1->ContractNo2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_ContractNo2_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->ContractNo2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_StrikePrice2_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice2, (const char *)arg2, 11-1);
      arg1->StrikePrice2[11-1] = 0;
    } else {
      arg1->StrikePrice2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_StrikePrice2_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->StrikePrice2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_CallOrPutFlag2_set(void * jarg1, char jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPICallOrPutFlagType arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_CallOrPutFlag2_get(void * jarg1) {
  char jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPICallOrPutFlagType result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderType_set(void * jarg1, char jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIOrderTypeType arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIOrderTypeType)jarg2; 
  if (arg1) (arg1)->OrderType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderType_get(void * jarg1) {
  char jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIOrderTypeType result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIOrderTypeType) ((arg1)->OrderType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderSource_set(void * jarg1, char jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIOrderSourceType arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIOrderSourceType)jarg2; 
  if (arg1) (arg1)->OrderSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderSource_get(void * jarg1) {
  char jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIOrderSourceType result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIOrderSourceType) ((arg1)->OrderSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_TimeInForce_set(void * jarg1, char jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPITimeInForceType arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPITimeInForceType)jarg2; 
  if (arg1) (arg1)->TimeInForce = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_TimeInForce_get(void * jarg1) {
  char jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPITimeInForceType result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPITimeInForceType) ((arg1)->TimeInForce);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_ExpireTime_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExpireTime, (const char *)arg2, 20-1);
      arg1->ExpireTime[20-1] = 0;
    } else {
      arg1->ExpireTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_ExpireTime_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->ExpireTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_IsRiskOrder_set(void * jarg1, char jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIYNFLAG arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsRiskOrder = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_IsRiskOrder_get(void * jarg1) {
  char jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIYNFLAG result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIYNFLAG) ((arg1)->IsRiskOrder);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderSide_set(void * jarg1, char jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPISideType arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPISideType)jarg2; 
  if (arg1) (arg1)->OrderSide = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderSide_get(void * jarg1) {
  char jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPISideType result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPISideType) ((arg1)->OrderSide);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_PositionEffect_set(void * jarg1, char jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIPositionEffectType arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIPositionEffectType)jarg2; 
  if (arg1) (arg1)->PositionEffect = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_PositionEffect_get(void * jarg1) {
  char jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIPositionEffectType result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIPositionEffectType) ((arg1)->PositionEffect);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_PositionEffect2_set(void * jarg1, char jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIPositionEffectType arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIPositionEffectType)jarg2; 
  if (arg1) (arg1)->PositionEffect2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_PositionEffect2_get(void * jarg1) {
  char jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIPositionEffectType result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIPositionEffectType) ((arg1)->PositionEffect2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_InquiryNo_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InquiryNo, (const char *)arg2, 51-1);
      arg1->InquiryNo[51-1] = 0;
    } else {
      arg1->InquiryNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_InquiryNo_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->InquiryNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_HedgeFlag_set(void * jarg1, char jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIHedgeFlagType arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_HedgeFlag_get(void * jarg1) {
  char jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIHedgeFlagType result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderPrice_set(void * jarg1, double jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OrderPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderPrice_get(void * jarg1) {
  double jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->OrderPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderPrice2_set(void * jarg1, double jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OrderPrice2 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderPrice2_get(void * jarg1) {
  double jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->OrderPrice2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_StopPrice_set(void * jarg1, double jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->StopPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderInfo_StopPrice_get(void * jarg1) {
  double jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->StopPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderQty_set(void * jarg1, unsigned int jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderQty_get(void * jarg1) {
  unsigned int jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIUINT32) ((arg1)->OrderQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderMinQty_set(void * jarg1, unsigned int jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderMinQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderMinQty_get(void * jarg1) {
  unsigned int jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIUINT32) ((arg1)->OrderMinQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderCanceledQty_set(void * jarg1, unsigned int jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderCanceledQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderCanceledQty_get(void * jarg1) {
  unsigned int jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIUINT32) ((arg1)->OrderCanceledQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_MinClipSize_set(void * jarg1, unsigned int jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->MinClipSize = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfo_MinClipSize_get(void * jarg1) {
  unsigned int jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIUINT32) ((arg1)->MinClipSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_MaxClipSize_set(void * jarg1, unsigned int jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->MaxClipSize = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfo_MaxClipSize_get(void * jarg1) {
  unsigned int jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIUINT32) ((arg1)->MaxClipSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_LicenseNo_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LicenseNo, (const char *)arg2, 51-1);
      arg1->LicenseNo[51-1] = 0;
    } else {
      arg1->LicenseNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_LicenseNo_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->LicenseNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_RefInt_set(void * jarg1, int jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIINT32 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIINT32)jarg2; 
  if (arg1) (arg1)->RefInt = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TapAPIOrderInfo_RefInt_get(void * jarg1) {
  int jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIINT32 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIINT32) ((arg1)->RefInt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_RefString_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RefString, (const char *)arg2, 51-1);
      arg1->RefString[51-1] = 0;
    } else {
      arg1->RefString[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_RefString_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->RefString);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_ParentAccountNo_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParentAccountNo, (const char *)arg2, 21-1);
      arg1->ParentAccountNo[21-1] = 0;
    } else {
      arg1->ParentAccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_ParentAccountNo_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->ParentAccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_ServerFlag_set(void * jarg1, char jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPICHAR arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPICHAR)jarg2; 
  if (arg1) (arg1)->ServerFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_ServerFlag_get(void * jarg1) {
  char jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPICHAR result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPICHAR) ((arg1)->ServerFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderNo_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderNo, (const char *)arg2, 21-1);
      arg1->OrderNo[21-1] = 0;
    } else {
      arg1->OrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderNo_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->OrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_ClientOrderNo_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientOrderNo, (const char *)arg2, 51-1);
      arg1->ClientOrderNo[51-1] = 0;
    } else {
      arg1->ClientOrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_ClientOrderNo_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->ClientOrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderLocalNo_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalNo, (const char *)arg2, 21-1);
      arg1->OrderLocalNo[21-1] = 0;
    } else {
      arg1->OrderLocalNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderLocalNo_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->OrderLocalNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderSystemNo_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSystemNo, (const char *)arg2, 51-1);
      arg1->OrderSystemNo[51-1] = 0;
    } else {
      arg1->OrderSystemNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderSystemNo_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->OrderSystemNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderExchangeSystemNo_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderExchangeSystemNo, (const char *)arg2, 51-1);
      arg1->OrderExchangeSystemNo[51-1] = 0;
    } else {
      arg1->OrderExchangeSystemNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderExchangeSystemNo_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->OrderExchangeSystemNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderParentNo_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderParentNo, (const char *)arg2, 21-1);
      arg1->OrderParentNo[21-1] = 0;
    } else {
      arg1->OrderParentNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderParentNo_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->OrderParentNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderParentSystemNo_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderParentSystemNo, (const char *)arg2, 51-1);
      arg1->OrderParentSystemNo[51-1] = 0;
    } else {
      arg1->OrderParentSystemNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderParentSystemNo_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->OrderParentSystemNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_TradeNo_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeNo, (const char *)arg2, 11-1);
      arg1->TradeNo[11-1] = 0;
    } else {
      arg1->TradeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_TradeNo_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->TradeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_UpperNo_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperNo, (const char *)arg2, 11-1);
      arg1->UpperNo[11-1] = 0;
    } else {
      arg1->UpperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_UpperNo_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->UpperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_UpperChannelNo_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperChannelNo, (const char *)arg2, 11-1);
      arg1->UpperChannelNo[11-1] = 0;
    } else {
      arg1->UpperChannelNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_UpperChannelNo_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->UpperChannelNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_UpperSettleNo_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperSettleNo, (const char *)arg2, 21-1);
      arg1->UpperSettleNo[21-1] = 0;
    } else {
      arg1->UpperSettleNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_UpperSettleNo_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->UpperSettleNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_UpperUserNo_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperUserNo, (const char *)arg2, 21-1);
      arg1->UpperUserNo[21-1] = 0;
    } else {
      arg1->UpperUserNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_UpperUserNo_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->UpperUserNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderInsertUserNo_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderInsertUserNo, (const char *)arg2, 21-1);
      arg1->OrderInsertUserNo[21-1] = 0;
    } else {
      arg1->OrderInsertUserNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderInsertUserNo_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->OrderInsertUserNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderInsertTime_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderInsertTime, (const char *)arg2, 20-1);
      arg1->OrderInsertTime[20-1] = 0;
    } else {
      arg1->OrderInsertTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderInsertTime_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->OrderInsertTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderCommandUserNo_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderCommandUserNo, (const char *)arg2, 21-1);
      arg1->OrderCommandUserNo[21-1] = 0;
    } else {
      arg1->OrderCommandUserNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderCommandUserNo_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->OrderCommandUserNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderUpdateUserNo_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderUpdateUserNo, (const char *)arg2, 21-1);
      arg1->OrderUpdateUserNo[21-1] = 0;
    } else {
      arg1->OrderUpdateUserNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderUpdateUserNo_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->OrderUpdateUserNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderUpdateTime_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderUpdateTime, (const char *)arg2, 20-1);
      arg1->OrderUpdateTime[20-1] = 0;
    } else {
      arg1->OrderUpdateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderUpdateTime_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->OrderUpdateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderState_set(void * jarg1, char jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIOrderStateType arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIOrderStateType)jarg2; 
  if (arg1) (arg1)->OrderState = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderState_get(void * jarg1) {
  char jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIOrderStateType result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIOrderStateType) ((arg1)->OrderState);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderMatchPrice_set(void * jarg1, double jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OrderMatchPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderMatchPrice_get(void * jarg1) {
  double jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->OrderMatchPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderMatchPrice2_set(void * jarg1, double jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OrderMatchPrice2 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderMatchPrice2_get(void * jarg1) {
  double jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->OrderMatchPrice2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderMatchQty_set(void * jarg1, unsigned int jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderMatchQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderMatchQty_get(void * jarg1) {
  unsigned int jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIUINT32) ((arg1)->OrderMatchQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderMatchQty2_set(void * jarg1, unsigned int jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderMatchQty2 = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderMatchQty2_get(void * jarg1) {
  unsigned int jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIUINT32) ((arg1)->OrderMatchQty2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_ErrorCode_set(void * jarg1, unsigned int jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->ErrorCode = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfo_ErrorCode_get(void * jarg1) {
  unsigned int jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIUINT32) ((arg1)->ErrorCode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_ErrorText_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorText, (const char *)arg2, 51-1);
      arg1->ErrorText[51-1] = 0;
    } else {
      arg1->ErrorText[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_ErrorText_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->ErrorText);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_IsBackInput_set(void * jarg1, char jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIYNFLAG arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsBackInput = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_IsBackInput_get(void * jarg1) {
  char jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIYNFLAG result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIYNFLAG) ((arg1)->IsBackInput);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_IsDeleted_set(void * jarg1, char jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIYNFLAG arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsDeleted = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_IsDeleted_get(void * jarg1) {
  char jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIYNFLAG result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIYNFLAG) ((arg1)->IsDeleted);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_IsAddOne_set(void * jarg1, char jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIYNFLAG arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsAddOne = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_IsAddOne_get(void * jarg1) {
  char jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIYNFLAG result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIYNFLAG) ((arg1)->IsAddOne);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderStreamID_set(void * jarg1, unsigned int jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderStreamID = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderStreamID_get(void * jarg1) {
  unsigned int jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIUINT32) ((arg1)->OrderStreamID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_UpperStreamID_set(void * jarg1, unsigned int jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->UpperStreamID = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfo_UpperStreamID_get(void * jarg1) {
  unsigned int jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIUINT32) ((arg1)->UpperStreamID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_ContractSize_set(void * jarg1, double jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->ContractSize = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderInfo_ContractSize_get(void * jarg1) {
  double jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->ContractSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_ContractSize2_set(void * jarg1, double jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->ContractSize2 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderInfo_ContractSize2_get(void * jarg1) {
  double jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->ContractSize2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_CommodityCurrencyGroup_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityCurrencyGroup, (const char *)arg2, 11-1);
      arg1->CommodityCurrencyGroup[11-1] = 0;
    } else {
      arg1->CommodityCurrencyGroup[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_CommodityCurrencyGroup_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityCurrencyGroup);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_CommodityCurrency_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityCurrency, (const char *)arg2, 11-1);
      arg1->CommodityCurrency[11-1] = 0;
    } else {
      arg1->CommodityCurrency[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_CommodityCurrency_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityCurrency);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_FeeMode_set(void * jarg1, char jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPICalculateModeType arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPICalculateModeType)jarg2; 
  if (arg1) (arg1)->FeeMode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_FeeMode_get(void * jarg1) {
  char jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPICalculateModeType result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPICalculateModeType) ((arg1)->FeeMode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_FeeParam_set(void * jarg1, double jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->FeeParam = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderInfo_FeeParam_get(void * jarg1) {
  double jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->FeeParam);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_FeeCurrencyGroup_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FeeCurrencyGroup, (const char *)arg2, 11-1);
      arg1->FeeCurrencyGroup[11-1] = 0;
    } else {
      arg1->FeeCurrencyGroup[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_FeeCurrencyGroup_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->FeeCurrencyGroup);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_FeeCurrency_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FeeCurrency, (const char *)arg2, 11-1);
      arg1->FeeCurrency[11-1] = 0;
    } else {
      arg1->FeeCurrency[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_FeeCurrency_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->FeeCurrency);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_FeeMode2_set(void * jarg1, char jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPICalculateModeType arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPICalculateModeType)jarg2; 
  if (arg1) (arg1)->FeeMode2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_FeeMode2_get(void * jarg1) {
  char jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPICalculateModeType result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPICalculateModeType) ((arg1)->FeeMode2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_FeeParam2_set(void * jarg1, double jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->FeeParam2 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderInfo_FeeParam2_get(void * jarg1) {
  double jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->FeeParam2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_FeeCurrencyGroup2_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FeeCurrencyGroup2, (const char *)arg2, 11-1);
      arg1->FeeCurrencyGroup2[11-1] = 0;
    } else {
      arg1->FeeCurrencyGroup2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_FeeCurrencyGroup2_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->FeeCurrencyGroup2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_FeeCurrency2_set(void * jarg1, char * jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FeeCurrency2, (const char *)arg2, 11-1);
      arg1->FeeCurrency2[11-1] = 0;
    } else {
      arg1->FeeCurrency2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_FeeCurrency2_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->FeeCurrency2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_MarginMode_set(void * jarg1, char jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPICalculateModeType arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPICalculateModeType)jarg2; 
  if (arg1) (arg1)->MarginMode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_MarginMode_get(void * jarg1) {
  char jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPICalculateModeType result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPICalculateModeType) ((arg1)->MarginMode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_MarginParam_set(void * jarg1, double jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->MarginParam = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderInfo_MarginParam_get(void * jarg1) {
  double jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->MarginParam);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_MarginMode2_set(void * jarg1, char jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPICalculateModeType arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPICalculateModeType)jarg2; 
  if (arg1) (arg1)->MarginMode2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_MarginMode2_get(void * jarg1) {
  char jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPICalculateModeType result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPICalculateModeType) ((arg1)->MarginMode2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_MarginParam2_set(void * jarg1, double jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->MarginParam2 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderInfo_MarginParam2_get(void * jarg1) {
  double jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->MarginParam2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_PreSettlePrice_set(void * jarg1, double jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PreSettlePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderInfo_PreSettlePrice_get(void * jarg1) {
  double jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->PreSettlePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_PreSettlePrice2_set(void * jarg1, double jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PreSettlePrice2 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderInfo_PreSettlePrice2_get(void * jarg1) {
  double jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->PreSettlePrice2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OpenVol_set(void * jarg1, unsigned int jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OpenVol = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfo_OpenVol_get(void * jarg1) {
  unsigned int jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIUINT32) ((arg1)->OpenVol);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_CoverVol_set(void * jarg1, unsigned int jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->CoverVol = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfo_CoverVol_get(void * jarg1) {
  unsigned int jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIUINT32) ((arg1)->CoverVol);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OpenVol2_set(void * jarg1, unsigned int jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OpenVol2 = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfo_OpenVol2_get(void * jarg1) {
  unsigned int jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIUINT32) ((arg1)->OpenVol2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_CoverVol2_set(void * jarg1, unsigned int jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->CoverVol2 = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfo_CoverVol2_get(void * jarg1) {
  unsigned int jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIUINT32) ((arg1)->CoverVol2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_FeeValue_set(void * jarg1, double jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->FeeValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderInfo_FeeValue_get(void * jarg1) {
  double jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->FeeValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_MarginValue_set(void * jarg1, double jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->MarginValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderInfo_MarginValue_get(void * jarg1) {
  double jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->MarginValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_TacticsType_set(void * jarg1, char jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPITacticsTypeType arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPITacticsTypeType)jarg2; 
  if (arg1) (arg1)->TacticsType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_TacticsType_get(void * jarg1) {
  char jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPITacticsTypeType result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPITacticsTypeType) ((arg1)->TacticsType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_TriggerCondition_set(void * jarg1, char jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPITriggerConditionType arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPITriggerConditionType)jarg2; 
  if (arg1) (arg1)->TriggerCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_TriggerCondition_get(void * jarg1) {
  char jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPITriggerConditionType result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPITriggerConditionType) ((arg1)->TriggerCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_TriggerPriceType_set(void * jarg1, char jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPITriggerPriceTypeType arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPITriggerPriceTypeType)jarg2; 
  if (arg1) (arg1)->TriggerPriceType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_TriggerPriceType_get(void * jarg1) {
  char jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPITriggerPriceTypeType result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPITriggerPriceTypeType) ((arg1)->TriggerPriceType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_AddOneIsValid_set(void * jarg1, char jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIYNFLAG arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->AddOneIsValid = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_AddOneIsValid_get(void * jarg1) {
  char jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIYNFLAG result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIYNFLAG) ((arg1)->AddOneIsValid);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderQty2_set(void * jarg1, unsigned int jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderQty2 = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderQty2_get(void * jarg1) {
  unsigned int jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIUINT32) ((arg1)->OrderQty2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_HedgeFlag2_set(void * jarg1, char jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIHedgeFlagType arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_HedgeFlag2_get(void * jarg1) {
  char jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIHedgeFlagType result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIHedgeFlagType) ((arg1)->HedgeFlag2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_MarketLevel_set(void * jarg1, unsigned char jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIMarketLevelType arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIMarketLevelType)jarg2; 
  if (arg1) (arg1)->MarketLevel = arg2;
}


SWIGEXPORT unsigned char SWIGSTDCALL CSharp_TapAPIOrderInfo_MarketLevel_get(void * jarg1) {
  unsigned char jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIMarketLevelType result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIMarketLevelType) ((arg1)->MarketLevel);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderDeleteByDisConnFlag_set(void * jarg1, char jarg2) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIYNFLAG arg2 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  arg2 = (TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->OrderDeleteByDisConnFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderDeleteByDisConnFlag_get(void * jarg1) {
  char jresult ;
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  TAPIYNFLAG result;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  result = (TAPIYNFLAG) ((arg1)->OrderDeleteByDisConnFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIOrderInfo() {
  void * jresult ;
  TapAPIOrderInfo *result = 0 ;
  
  result = (TapAPIOrderInfo *)new TapAPIOrderInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIOrderInfo(void * jarg1) {
  TapAPIOrderInfo *arg1 = (TapAPIOrderInfo *) 0 ;
  
  arg1 = (TapAPIOrderInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfoNotice_SessionID_set(void * jarg1, unsigned int jarg2) {
  TapAPIOrderInfoNotice *arg1 = (TapAPIOrderInfoNotice *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPIOrderInfoNotice *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfoNotice_SessionID_get(void * jarg1) {
  unsigned int jresult ;
  TapAPIOrderInfoNotice *arg1 = (TapAPIOrderInfoNotice *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPIOrderInfoNotice *)jarg1; 
  result = (TAPIUINT32) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfoNotice_ErrorCode_set(void * jarg1, unsigned int jarg2) {
  TapAPIOrderInfoNotice *arg1 = (TapAPIOrderInfoNotice *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPIOrderInfoNotice *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->ErrorCode = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfoNotice_ErrorCode_get(void * jarg1) {
  unsigned int jresult ;
  TapAPIOrderInfoNotice *arg1 = (TapAPIOrderInfoNotice *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPIOrderInfoNotice *)jarg1; 
  result = (TAPIUINT32) ((arg1)->ErrorCode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfoNotice_OrderInfo_set(void * jarg1, void * jarg2) {
  TapAPIOrderInfoNotice *arg1 = (TapAPIOrderInfoNotice *) 0 ;
  TapAPIOrderInfo *arg2 = (TapAPIOrderInfo *) 0 ;
  
  arg1 = (TapAPIOrderInfoNotice *)jarg1; 
  arg2 = (TapAPIOrderInfo *)jarg2; 
  if (arg1) (arg1)->OrderInfo = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPIOrderInfoNotice_OrderInfo_get(void * jarg1) {
  void * jresult ;
  TapAPIOrderInfoNotice *arg1 = (TapAPIOrderInfoNotice *) 0 ;
  TapAPIOrderInfo *result = 0 ;
  
  arg1 = (TapAPIOrderInfoNotice *)jarg1; 
  result = (TapAPIOrderInfo *) ((arg1)->OrderInfo);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIOrderInfoNotice() {
  void * jresult ;
  TapAPIOrderInfoNotice *result = 0 ;
  
  result = (TapAPIOrderInfoNotice *)new TapAPIOrderInfoNotice();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIOrderInfoNotice(void * jarg1) {
  TapAPIOrderInfoNotice *arg1 = (TapAPIOrderInfoNotice *) 0 ;
  
  arg1 = (TapAPIOrderInfoNotice *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderActionRsp_ActionType_set(void * jarg1, char jarg2) {
  TapAPIOrderActionRsp *arg1 = (TapAPIOrderActionRsp *) 0 ;
  TAPIORDERACT arg2 ;
  
  arg1 = (TapAPIOrderActionRsp *)jarg1; 
  arg2 = (TAPIORDERACT)jarg2; 
  if (arg1) (arg1)->ActionType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderActionRsp_ActionType_get(void * jarg1) {
  char jresult ;
  TapAPIOrderActionRsp *arg1 = (TapAPIOrderActionRsp *) 0 ;
  TAPIORDERACT result;
  
  arg1 = (TapAPIOrderActionRsp *)jarg1; 
  result = (TAPIORDERACT) ((arg1)->ActionType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderActionRsp_OrderInfo_set(void * jarg1, void * jarg2) {
  TapAPIOrderActionRsp *arg1 = (TapAPIOrderActionRsp *) 0 ;
  TapAPIOrderInfo *arg2 = (TapAPIOrderInfo *) 0 ;
  
  arg1 = (TapAPIOrderActionRsp *)jarg1; 
  arg2 = (TapAPIOrderInfo *)jarg2; 
  if (arg1) (arg1)->OrderInfo = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPIOrderActionRsp_OrderInfo_get(void * jarg1) {
  void * jresult ;
  TapAPIOrderActionRsp *arg1 = (TapAPIOrderActionRsp *) 0 ;
  TapAPIOrderInfo *result = 0 ;
  
  arg1 = (TapAPIOrderActionRsp *)jarg1; 
  result = (TapAPIOrderInfo *) ((arg1)->OrderInfo);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIOrderActionRsp() {
  void * jresult ;
  TapAPIOrderActionRsp *result = 0 ;
  
  result = (TapAPIOrderActionRsp *)new TapAPIOrderActionRsp();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIOrderActionRsp(void * jarg1) {
  TapAPIOrderActionRsp *arg1 = (TapAPIOrderActionRsp *) 0 ;
  
  arg1 = (TapAPIOrderActionRsp *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAmendOrder_ReqData_set(void * jarg1, void * jarg2) {
  TapAPIAmendOrder *arg1 = (TapAPIAmendOrder *) 0 ;
  TapAPINewOrder *arg2 = (TapAPINewOrder *) 0 ;
  
  arg1 = (TapAPIAmendOrder *)jarg1; 
  arg2 = (TapAPINewOrder *)jarg2; 
  if (arg1) (arg1)->ReqData = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPIAmendOrder_ReqData_get(void * jarg1) {
  void * jresult ;
  TapAPIAmendOrder *arg1 = (TapAPIAmendOrder *) 0 ;
  TapAPINewOrder *result = 0 ;
  
  arg1 = (TapAPIAmendOrder *)jarg1; 
  result = (TapAPINewOrder *)& ((arg1)->ReqData);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAmendOrder_ServerFlag_set(void * jarg1, char jarg2) {
  TapAPIAmendOrder *arg1 = (TapAPIAmendOrder *) 0 ;
  TAPICHAR arg2 ;
  
  arg1 = (TapAPIAmendOrder *)jarg1; 
  arg2 = (TAPICHAR)jarg2; 
  if (arg1) (arg1)->ServerFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIAmendOrder_ServerFlag_get(void * jarg1) {
  char jresult ;
  TapAPIAmendOrder *arg1 = (TapAPIAmendOrder *) 0 ;
  TAPICHAR result;
  
  arg1 = (TapAPIAmendOrder *)jarg1; 
  result = (TAPICHAR) ((arg1)->ServerFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAmendOrder_OrderNo_set(void * jarg1, char * jarg2) {
  TapAPIAmendOrder *arg1 = (TapAPIAmendOrder *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIAmendOrder *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderNo, (const char *)arg2, 21-1);
      arg1->OrderNo[21-1] = 0;
    } else {
      arg1->OrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAmendOrder_OrderNo_get(void * jarg1) {
  char * jresult ;
  TapAPIAmendOrder *arg1 = (TapAPIAmendOrder *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIAmendOrder *)jarg1; 
  result = (char *) ((arg1)->OrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIAmendOrder() {
  void * jresult ;
  TapAPIAmendOrder *result = 0 ;
  
  result = (TapAPIAmendOrder *)new TapAPIAmendOrder();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIAmendOrder(void * jarg1) {
  TapAPIAmendOrder *arg1 = (TapAPIAmendOrder *) 0 ;
  
  arg1 = (TapAPIAmendOrder *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderCancelReq_RefInt_set(void * jarg1, int jarg2) {
  TapAPIOrderCancelReq *arg1 = (TapAPIOrderCancelReq *) 0 ;
  TAPIINT32 arg2 ;
  
  arg1 = (TapAPIOrderCancelReq *)jarg1; 
  arg2 = (TAPIINT32)jarg2; 
  if (arg1) (arg1)->RefInt = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TapAPIOrderCancelReq_RefInt_get(void * jarg1) {
  int jresult ;
  TapAPIOrderCancelReq *arg1 = (TapAPIOrderCancelReq *) 0 ;
  TAPIINT32 result;
  
  arg1 = (TapAPIOrderCancelReq *)jarg1; 
  result = (TAPIINT32) ((arg1)->RefInt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderCancelReq_RefString_set(void * jarg1, char * jarg2) {
  TapAPIOrderCancelReq *arg1 = (TapAPIOrderCancelReq *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderCancelReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RefString, (const char *)arg2, 51-1);
      arg1->RefString[51-1] = 0;
    } else {
      arg1->RefString[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderCancelReq_RefString_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderCancelReq *arg1 = (TapAPIOrderCancelReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderCancelReq *)jarg1; 
  result = (char *) ((arg1)->RefString);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderCancelReq_ServerFlag_set(void * jarg1, char jarg2) {
  TapAPIOrderCancelReq *arg1 = (TapAPIOrderCancelReq *) 0 ;
  TAPICHAR arg2 ;
  
  arg1 = (TapAPIOrderCancelReq *)jarg1; 
  arg2 = (TAPICHAR)jarg2; 
  if (arg1) (arg1)->ServerFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderCancelReq_ServerFlag_get(void * jarg1) {
  char jresult ;
  TapAPIOrderCancelReq *arg1 = (TapAPIOrderCancelReq *) 0 ;
  TAPICHAR result;
  
  arg1 = (TapAPIOrderCancelReq *)jarg1; 
  result = (TAPICHAR) ((arg1)->ServerFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderCancelReq_OrderNo_set(void * jarg1, char * jarg2) {
  TapAPIOrderCancelReq *arg1 = (TapAPIOrderCancelReq *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderCancelReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderNo, (const char *)arg2, 21-1);
      arg1->OrderNo[21-1] = 0;
    } else {
      arg1->OrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderCancelReq_OrderNo_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderCancelReq *arg1 = (TapAPIOrderCancelReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderCancelReq *)jarg1; 
  result = (char *) ((arg1)->OrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIOrderCancelReq() {
  void * jresult ;
  TapAPIOrderCancelReq *result = 0 ;
  
  result = (TapAPIOrderCancelReq *)new TapAPIOrderCancelReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIOrderCancelReq(void * jarg1) {
  TapAPIOrderCancelReq *arg1 = (TapAPIOrderCancelReq *) 0 ;
  
  arg1 = (TapAPIOrderCancelReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderQryReq_OrderQryType_set(void * jarg1, char jarg2) {
  TapAPIOrderQryReq *arg1 = (TapAPIOrderQryReq *) 0 ;
  TAPIOrderQryTypeType arg2 ;
  
  arg1 = (TapAPIOrderQryReq *)jarg1; 
  arg2 = (TAPIOrderQryTypeType)jarg2; 
  if (arg1) (arg1)->OrderQryType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderQryReq_OrderQryType_get(void * jarg1) {
  char jresult ;
  TapAPIOrderQryReq *arg1 = (TapAPIOrderQryReq *) 0 ;
  TAPIOrderQryTypeType result;
  
  arg1 = (TapAPIOrderQryReq *)jarg1; 
  result = (TAPIOrderQryTypeType) ((arg1)->OrderQryType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIOrderQryReq() {
  void * jresult ;
  TapAPIOrderQryReq *result = 0 ;
  
  result = (TapAPIOrderQryReq *)new TapAPIOrderQryReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIOrderQryReq(void * jarg1) {
  TapAPIOrderQryReq *arg1 = (TapAPIOrderQryReq *) 0 ;
  
  arg1 = (TapAPIOrderQryReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderProcessQryReq_ServerFlag_set(void * jarg1, char jarg2) {
  TapAPIOrderProcessQryReq *arg1 = (TapAPIOrderProcessQryReq *) 0 ;
  TAPICHAR arg2 ;
  
  arg1 = (TapAPIOrderProcessQryReq *)jarg1; 
  arg2 = (TAPICHAR)jarg2; 
  if (arg1) (arg1)->ServerFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderProcessQryReq_ServerFlag_get(void * jarg1) {
  char jresult ;
  TapAPIOrderProcessQryReq *arg1 = (TapAPIOrderProcessQryReq *) 0 ;
  TAPICHAR result;
  
  arg1 = (TapAPIOrderProcessQryReq *)jarg1; 
  result = (TAPICHAR) ((arg1)->ServerFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderProcessQryReq_OrderNo_set(void * jarg1, char * jarg2) {
  TapAPIOrderProcessQryReq *arg1 = (TapAPIOrderProcessQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIOrderProcessQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderNo, (const char *)arg2, 21-1);
      arg1->OrderNo[21-1] = 0;
    } else {
      arg1->OrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderProcessQryReq_OrderNo_get(void * jarg1) {
  char * jresult ;
  TapAPIOrderProcessQryReq *arg1 = (TapAPIOrderProcessQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIOrderProcessQryReq *)jarg1; 
  result = (char *) ((arg1)->OrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIOrderProcessQryReq() {
  void * jresult ;
  TapAPIOrderProcessQryReq *result = 0 ;
  
  result = (TapAPIOrderProcessQryReq *)new TapAPIOrderProcessQryReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIOrderProcessQryReq(void * jarg1) {
  TapAPIOrderProcessQryReq *arg1 = (TapAPIOrderProcessQryReq *) 0 ;
  
  arg1 = (TapAPIOrderProcessQryReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillQryReq_StreamID_set(void * jarg1, unsigned int jarg2) {
  TapAPIFillQryReq *arg1 = (TapAPIFillQryReq *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPIFillQryReq *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->StreamID = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIFillQryReq_StreamID_get(void * jarg1) {
  unsigned int jresult ;
  TapAPIFillQryReq *arg1 = (TapAPIFillQryReq *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPIFillQryReq *)jarg1; 
  result = (TAPIUINT32) ((arg1)->StreamID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIFillQryReq() {
  void * jresult ;
  TapAPIFillQryReq *result = 0 ;
  
  result = (TapAPIFillQryReq *)new TapAPIFillQryReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIFillQryReq(void * jarg1) {
  TapAPIFillQryReq *arg1 = (TapAPIFillQryReq *) 0 ;
  
  arg1 = (TapAPIFillQryReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_AccountNo_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_AccountNo_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_ParentAccountNo_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParentAccountNo, (const char *)arg2, 21-1);
      arg1->ParentAccountNo[21-1] = 0;
    } else {
      arg1->ParentAccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_ParentAccountNo_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->ParentAccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_ExchangeNo_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_CommodityType_set(void * jarg1, char jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPICommodityType arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_CommodityType_get(void * jarg1) {
  char jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPICommodityType result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_CommodityNo_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_CommodityNo_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_ContractNo_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_ContractNo_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_StrikePrice_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice, (const char *)arg2, 11-1);
      arg1->StrikePrice[11-1] = 0;
    } else {
      arg1->StrikePrice[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_StrikePrice_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->StrikePrice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_CallOrPutFlag_set(void * jarg1, char jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPICallOrPutFlagType arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_CallOrPutFlag_get(void * jarg1) {
  char jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPICallOrPutFlagType result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_ExchangeNoRef_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNoRef, (const char *)arg2, 11-1);
      arg1->ExchangeNoRef[11-1] = 0;
    } else {
      arg1->ExchangeNoRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_ExchangeNoRef_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeNoRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_CommodityTypeRef_set(void * jarg1, char jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPICommodityType arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityTypeRef = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_CommodityTypeRef_get(void * jarg1) {
  char jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPICommodityType result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPICommodityType) ((arg1)->CommodityTypeRef);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_CommodityNoRef_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNoRef, (const char *)arg2, 11-1);
      arg1->CommodityNoRef[11-1] = 0;
    } else {
      arg1->CommodityNoRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_CommodityNoRef_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityNoRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_ContractNoRef_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNoRef, (const char *)arg2, 11-1);
      arg1->ContractNoRef[11-1] = 0;
    } else {
      arg1->ContractNoRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_ContractNoRef_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->ContractNoRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_StrikePriceRef_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePriceRef, (const char *)arg2, 11-1);
      arg1->StrikePriceRef[11-1] = 0;
    } else {
      arg1->StrikePriceRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_StrikePriceRef_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->StrikePriceRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_CallOrPutFlagRef_set(void * jarg1, char jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPICallOrPutFlagType arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlagRef = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_CallOrPutFlagRef_get(void * jarg1) {
  char jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPICallOrPutFlagType result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPICallOrPutFlagType) ((arg1)->CallOrPutFlagRef);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_OrderExchangeNo_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderExchangeNo, (const char *)arg2, 11-1);
      arg1->OrderExchangeNo[11-1] = 0;
    } else {
      arg1->OrderExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_OrderExchangeNo_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->OrderExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_OrderCommodityType_set(void * jarg1, char jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPICommodityType arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPICommodityType)jarg2; 
  if (arg1) (arg1)->OrderCommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_OrderCommodityType_get(void * jarg1) {
  char jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPICommodityType result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPICommodityType) ((arg1)->OrderCommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_OrderCommodityNo_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderCommodityNo, (const char *)arg2, 11-1);
      arg1->OrderCommodityNo[11-1] = 0;
    } else {
      arg1->OrderCommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_OrderCommodityNo_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->OrderCommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_OrderType_set(void * jarg1, char jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIOrderTypeType arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPIOrderTypeType)jarg2; 
  if (arg1) (arg1)->OrderType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_OrderType_get(void * jarg1) {
  char jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIOrderTypeType result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPIOrderTypeType) ((arg1)->OrderType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_MatchSource_set(void * jarg1, char jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIMatchSourceType arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPIMatchSourceType)jarg2; 
  if (arg1) (arg1)->MatchSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_MatchSource_get(void * jarg1) {
  char jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIMatchSourceType result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPIMatchSourceType) ((arg1)->MatchSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_TimeInForce_set(void * jarg1, char jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPITimeInForceType arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPITimeInForceType)jarg2; 
  if (arg1) (arg1)->TimeInForce = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_TimeInForce_get(void * jarg1) {
  char jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPITimeInForceType result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPITimeInForceType) ((arg1)->TimeInForce);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_ExpireTime_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExpireTime, (const char *)arg2, 20-1);
      arg1->ExpireTime[20-1] = 0;
    } else {
      arg1->ExpireTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_ExpireTime_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->ExpireTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_IsRiskOrder_set(void * jarg1, char jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIYNFLAG arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsRiskOrder = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_IsRiskOrder_get(void * jarg1) {
  char jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIYNFLAG result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPIYNFLAG) ((arg1)->IsRiskOrder);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_MatchSide_set(void * jarg1, char jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPISideType arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPISideType)jarg2; 
  if (arg1) (arg1)->MatchSide = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_MatchSide_get(void * jarg1) {
  char jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPISideType result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPISideType) ((arg1)->MatchSide);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_PositionEffect_set(void * jarg1, char jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIPositionEffectType arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPIPositionEffectType)jarg2; 
  if (arg1) (arg1)->PositionEffect = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_PositionEffect_get(void * jarg1) {
  char jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIPositionEffectType result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPIPositionEffectType) ((arg1)->PositionEffect);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_PositionEffectRef_set(void * jarg1, char jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIPositionEffectType arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPIPositionEffectType)jarg2; 
  if (arg1) (arg1)->PositionEffectRef = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_PositionEffectRef_get(void * jarg1) {
  char jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIPositionEffectType result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPIPositionEffectType) ((arg1)->PositionEffectRef);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_HedgeFlag_set(void * jarg1, char jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIHedgeFlagType arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPIHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_HedgeFlag_get(void * jarg1) {
  char jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIHedgeFlagType result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPIHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_ServerFlag_set(void * jarg1, char jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPICHAR arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPICHAR)jarg2; 
  if (arg1) (arg1)->ServerFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_ServerFlag_get(void * jarg1) {
  char jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPICHAR result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPICHAR) ((arg1)->ServerFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_OrderNo_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderNo, (const char *)arg2, 21-1);
      arg1->OrderNo[21-1] = 0;
    } else {
      arg1->OrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_OrderNo_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->OrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_OrderLocalNo_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalNo, (const char *)arg2, 21-1);
      arg1->OrderLocalNo[21-1] = 0;
    } else {
      arg1->OrderLocalNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_OrderLocalNo_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->OrderLocalNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_MatchNo_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MatchNo, (const char *)arg2, 21-1);
      arg1->MatchNo[21-1] = 0;
    } else {
      arg1->MatchNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_MatchNo_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->MatchNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_ExchangeMatchNo_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeMatchNo, (const char *)arg2, 71-1);
      arg1->ExchangeMatchNo[71-1] = 0;
    } else {
      arg1->ExchangeMatchNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_ExchangeMatchNo_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeMatchNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_MatchDateTime_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MatchDateTime, (const char *)arg2, 20-1);
      arg1->MatchDateTime[20-1] = 0;
    } else {
      arg1->MatchDateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_MatchDateTime_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->MatchDateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_UpperMatchDateTime_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperMatchDateTime, (const char *)arg2, 20-1);
      arg1->UpperMatchDateTime[20-1] = 0;
    } else {
      arg1->UpperMatchDateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_UpperMatchDateTime_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->UpperMatchDateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_UpperNo_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperNo, (const char *)arg2, 11-1);
      arg1->UpperNo[11-1] = 0;
    } else {
      arg1->UpperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_UpperNo_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->UpperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_UpperChannelNo_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperChannelNo, (const char *)arg2, 11-1);
      arg1->UpperChannelNo[11-1] = 0;
    } else {
      arg1->UpperChannelNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_UpperChannelNo_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->UpperChannelNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_UpperSettleNo_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperSettleNo, (const char *)arg2, 21-1);
      arg1->UpperSettleNo[21-1] = 0;
    } else {
      arg1->UpperSettleNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_UpperSettleNo_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->UpperSettleNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_UpperUserNo_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperUserNo, (const char *)arg2, 21-1);
      arg1->UpperUserNo[21-1] = 0;
    } else {
      arg1->UpperUserNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_UpperUserNo_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->UpperUserNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_TradeNo_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeNo, (const char *)arg2, 11-1);
      arg1->TradeNo[11-1] = 0;
    } else {
      arg1->TradeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_TradeNo_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->TradeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_MatchPrice_set(void * jarg1, double jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->MatchPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFillInfo_MatchPrice_get(void * jarg1) {
  double jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->MatchPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_MatchQty_set(void * jarg1, unsigned int jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->MatchQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIFillInfo_MatchQty_get(void * jarg1) {
  unsigned int jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPIUINT32) ((arg1)->MatchQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_IsBackInput_set(void * jarg1, char jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIYNFLAG arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsBackInput = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_IsBackInput_get(void * jarg1) {
  char jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIYNFLAG result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPIYNFLAG) ((arg1)->IsBackInput);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_IsDeleted_set(void * jarg1, char jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIYNFLAG arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsDeleted = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_IsDeleted_get(void * jarg1) {
  char jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIYNFLAG result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPIYNFLAG) ((arg1)->IsDeleted);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_IsAddOne_set(void * jarg1, char jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIYNFLAG arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsAddOne = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_IsAddOne_get(void * jarg1) {
  char jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIYNFLAG result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPIYNFLAG) ((arg1)->IsAddOne);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_MatchStreamID_set(void * jarg1, unsigned int jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->MatchStreamID = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIFillInfo_MatchStreamID_get(void * jarg1) {
  unsigned int jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPIUINT32) ((arg1)->MatchStreamID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_UpperStreamID_set(void * jarg1, unsigned int jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->UpperStreamID = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIFillInfo_UpperStreamID_get(void * jarg1) {
  unsigned int jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPIUINT32) ((arg1)->UpperStreamID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_OpenCloseMode_set(void * jarg1, char jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIOpenCloseModeType arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPIOpenCloseModeType)jarg2; 
  if (arg1) (arg1)->OpenCloseMode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_OpenCloseMode_get(void * jarg1) {
  char jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIOpenCloseModeType result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPIOpenCloseModeType) ((arg1)->OpenCloseMode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_ContractSize_set(void * jarg1, double jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->ContractSize = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFillInfo_ContractSize_get(void * jarg1) {
  double jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->ContractSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_CommodityCurrencyGroup_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityCurrencyGroup, (const char *)arg2, 11-1);
      arg1->CommodityCurrencyGroup[11-1] = 0;
    } else {
      arg1->CommodityCurrencyGroup[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_CommodityCurrencyGroup_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityCurrencyGroup);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_CommodityCurrency_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityCurrency, (const char *)arg2, 11-1);
      arg1->CommodityCurrency[11-1] = 0;
    } else {
      arg1->CommodityCurrency[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_CommodityCurrency_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityCurrency);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_FeeMode_set(void * jarg1, char jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPICalculateModeType arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPICalculateModeType)jarg2; 
  if (arg1) (arg1)->FeeMode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_FeeMode_get(void * jarg1) {
  char jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPICalculateModeType result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPICalculateModeType) ((arg1)->FeeMode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_FeeParam_set(void * jarg1, double jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->FeeParam = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFillInfo_FeeParam_get(void * jarg1) {
  double jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->FeeParam);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_FeeCurrencyGroup_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FeeCurrencyGroup, (const char *)arg2, 11-1);
      arg1->FeeCurrencyGroup[11-1] = 0;
    } else {
      arg1->FeeCurrencyGroup[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_FeeCurrencyGroup_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->FeeCurrencyGroup);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_FeeCurrency_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FeeCurrency, (const char *)arg2, 11-1);
      arg1->FeeCurrency[11-1] = 0;
    } else {
      arg1->FeeCurrency[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_FeeCurrency_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->FeeCurrency);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_PreSettlePrice_set(void * jarg1, double jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PreSettlePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFillInfo_PreSettlePrice_get(void * jarg1) {
  double jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->PreSettlePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_FeeValue_set(void * jarg1, double jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->FeeValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFillInfo_FeeValue_get(void * jarg1) {
  double jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->FeeValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_IsManualFee_set(void * jarg1, char jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIYNFLAG arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsManualFee = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_IsManualFee_get(void * jarg1) {
  char jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIYNFLAG result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPIYNFLAG) ((arg1)->IsManualFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_Turnover_set(void * jarg1, double jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->Turnover = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFillInfo_Turnover_get(void * jarg1) {
  double jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->Turnover);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_PremiumIncome_set(void * jarg1, double jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PremiumIncome = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFillInfo_PremiumIncome_get(void * jarg1) {
  double jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->PremiumIncome);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_PremiumPay_set(void * jarg1, double jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PremiumPay = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFillInfo_PremiumPay_get(void * jarg1) {
  double jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->PremiumPay);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_OppoMatchNo_set(void * jarg1, char * jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OppoMatchNo, (const char *)arg2, 21-1);
      arg1->OppoMatchNo[21-1] = 0;
    } else {
      arg1->OppoMatchNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_OppoMatchNo_get(void * jarg1) {
  char * jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->OppoMatchNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_CloseProfit_set(void * jarg1, double jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->CloseProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFillInfo_CloseProfit_get(void * jarg1) {
  double jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->CloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_UnExpProfit_set(void * jarg1, double jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->UnExpProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFillInfo_UnExpProfit_get(void * jarg1) {
  double jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->UnExpProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_UpperMatchPrice_set(void * jarg1, double jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->UpperMatchPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFillInfo_UpperMatchPrice_get(void * jarg1) {
  double jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->UpperMatchPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_QuotePrice_set(void * jarg1, double jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->QuotePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFillInfo_QuotePrice_get(void * jarg1) {
  double jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->QuotePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_ClosePL_set(void * jarg1, double jarg2) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->ClosePL = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFillInfo_ClosePL_get(void * jarg1) {
  double jresult ;
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->ClosePL);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIFillInfo() {
  void * jresult ;
  TapAPIFillInfo *result = 0 ;
  
  result = (TapAPIFillInfo *)new TapAPIFillInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIFillInfo(void * jarg1) {
  TapAPIFillInfo *arg1 = (TapAPIFillInfo *) 0 ;
  
  arg1 = (TapAPIFillInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPICloseQryReq() {
  void * jresult ;
  TapAPICloseQryReq *result = 0 ;
  
  result = (TapAPICloseQryReq *)new TapAPICloseQryReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPICloseQryReq(void * jarg1) {
  TapAPICloseQryReq *arg1 = (TapAPICloseQryReq *) 0 ;
  
  arg1 = (TapAPICloseQryReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIPositionQryReq() {
  void * jresult ;
  TapAPIPositionQryReq *result = 0 ;
  
  result = (TapAPIPositionQryReq *)new TapAPIPositionQryReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIPositionQryReq(void * jarg1) {
  TapAPIPositionQryReq *arg1 = (TapAPIPositionQryReq *) 0 ;
  
  arg1 = (TapAPIPositionQryReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_AccountNo_set(void * jarg1, char * jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_AccountNo_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_ParentAccountNo_set(void * jarg1, char * jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParentAccountNo, (const char *)arg2, 21-1);
      arg1->ParentAccountNo[21-1] = 0;
    } else {
      arg1->ParentAccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_ParentAccountNo_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->ParentAccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_ExchangeNo_set(void * jarg1, char * jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_CommodityType_set(void * jarg1, char jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPICommodityType arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionInfo_CommodityType_get(void * jarg1) {
  char jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPICommodityType result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_CommodityNo_set(void * jarg1, char * jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_CommodityNo_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_ContractNo_set(void * jarg1, char * jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_ContractNo_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_StrikePrice_set(void * jarg1, char * jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice, (const char *)arg2, 11-1);
      arg1->StrikePrice[11-1] = 0;
    } else {
      arg1->StrikePrice[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_StrikePrice_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->StrikePrice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_CallOrPutFlag_set(void * jarg1, char jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPICallOrPutFlagType arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionInfo_CallOrPutFlag_get(void * jarg1) {
  char jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPICallOrPutFlagType result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_ExchangeNoRef_set(void * jarg1, char * jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNoRef, (const char *)arg2, 11-1);
      arg1->ExchangeNoRef[11-1] = 0;
    } else {
      arg1->ExchangeNoRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_ExchangeNoRef_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeNoRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_CommodityTypeRef_set(void * jarg1, char jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPICommodityType arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityTypeRef = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionInfo_CommodityTypeRef_get(void * jarg1) {
  char jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPICommodityType result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPICommodityType) ((arg1)->CommodityTypeRef);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_CommodityNoRef_set(void * jarg1, char * jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNoRef, (const char *)arg2, 11-1);
      arg1->CommodityNoRef[11-1] = 0;
    } else {
      arg1->CommodityNoRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_CommodityNoRef_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityNoRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_ContractNoRef_set(void * jarg1, char * jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNoRef, (const char *)arg2, 11-1);
      arg1->ContractNoRef[11-1] = 0;
    } else {
      arg1->ContractNoRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_ContractNoRef_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->ContractNoRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_StrikePriceRef_set(void * jarg1, char * jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePriceRef, (const char *)arg2, 11-1);
      arg1->StrikePriceRef[11-1] = 0;
    } else {
      arg1->StrikePriceRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_StrikePriceRef_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->StrikePriceRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_CallOrPutFlagRef_set(void * jarg1, char jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPICallOrPutFlagType arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlagRef = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionInfo_CallOrPutFlagRef_get(void * jarg1) {
  char jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPICallOrPutFlagType result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPICallOrPutFlagType) ((arg1)->CallOrPutFlagRef);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_OrderExchangeNo_set(void * jarg1, char * jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderExchangeNo, (const char *)arg2, 11-1);
      arg1->OrderExchangeNo[11-1] = 0;
    } else {
      arg1->OrderExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_OrderExchangeNo_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->OrderExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_OrderCommodityType_set(void * jarg1, char jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPICommodityType arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPICommodityType)jarg2; 
  if (arg1) (arg1)->OrderCommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionInfo_OrderCommodityType_get(void * jarg1) {
  char jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPICommodityType result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPICommodityType) ((arg1)->OrderCommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_OrderCommodityNo_set(void * jarg1, char * jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderCommodityNo, (const char *)arg2, 11-1);
      arg1->OrderCommodityNo[11-1] = 0;
    } else {
      arg1->OrderCommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_OrderCommodityNo_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->OrderCommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_OrderType_set(void * jarg1, char jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIOrderTypeType arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPIOrderTypeType)jarg2; 
  if (arg1) (arg1)->OrderType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionInfo_OrderType_get(void * jarg1) {
  char jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIOrderTypeType result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPIOrderTypeType) ((arg1)->OrderType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_MatchSource_set(void * jarg1, char jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIMatchSourceType arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPIMatchSourceType)jarg2; 
  if (arg1) (arg1)->MatchSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionInfo_MatchSource_get(void * jarg1) {
  char jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIMatchSourceType result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPIMatchSourceType) ((arg1)->MatchSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_TimeInForce_set(void * jarg1, char jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPITimeInForceType arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPITimeInForceType)jarg2; 
  if (arg1) (arg1)->TimeInForce = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionInfo_TimeInForce_get(void * jarg1) {
  char jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPITimeInForceType result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPITimeInForceType) ((arg1)->TimeInForce);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_ExpireTime_set(void * jarg1, char * jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExpireTime, (const char *)arg2, 20-1);
      arg1->ExpireTime[20-1] = 0;
    } else {
      arg1->ExpireTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_ExpireTime_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->ExpireTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_MatchSide_set(void * jarg1, char jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPISideType arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPISideType)jarg2; 
  if (arg1) (arg1)->MatchSide = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionInfo_MatchSide_get(void * jarg1) {
  char jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPISideType result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPISideType) ((arg1)->MatchSide);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_HedgeFlag_set(void * jarg1, char jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIHedgeFlagType arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPIHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionInfo_HedgeFlag_get(void * jarg1) {
  char jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIHedgeFlagType result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPIHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_PositionNo_set(void * jarg1, char * jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->PositionNo, (const char *)arg2, 71-1);
      arg1->PositionNo[71-1] = 0;
    } else {
      arg1->PositionNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_PositionNo_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->PositionNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_ServerFlag_set(void * jarg1, char jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPICHAR arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPICHAR)jarg2; 
  if (arg1) (arg1)->ServerFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionInfo_ServerFlag_get(void * jarg1) {
  char jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPICHAR result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPICHAR) ((arg1)->ServerFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_OrderNo_set(void * jarg1, char * jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderNo, (const char *)arg2, 21-1);
      arg1->OrderNo[21-1] = 0;
    } else {
      arg1->OrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_OrderNo_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->OrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_MatchNo_set(void * jarg1, char * jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MatchNo, (const char *)arg2, 21-1);
      arg1->MatchNo[21-1] = 0;
    } else {
      arg1->MatchNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_MatchNo_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->MatchNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_ExchangeMatchNo_set(void * jarg1, char * jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeMatchNo, (const char *)arg2, 71-1);
      arg1->ExchangeMatchNo[71-1] = 0;
    } else {
      arg1->ExchangeMatchNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_ExchangeMatchNo_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeMatchNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_MatchDate_set(void * jarg1, char * jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MatchDate, (const char *)arg2, 11-1);
      arg1->MatchDate[11-1] = 0;
    } else {
      arg1->MatchDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_MatchDate_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->MatchDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_MatchTime_set(void * jarg1, char * jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MatchTime, (const char *)arg2, 20-1);
      arg1->MatchTime[20-1] = 0;
    } else {
      arg1->MatchTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_MatchTime_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->MatchTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_UpperMatchTime_set(void * jarg1, char * jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperMatchTime, (const char *)arg2, 20-1);
      arg1->UpperMatchTime[20-1] = 0;
    } else {
      arg1->UpperMatchTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_UpperMatchTime_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->UpperMatchTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_UpperNo_set(void * jarg1, char * jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperNo, (const char *)arg2, 11-1);
      arg1->UpperNo[11-1] = 0;
    } else {
      arg1->UpperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_UpperNo_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->UpperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_UpperSettleNo_set(void * jarg1, char * jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperSettleNo, (const char *)arg2, 21-1);
      arg1->UpperSettleNo[21-1] = 0;
    } else {
      arg1->UpperSettleNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_UpperSettleNo_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->UpperSettleNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_UpperUserNo_set(void * jarg1, char * jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperUserNo, (const char *)arg2, 21-1);
      arg1->UpperUserNo[21-1] = 0;
    } else {
      arg1->UpperUserNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_UpperUserNo_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->UpperUserNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_TradeNo_set(void * jarg1, char * jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeNo, (const char *)arg2, 11-1);
      arg1->TradeNo[11-1] = 0;
    } else {
      arg1->TradeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_TradeNo_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->TradeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_PositionPrice_set(void * jarg1, double jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PositionPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionInfo_PositionPrice_get(void * jarg1) {
  double jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->PositionPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_PositionQty_set(void * jarg1, unsigned int jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->PositionQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIPositionInfo_PositionQty_get(void * jarg1) {
  unsigned int jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPIUINT32) ((arg1)->PositionQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_IsBackInput_set(void * jarg1, char jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIYNFLAG arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsBackInput = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionInfo_IsBackInput_get(void * jarg1) {
  char jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIYNFLAG result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPIYNFLAG) ((arg1)->IsBackInput);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_IsAddOne_set(void * jarg1, char jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIYNFLAG arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsAddOne = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionInfo_IsAddOne_get(void * jarg1) {
  char jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIYNFLAG result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPIYNFLAG) ((arg1)->IsAddOne);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_MatchStreamID_set(void * jarg1, unsigned int jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->MatchStreamID = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIPositionInfo_MatchStreamID_get(void * jarg1) {
  unsigned int jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPIUINT32) ((arg1)->MatchStreamID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_PositionStreamId_set(void * jarg1, unsigned int jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->PositionStreamId = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIPositionInfo_PositionStreamId_get(void * jarg1) {
  unsigned int jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPIUINT32) ((arg1)->PositionStreamId);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_OpenCloseMode_set(void * jarg1, char jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIOpenCloseModeType arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPIOpenCloseModeType)jarg2; 
  if (arg1) (arg1)->OpenCloseMode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionInfo_OpenCloseMode_get(void * jarg1) {
  char jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIOpenCloseModeType result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPIOpenCloseModeType) ((arg1)->OpenCloseMode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_ContractSize_set(void * jarg1, double jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->ContractSize = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionInfo_ContractSize_get(void * jarg1) {
  double jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->ContractSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_CommodityCurrencyGroup_set(void * jarg1, char * jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityCurrencyGroup, (const char *)arg2, 11-1);
      arg1->CommodityCurrencyGroup[11-1] = 0;
    } else {
      arg1->CommodityCurrencyGroup[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_CommodityCurrencyGroup_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityCurrencyGroup);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_CommodityCurrency_set(void * jarg1, char * jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityCurrency, (const char *)arg2, 11-1);
      arg1->CommodityCurrency[11-1] = 0;
    } else {
      arg1->CommodityCurrency[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_CommodityCurrency_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityCurrency);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_PreSettlePrice_set(void * jarg1, double jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PreSettlePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionInfo_PreSettlePrice_get(void * jarg1) {
  double jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->PreSettlePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_SettlePrice_set(void * jarg1, double jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->SettlePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionInfo_SettlePrice_get(void * jarg1) {
  double jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->SettlePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_Turnover_set(void * jarg1, double jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->Turnover = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionInfo_Turnover_get(void * jarg1) {
  double jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->Turnover);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_AccountMarginMode_set(void * jarg1, char jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPICalculateModeType arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPICalculateModeType)jarg2; 
  if (arg1) (arg1)->AccountMarginMode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionInfo_AccountMarginMode_get(void * jarg1) {
  char jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPICalculateModeType result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPICalculateModeType) ((arg1)->AccountMarginMode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_AccountMarginParam_set(void * jarg1, double jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->AccountMarginParam = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionInfo_AccountMarginParam_get(void * jarg1) {
  double jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->AccountMarginParam);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_UpperMarginMode_set(void * jarg1, char jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPICalculateModeType arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPICalculateModeType)jarg2; 
  if (arg1) (arg1)->UpperMarginMode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionInfo_UpperMarginMode_get(void * jarg1) {
  char jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPICalculateModeType result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPICalculateModeType) ((arg1)->UpperMarginMode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_UpperMarginParam_set(void * jarg1, double jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->UpperMarginParam = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionInfo_UpperMarginParam_get(void * jarg1) {
  double jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->UpperMarginParam);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_AccountInitialMargin_set(void * jarg1, double jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->AccountInitialMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionInfo_AccountInitialMargin_get(void * jarg1) {
  double jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->AccountInitialMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_AccountMaintenanceMargin_set(void * jarg1, double jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->AccountMaintenanceMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionInfo_AccountMaintenanceMargin_get(void * jarg1) {
  double jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->AccountMaintenanceMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_UpperInitialMargin_set(void * jarg1, double jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->UpperInitialMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionInfo_UpperInitialMargin_get(void * jarg1) {
  double jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->UpperInitialMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_UpperMaintenanceMargin_set(void * jarg1, double jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->UpperMaintenanceMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionInfo_UpperMaintenanceMargin_get(void * jarg1) {
  double jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->UpperMaintenanceMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_PositionProfit_set(void * jarg1, double jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionInfo_PositionProfit_get(void * jarg1) {
  double jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->PositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_LMEPositionProfit_set(void * jarg1, double jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->LMEPositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionInfo_LMEPositionProfit_get(void * jarg1) {
  double jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->LMEPositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_OptionMarketValue_set(void * jarg1, double jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OptionMarketValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionInfo_OptionMarketValue_get(void * jarg1) {
  double jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->OptionMarketValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_MatchCmbNo_set(void * jarg1, char * jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MatchCmbNo, (const char *)arg2, 21-1);
      arg1->MatchCmbNo[21-1] = 0;
    } else {
      arg1->MatchCmbNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_MatchCmbNo_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->MatchCmbNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_IsHistory_set(void * jarg1, char jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIYNFLAG arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsHistory = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionInfo_IsHistory_get(void * jarg1) {
  char jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIYNFLAG result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPIYNFLAG) ((arg1)->IsHistory);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_FloatingPL_set(void * jarg1, double jarg2) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->FloatingPL = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionInfo_FloatingPL_get(void * jarg1) {
  double jresult ;
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->FloatingPL);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIPositionInfo() {
  void * jresult ;
  TapAPIPositionInfo *result = 0 ;
  
  result = (TapAPIPositionInfo *)new TapAPIPositionInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIPositionInfo(void * jarg1) {
  TapAPIPositionInfo *arg1 = (TapAPIPositionInfo *) 0 ;
  
  arg1 = (TapAPIPositionInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionProfit_PositionNo_set(void * jarg1, char * jarg2) {
  TapAPIPositionProfit *arg1 = (TapAPIPositionProfit *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIPositionProfit *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->PositionNo, (const char *)arg2, 71-1);
      arg1->PositionNo[71-1] = 0;
    } else {
      arg1->PositionNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionProfit_PositionNo_get(void * jarg1) {
  char * jresult ;
  TapAPIPositionProfit *arg1 = (TapAPIPositionProfit *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIPositionProfit *)jarg1; 
  result = (char *) ((arg1)->PositionNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionProfit_PositionStreamId_set(void * jarg1, unsigned int jarg2) {
  TapAPIPositionProfit *arg1 = (TapAPIPositionProfit *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPIPositionProfit *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->PositionStreamId = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIPositionProfit_PositionStreamId_get(void * jarg1) {
  unsigned int jresult ;
  TapAPIPositionProfit *arg1 = (TapAPIPositionProfit *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPIPositionProfit *)jarg1; 
  result = (TAPIUINT32) ((arg1)->PositionStreamId);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionProfit_PositionProfit_set(void * jarg1, double jarg2) {
  TapAPIPositionProfit *arg1 = (TapAPIPositionProfit *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIPositionProfit *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionProfit_PositionProfit_get(void * jarg1) {
  double jresult ;
  TapAPIPositionProfit *arg1 = (TapAPIPositionProfit *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIPositionProfit *)jarg1; 
  result = (TAPIREAL64) ((arg1)->PositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionProfit_LMEPositionProfit_set(void * jarg1, double jarg2) {
  TapAPIPositionProfit *arg1 = (TapAPIPositionProfit *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIPositionProfit *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->LMEPositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionProfit_LMEPositionProfit_get(void * jarg1) {
  double jresult ;
  TapAPIPositionProfit *arg1 = (TapAPIPositionProfit *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIPositionProfit *)jarg1; 
  result = (TAPIREAL64) ((arg1)->LMEPositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionProfit_OptionMarketValue_set(void * jarg1, double jarg2) {
  TapAPIPositionProfit *arg1 = (TapAPIPositionProfit *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIPositionProfit *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OptionMarketValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionProfit_OptionMarketValue_get(void * jarg1) {
  double jresult ;
  TapAPIPositionProfit *arg1 = (TapAPIPositionProfit *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIPositionProfit *)jarg1; 
  result = (TAPIREAL64) ((arg1)->OptionMarketValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionProfit_CalculatePrice_set(void * jarg1, double jarg2) {
  TapAPIPositionProfit *arg1 = (TapAPIPositionProfit *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIPositionProfit *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->CalculatePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionProfit_CalculatePrice_get(void * jarg1) {
  double jresult ;
  TapAPIPositionProfit *arg1 = (TapAPIPositionProfit *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIPositionProfit *)jarg1; 
  result = (TAPIREAL64) ((arg1)->CalculatePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionProfit_FloatingPL_set(void * jarg1, double jarg2) {
  TapAPIPositionProfit *arg1 = (TapAPIPositionProfit *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIPositionProfit *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->FloatingPL = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionProfit_FloatingPL_get(void * jarg1) {
  double jresult ;
  TapAPIPositionProfit *arg1 = (TapAPIPositionProfit *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIPositionProfit *)jarg1; 
  result = (TAPIREAL64) ((arg1)->FloatingPL);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIPositionProfit() {
  void * jresult ;
  TapAPIPositionProfit *result = 0 ;
  
  result = (TapAPIPositionProfit *)new TapAPIPositionProfit();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIPositionProfit(void * jarg1) {
  TapAPIPositionProfit *arg1 = (TapAPIPositionProfit *) 0 ;
  
  arg1 = (TapAPIPositionProfit *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionProfitNotice_IsLast_set(void * jarg1, char jarg2) {
  TapAPIPositionProfitNotice *arg1 = (TapAPIPositionProfitNotice *) 0 ;
  TAPIYNFLAG arg2 ;
  
  arg1 = (TapAPIPositionProfitNotice *)jarg1; 
  arg2 = (TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsLast = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionProfitNotice_IsLast_get(void * jarg1) {
  char jresult ;
  TapAPIPositionProfitNotice *arg1 = (TapAPIPositionProfitNotice *) 0 ;
  TAPIYNFLAG result;
  
  arg1 = (TapAPIPositionProfitNotice *)jarg1; 
  result = (TAPIYNFLAG) ((arg1)->IsLast);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionProfitNotice_Data_set(void * jarg1, void * jarg2) {
  TapAPIPositionProfitNotice *arg1 = (TapAPIPositionProfitNotice *) 0 ;
  TapAPIPositionProfit *arg2 = (TapAPIPositionProfit *) 0 ;
  
  arg1 = (TapAPIPositionProfitNotice *)jarg1; 
  arg2 = (TapAPIPositionProfit *)jarg2; 
  if (arg1) (arg1)->Data = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPIPositionProfitNotice_Data_get(void * jarg1) {
  void * jresult ;
  TapAPIPositionProfitNotice *arg1 = (TapAPIPositionProfitNotice *) 0 ;
  TapAPIPositionProfit *result = 0 ;
  
  arg1 = (TapAPIPositionProfitNotice *)jarg1; 
  result = (TapAPIPositionProfit *) ((arg1)->Data);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIPositionProfitNotice() {
  void * jresult ;
  TapAPIPositionProfitNotice *result = 0 ;
  
  result = (TapAPIPositionProfitNotice *)new TapAPIPositionProfitNotice();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIPositionProfitNotice(void * jarg1) {
  TapAPIPositionProfitNotice *arg1 = (TapAPIPositionProfitNotice *) 0 ;
  
  arg1 = (TapAPIPositionProfitNotice *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_AccountNo_set(void * jarg1, char * jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_AccountNo_get(void * jarg1) {
  char * jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_ParentAccountNo_set(void * jarg1, char * jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParentAccountNo, (const char *)arg2, 21-1);
      arg1->ParentAccountNo[21-1] = 0;
    } else {
      arg1->ParentAccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_ParentAccountNo_get(void * jarg1) {
  char * jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->ParentAccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_ExchangeNo_set(void * jarg1, char * jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CommodityType_set(void * jarg1, char jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPICommodityType arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICloseInfo_CommodityType_get(void * jarg1) {
  char jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPICommodityType result;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CommodityNo_set(void * jarg1, char * jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_CommodityNo_get(void * jarg1) {
  char * jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_ContractNo_set(void * jarg1, char * jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_ContractNo_get(void * jarg1) {
  char * jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_StrikePrice_set(void * jarg1, char * jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice, (const char *)arg2, 11-1);
      arg1->StrikePrice[11-1] = 0;
    } else {
      arg1->StrikePrice[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_StrikePrice_get(void * jarg1) {
  char * jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->StrikePrice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CallOrPutFlag_set(void * jarg1, char jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPICallOrPutFlagType arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICloseInfo_CallOrPutFlag_get(void * jarg1) {
  char jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPICallOrPutFlagType result;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_OpenOrderExchangeNo_set(void * jarg1, char * jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OpenOrderExchangeNo, (const char *)arg2, 11-1);
      arg1->OpenOrderExchangeNo[11-1] = 0;
    } else {
      arg1->OpenOrderExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_OpenOrderExchangeNo_get(void * jarg1) {
  char * jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->OpenOrderExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_OpenOrderCommodityType_set(void * jarg1, char jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPICommodityType arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (TAPICommodityType)jarg2; 
  if (arg1) (arg1)->OpenOrderCommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICloseInfo_OpenOrderCommodityType_get(void * jarg1) {
  char jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPICommodityType result;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (TAPICommodityType) ((arg1)->OpenOrderCommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_OpenOrderCommodityNo_set(void * jarg1, char * jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OpenOrderCommodityNo, (const char *)arg2, 11-1);
      arg1->OpenOrderCommodityNo[11-1] = 0;
    } else {
      arg1->OpenOrderCommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_OpenOrderCommodityNo_get(void * jarg1) {
  char * jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->OpenOrderCommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CloseOrderExchangeNo_set(void * jarg1, char * jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CloseOrderExchangeNo, (const char *)arg2, 11-1);
      arg1->CloseOrderExchangeNo[11-1] = 0;
    } else {
      arg1->CloseOrderExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_CloseOrderExchangeNo_get(void * jarg1) {
  char * jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->CloseOrderExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CloseOrderCommodityType_set(void * jarg1, char jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPICommodityType arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CloseOrderCommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICloseInfo_CloseOrderCommodityType_get(void * jarg1) {
  char jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPICommodityType result;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (TAPICommodityType) ((arg1)->CloseOrderCommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CloseOrderCommodityNo_set(void * jarg1, char * jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CloseOrderCommodityNo, (const char *)arg2, 11-1);
      arg1->CloseOrderCommodityNo[11-1] = 0;
    } else {
      arg1->CloseOrderCommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_CloseOrderCommodityNo_get(void * jarg1) {
  char * jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->CloseOrderCommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_OpenMatchSource_set(void * jarg1, char jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIMatchSourceType arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (TAPIMatchSourceType)jarg2; 
  if (arg1) (arg1)->OpenMatchSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICloseInfo_OpenMatchSource_get(void * jarg1) {
  char jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIMatchSourceType result;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (TAPIMatchSourceType) ((arg1)->OpenMatchSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CloseMatchSource_set(void * jarg1, char jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIMatchSourceType arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (TAPIMatchSourceType)jarg2; 
  if (arg1) (arg1)->CloseMatchSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICloseInfo_CloseMatchSource_get(void * jarg1) {
  char jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIMatchSourceType result;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (TAPIMatchSourceType) ((arg1)->CloseMatchSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CloseSide_set(void * jarg1, char jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPISideType arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (TAPISideType)jarg2; 
  if (arg1) (arg1)->CloseSide = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICloseInfo_CloseSide_get(void * jarg1) {
  char jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPISideType result;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (TAPISideType) ((arg1)->CloseSide);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CloseQty_set(void * jarg1, unsigned int jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->CloseQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPICloseInfo_CloseQty_get(void * jarg1) {
  unsigned int jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (TAPIUINT32) ((arg1)->CloseQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_OpenPrice_set(void * jarg1, double jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OpenPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPICloseInfo_OpenPrice_get(void * jarg1) {
  double jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->OpenPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_ClosePrice_set(void * jarg1, double jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->ClosePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPICloseInfo_ClosePrice_get(void * jarg1) {
  double jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->ClosePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_OpenServerFlag_set(void * jarg1, char jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPICHAR arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (TAPICHAR)jarg2; 
  if (arg1) (arg1)->OpenServerFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICloseInfo_OpenServerFlag_get(void * jarg1) {
  char jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPICHAR result;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (TAPICHAR) ((arg1)->OpenServerFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_OpenOrderNo_set(void * jarg1, char * jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OpenOrderNo, (const char *)arg2, 21-1);
      arg1->OpenOrderNo[21-1] = 0;
    } else {
      arg1->OpenOrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_OpenOrderNo_get(void * jarg1) {
  char * jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->OpenOrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_OpenMatchNo_set(void * jarg1, char * jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OpenMatchNo, (const char *)arg2, 21-1);
      arg1->OpenMatchNo[21-1] = 0;
    } else {
      arg1->OpenMatchNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_OpenMatchNo_get(void * jarg1) {
  char * jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->OpenMatchNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_OpenExchangeMatchNo_set(void * jarg1, char * jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OpenExchangeMatchNo, (const char *)arg2, 71-1);
      arg1->OpenExchangeMatchNo[71-1] = 0;
    } else {
      arg1->OpenExchangeMatchNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_OpenExchangeMatchNo_get(void * jarg1) {
  char * jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->OpenExchangeMatchNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_OpenMatchDateTime_set(void * jarg1, char * jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OpenMatchDateTime, (const char *)arg2, 20-1);
      arg1->OpenMatchDateTime[20-1] = 0;
    } else {
      arg1->OpenMatchDateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_OpenMatchDateTime_get(void * jarg1) {
  char * jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->OpenMatchDateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CloseServerFlag_set(void * jarg1, char jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPICHAR arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (TAPICHAR)jarg2; 
  if (arg1) (arg1)->CloseServerFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICloseInfo_CloseServerFlag_get(void * jarg1) {
  char jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPICHAR result;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (TAPICHAR) ((arg1)->CloseServerFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CloseOrderNo_set(void * jarg1, char * jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CloseOrderNo, (const char *)arg2, 21-1);
      arg1->CloseOrderNo[21-1] = 0;
    } else {
      arg1->CloseOrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_CloseOrderNo_get(void * jarg1) {
  char * jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->CloseOrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CloseMatchNo_set(void * jarg1, char * jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CloseMatchNo, (const char *)arg2, 21-1);
      arg1->CloseMatchNo[21-1] = 0;
    } else {
      arg1->CloseMatchNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_CloseMatchNo_get(void * jarg1) {
  char * jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->CloseMatchNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CloseExchangeMatchNo_set(void * jarg1, char * jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CloseExchangeMatchNo, (const char *)arg2, 71-1);
      arg1->CloseExchangeMatchNo[71-1] = 0;
    } else {
      arg1->CloseExchangeMatchNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_CloseExchangeMatchNo_get(void * jarg1) {
  char * jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->CloseExchangeMatchNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CloseMatchDateTime_set(void * jarg1, char * jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CloseMatchDateTime, (const char *)arg2, 20-1);
      arg1->CloseMatchDateTime[20-1] = 0;
    } else {
      arg1->CloseMatchDateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_CloseMatchDateTime_get(void * jarg1) {
  char * jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->CloseMatchDateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CloseStreamId_set(void * jarg1, unsigned int jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->CloseStreamId = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPICloseInfo_CloseStreamId_get(void * jarg1) {
  unsigned int jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (TAPIUINT32) ((arg1)->CloseStreamId);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_OpenCloseMode_set(void * jarg1, char jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIOpenCloseModeType arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (TAPIOpenCloseModeType)jarg2; 
  if (arg1) (arg1)->OpenCloseMode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICloseInfo_OpenCloseMode_get(void * jarg1) {
  char jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIOpenCloseModeType result;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (TAPIOpenCloseModeType) ((arg1)->OpenCloseMode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_ContractSize_set(void * jarg1, double jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->ContractSize = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPICloseInfo_ContractSize_get(void * jarg1) {
  double jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->ContractSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CommodityCurrencyGroup_set(void * jarg1, char * jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityCurrencyGroup, (const char *)arg2, 11-1);
      arg1->CommodityCurrencyGroup[11-1] = 0;
    } else {
      arg1->CommodityCurrencyGroup[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_CommodityCurrencyGroup_get(void * jarg1) {
  char * jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityCurrencyGroup);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CommodityCurrency_set(void * jarg1, char * jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityCurrency, (const char *)arg2, 11-1);
      arg1->CommodityCurrency[11-1] = 0;
    } else {
      arg1->CommodityCurrency[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_CommodityCurrency_get(void * jarg1) {
  char * jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityCurrency);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_PreSettlePrice_set(void * jarg1, double jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PreSettlePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPICloseInfo_PreSettlePrice_get(void * jarg1) {
  double jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->PreSettlePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_PremiumIncome_set(void * jarg1, double jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PremiumIncome = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPICloseInfo_PremiumIncome_get(void * jarg1) {
  double jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->PremiumIncome);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_PremiumPay_set(void * jarg1, double jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PremiumPay = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPICloseInfo_PremiumPay_get(void * jarg1) {
  double jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->PremiumPay);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CloseProfit_set(void * jarg1, double jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->CloseProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPICloseInfo_CloseProfit_get(void * jarg1) {
  double jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->CloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_UnExpProfit_set(void * jarg1, double jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->UnExpProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPICloseInfo_UnExpProfit_get(void * jarg1) {
  double jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->UnExpProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_ClosePL_set(void * jarg1, double jarg2) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->ClosePL = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPICloseInfo_ClosePL_get(void * jarg1) {
  double jresult ;
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->ClosePL);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPICloseInfo() {
  void * jresult ;
  TapAPICloseInfo *result = 0 ;
  
  result = (TapAPICloseInfo *)new TapAPICloseInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPICloseInfo(void * jarg1) {
  TapAPICloseInfo *arg1 = (TapAPICloseInfo *) 0 ;
  
  arg1 = (TapAPICloseInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundReq_AccountNo_set(void * jarg1, char * jarg2) {
  TapAPIFundReq *arg1 = (TapAPIFundReq *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFundReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFundReq_AccountNo_get(void * jarg1) {
  char * jresult ;
  TapAPIFundReq *arg1 = (TapAPIFundReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFundReq *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIFundReq() {
  void * jresult ;
  TapAPIFundReq *result = 0 ;
  
  result = (TapAPIFundReq *)new TapAPIFundReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIFundReq(void * jarg1) {
  TapAPIFundReq *arg1 = (TapAPIFundReq *) 0 ;
  
  arg1 = (TapAPIFundReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_AccountNo_set(void * jarg1, char * jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFundData_AccountNo_get(void * jarg1) {
  char * jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_ParentAccountNo_set(void * jarg1, char * jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParentAccountNo, (const char *)arg2, 21-1);
      arg1->ParentAccountNo[21-1] = 0;
    } else {
      arg1->ParentAccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFundData_ParentAccountNo_get(void * jarg1) {
  char * jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (char *) ((arg1)->ParentAccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_CurrencyGroupNo_set(void * jarg1, char * jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyGroupNo, (const char *)arg2, 11-1);
      arg1->CurrencyGroupNo[11-1] = 0;
    } else {
      arg1->CurrencyGroupNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFundData_CurrencyGroupNo_get(void * jarg1) {
  char * jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (char *) ((arg1)->CurrencyGroupNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_CurrencyNo_set(void * jarg1, char * jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyNo, (const char *)arg2, 11-1);
      arg1->CurrencyNo[11-1] = 0;
    } else {
      arg1->CurrencyNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFundData_CurrencyNo_get(void * jarg1) {
  char * jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (char *) ((arg1)->CurrencyNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_TradeRate_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->TradeRate = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_TradeRate_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->TradeRate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_FutureAlg_set(void * jarg1, char jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIFutureAlgType arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIFutureAlgType)jarg2; 
  if (arg1) (arg1)->FutureAlg = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFundData_FutureAlg_get(void * jarg1) {
  char jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIFutureAlgType result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIFutureAlgType) ((arg1)->FutureAlg);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_OptionAlg_set(void * jarg1, char jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIOptionAlgType arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIOptionAlgType)jarg2; 
  if (arg1) (arg1)->OptionAlg = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFundData_OptionAlg_get(void * jarg1) {
  char jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIOptionAlgType result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIOptionAlgType) ((arg1)->OptionAlg);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_PreBalance_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PreBalance = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_PreBalance_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->PreBalance);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_PreUnExpProfit_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PreUnExpProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_PreUnExpProfit_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->PreUnExpProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_PreLMEPositionProfit_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PreLMEPositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_PreLMEPositionProfit_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->PreLMEPositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_PreEquity_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PreEquity = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_PreEquity_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->PreEquity);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_PreAvailable1_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PreAvailable1 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_PreAvailable1_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->PreAvailable1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_PreMarketEquity_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PreMarketEquity = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_PreMarketEquity_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->PreMarketEquity);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_CashInValue_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->CashInValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_CashInValue_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->CashInValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_CashOutValue_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->CashOutValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_CashOutValue_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->CashOutValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_CashAdjustValue_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->CashAdjustValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_CashAdjustValue_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->CashAdjustValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_CashPledged_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->CashPledged = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_CashPledged_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->CashPledged);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_FrozenFee_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->FrozenFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_FrozenFee_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->FrozenFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_FrozenDeposit_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->FrozenDeposit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_FrozenDeposit_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->FrozenDeposit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_AccountFee_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->AccountFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_AccountFee_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->AccountFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_ExchangeFee_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->ExchangeFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_ExchangeFee_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->ExchangeFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_AccountDeliveryFee_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->AccountDeliveryFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_AccountDeliveryFee_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->AccountDeliveryFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_PremiumIncome_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PremiumIncome = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_PremiumIncome_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->PremiumIncome);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_PremiumPay_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PremiumPay = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_PremiumPay_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->PremiumPay);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_CloseProfit_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->CloseProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_CloseProfit_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->CloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_DeliveryProfit_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->DeliveryProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_DeliveryProfit_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->DeliveryProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_UnExpProfit_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->UnExpProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_UnExpProfit_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->UnExpProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_ExpProfit_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->ExpProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_ExpProfit_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->ExpProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_PositionProfit_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_PositionProfit_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->PositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_LmePositionProfit_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->LmePositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_LmePositionProfit_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->LmePositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_OptionMarketValue_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OptionMarketValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_OptionMarketValue_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->OptionMarketValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_AccountIntialMargin_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->AccountIntialMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_AccountIntialMargin_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->AccountIntialMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_AccountMaintenanceMargin_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->AccountMaintenanceMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_AccountMaintenanceMargin_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->AccountMaintenanceMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_UpperInitalMargin_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->UpperInitalMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_UpperInitalMargin_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->UpperInitalMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_UpperMaintenanceMargin_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->UpperMaintenanceMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_UpperMaintenanceMargin_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->UpperMaintenanceMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_Discount_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->Discount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_Discount_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->Discount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_Balance_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->Balance = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_Balance_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->Balance);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_Equity_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->Equity = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_Equity_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->Equity);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_Available_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->Available = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_Available_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->Available);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_CanDraw_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->CanDraw = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_CanDraw_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->CanDraw);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_MarketEquity_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->MarketEquity = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_MarketEquity_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->MarketEquity);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_OriginalCashInOut_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OriginalCashInOut = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_OriginalCashInOut_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->OriginalCashInOut);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_FloatingPL_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->FloatingPL = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_FloatingPL_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->FloatingPL);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_FrozenRiskFundValue_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->FrozenRiskFundValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_FrozenRiskFundValue_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->FrozenRiskFundValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_ClosePL_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->ClosePL = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_ClosePL_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->ClosePL);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_NoCurrencyPledgeValue_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->NoCurrencyPledgeValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_NoCurrencyPledgeValue_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->NoCurrencyPledgeValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_PrePledgeValue_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PrePledgeValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_PrePledgeValue_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->PrePledgeValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_PledgeIn_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PledgeIn = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_PledgeIn_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->PledgeIn);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_PledgeOut_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PledgeOut = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_PledgeOut_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->PledgeOut);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_PledgeValue_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PledgeValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_PledgeValue_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->PledgeValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_BorrowValue_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->BorrowValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_BorrowValue_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->BorrowValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_SpecialAccountFrozenMargin_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->SpecialAccountFrozenMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_SpecialAccountFrozenMargin_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->SpecialAccountFrozenMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_SpecialAccountMargin_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->SpecialAccountMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_SpecialAccountMargin_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->SpecialAccountMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_SpecialAccountFrozenFee_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->SpecialAccountFrozenFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_SpecialAccountFrozenFee_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->SpecialAccountFrozenFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_SpecialAccountFee_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->SpecialAccountFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_SpecialAccountFee_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->SpecialAccountFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_SpecialFloatProfit_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->SpecialFloatProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_SpecialFloatProfit_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->SpecialFloatProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_SpecialCloseProfit_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->SpecialCloseProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_SpecialCloseProfit_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->SpecialCloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_SpecialFloatPL_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->SpecialFloatPL = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_SpecialFloatPL_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->SpecialFloatPL);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_SpecialClosePL_set(void * jarg1, double jarg2) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->SpecialClosePL = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_SpecialClosePL_get(void * jarg1) {
  double jresult ;
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIFundData *)jarg1; 
  result = (TAPIREAL64) ((arg1)->SpecialClosePL);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIFundData() {
  void * jresult ;
  TapAPIFundData *result = 0 ;
  
  result = (TapAPIFundData *)new TapAPIFundData();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIFundData(void * jarg1) {
  TapAPIFundData *arg1 = (TapAPIFundData *) 0 ;
  
  arg1 = (TapAPIFundData *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_ExchangeNo_set(void * jarg1, char * jarg2) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodityInfo_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityType_set(void * jarg1, char jarg2) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPICommodityType arg2 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  arg2 = (TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityType_get(void * jarg1) {
  char jresult ;
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPICommodityType result;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  result = (TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityNo_set(void * jarg1, char * jarg2) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityNo_get(void * jarg1) {
  char * jresult ;
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityName_set(void * jarg1, char * jarg2) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityName, (const char *)arg2, 21-1);
      arg1->CommodityName[21-1] = 0;
    } else {
      arg1->CommodityName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityName_get(void * jarg1) {
  char * jresult ;
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityEngName_set(void * jarg1, char * jarg2) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityEngName, (const char *)arg2, 31-1);
      arg1->CommodityEngName[31-1] = 0;
    } else {
      arg1->CommodityEngName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityEngName_get(void * jarg1) {
  char * jresult ;
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityEngName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_RelateExchangeNo_set(void * jarg1, char * jarg2) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RelateExchangeNo, (const char *)arg2, 11-1);
      arg1->RelateExchangeNo[11-1] = 0;
    } else {
      arg1->RelateExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodityInfo_RelateExchangeNo_get(void * jarg1) {
  char * jresult ;
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  result = (char *) ((arg1)->RelateExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_RelateCommodityType_set(void * jarg1, char jarg2) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPICommodityType arg2 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  arg2 = (TAPICommodityType)jarg2; 
  if (arg1) (arg1)->RelateCommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICommodityInfo_RelateCommodityType_get(void * jarg1) {
  char jresult ;
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPICommodityType result;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  result = (TAPICommodityType) ((arg1)->RelateCommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_RelateCommodityNo_set(void * jarg1, char * jarg2) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RelateCommodityNo, (const char *)arg2, 11-1);
      arg1->RelateCommodityNo[11-1] = 0;
    } else {
      arg1->RelateCommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodityInfo_RelateCommodityNo_get(void * jarg1) {
  char * jresult ;
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  result = (char *) ((arg1)->RelateCommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_RelateExchangeNo2_set(void * jarg1, char * jarg2) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RelateExchangeNo2, (const char *)arg2, 11-1);
      arg1->RelateExchangeNo2[11-1] = 0;
    } else {
      arg1->RelateExchangeNo2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodityInfo_RelateExchangeNo2_get(void * jarg1) {
  char * jresult ;
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  result = (char *) ((arg1)->RelateExchangeNo2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_RelateCommodityType2_set(void * jarg1, char jarg2) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPICommodityType arg2 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  arg2 = (TAPICommodityType)jarg2; 
  if (arg1) (arg1)->RelateCommodityType2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICommodityInfo_RelateCommodityType2_get(void * jarg1) {
  char jresult ;
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPICommodityType result;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  result = (TAPICommodityType) ((arg1)->RelateCommodityType2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_RelateCommodityNo2_set(void * jarg1, char * jarg2) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RelateCommodityNo2, (const char *)arg2, 11-1);
      arg1->RelateCommodityNo2[11-1] = 0;
    } else {
      arg1->RelateCommodityNo2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodityInfo_RelateCommodityNo2_get(void * jarg1) {
  char * jresult ;
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  result = (char *) ((arg1)->RelateCommodityNo2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_TradeCurrency_set(void * jarg1, char * jarg2) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCurrency, (const char *)arg2, 11-1);
      arg1->TradeCurrency[11-1] = 0;
    } else {
      arg1->TradeCurrency[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodityInfo_TradeCurrency_get(void * jarg1) {
  char * jresult ;
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  result = (char *) ((arg1)->TradeCurrency);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_SettleCurrency_set(void * jarg1, char * jarg2) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SettleCurrency, (const char *)arg2, 11-1);
      arg1->SettleCurrency[11-1] = 0;
    } else {
      arg1->SettleCurrency[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodityInfo_SettleCurrency_get(void * jarg1) {
  char * jresult ;
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  result = (char *) ((arg1)->SettleCurrency);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_ContractSize_set(void * jarg1, double jarg2) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->ContractSize = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPICommodityInfo_ContractSize_get(void * jarg1) {
  double jresult ;
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->ContractSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_MarginCalculateMode_set(void * jarg1, char jarg2) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPIMarginCalculateModeType arg2 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  arg2 = (TAPIMarginCalculateModeType)jarg2; 
  if (arg1) (arg1)->MarginCalculateMode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICommodityInfo_MarginCalculateMode_get(void * jarg1) {
  char jresult ;
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPIMarginCalculateModeType result;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  result = (TAPIMarginCalculateModeType) ((arg1)->MarginCalculateMode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_OptionMarginCalculateMode_set(void * jarg1, char jarg2) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPIOptionMarginCalculateModeType arg2 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  arg2 = (TAPIOptionMarginCalculateModeType)jarg2; 
  if (arg1) (arg1)->OptionMarginCalculateMode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICommodityInfo_OptionMarginCalculateMode_get(void * jarg1) {
  char jresult ;
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPIOptionMarginCalculateModeType result;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  result = (TAPIOptionMarginCalculateModeType) ((arg1)->OptionMarginCalculateMode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_OpenCloseMode_set(void * jarg1, char jarg2) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPIOpenCloseModeType arg2 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  arg2 = (TAPIOpenCloseModeType)jarg2; 
  if (arg1) (arg1)->OpenCloseMode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICommodityInfo_OpenCloseMode_get(void * jarg1) {
  char jresult ;
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPIOpenCloseModeType result;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  result = (TAPIOpenCloseModeType) ((arg1)->OpenCloseMode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_StrikePriceTimes_set(void * jarg1, double jarg2) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->StrikePriceTimes = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPICommodityInfo_StrikePriceTimes_get(void * jarg1) {
  double jresult ;
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->StrikePriceTimes);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_IsOnlyQuoteCommodity_set(void * jarg1, char jarg2) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPIYNFLAG arg2 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  arg2 = (TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsOnlyQuoteCommodity = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICommodityInfo_IsOnlyQuoteCommodity_get(void * jarg1) {
  char jresult ;
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPIYNFLAG result;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  result = (TAPIYNFLAG) ((arg1)->IsOnlyQuoteCommodity);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityTickSize_set(void * jarg1, double jarg2) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->CommodityTickSize = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityTickSize_get(void * jarg1) {
  double jresult ;
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->CommodityTickSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityDenominator_set(void * jarg1, int jarg2) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPIINT32 arg2 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  arg2 = (TAPIINT32)jarg2; 
  if (arg1) (arg1)->CommodityDenominator = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityDenominator_get(void * jarg1) {
  int jresult ;
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPIINT32 result;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  result = (TAPIINT32) ((arg1)->CommodityDenominator);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_CmbDirect_set(void * jarg1, char jarg2) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPICmbDirectType arg2 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  arg2 = (TAPICmbDirectType)jarg2; 
  if (arg1) (arg1)->CmbDirect = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICommodityInfo_CmbDirect_get(void * jarg1) {
  char jresult ;
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPICmbDirectType result;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  result = (TAPICmbDirectType) ((arg1)->CmbDirect);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_OnlyCanCloseDays_set(void * jarg1, int jarg2) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPIINT32 arg2 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  arg2 = (TAPIINT32)jarg2; 
  if (arg1) (arg1)->OnlyCanCloseDays = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TapAPICommodityInfo_OnlyCanCloseDays_get(void * jarg1) {
  int jresult ;
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPIINT32 result;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  result = (TAPIINT32) ((arg1)->OnlyCanCloseDays);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_DeliveryMode_set(void * jarg1, char jarg2) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPIDeliveryModeType arg2 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  arg2 = (TAPIDeliveryModeType)jarg2; 
  if (arg1) (arg1)->DeliveryMode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICommodityInfo_DeliveryMode_get(void * jarg1) {
  char jresult ;
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPIDeliveryModeType result;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  result = (TAPIDeliveryModeType) ((arg1)->DeliveryMode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_DeliveryDays_set(void * jarg1, int jarg2) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPIINT32 arg2 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  arg2 = (TAPIINT32)jarg2; 
  if (arg1) (arg1)->DeliveryDays = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TapAPICommodityInfo_DeliveryDays_get(void * jarg1) {
  int jresult ;
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPIINT32 result;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  result = (TAPIINT32) ((arg1)->DeliveryDays);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_AddOneTime_set(void * jarg1, char * jarg2) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AddOneTime, (const char *)arg2, 9-1);
      arg1->AddOneTime[9-1] = 0;
    } else {
      arg1->AddOneTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodityInfo_AddOneTime_get(void * jarg1) {
  char * jresult ;
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  result = (char *) ((arg1)->AddOneTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityTimeZone_set(void * jarg1, int jarg2) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPIINT32 arg2 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  arg2 = (TAPIINT32)jarg2; 
  if (arg1) (arg1)->CommodityTimeZone = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityTimeZone_get(void * jarg1) {
  int jresult ;
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  TAPIINT32 result;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  result = (TAPIINT32) ((arg1)->CommodityTimeZone);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPICommodityInfo() {
  void * jresult ;
  TapAPICommodityInfo *result = 0 ;
  
  result = (TapAPICommodityInfo *)new TapAPICommodityInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPICommodityInfo(void * jarg1) {
  TapAPICommodityInfo *arg1 = (TapAPICommodityInfo *) 0 ;
  
  arg1 = (TapAPICommodityInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_ExchangeNo_set(void * jarg1, char * jarg2) {
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeContractInfo_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_CommodityType_set(void * jarg1, char jarg2) {
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  TAPICommodityType arg2 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  arg2 = (TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPITradeContractInfo_CommodityType_get(void * jarg1) {
  char jresult ;
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  TAPICommodityType result;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  result = (TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_CommodityNo_set(void * jarg1, char * jarg2) {
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeContractInfo_CommodityNo_get(void * jarg1) {
  char * jresult ;
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_ContractNo1_set(void * jarg1, char * jarg2) {
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo1, (const char *)arg2, 11-1);
      arg1->ContractNo1[11-1] = 0;
    } else {
      arg1->ContractNo1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeContractInfo_ContractNo1_get(void * jarg1) {
  char * jresult ;
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  result = (char *) ((arg1)->ContractNo1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_StrikePrice1_set(void * jarg1, char * jarg2) {
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice1, (const char *)arg2, 11-1);
      arg1->StrikePrice1[11-1] = 0;
    } else {
      arg1->StrikePrice1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeContractInfo_StrikePrice1_get(void * jarg1) {
  char * jresult ;
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  result = (char *) ((arg1)->StrikePrice1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_CallOrPutFlag1_set(void * jarg1, char jarg2) {
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  TAPICallOrPutFlagType arg2 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  arg2 = (TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag1 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPITradeContractInfo_CallOrPutFlag1_get(void * jarg1) {
  char jresult ;
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  TAPICallOrPutFlagType result;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  result = (TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_ContractNo2_set(void * jarg1, char * jarg2) {
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo2, (const char *)arg2, 11-1);
      arg1->ContractNo2[11-1] = 0;
    } else {
      arg1->ContractNo2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeContractInfo_ContractNo2_get(void * jarg1) {
  char * jresult ;
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  result = (char *) ((arg1)->ContractNo2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_StrikePrice2_set(void * jarg1, char * jarg2) {
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice2, (const char *)arg2, 11-1);
      arg1->StrikePrice2[11-1] = 0;
    } else {
      arg1->StrikePrice2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeContractInfo_StrikePrice2_get(void * jarg1) {
  char * jresult ;
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  result = (char *) ((arg1)->StrikePrice2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_CallOrPutFlag2_set(void * jarg1, char jarg2) {
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  TAPICallOrPutFlagType arg2 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  arg2 = (TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPITradeContractInfo_CallOrPutFlag2_get(void * jarg1) {
  char jresult ;
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  TAPICallOrPutFlagType result;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  result = (TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_ContractType_set(void * jarg1, char jarg2) {
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  TAPIContractTypeType arg2 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  arg2 = (TAPIContractTypeType)jarg2; 
  if (arg1) (arg1)->ContractType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPITradeContractInfo_ContractType_get(void * jarg1) {
  char jresult ;
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  TAPIContractTypeType result;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  result = (TAPIContractTypeType) ((arg1)->ContractType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_QuoteUnderlyingContract_set(void * jarg1, char * jarg2) {
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteUnderlyingContract, (const char *)arg2, 11-1);
      arg1->QuoteUnderlyingContract[11-1] = 0;
    } else {
      arg1->QuoteUnderlyingContract[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeContractInfo_QuoteUnderlyingContract_get(void * jarg1) {
  char * jresult ;
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  result = (char *) ((arg1)->QuoteUnderlyingContract);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_ContractName_set(void * jarg1, char * jarg2) {
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractName, (const char *)arg2, 71-1);
      arg1->ContractName[71-1] = 0;
    } else {
      arg1->ContractName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeContractInfo_ContractName_get(void * jarg1) {
  char * jresult ;
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  result = (char *) ((arg1)->ContractName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_ContractExpDate_set(void * jarg1, char * jarg2) {
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractExpDate, (const char *)arg2, 11-1);
      arg1->ContractExpDate[11-1] = 0;
    } else {
      arg1->ContractExpDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeContractInfo_ContractExpDate_get(void * jarg1) {
  char * jresult ;
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  result = (char *) ((arg1)->ContractExpDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_LastTradeDate_set(void * jarg1, char * jarg2) {
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastTradeDate, (const char *)arg2, 11-1);
      arg1->LastTradeDate[11-1] = 0;
    } else {
      arg1->LastTradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeContractInfo_LastTradeDate_get(void * jarg1) {
  char * jresult ;
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  result = (char *) ((arg1)->LastTradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_FirstNoticeDate_set(void * jarg1, char * jarg2) {
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FirstNoticeDate, (const char *)arg2, 11-1);
      arg1->FirstNoticeDate[11-1] = 0;
    } else {
      arg1->FirstNoticeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeContractInfo_FirstNoticeDate_get(void * jarg1) {
  char * jresult ;
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  result = (char *) ((arg1)->FirstNoticeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_FutureContractNo_set(void * jarg1, char * jarg2) {
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FutureContractNo, (const char *)arg2, 11-1);
      arg1->FutureContractNo[11-1] = 0;
    } else {
      arg1->FutureContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeContractInfo_FutureContractNo_get(void * jarg1) {
  char * jresult ;
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  result = (char *) ((arg1)->FutureContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPITradeContractInfo() {
  void * jresult ;
  TapAPITradeContractInfo *result = 0 ;
  
  result = (TapAPITradeContractInfo *)new TapAPITradeContractInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPITradeContractInfo(void * jarg1) {
  TapAPITradeContractInfo *arg1 = (TapAPITradeContractInfo *) 0 ;
  
  arg1 = (TapAPITradeContractInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIDeepQuoteInfo_Side_set(void * jarg1, char jarg2) {
  TapAPIDeepQuoteInfo *arg1 = (TapAPIDeepQuoteInfo *) 0 ;
  TAPISideType arg2 ;
  
  arg1 = (TapAPIDeepQuoteInfo *)jarg1; 
  arg2 = (TAPISideType)jarg2; 
  if (arg1) (arg1)->Side = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIDeepQuoteInfo_Side_get(void * jarg1) {
  char jresult ;
  TapAPIDeepQuoteInfo *arg1 = (TapAPIDeepQuoteInfo *) 0 ;
  TAPISideType result;
  
  arg1 = (TapAPIDeepQuoteInfo *)jarg1; 
  result = (TAPISideType) ((arg1)->Side);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIDeepQuoteInfo_Price_set(void * jarg1, double jarg2) {
  TapAPIDeepQuoteInfo *arg1 = (TapAPIDeepQuoteInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIDeepQuoteInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->Price = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIDeepQuoteInfo_Price_get(void * jarg1) {
  double jresult ;
  TapAPIDeepQuoteInfo *arg1 = (TapAPIDeepQuoteInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIDeepQuoteInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->Price);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIDeepQuoteInfo_Qty_set(void * jarg1, unsigned int jarg2) {
  TapAPIDeepQuoteInfo *arg1 = (TapAPIDeepQuoteInfo *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPIDeepQuoteInfo *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->Qty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIDeepQuoteInfo_Qty_get(void * jarg1) {
  unsigned int jresult ;
  TapAPIDeepQuoteInfo *arg1 = (TapAPIDeepQuoteInfo *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPIDeepQuoteInfo *)jarg1; 
  result = (TAPIUINT32) ((arg1)->Qty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIDeepQuoteInfo() {
  void * jresult ;
  TapAPIDeepQuoteInfo *result = 0 ;
  
  result = (TapAPIDeepQuoteInfo *)new TapAPIDeepQuoteInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIDeepQuoteInfo(void * jarg1) {
  TapAPIDeepQuoteInfo *arg1 = (TapAPIDeepQuoteInfo *) 0 ;
  
  arg1 = (TapAPIDeepQuoteInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIDeepQuoteQryRsp_Contract_set(void * jarg1, void * jarg2) {
  TapAPIDeepQuoteQryRsp *arg1 = (TapAPIDeepQuoteQryRsp *) 0 ;
  TapAPIContract *arg2 = (TapAPIContract *) 0 ;
  
  arg1 = (TapAPIDeepQuoteQryRsp *)jarg1; 
  arg2 = (TapAPIContract *)jarg2; 
  if (arg1) (arg1)->Contract = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPIDeepQuoteQryRsp_Contract_get(void * jarg1) {
  void * jresult ;
  TapAPIDeepQuoteQryRsp *arg1 = (TapAPIDeepQuoteQryRsp *) 0 ;
  TapAPIContract *result = 0 ;
  
  arg1 = (TapAPIDeepQuoteQryRsp *)jarg1; 
  result = (TapAPIContract *)& ((arg1)->Contract);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIDeepQuoteQryRsp_DeepQuote_set(void * jarg1, void * jarg2) {
  TapAPIDeepQuoteQryRsp *arg1 = (TapAPIDeepQuoteQryRsp *) 0 ;
  TapAPIDeepQuoteInfo *arg2 = (TapAPIDeepQuoteInfo *) 0 ;
  
  arg1 = (TapAPIDeepQuoteQryRsp *)jarg1; 
  arg2 = (TapAPIDeepQuoteInfo *)jarg2; 
  if (arg1) (arg1)->DeepQuote = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPIDeepQuoteQryRsp_DeepQuote_get(void * jarg1) {
  void * jresult ;
  TapAPIDeepQuoteQryRsp *arg1 = (TapAPIDeepQuoteQryRsp *) 0 ;
  TapAPIDeepQuoteInfo *result = 0 ;
  
  arg1 = (TapAPIDeepQuoteQryRsp *)jarg1; 
  result = (TapAPIDeepQuoteInfo *)& ((arg1)->DeepQuote);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIDeepQuoteQryRsp() {
  void * jresult ;
  TapAPIDeepQuoteQryRsp *result = 0 ;
  
  result = (TapAPIDeepQuoteQryRsp *)new TapAPIDeepQuoteQryRsp();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIDeepQuoteQryRsp(void * jarg1) {
  TapAPIDeepQuoteQryRsp *arg1 = (TapAPIDeepQuoteQryRsp *) 0 ;
  
  arg1 = (TapAPIDeepQuoteQryRsp *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIExchangeStateInfoQryReq() {
  void * jresult ;
  TapAPIExchangeStateInfoQryReq *result = 0 ;
  
  result = (TapAPIExchangeStateInfoQryReq *)new TapAPIExchangeStateInfoQryReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIExchangeStateInfoQryReq(void * jarg1) {
  TapAPIExchangeStateInfoQryReq *arg1 = (TapAPIExchangeStateInfoQryReq *) 0 ;
  
  arg1 = (TapAPIExchangeStateInfoQryReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIExchangeStateInfo_UpperChannelNo_set(void * jarg1, char * jarg2) {
  TapAPIExchangeStateInfo *arg1 = (TapAPIExchangeStateInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIExchangeStateInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperChannelNo, (const char *)arg2, 11-1);
      arg1->UpperChannelNo[11-1] = 0;
    } else {
      arg1->UpperChannelNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIExchangeStateInfo_UpperChannelNo_get(void * jarg1) {
  char * jresult ;
  TapAPIExchangeStateInfo *arg1 = (TapAPIExchangeStateInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIExchangeStateInfo *)jarg1; 
  result = (char *) ((arg1)->UpperChannelNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIExchangeStateInfo_ExchangeNo_set(void * jarg1, char * jarg2) {
  TapAPIExchangeStateInfo *arg1 = (TapAPIExchangeStateInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIExchangeStateInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIExchangeStateInfo_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  TapAPIExchangeStateInfo *arg1 = (TapAPIExchangeStateInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIExchangeStateInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIExchangeStateInfo_CommodityType_set(void * jarg1, char jarg2) {
  TapAPIExchangeStateInfo *arg1 = (TapAPIExchangeStateInfo *) 0 ;
  TAPICommodityType arg2 ;
  
  arg1 = (TapAPIExchangeStateInfo *)jarg1; 
  arg2 = (TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIExchangeStateInfo_CommodityType_get(void * jarg1) {
  char jresult ;
  TapAPIExchangeStateInfo *arg1 = (TapAPIExchangeStateInfo *) 0 ;
  TAPICommodityType result;
  
  arg1 = (TapAPIExchangeStateInfo *)jarg1; 
  result = (TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIExchangeStateInfo_CommodityNo_set(void * jarg1, char * jarg2) {
  TapAPIExchangeStateInfo *arg1 = (TapAPIExchangeStateInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIExchangeStateInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIExchangeStateInfo_CommodityNo_get(void * jarg1) {
  char * jresult ;
  TapAPIExchangeStateInfo *arg1 = (TapAPIExchangeStateInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIExchangeStateInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIExchangeStateInfo_ExchangeTime_set(void * jarg1, char * jarg2) {
  TapAPIExchangeStateInfo *arg1 = (TapAPIExchangeStateInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIExchangeStateInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeTime, (const char *)arg2, 20-1);
      arg1->ExchangeTime[20-1] = 0;
    } else {
      arg1->ExchangeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIExchangeStateInfo_ExchangeTime_get(void * jarg1) {
  char * jresult ;
  TapAPIExchangeStateInfo *arg1 = (TapAPIExchangeStateInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIExchangeStateInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIExchangeStateInfo_TradingState_set(void * jarg1, char jarg2) {
  TapAPIExchangeStateInfo *arg1 = (TapAPIExchangeStateInfo *) 0 ;
  TAPITradingStateType arg2 ;
  
  arg1 = (TapAPIExchangeStateInfo *)jarg1; 
  arg2 = (TAPITradingStateType)jarg2; 
  if (arg1) (arg1)->TradingState = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIExchangeStateInfo_TradingState_get(void * jarg1) {
  char jresult ;
  TapAPIExchangeStateInfo *arg1 = (TapAPIExchangeStateInfo *) 0 ;
  TAPITradingStateType result;
  
  arg1 = (TapAPIExchangeStateInfo *)jarg1; 
  result = (TAPITradingStateType) ((arg1)->TradingState);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIExchangeStateInfo() {
  void * jresult ;
  TapAPIExchangeStateInfo *result = 0 ;
  
  result = (TapAPIExchangeStateInfo *)new TapAPIExchangeStateInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIExchangeStateInfo(void * jarg1) {
  TapAPIExchangeStateInfo *arg1 = (TapAPIExchangeStateInfo *) 0 ;
  
  arg1 = (TapAPIExchangeStateInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIExchangeStateInfoNotice_IsLast_set(void * jarg1, char jarg2) {
  TapAPIExchangeStateInfoNotice *arg1 = (TapAPIExchangeStateInfoNotice *) 0 ;
  TAPIYNFLAG arg2 ;
  
  arg1 = (TapAPIExchangeStateInfoNotice *)jarg1; 
  arg2 = (TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsLast = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIExchangeStateInfoNotice_IsLast_get(void * jarg1) {
  char jresult ;
  TapAPIExchangeStateInfoNotice *arg1 = (TapAPIExchangeStateInfoNotice *) 0 ;
  TAPIYNFLAG result;
  
  arg1 = (TapAPIExchangeStateInfoNotice *)jarg1; 
  result = (TAPIYNFLAG) ((arg1)->IsLast);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIExchangeStateInfoNotice_ExchangeStateInfo_set(void * jarg1, void * jarg2) {
  TapAPIExchangeStateInfoNotice *arg1 = (TapAPIExchangeStateInfoNotice *) 0 ;
  TapAPIExchangeStateInfo *arg2 = (TapAPIExchangeStateInfo *) 0 ;
  
  arg1 = (TapAPIExchangeStateInfoNotice *)jarg1; 
  arg2 = (TapAPIExchangeStateInfo *)jarg2; 
  if (arg1) (arg1)->ExchangeStateInfo = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPIExchangeStateInfoNotice_ExchangeStateInfo_get(void * jarg1) {
  void * jresult ;
  TapAPIExchangeStateInfoNotice *arg1 = (TapAPIExchangeStateInfoNotice *) 0 ;
  TapAPIExchangeStateInfo *result = 0 ;
  
  arg1 = (TapAPIExchangeStateInfoNotice *)jarg1; 
  result = (TapAPIExchangeStateInfo *)& ((arg1)->ExchangeStateInfo);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIExchangeStateInfoNotice() {
  void * jresult ;
  TapAPIExchangeStateInfoNotice *result = 0 ;
  
  result = (TapAPIExchangeStateInfoNotice *)new TapAPIExchangeStateInfoNotice();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIExchangeStateInfoNotice(void * jarg1) {
  TapAPIExchangeStateInfoNotice *arg1 = (TapAPIExchangeStateInfoNotice *) 0 ;
  
  arg1 = (TapAPIExchangeStateInfoNotice *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIReqQuoteNotice_ExchangeNo_set(void * jarg1, char * jarg2) {
  TapAPIReqQuoteNotice *arg1 = (TapAPIReqQuoteNotice *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIReqQuoteNotice *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIReqQuoteNotice_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  TapAPIReqQuoteNotice *arg1 = (TapAPIReqQuoteNotice *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIReqQuoteNotice *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIReqQuoteNotice_CommodityType_set(void * jarg1, char jarg2) {
  TapAPIReqQuoteNotice *arg1 = (TapAPIReqQuoteNotice *) 0 ;
  TAPICommodityType arg2 ;
  
  arg1 = (TapAPIReqQuoteNotice *)jarg1; 
  arg2 = (TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIReqQuoteNotice_CommodityType_get(void * jarg1) {
  char jresult ;
  TapAPIReqQuoteNotice *arg1 = (TapAPIReqQuoteNotice *) 0 ;
  TAPICommodityType result;
  
  arg1 = (TapAPIReqQuoteNotice *)jarg1; 
  result = (TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIReqQuoteNotice_CommodityNo_set(void * jarg1, char * jarg2) {
  TapAPIReqQuoteNotice *arg1 = (TapAPIReqQuoteNotice *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIReqQuoteNotice *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIReqQuoteNotice_CommodityNo_get(void * jarg1) {
  char * jresult ;
  TapAPIReqQuoteNotice *arg1 = (TapAPIReqQuoteNotice *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIReqQuoteNotice *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIReqQuoteNotice_ContractNo_set(void * jarg1, char * jarg2) {
  TapAPIReqQuoteNotice *arg1 = (TapAPIReqQuoteNotice *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIReqQuoteNotice *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIReqQuoteNotice_ContractNo_get(void * jarg1) {
  char * jresult ;
  TapAPIReqQuoteNotice *arg1 = (TapAPIReqQuoteNotice *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIReqQuoteNotice *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIReqQuoteNotice_StrikePrice_set(void * jarg1, char * jarg2) {
  TapAPIReqQuoteNotice *arg1 = (TapAPIReqQuoteNotice *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIReqQuoteNotice *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice, (const char *)arg2, 11-1);
      arg1->StrikePrice[11-1] = 0;
    } else {
      arg1->StrikePrice[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIReqQuoteNotice_StrikePrice_get(void * jarg1) {
  char * jresult ;
  TapAPIReqQuoteNotice *arg1 = (TapAPIReqQuoteNotice *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIReqQuoteNotice *)jarg1; 
  result = (char *) ((arg1)->StrikePrice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIReqQuoteNotice_CallOrPutFlag_set(void * jarg1, char jarg2) {
  TapAPIReqQuoteNotice *arg1 = (TapAPIReqQuoteNotice *) 0 ;
  TAPICallOrPutFlagType arg2 ;
  
  arg1 = (TapAPIReqQuoteNotice *)jarg1; 
  arg2 = (TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIReqQuoteNotice_CallOrPutFlag_get(void * jarg1) {
  char jresult ;
  TapAPIReqQuoteNotice *arg1 = (TapAPIReqQuoteNotice *) 0 ;
  TAPICallOrPutFlagType result;
  
  arg1 = (TapAPIReqQuoteNotice *)jarg1; 
  result = (TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIReqQuoteNotice_InquiryNo_set(void * jarg1, char * jarg2) {
  TapAPIReqQuoteNotice *arg1 = (TapAPIReqQuoteNotice *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIReqQuoteNotice *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InquiryNo, (const char *)arg2, 51-1);
      arg1->InquiryNo[51-1] = 0;
    } else {
      arg1->InquiryNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIReqQuoteNotice_InquiryNo_get(void * jarg1) {
  char * jresult ;
  TapAPIReqQuoteNotice *arg1 = (TapAPIReqQuoteNotice *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIReqQuoteNotice *)jarg1; 
  result = (char *) ((arg1)->InquiryNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIReqQuoteNotice_UpdateTime_set(void * jarg1, char * jarg2) {
  TapAPIReqQuoteNotice *arg1 = (TapAPIReqQuoteNotice *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIReqQuoteNotice *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpdateTime, (const char *)arg2, 20-1);
      arg1->UpdateTime[20-1] = 0;
    } else {
      arg1->UpdateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIReqQuoteNotice_UpdateTime_get(void * jarg1) {
  char * jresult ;
  TapAPIReqQuoteNotice *arg1 = (TapAPIReqQuoteNotice *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIReqQuoteNotice *)jarg1; 
  result = (char *) ((arg1)->UpdateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIReqQuoteNotice() {
  void * jresult ;
  TapAPIReqQuoteNotice *result = 0 ;
  
  result = (TapAPIReqQuoteNotice *)new TapAPIReqQuoteNotice();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIReqQuoteNotice(void * jarg1) {
  TapAPIReqQuoteNotice *arg1 = (TapAPIReqQuoteNotice *) 0 ;
  
  arg1 = (TapAPIReqQuoteNotice *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIUpperChannelQryReq() {
  void * jresult ;
  TapAPIUpperChannelQryReq *result = 0 ;
  
  result = (TapAPIUpperChannelQryReq *)new TapAPIUpperChannelQryReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIUpperChannelQryReq(void * jarg1) {
  TapAPIUpperChannelQryReq *arg1 = (TapAPIUpperChannelQryReq *) 0 ;
  
  arg1 = (TapAPIUpperChannelQryReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIUpperChannelInfo_UpperChannelNo_set(void * jarg1, char * jarg2) {
  TapAPIUpperChannelInfo *arg1 = (TapAPIUpperChannelInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIUpperChannelInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperChannelNo, (const char *)arg2, 11-1);
      arg1->UpperChannelNo[11-1] = 0;
    } else {
      arg1->UpperChannelNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIUpperChannelInfo_UpperChannelNo_get(void * jarg1) {
  char * jresult ;
  TapAPIUpperChannelInfo *arg1 = (TapAPIUpperChannelInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIUpperChannelInfo *)jarg1; 
  result = (char *) ((arg1)->UpperChannelNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIUpperChannelInfo_UpperChannelName_set(void * jarg1, char * jarg2) {
  TapAPIUpperChannelInfo *arg1 = (TapAPIUpperChannelInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIUpperChannelInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperChannelName, (const char *)arg2, 21-1);
      arg1->UpperChannelName[21-1] = 0;
    } else {
      arg1->UpperChannelName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIUpperChannelInfo_UpperChannelName_get(void * jarg1) {
  char * jresult ;
  TapAPIUpperChannelInfo *arg1 = (TapAPIUpperChannelInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIUpperChannelInfo *)jarg1; 
  result = (char *) ((arg1)->UpperChannelName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIUpperChannelInfo_UpperNo_set(void * jarg1, char * jarg2) {
  TapAPIUpperChannelInfo *arg1 = (TapAPIUpperChannelInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIUpperChannelInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperNo, (const char *)arg2, 11-1);
      arg1->UpperNo[11-1] = 0;
    } else {
      arg1->UpperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIUpperChannelInfo_UpperNo_get(void * jarg1) {
  char * jresult ;
  TapAPIUpperChannelInfo *arg1 = (TapAPIUpperChannelInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIUpperChannelInfo *)jarg1; 
  result = (char *) ((arg1)->UpperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIUpperChannelInfo_UpperUserNo_set(void * jarg1, char * jarg2) {
  TapAPIUpperChannelInfo *arg1 = (TapAPIUpperChannelInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIUpperChannelInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperUserNo, (const char *)arg2, 21-1);
      arg1->UpperUserNo[21-1] = 0;
    } else {
      arg1->UpperUserNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIUpperChannelInfo_UpperUserNo_get(void * jarg1) {
  char * jresult ;
  TapAPIUpperChannelInfo *arg1 = (TapAPIUpperChannelInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIUpperChannelInfo *)jarg1; 
  result = (char *) ((arg1)->UpperUserNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIUpperChannelInfo() {
  void * jresult ;
  TapAPIUpperChannelInfo *result = 0 ;
  
  result = (TapAPIUpperChannelInfo *)new TapAPIUpperChannelInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIUpperChannelInfo(void * jarg1) {
  TapAPIUpperChannelInfo *arg1 = (TapAPIUpperChannelInfo *) 0 ;
  
  arg1 = (TapAPIUpperChannelInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentQryReq_AccountNo_set(void * jarg1, char * jarg2) {
  TapAPIAccountRentQryReq *arg1 = (TapAPIAccountRentQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIAccountRentQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountRentQryReq_AccountNo_get(void * jarg1) {
  char * jresult ;
  TapAPIAccountRentQryReq *arg1 = (TapAPIAccountRentQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIAccountRentQryReq *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentQryReq_ExchangeNo_set(void * jarg1, char * jarg2) {
  TapAPIAccountRentQryReq *arg1 = (TapAPIAccountRentQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIAccountRentQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountRentQryReq_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  TapAPIAccountRentQryReq *arg1 = (TapAPIAccountRentQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIAccountRentQryReq *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentQryReq_CommodityType_set(void * jarg1, char jarg2) {
  TapAPIAccountRentQryReq *arg1 = (TapAPIAccountRentQryReq *) 0 ;
  TAPICommodityType arg2 ;
  
  arg1 = (TapAPIAccountRentQryReq *)jarg1; 
  arg2 = (TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIAccountRentQryReq_CommodityType_get(void * jarg1) {
  char jresult ;
  TapAPIAccountRentQryReq *arg1 = (TapAPIAccountRentQryReq *) 0 ;
  TAPICommodityType result;
  
  arg1 = (TapAPIAccountRentQryReq *)jarg1; 
  result = (TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentQryReq_CommodityNo_set(void * jarg1, char * jarg2) {
  TapAPIAccountRentQryReq *arg1 = (TapAPIAccountRentQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIAccountRentQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountRentQryReq_CommodityNo_get(void * jarg1) {
  char * jresult ;
  TapAPIAccountRentQryReq *arg1 = (TapAPIAccountRentQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIAccountRentQryReq *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentQryReq_ContractNo_set(void * jarg1, char * jarg2) {
  TapAPIAccountRentQryReq *arg1 = (TapAPIAccountRentQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIAccountRentQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountRentQryReq_ContractNo_get(void * jarg1) {
  char * jresult ;
  TapAPIAccountRentQryReq *arg1 = (TapAPIAccountRentQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIAccountRentQryReq *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIAccountRentQryReq() {
  void * jresult ;
  TapAPIAccountRentQryReq *result = 0 ;
  
  result = (TapAPIAccountRentQryReq *)new TapAPIAccountRentQryReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIAccountRentQryReq(void * jarg1) {
  TapAPIAccountRentQryReq *arg1 = (TapAPIAccountRentQryReq *) 0 ;
  
  arg1 = (TapAPIAccountRentQryReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_AccountNo_set(void * jarg1, char * jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountRentInfo_AccountNo_get(void * jarg1) {
  char * jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_ExchangeNo_set(void * jarg1, char * jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountRentInfo_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_CommodityType_set(void * jarg1, char jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPICommodityType arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIAccountRentInfo_CommodityType_get(void * jarg1) {
  char jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPICommodityType result;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_CommodityNo_set(void * jarg1, char * jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountRentInfo_CommodityNo_get(void * jarg1) {
  char * jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_ContractNo_set(void * jarg1, char * jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountRentInfo_ContractNo_get(void * jarg1) {
  char * jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_MatchSource_set(void * jarg1, char jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIMatchSourceType arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (TAPIMatchSourceType)jarg2; 
  if (arg1) (arg1)->MatchSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIAccountRentInfo_MatchSource_get(void * jarg1) {
  char jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIMatchSourceType result;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (TAPIMatchSourceType) ((arg1)->MatchSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_CurrencyNo_set(void * jarg1, char * jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyNo, (const char *)arg2, 11-1);
      arg1->CurrencyNo[11-1] = 0;
    } else {
      arg1->CurrencyNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountRentInfo_CurrencyNo_get(void * jarg1) {
  char * jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (char *) ((arg1)->CurrencyNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_FeeMode_set(void * jarg1, char jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPICalculateModeType arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (TAPICalculateModeType)jarg2; 
  if (arg1) (arg1)->FeeMode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIAccountRentInfo_FeeMode_get(void * jarg1) {
  char jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPICalculateModeType result;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (TAPICalculateModeType) ((arg1)->FeeMode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_OpenTurnover_set(void * jarg1, double jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OpenTurnover = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountRentInfo_OpenTurnover_get(void * jarg1) {
  double jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->OpenTurnover);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_ClosedTurnover_set(void * jarg1, double jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->ClosedTurnover = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountRentInfo_ClosedTurnover_get(void * jarg1) {
  double jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->ClosedTurnover);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_CloseNewTurnover_set(void * jarg1, double jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->CloseNewTurnover = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountRentInfo_CloseNewTurnover_get(void * jarg1) {
  double jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->CloseNewTurnover);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_OpenVolume_set(void * jarg1, double jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OpenVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountRentInfo_OpenVolume_get(void * jarg1) {
  double jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->OpenVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_ClosedVolume_set(void * jarg1, double jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->ClosedVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountRentInfo_ClosedVolume_get(void * jarg1) {
  double jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->ClosedVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_CloseNewVolume_set(void * jarg1, double jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->CloseNewVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountRentInfo_CloseNewVolume_get(void * jarg1) {
  double jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->CloseNewVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_MarginMode_set(void * jarg1, char jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPICalculateModeType arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (TAPICalculateModeType)jarg2; 
  if (arg1) (arg1)->MarginMode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIAccountRentInfo_MarginMode_get(void * jarg1) {
  char jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPICalculateModeType result;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (TAPICalculateModeType) ((arg1)->MarginMode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_BuyTInitMargin_set(void * jarg1, double jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->BuyTInitMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountRentInfo_BuyTInitMargin_get(void * jarg1) {
  double jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->BuyTInitMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_SellTInitMargin_set(void * jarg1, double jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->SellTInitMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountRentInfo_SellTInitMargin_get(void * jarg1) {
  double jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->SellTInitMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_BuyBInitMargin_set(void * jarg1, double jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->BuyBInitMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountRentInfo_BuyBInitMargin_get(void * jarg1) {
  double jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->BuyBInitMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_SellBInitMargin_set(void * jarg1, double jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->SellBInitMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountRentInfo_SellBInitMargin_get(void * jarg1) {
  double jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->SellBInitMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_BuyLInitMargin_set(void * jarg1, double jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->BuyLInitMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountRentInfo_BuyLInitMargin_get(void * jarg1) {
  double jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->BuyLInitMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_SellLInitMargin_set(void * jarg1, double jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->SellLInitMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountRentInfo_SellLInitMargin_get(void * jarg1) {
  double jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->SellLInitMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_BuyMInitMargin_set(void * jarg1, double jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->BuyMInitMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountRentInfo_BuyMInitMargin_get(void * jarg1) {
  double jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->BuyMInitMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_SellMInitMargin_set(void * jarg1, double jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->SellMInitMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountRentInfo_SellMInitMargin_get(void * jarg1) {
  double jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->SellMInitMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_BuyTMaintMargin_set(void * jarg1, double jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->BuyTMaintMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountRentInfo_BuyTMaintMargin_get(void * jarg1) {
  double jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->BuyTMaintMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_SellTMaintMargin_set(void * jarg1, double jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->SellTMaintMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountRentInfo_SellTMaintMargin_get(void * jarg1) {
  double jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->SellTMaintMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_BuyBMaintMargin_set(void * jarg1, double jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->BuyBMaintMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountRentInfo_BuyBMaintMargin_get(void * jarg1) {
  double jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->BuyBMaintMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_SellBMaintMargin_set(void * jarg1, double jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->SellBMaintMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountRentInfo_SellBMaintMargin_get(void * jarg1) {
  double jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->SellBMaintMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_BuyLMaintMargin_set(void * jarg1, double jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->BuyLMaintMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountRentInfo_BuyLMaintMargin_get(void * jarg1) {
  double jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->BuyLMaintMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_SellLMaintMargin_set(void * jarg1, double jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->SellLMaintMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountRentInfo_SellLMaintMargin_get(void * jarg1) {
  double jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->SellLMaintMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_BuyMMaintMargin_set(void * jarg1, double jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->BuyMMaintMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountRentInfo_BuyMMaintMargin_get(void * jarg1) {
  double jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->BuyMMaintMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountRentInfo_SellMMaintMargin_set(void * jarg1, double jarg2) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->SellMMaintMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountRentInfo_SellMMaintMargin_get(void * jarg1) {
  double jresult ;
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->SellMMaintMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIAccountRentInfo() {
  void * jresult ;
  TapAPIAccountRentInfo *result = 0 ;
  
  result = (TapAPIAccountRentInfo *)new TapAPIAccountRentInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIAccountRentInfo(void * jarg1) {
  TapAPIAccountRentInfo *arg1 = (TapAPIAccountRentInfo *) 0 ;
  
  arg1 = (TapAPIAccountRentInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnConnect(void * jarg1) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  (arg1)->OnConnect();
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspLogin(void * jarg1, int jarg2, void * jarg3) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TAPIINT32 arg2 ;
  TapAPITradeLoginRspInfo *arg3 = (TapAPITradeLoginRspInfo *) 0 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TAPIINT32)jarg2; 
  arg3 = (TapAPITradeLoginRspInfo *)jarg3; 
  (arg1)->OnRspLogin(arg2,(TapAPITradeLoginRspInfo const *)arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnAPIReady(void * jarg1, int jarg2) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TAPIINT32 arg2 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TAPIINT32)jarg2; 
  (arg1)->OnAPIReady(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnDisconnect(void * jarg1, int jarg2) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TAPIINT32 arg2 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TAPIINT32)jarg2; 
  (arg1)->OnDisconnect(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspChangePassword(void * jarg1, unsigned int jarg2, int jarg3) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TAPIUINT32 arg2 ;
  TAPIINT32 arg3 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  arg3 = (TAPIINT32)jarg3; 
  (arg1)->OnRspChangePassword(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspSetReservedInfo(void * jarg1, unsigned int jarg2, int jarg3, char * jarg4) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TAPIUINT32 arg2 ;
  TAPIINT32 arg3 ;
  char *arg4 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  arg3 = (TAPIINT32)jarg3; 
  arg4 = (char *)jarg4; 
  (arg1)->OnRspSetReservedInfo(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryAccount(void * jarg1, unsigned int jarg2, unsigned int jarg3, char jarg4, void * jarg5) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TAPIUINT32 arg2 ;
  TAPIUINT32 arg3 ;
  TAPIYNFLAG arg4 ;
  TapAPIAccountInfo *arg5 = (TapAPIAccountInfo *) 0 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  arg3 = (TAPIUINT32)jarg3; 
  arg4 = (TAPIYNFLAG)jarg4; 
  arg5 = (TapAPIAccountInfo *)jarg5; 
  (arg1)->OnRspQryAccount(arg2,arg3,arg4,(TapAPIAccountInfo const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryFund(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TAPIUINT32 arg2 ;
  TAPIINT32 arg3 ;
  TAPIYNFLAG arg4 ;
  TapAPIFundData *arg5 = (TapAPIFundData *) 0 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  arg3 = (TAPIINT32)jarg3; 
  arg4 = (TAPIYNFLAG)jarg4; 
  arg5 = (TapAPIFundData *)jarg5; 
  (arg1)->OnRspQryFund(arg2,arg3,arg4,(TapAPIFundData const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRtnFund(void * jarg1, void * jarg2) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TapAPIFundData *arg2 = (TapAPIFundData *) 0 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TapAPIFundData *)jarg2; 
  (arg1)->OnRtnFund((TapAPIFundData const *)arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryExchange(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TAPIUINT32 arg2 ;
  TAPIINT32 arg3 ;
  TAPIYNFLAG arg4 ;
  TapAPIExchangeInfo *arg5 = (TapAPIExchangeInfo *) 0 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  arg3 = (TAPIINT32)jarg3; 
  arg4 = (TAPIYNFLAG)jarg4; 
  arg5 = (TapAPIExchangeInfo *)jarg5; 
  (arg1)->OnRspQryExchange(arg2,arg3,arg4,(TapAPIExchangeInfo const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryCommodity(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TAPIUINT32 arg2 ;
  TAPIINT32 arg3 ;
  TAPIYNFLAG arg4 ;
  TapAPICommodityInfo *arg5 = (TapAPICommodityInfo *) 0 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  arg3 = (TAPIINT32)jarg3; 
  arg4 = (TAPIYNFLAG)jarg4; 
  arg5 = (TapAPICommodityInfo *)jarg5; 
  (arg1)->OnRspQryCommodity(arg2,arg3,arg4,(TapAPICommodityInfo const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryContract(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TAPIUINT32 arg2 ;
  TAPIINT32 arg3 ;
  TAPIYNFLAG arg4 ;
  TapAPITradeContractInfo *arg5 = (TapAPITradeContractInfo *) 0 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  arg3 = (TAPIINT32)jarg3; 
  arg4 = (TAPIYNFLAG)jarg4; 
  arg5 = (TapAPITradeContractInfo *)jarg5; 
  (arg1)->OnRspQryContract(arg2,arg3,arg4,(TapAPITradeContractInfo const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRtnContract(void * jarg1, void * jarg2) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TapAPITradeContractInfo *arg2 = (TapAPITradeContractInfo *) 0 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TapAPITradeContractInfo *)jarg2; 
  (arg1)->OnRtnContract((TapAPITradeContractInfo const *)arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRtnOrder(void * jarg1, void * jarg2) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TapAPIOrderInfoNotice *arg2 = (TapAPIOrderInfoNotice *) 0 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TapAPIOrderInfoNotice *)jarg2; 
  (arg1)->OnRtnOrder((TapAPIOrderInfoNotice const *)arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspOrderAction(void * jarg1, unsigned int jarg2, unsigned int jarg3, void * jarg4) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TAPIUINT32 arg2 ;
  TAPIUINT32 arg3 ;
  TapAPIOrderActionRsp *arg4 = (TapAPIOrderActionRsp *) 0 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  arg3 = (TAPIUINT32)jarg3; 
  arg4 = (TapAPIOrderActionRsp *)jarg4; 
  (arg1)->OnRspOrderAction(arg2,arg3,(TapAPIOrderActionRsp const *)arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryOrder(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TAPIUINT32 arg2 ;
  TAPIINT32 arg3 ;
  TAPIYNFLAG arg4 ;
  TapAPIOrderInfo *arg5 = (TapAPIOrderInfo *) 0 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  arg3 = (TAPIINT32)jarg3; 
  arg4 = (TAPIYNFLAG)jarg4; 
  arg5 = (TapAPIOrderInfo *)jarg5; 
  (arg1)->OnRspQryOrder(arg2,arg3,arg4,(TapAPIOrderInfo const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryOrderProcess(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TAPIUINT32 arg2 ;
  TAPIINT32 arg3 ;
  TAPIYNFLAG arg4 ;
  TapAPIOrderInfo *arg5 = (TapAPIOrderInfo *) 0 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  arg3 = (TAPIINT32)jarg3; 
  arg4 = (TAPIYNFLAG)jarg4; 
  arg5 = (TapAPIOrderInfo *)jarg5; 
  (arg1)->OnRspQryOrderProcess(arg2,arg3,arg4,(TapAPIOrderInfo const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryFill(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TAPIUINT32 arg2 ;
  TAPIINT32 arg3 ;
  TAPIYNFLAG arg4 ;
  TapAPIFillInfo *arg5 = (TapAPIFillInfo *) 0 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  arg3 = (TAPIINT32)jarg3; 
  arg4 = (TAPIYNFLAG)jarg4; 
  arg5 = (TapAPIFillInfo *)jarg5; 
  (arg1)->OnRspQryFill(arg2,arg3,arg4,(TapAPIFillInfo const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRtnFill(void * jarg1, void * jarg2) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TapAPIFillInfo *arg2 = (TapAPIFillInfo *) 0 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TapAPIFillInfo *)jarg2; 
  (arg1)->OnRtnFill((TapAPIFillInfo const *)arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryPosition(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TAPIUINT32 arg2 ;
  TAPIINT32 arg3 ;
  TAPIYNFLAG arg4 ;
  TapAPIPositionInfo *arg5 = (TapAPIPositionInfo *) 0 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  arg3 = (TAPIINT32)jarg3; 
  arg4 = (TAPIYNFLAG)jarg4; 
  arg5 = (TapAPIPositionInfo *)jarg5; 
  (arg1)->OnRspQryPosition(arg2,arg3,arg4,(TapAPIPositionInfo const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRtnPosition(void * jarg1, void * jarg2) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TapAPIPositionInfo *arg2 = (TapAPIPositionInfo *) 0 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TapAPIPositionInfo *)jarg2; 
  (arg1)->OnRtnPosition((TapAPIPositionInfo const *)arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryClose(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TAPIUINT32 arg2 ;
  TAPIINT32 arg3 ;
  TAPIYNFLAG arg4 ;
  TapAPICloseInfo *arg5 = (TapAPICloseInfo *) 0 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  arg3 = (TAPIINT32)jarg3; 
  arg4 = (TAPIYNFLAG)jarg4; 
  arg5 = (TapAPICloseInfo *)jarg5; 
  (arg1)->OnRspQryClose(arg2,arg3,arg4,(TapAPICloseInfo const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRtnClose(void * jarg1, void * jarg2) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TapAPICloseInfo *arg2 = (TapAPICloseInfo *) 0 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TapAPICloseInfo *)jarg2; 
  (arg1)->OnRtnClose((TapAPICloseInfo const *)arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRtnPositionProfit(void * jarg1, void * jarg2) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TapAPIPositionProfitNotice *arg2 = (TapAPIPositionProfitNotice *) 0 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TapAPIPositionProfitNotice *)jarg2; 
  (arg1)->OnRtnPositionProfit((TapAPIPositionProfitNotice const *)arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryDeepQuote(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TAPIUINT32 arg2 ;
  TAPIINT32 arg3 ;
  TAPIYNFLAG arg4 ;
  TapAPIDeepQuoteQryRsp *arg5 = (TapAPIDeepQuoteQryRsp *) 0 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  arg3 = (TAPIINT32)jarg3; 
  arg4 = (TAPIYNFLAG)jarg4; 
  arg5 = (TapAPIDeepQuoteQryRsp *)jarg5; 
  (arg1)->OnRspQryDeepQuote(arg2,arg3,arg4,(TapAPIDeepQuoteQryRsp const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryExchangeStateInfo(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TAPIUINT32 arg2 ;
  TAPIINT32 arg3 ;
  TAPIYNFLAG arg4 ;
  TapAPIExchangeStateInfo *arg5 = (TapAPIExchangeStateInfo *) 0 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  arg3 = (TAPIINT32)jarg3; 
  arg4 = (TAPIYNFLAG)jarg4; 
  arg5 = (TapAPIExchangeStateInfo *)jarg5; 
  (arg1)->OnRspQryExchangeStateInfo(arg2,arg3,arg4,(TapAPIExchangeStateInfo const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRtnExchangeStateInfo(void * jarg1, void * jarg2) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TapAPIExchangeStateInfoNotice *arg2 = (TapAPIExchangeStateInfoNotice *) 0 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TapAPIExchangeStateInfoNotice *)jarg2; 
  (arg1)->OnRtnExchangeStateInfo((TapAPIExchangeStateInfoNotice const *)arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRtnReqQuoteNotice(void * jarg1, void * jarg2) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TapAPIReqQuoteNotice *arg2 = (TapAPIReqQuoteNotice *) 0 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TapAPIReqQuoteNotice *)jarg2; 
  (arg1)->OnRtnReqQuoteNotice((TapAPIReqQuoteNotice const *)arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspUpperChannelInfo(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TAPIUINT32 arg2 ;
  TAPIINT32 arg3 ;
  TAPIYNFLAG arg4 ;
  TapAPIUpperChannelInfo *arg5 = (TapAPIUpperChannelInfo *) 0 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  arg3 = (TAPIINT32)jarg3; 
  arg4 = (TAPIYNFLAG)jarg4; 
  arg5 = (TapAPIUpperChannelInfo *)jarg5; 
  (arg1)->OnRspUpperChannelInfo(arg2,arg3,arg4,(TapAPIUpperChannelInfo const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspAccountRentInfo(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  TAPIUINT32 arg2 ;
  TAPIINT32 arg3 ;
  TAPIYNFLAG arg4 ;
  TapAPIAccountRentInfo *arg5 = (TapAPIAccountRentInfo *) 0 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  arg3 = (TAPIINT32)jarg3; 
  arg4 = (TAPIYNFLAG)jarg4; 
  arg5 = (TapAPIAccountRentInfo *)jarg5; 
  (arg1)->OnRspAccountRentInfo(arg2,arg3,arg4,(TapAPIAccountRentInfo const *)arg5);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_ITapTradeAPINotify() {
  void * jresult ;
  ITapTradeAPINotify *result = 0 ;
  
  result = (ITapTradeAPINotify *)new SwigDirector_ITapTradeAPINotify();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_ITapTradeAPINotify(void * jarg1) {
  ITapTradeAPINotify *arg1 = (ITapTradeAPINotify *) 0 ;
  
  arg1 = (ITapTradeAPINotify *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_director_connect(void *objarg, SwigDirector_ITapTradeAPINotify::SWIG_Callback0_t callback0, SwigDirector_ITapTradeAPINotify::SWIG_Callback1_t callback1, SwigDirector_ITapTradeAPINotify::SWIG_Callback2_t callback2, SwigDirector_ITapTradeAPINotify::SWIG_Callback3_t callback3, SwigDirector_ITapTradeAPINotify::SWIG_Callback4_t callback4, SwigDirector_ITapTradeAPINotify::SWIG_Callback5_t callback5, SwigDirector_ITapTradeAPINotify::SWIG_Callback6_t callback6, SwigDirector_ITapTradeAPINotify::SWIG_Callback7_t callback7, SwigDirector_ITapTradeAPINotify::SWIG_Callback8_t callback8, SwigDirector_ITapTradeAPINotify::SWIG_Callback9_t callback9, SwigDirector_ITapTradeAPINotify::SWIG_Callback10_t callback10, SwigDirector_ITapTradeAPINotify::SWIG_Callback11_t callback11, SwigDirector_ITapTradeAPINotify::SWIG_Callback12_t callback12, SwigDirector_ITapTradeAPINotify::SWIG_Callback13_t callback13, SwigDirector_ITapTradeAPINotify::SWIG_Callback14_t callback14, SwigDirector_ITapTradeAPINotify::SWIG_Callback15_t callback15, SwigDirector_ITapTradeAPINotify::SWIG_Callback16_t callback16, SwigDirector_ITapTradeAPINotify::SWIG_Callback17_t callback17, SwigDirector_ITapTradeAPINotify::SWIG_Callback18_t callback18, SwigDirector_ITapTradeAPINotify::SWIG_Callback19_t callback19, SwigDirector_ITapTradeAPINotify::SWIG_Callback20_t callback20, SwigDirector_ITapTradeAPINotify::SWIG_Callback21_t callback21, SwigDirector_ITapTradeAPINotify::SWIG_Callback22_t callback22, SwigDirector_ITapTradeAPINotify::SWIG_Callback23_t callback23, SwigDirector_ITapTradeAPINotify::SWIG_Callback24_t callback24, SwigDirector_ITapTradeAPINotify::SWIG_Callback25_t callback25, SwigDirector_ITapTradeAPINotify::SWIG_Callback26_t callback26, SwigDirector_ITapTradeAPINotify::SWIG_Callback27_t callback27, SwigDirector_ITapTradeAPINotify::SWIG_Callback28_t callback28, SwigDirector_ITapTradeAPINotify::SWIG_Callback29_t callback29) {
  ITapTradeAPINotify *obj = (ITapTradeAPINotify *)objarg;
  SwigDirector_ITapTradeAPINotify *director = dynamic_cast<SwigDirector_ITapTradeAPINotify *>(obj);
  if (director) {
    director->swig_connect_director(callback0, callback1, callback2, callback3, callback4, callback5, callback6, callback7, callback8, callback9, callback10, callback11, callback12, callback13, callback14, callback15, callback16, callback17, callback18, callback19, callback20, callback21, callback22, callback23, callback24, callback25, callback26, callback27, callback28, callback29);
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_SetAPINotify(void * jarg1, void * jarg2) {
  int jresult ;
  ITapTradeAPI *arg1 = (ITapTradeAPI *) 0 ;
  ITapTradeAPINotify *arg2 = (ITapTradeAPINotify *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapTradeAPI *)jarg1; 
  arg2 = (ITapTradeAPINotify *)jarg2; 
  result = (TAPIINT32)(arg1)->SetAPINotify(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_SetHostAddress(void * jarg1, char * jarg2, unsigned short jarg3) {
  int jresult ;
  ITapTradeAPI *arg1 = (ITapTradeAPI *) 0 ;
  TAPICHAR *arg2 = (TAPICHAR *) 0 ;
  TAPIUINT16 arg3 ;
  TAPIINT32 result;
  
  arg1 = (ITapTradeAPI *)jarg1; 
  arg2 = (TAPICHAR *)jarg2; 
  arg3 = (TAPIUINT16)jarg3; 
  result = (TAPIINT32)(arg1)->SetHostAddress((TAPICHAR const *)arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_Login(void * jarg1, void * jarg2) {
  int jresult ;
  ITapTradeAPI *arg1 = (ITapTradeAPI *) 0 ;
  TapAPITradeLoginAuth *arg2 = (TapAPITradeLoginAuth *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapTradeAPI *)jarg1; 
  arg2 = (TapAPITradeLoginAuth *)jarg2; 
  result = (TAPIINT32)(arg1)->Login((TapAPITradeLoginAuth const *)arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_Disconnect(void * jarg1) {
  int jresult ;
  ITapTradeAPI *arg1 = (ITapTradeAPI *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapTradeAPI *)jarg1; 
  result = (TAPIINT32)(arg1)->Disconnect();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_ChangePassword(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTradeAPI *arg1 = (ITapTradeAPI *) 0 ;
  TAPIUINT32 *arg2 = (TAPIUINT32 *) 0 ;
  TapAPIChangePasswordReq *arg3 = (TapAPIChangePasswordReq *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapTradeAPI *)jarg1; 
  arg2 = (TAPIUINT32 *)jarg2; 
  arg3 = (TapAPIChangePasswordReq *)jarg3; 
  result = (TAPIINT32)(arg1)->ChangePassword(arg2,(TapAPIChangePasswordReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_HaveCertainRight(void * jarg1, int jarg2) {
  int jresult ;
  ITapTradeAPI *arg1 = (ITapTradeAPI *) 0 ;
  TAPIRightIDType arg2 ;
  TAPIINT32 result;
  
  arg1 = (ITapTradeAPI *)jarg1; 
  arg2 = (TAPIRightIDType)jarg2; 
  result = (TAPIINT32)(arg1)->HaveCertainRight(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_SetReservedInfo(void * jarg1, void * jarg2, char * jarg3) {
  int jresult ;
  ITapTradeAPI *arg1 = (ITapTradeAPI *) 0 ;
  TAPIUINT32 *arg2 = (TAPIUINT32 *) 0 ;
  char *arg3 ;
  TAPIINT32 result;
  
  arg1 = (ITapTradeAPI *)jarg1; 
  arg2 = (TAPIUINT32 *)jarg2; 
  arg3 = (char *)jarg3; 
  result = (TAPIINT32)(arg1)->SetReservedInfo(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryAccount(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTradeAPI *arg1 = (ITapTradeAPI *) 0 ;
  TAPIUINT32 *arg2 = (TAPIUINT32 *) 0 ;
  TapAPIAccQryReq *arg3 = (TapAPIAccQryReq *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapTradeAPI *)jarg1; 
  arg2 = (TAPIUINT32 *)jarg2; 
  arg3 = (TapAPIAccQryReq *)jarg3; 
  result = (TAPIINT32)(arg1)->QryAccount(arg2,(TapAPIAccQryReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryFund(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTradeAPI *arg1 = (ITapTradeAPI *) 0 ;
  TAPIUINT32 *arg2 = (TAPIUINT32 *) 0 ;
  TapAPIFundReq *arg3 = (TapAPIFundReq *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapTradeAPI *)jarg1; 
  arg2 = (TAPIUINT32 *)jarg2; 
  arg3 = (TapAPIFundReq *)jarg3; 
  result = (TAPIINT32)(arg1)->QryFund(arg2,(TapAPIFundReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryExchange(void * jarg1, void * jarg2) {
  int jresult ;
  ITapTradeAPI *arg1 = (ITapTradeAPI *) 0 ;
  TAPIUINT32 *arg2 = (TAPIUINT32 *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapTradeAPI *)jarg1; 
  arg2 = (TAPIUINT32 *)jarg2; 
  result = (TAPIINT32)(arg1)->QryExchange(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryCommodity(void * jarg1, void * jarg2) {
  int jresult ;
  ITapTradeAPI *arg1 = (ITapTradeAPI *) 0 ;
  TAPIUINT32 *arg2 = (TAPIUINT32 *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapTradeAPI *)jarg1; 
  arg2 = (TAPIUINT32 *)jarg2; 
  result = (TAPIINT32)(arg1)->QryCommodity(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryContract(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTradeAPI *arg1 = (ITapTradeAPI *) 0 ;
  TAPIUINT32 *arg2 = (TAPIUINT32 *) 0 ;
  TapAPICommodity *arg3 = (TapAPICommodity *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapTradeAPI *)jarg1; 
  arg2 = (TAPIUINT32 *)jarg2; 
  arg3 = (TapAPICommodity *)jarg3; 
  result = (TAPIINT32)(arg1)->QryContract(arg2,(TapAPICommodity const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_InsertOrder(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTradeAPI *arg1 = (ITapTradeAPI *) 0 ;
  TAPIUINT32 *arg2 = (TAPIUINT32 *) 0 ;
  TapAPINewOrder *arg3 = (TapAPINewOrder *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapTradeAPI *)jarg1; 
  arg2 = (TAPIUINT32 *)jarg2; 
  arg3 = (TapAPINewOrder *)jarg3; 
  result = (TAPIINT32)(arg1)->InsertOrder(arg2,(TapAPINewOrder const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_CancelOrder(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTradeAPI *arg1 = (ITapTradeAPI *) 0 ;
  TAPIUINT32 *arg2 = (TAPIUINT32 *) 0 ;
  TapAPIOrderCancelReq *arg3 = (TapAPIOrderCancelReq *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapTradeAPI *)jarg1; 
  arg2 = (TAPIUINT32 *)jarg2; 
  arg3 = (TapAPIOrderCancelReq *)jarg3; 
  result = (TAPIINT32)(arg1)->CancelOrder(arg2,(TapAPIOrderCancelReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryOrder(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTradeAPI *arg1 = (ITapTradeAPI *) 0 ;
  TAPIUINT32 *arg2 = (TAPIUINT32 *) 0 ;
  TapAPIOrderQryReq *arg3 = (TapAPIOrderQryReq *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapTradeAPI *)jarg1; 
  arg2 = (TAPIUINT32 *)jarg2; 
  arg3 = (TapAPIOrderQryReq *)jarg3; 
  result = (TAPIINT32)(arg1)->QryOrder(arg2,(TapAPIOrderQryReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryOrderProcess(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTradeAPI *arg1 = (ITapTradeAPI *) 0 ;
  TAPIUINT32 *arg2 = (TAPIUINT32 *) 0 ;
  TapAPIOrderProcessQryReq *arg3 = (TapAPIOrderProcessQryReq *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapTradeAPI *)jarg1; 
  arg2 = (TAPIUINT32 *)jarg2; 
  arg3 = (TapAPIOrderProcessQryReq *)jarg3; 
  result = (TAPIINT32)(arg1)->QryOrderProcess(arg2,(TapAPIOrderProcessQryReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryFill(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTradeAPI *arg1 = (ITapTradeAPI *) 0 ;
  TAPIUINT32 *arg2 = (TAPIUINT32 *) 0 ;
  TapAPIFillQryReq *arg3 = (TapAPIFillQryReq *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapTradeAPI *)jarg1; 
  arg2 = (TAPIUINT32 *)jarg2; 
  arg3 = (TapAPIFillQryReq *)jarg3; 
  result = (TAPIINT32)(arg1)->QryFill(arg2,(TapAPIFillQryReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryPosition(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTradeAPI *arg1 = (ITapTradeAPI *) 0 ;
  TAPIUINT32 *arg2 = (TAPIUINT32 *) 0 ;
  TapAPIPositionQryReq *arg3 = (TapAPIPositionQryReq *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapTradeAPI *)jarg1; 
  arg2 = (TAPIUINT32 *)jarg2; 
  arg3 = (TapAPIPositionQryReq *)jarg3; 
  result = (TAPIINT32)(arg1)->QryPosition(arg2,(TapAPIPositionQryReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryClose(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTradeAPI *arg1 = (ITapTradeAPI *) 0 ;
  TAPIUINT32 *arg2 = (TAPIUINT32 *) 0 ;
  TapAPICloseQryReq *arg3 = (TapAPICloseQryReq *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapTradeAPI *)jarg1; 
  arg2 = (TAPIUINT32 *)jarg2; 
  arg3 = (TapAPICloseQryReq *)jarg3; 
  result = (TAPIINT32)(arg1)->QryClose(arg2,(TapAPICloseQryReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryDeepQuote(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTradeAPI *arg1 = (ITapTradeAPI *) 0 ;
  TAPIUINT32 *arg2 = (TAPIUINT32 *) 0 ;
  TapAPIContract *arg3 = (TapAPIContract *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapTradeAPI *)jarg1; 
  arg2 = (TAPIUINT32 *)jarg2; 
  arg3 = (TapAPIContract *)jarg3; 
  result = (TAPIINT32)(arg1)->QryDeepQuote(arg2,(TapAPIContract const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryExchangeStateInfo(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTradeAPI *arg1 = (ITapTradeAPI *) 0 ;
  TAPIUINT32 *arg2 = (TAPIUINT32 *) 0 ;
  TapAPIExchangeStateInfoQryReq *arg3 = (TapAPIExchangeStateInfoQryReq *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapTradeAPI *)jarg1; 
  arg2 = (TAPIUINT32 *)jarg2; 
  arg3 = (TapAPIExchangeStateInfoQryReq *)jarg3; 
  result = (TAPIINT32)(arg1)->QryExchangeStateInfo(arg2,(TapAPIExchangeStateInfoQryReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryUpperChannel(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTradeAPI *arg1 = (ITapTradeAPI *) 0 ;
  TAPIUINT32 *arg2 = (TAPIUINT32 *) 0 ;
  TapAPIUpperChannelQryReq *arg3 = (TapAPIUpperChannelQryReq *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapTradeAPI *)jarg1; 
  arg2 = (TAPIUINT32 *)jarg2; 
  arg3 = (TapAPIUpperChannelQryReq *)jarg3; 
  result = (TAPIINT32)(arg1)->QryUpperChannel(arg2,(TapAPIUpperChannelQryReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryAccountRent(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTradeAPI *arg1 = (ITapTradeAPI *) 0 ;
  TAPIUINT32 *arg2 = (TAPIUINT32 *) 0 ;
  TapAPIAccountRentQryReq *arg3 = (TapAPIAccountRentQryReq *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapTradeAPI *)jarg1; 
  arg2 = (TAPIUINT32 *)jarg2; 
  arg3 = (TapAPIAccountRentQryReq *)jarg3; 
  result = (TAPIINT32)(arg1)->QryAccountRent(arg2,(TapAPIAccountRentQryReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_ActivateOrder(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTradeAPI *arg1 = (ITapTradeAPI *) 0 ;
  TAPIUINT32 *arg2 = (TAPIUINT32 *) 0 ;
  TapAPIOrderActivateReq *arg3 = (TapAPIOrderActivateReq *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapTradeAPI *)jarg1; 
  arg2 = (TAPIUINT32 *)jarg2; 
  arg3 = (TapAPIOrderActivateReq *)jarg3; 
  result = (TAPIINT32)(arg1)->ActivateOrder(arg2,(TapAPIOrderActivateReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_ITapTradeAPI() {
  void * jresult ;
  ITapTradeAPI *result = 0 ;
  
  result = (ITapTradeAPI *)new SwigDirector_ITapTradeAPI();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_ITapTradeAPI(void * jarg1) {
  ITapTradeAPI *arg1 = (ITapTradeAPI *) 0 ;
  
  arg1 = (ITapTradeAPI *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPI_director_connect(void *objarg, SwigDirector_ITapTradeAPI::SWIG_Callback0_t callback0, SwigDirector_ITapTradeAPI::SWIG_Callback1_t callback1, SwigDirector_ITapTradeAPI::SWIG_Callback2_t callback2, SwigDirector_ITapTradeAPI::SWIG_Callback3_t callback3, SwigDirector_ITapTradeAPI::SWIG_Callback4_t callback4, SwigDirector_ITapTradeAPI::SWIG_Callback5_t callback5, SwigDirector_ITapTradeAPI::SWIG_Callback6_t callback6, SwigDirector_ITapTradeAPI::SWIG_Callback7_t callback7, SwigDirector_ITapTradeAPI::SWIG_Callback8_t callback8, SwigDirector_ITapTradeAPI::SWIG_Callback9_t callback9, SwigDirector_ITapTradeAPI::SWIG_Callback10_t callback10, SwigDirector_ITapTradeAPI::SWIG_Callback11_t callback11, SwigDirector_ITapTradeAPI::SWIG_Callback12_t callback12, SwigDirector_ITapTradeAPI::SWIG_Callback13_t callback13, SwigDirector_ITapTradeAPI::SWIG_Callback14_t callback14, SwigDirector_ITapTradeAPI::SWIG_Callback15_t callback15, SwigDirector_ITapTradeAPI::SWIG_Callback16_t callback16, SwigDirector_ITapTradeAPI::SWIG_Callback17_t callback17, SwigDirector_ITapTradeAPI::SWIG_Callback18_t callback18, SwigDirector_ITapTradeAPI::SWIG_Callback19_t callback19, SwigDirector_ITapTradeAPI::SWIG_Callback20_t callback20, SwigDirector_ITapTradeAPI::SWIG_Callback21_t callback21, SwigDirector_ITapTradeAPI::SWIG_Callback22_t callback22, SwigDirector_ITapTradeAPI::SWIG_Callback23_t callback23) {
  ITapTradeAPI *obj = (ITapTradeAPI *)objarg;
  SwigDirector_ITapTradeAPI *director = dynamic_cast<SwigDirector_ITapTradeAPI *>(obj);
  if (director) {
    director->swig_connect_director(callback0, callback1, callback2, callback3, callback4, callback5, callback6, callback7, callback8, callback9, callback10, callback11, callback12, callback13, callback14, callback15, callback16, callback17, callback18, callback19, callback20, callback21, callback22, callback23);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateTapTradeAPI(void * jarg1, void * jarg2) {
  void * jresult ;
  TapAPIApplicationInfo *arg1 = (TapAPIApplicationInfo *) 0 ;
  TAPIINT32 *arg2 = 0 ;
  ITapTradeAPI *result = 0 ;
  
  arg1 = (TapAPIApplicationInfo *)jarg1; 
  arg2 = (TAPIINT32 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "TAPIINT32 & type is null", 0);
    return 0;
  } 
  result = (ITapTradeAPI *)CreateTapTradeAPI((TapAPIApplicationInfo const *)arg1,*arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FreeTapTradeAPI(void * jarg1) {
  ITapTradeAPI *arg1 = (ITapTradeAPI *) 0 ;
  
  arg1 = (ITapTradeAPI *)jarg1; 
  FreeTapTradeAPI(arg1);
}


SWIGEXPORT char * SWIGSTDCALL CSharp_GetTapTradeAPIVersion() {
  char * jresult ;
  TAPICHAR *result = 0 ;
  
  result = (TAPICHAR *)GetTapTradeAPIVersion();
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_SetTapTradeAPIDataPath(char * jarg1) {
  int jresult ;
  TAPICHAR *arg1 = (TAPICHAR *) 0 ;
  TAPIINT32 result;
  
  arg1 = (TAPICHAR *)jarg1; 
  result = (TAPIINT32)SetTapTradeAPIDataPath((char const *)arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_SetTapTradeAPILogLevel(char jarg1) {
  int jresult ;
  TAPILOGLEVEL arg1 ;
  TAPIINT32 result;
  
  arg1 = (TAPILOGLEVEL)jarg1; 
  result = (TAPIINT32)SetTapTradeAPILogLevel(arg1);
  jresult = result; 
  return jresult;
}


#ifdef __cplusplus
}
#endif

