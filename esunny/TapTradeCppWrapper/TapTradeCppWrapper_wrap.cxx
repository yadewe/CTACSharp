/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */


#ifndef SWIGCSHARP
#define SWIGCSHARP
#endif

#define SWIG_DIRECTORS


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stdlib.h>
#include <string.h>
#include <stdio.h>


/* Support for throwing C# exceptions from C/C++. There are two types: 
 * Exceptions that take a message and ArgumentExceptions that take a message and a parameter name. */
typedef enum {
  SWIG_CSharpApplicationException,
  SWIG_CSharpArithmeticException,
  SWIG_CSharpDivideByZeroException,
  SWIG_CSharpIndexOutOfRangeException,
  SWIG_CSharpInvalidCastException,
  SWIG_CSharpInvalidOperationException,
  SWIG_CSharpIOException,
  SWIG_CSharpNullReferenceException,
  SWIG_CSharpOutOfMemoryException,
  SWIG_CSharpOverflowException,
  SWIG_CSharpSystemException
} SWIG_CSharpExceptionCodes;

typedef enum {
  SWIG_CSharpArgumentException,
  SWIG_CSharpArgumentNullException,
  SWIG_CSharpArgumentOutOfRangeException
} SWIG_CSharpExceptionArgumentCodes;

typedef void (SWIGSTDCALL* SWIG_CSharpExceptionCallback_t)(const char *);
typedef void (SWIGSTDCALL* SWIG_CSharpExceptionArgumentCallback_t)(const char *, const char *);

typedef struct {
  SWIG_CSharpExceptionCodes code;
  SWIG_CSharpExceptionCallback_t callback;
} SWIG_CSharpException_t;

typedef struct {
  SWIG_CSharpExceptionArgumentCodes code;
  SWIG_CSharpExceptionArgumentCallback_t callback;
} SWIG_CSharpExceptionArgument_t;

static SWIG_CSharpException_t SWIG_csharp_exceptions[] = {
  { SWIG_CSharpApplicationException, NULL },
  { SWIG_CSharpArithmeticException, NULL },
  { SWIG_CSharpDivideByZeroException, NULL },
  { SWIG_CSharpIndexOutOfRangeException, NULL },
  { SWIG_CSharpInvalidCastException, NULL },
  { SWIG_CSharpInvalidOperationException, NULL },
  { SWIG_CSharpIOException, NULL },
  { SWIG_CSharpNullReferenceException, NULL },
  { SWIG_CSharpOutOfMemoryException, NULL },
  { SWIG_CSharpOverflowException, NULL },
  { SWIG_CSharpSystemException, NULL }
};

static SWIG_CSharpExceptionArgument_t SWIG_csharp_exceptions_argument[] = {
  { SWIG_CSharpArgumentException, NULL },
  { SWIG_CSharpArgumentNullException, NULL },
  { SWIG_CSharpArgumentOutOfRangeException, NULL }
};

static void SWIGUNUSED SWIG_CSharpSetPendingException(SWIG_CSharpExceptionCodes code, const char *msg) {
  SWIG_CSharpExceptionCallback_t callback = SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions)/sizeof(SWIG_CSharpException_t)) {
    callback = SWIG_csharp_exceptions[code].callback;
  }
  callback(msg);
}

static void SWIGUNUSED SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpExceptionArgumentCodes code, const char *msg, const char *param_name) {
  SWIG_CSharpExceptionArgumentCallback_t callback = SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions_argument)/sizeof(SWIG_CSharpExceptionArgument_t)) {
    callback = SWIG_csharp_exceptions_argument[code].callback;
  }
  callback(msg, param_name);
}


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionCallbacks_TapTradeCppWrapper(
                                                SWIG_CSharpExceptionCallback_t applicationCallback,
                                                SWIG_CSharpExceptionCallback_t arithmeticCallback,
                                                SWIG_CSharpExceptionCallback_t divideByZeroCallback, 
                                                SWIG_CSharpExceptionCallback_t indexOutOfRangeCallback, 
                                                SWIG_CSharpExceptionCallback_t invalidCastCallback,
                                                SWIG_CSharpExceptionCallback_t invalidOperationCallback,
                                                SWIG_CSharpExceptionCallback_t ioCallback,
                                                SWIG_CSharpExceptionCallback_t nullReferenceCallback,
                                                SWIG_CSharpExceptionCallback_t outOfMemoryCallback, 
                                                SWIG_CSharpExceptionCallback_t overflowCallback, 
                                                SWIG_CSharpExceptionCallback_t systemCallback) {
  SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback = applicationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpArithmeticException].callback = arithmeticCallback;
  SWIG_csharp_exceptions[SWIG_CSharpDivideByZeroException].callback = divideByZeroCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIndexOutOfRangeException].callback = indexOutOfRangeCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidCastException].callback = invalidCastCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidOperationException].callback = invalidOperationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIOException].callback = ioCallback;
  SWIG_csharp_exceptions[SWIG_CSharpNullReferenceException].callback = nullReferenceCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOutOfMemoryException].callback = outOfMemoryCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOverflowException].callback = overflowCallback;
  SWIG_csharp_exceptions[SWIG_CSharpSystemException].callback = systemCallback;
}

#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionArgumentCallbacks_TapTradeCppWrapper(
                                                SWIG_CSharpExceptionArgumentCallback_t argumentCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentNullCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentOutOfRangeCallback) {
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback = argumentCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentNullException].callback = argumentNullCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentOutOfRangeException].callback = argumentOutOfRangeCallback;
}


/* Callback for returning strings to C# without leaking memory */
typedef char * (SWIGSTDCALL* SWIG_CSharpStringHelperCallback)(const char *);
static SWIG_CSharpStringHelperCallback SWIG_csharp_string_callback = NULL;


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterStringCallback_TapTradeCppWrapper(SWIG_CSharpStringHelperCallback callback) {
  SWIG_csharp_string_callback = callback;
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, msg, ""); return nullreturn; } else

/* -----------------------------------------------------------------------------
 * director_common.swg
 *
 * This file contains support for director classes which is common between
 * languages.
 * ----------------------------------------------------------------------------- */

/*
  Use -DSWIG_DIRECTOR_STATIC if you prefer to avoid the use of the
  'Swig' namespace. This could be useful for multi-modules projects.
*/
#ifdef SWIG_DIRECTOR_STATIC
/* Force anonymous (static) namespace */
#define Swig
#endif
/* -----------------------------------------------------------------------------
 * director.swg
 *
 * This file contains support for director classes so that C# proxy
 * methods can be called from C++.
 * ----------------------------------------------------------------------------- */

#if defined(DEBUG_DIRECTOR_OWNED)
#include <iostream>
#endif
#include <string>
#include <exception>

namespace Swig {
  /* Director base class - not currently used in C# directors */
  class Director {
  };

  /* Base class for director exceptions */
  class DirectorException : public std::exception {
  protected:
    std::string swig_msg;

  public:
    DirectorException(const char *msg) : swig_msg(msg) {
    }

    DirectorException(const std::string &msg) : swig_msg(msg) {
    }

    virtual ~DirectorException() throw() {
    }

    const char *what() const throw() {
      return swig_msg.c_str();
    }
  };

  /* Pure virtual method exception */
  class DirectorPureVirtualException : public DirectorException {
  public:
    DirectorPureVirtualException(const char *msg) : DirectorException(std::string("Attempt to invoke pure virtual method ") + msg) {
    }
  };
}


#include "iTapAPICommDef.h"
#include "iTapAPIError.h"
#include "iTapTradeAPIDataType.h"
#include "iTapTradeAPI.h"



/* ---------------------------------------------------
 * C++ director class methods
 * --------------------------------------------------- */

#include "TapTradeCppWrapper_wrap.h"

SwigDirector_ITapTradeAPINotify::SwigDirector_ITapTradeAPINotify() : ITapTrade::ITapTradeAPINotify(), Swig::Director() {
  swig_init_callbacks();
}

void SwigDirector_ITapTradeAPINotify::OnConnect() {
  if (!swig_callbackOnConnect) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnConnect");
  } else {
    swig_callbackOnConnect();
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspLogin(ITapTrade::TAPIINT32 errorCode, ITapTrade::TapAPITradeLoginRspInfo const *loginRspInfo) {
  int jerrorCode  ;
  void * jloginRspInfo = 0 ;
  
  if (!swig_callbackOnRspLogin) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspLogin");
  } else {
    jerrorCode = errorCode;
    jloginRspInfo = (void *) loginRspInfo; 
    swig_callbackOnRspLogin(jerrorCode, jloginRspInfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRtnContactInfo(ITapTrade::TAPIINT32 errorCode, ITapTrade::TAPIYNFLAG isLast, ITapTrade::TAPISTR_40 const ContactInfo) {
  int jerrorCode  ;
  char jisLast  ;
  char * jContactInfo  ;
  
  if (!swig_callbackOnRtnContactInfo) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRtnContactInfo");
  } else {
    jerrorCode = errorCode;
    jisLast = isLast;
    jContactInfo = SWIG_csharp_string_callback((const char *)ContactInfo); 
    swig_callbackOnRtnContactInfo(jerrorCode, jisLast, jContactInfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspRequestVertificateCode(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TapAPIRequestVertificateCodeRsp const *rsp) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  void * jrsp = 0 ;
  
  if (!swig_callbackOnRspRequestVertificateCode) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspRequestVertificateCode");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jrsp = (void *) rsp; 
    swig_callbackOnRspRequestVertificateCode(jsessionID, jerrorCode, jrsp);
  }
}

void SwigDirector_ITapTradeAPINotify::OnExpriationDate(ITapTrade::TAPIDATE date, int days) {
  char * jdate  ;
  int jdays  ;
  
  if (!swig_callbackOnExpriationDate) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnExpriationDate");
  } else {
    jdate = SWIG_csharp_string_callback((const char *)date); 
    jdays = days;
    swig_callbackOnExpriationDate(jdate, jdays);
  }
}

void SwigDirector_ITapTradeAPINotify::OnAPIReady(ITapTrade::TAPIINT32 errorCode) {
  int jerrorCode  ;
  
  if (!swig_callbackOnAPIReady) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnAPIReady");
  } else {
    jerrorCode = errorCode;
    swig_callbackOnAPIReady(jerrorCode);
  }
}

void SwigDirector_ITapTradeAPINotify::OnDisconnect(ITapTrade::TAPIINT32 reasonCode) {
  int jreasonCode  ;
  
  if (!swig_callbackOnDisconnect) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnDisconnect");
  } else {
    jreasonCode = reasonCode;
    swig_callbackOnDisconnect(jreasonCode);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspChangePassword(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  
  if (!swig_callbackOnRspChangePassword) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspChangePassword");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    swig_callbackOnRspChangePassword(jsessionID, jerrorCode);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspAuthPassword(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  
  if (!swig_callbackOnRspAuthPassword) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspAuthPassword");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    swig_callbackOnRspAuthPassword(jsessionID, jerrorCode);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryTradingDate(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TapAPITradingCalendarQryRsp const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryTradingDate) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspQryTradingDate");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jinfo = (void *) info; 
    swig_callbackOnRspQryTradingDate(jsessionID, jerrorCode, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspSetReservedInfo(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TAPISTR_50 const info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char * jinfo  ;
  
  if (!swig_callbackOnRspSetReservedInfo) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspSetReservedInfo");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jinfo = SWIG_csharp_string_callback((const char *)info); 
    swig_callbackOnRspSetReservedInfo(jsessionID, jerrorCode, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryAccount(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIUINT32 errorCode, ITapTrade::TAPIYNFLAG isLast, ITapTrade::TapAPIAccountInfo const *info) {
  unsigned int jsessionID  ;
  unsigned int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryAccount) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspQryAccount");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryAccount(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryFund(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TAPIYNFLAG isLast, ITapTrade::TapAPIFundData const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryFund) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspQryFund");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryFund(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRtnFund(ITapTrade::TapAPIFundData const *info) {
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRtnFund) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRtnFund");
  } else {
    jinfo = (void *) info; 
    swig_callbackOnRtnFund(jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryExchange(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TAPIYNFLAG isLast, ITapTrade::TapAPIExchangeInfo const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryExchange) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspQryExchange");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryExchange(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryCommodity(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TAPIYNFLAG isLast, ITapTrade::TapAPICommodityInfo const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryCommodity) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspQryCommodity");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryCommodity(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryContract(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TAPIYNFLAG isLast, ITapTrade::TapAPITradeContractInfo const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryContract) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspQryContract");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryContract(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRtnContract(ITapTrade::TapAPITradeContractInfo const *info) {
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRtnContract) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRtnContract");
  } else {
    jinfo = (void *) info; 
    swig_callbackOnRtnContract(jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspOrderAction(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TapAPIOrderActionRsp const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspOrderAction) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspOrderAction");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jinfo = (void *) info; 
    swig_callbackOnRspOrderAction(jsessionID, jerrorCode, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRtnOrder(ITapTrade::TapAPIOrderInfoNotice const *info) {
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRtnOrder) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRtnOrder");
  } else {
    jinfo = (void *) info; 
    swig_callbackOnRtnOrder(jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryOrder(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TAPIYNFLAG isLast, ITapTrade::TapAPIOrderInfo const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryOrder) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspQryOrder");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryOrder(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryOrderProcess(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TAPIYNFLAG isLast, ITapTrade::TapAPIOrderInfo const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryOrderProcess) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspQryOrderProcess");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryOrderProcess(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryFill(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TAPIYNFLAG isLast, ITapTrade::TapAPIFillInfo const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryFill) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspQryFill");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryFill(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRtnFill(ITapTrade::TapAPIFillInfo const *info) {
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRtnFill) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRtnFill");
  } else {
    jinfo = (void *) info; 
    swig_callbackOnRtnFill(jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryPosition(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TAPIYNFLAG isLast, ITapTrade::TapAPIPositionInfo const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryPosition) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspQryPosition");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryPosition(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRtnPosition(ITapTrade::TapAPIPositionInfo const *info) {
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRtnPosition) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRtnPosition");
  } else {
    jinfo = (void *) info; 
    swig_callbackOnRtnPosition(jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryPositionSummary(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TAPIYNFLAG isLast, ITapTrade::TapAPIPositionSummary const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryPositionSummary) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspQryPositionSummary");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryPositionSummary(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRtnPositionSummary(ITapTrade::TapAPIPositionSummary const *info) {
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRtnPositionSummary) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRtnPositionSummary");
  } else {
    jinfo = (void *) info; 
    swig_callbackOnRtnPositionSummary(jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRtnPositionProfit(ITapTrade::TapAPIPositionProfitNotice const *info) {
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRtnPositionProfit) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRtnPositionProfit");
  } else {
    jinfo = (void *) info; 
    swig_callbackOnRtnPositionProfit(jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryCurrency(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TAPIYNFLAG isLast, ITapTrade::TapAPICurrencyInfo const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryCurrency) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspQryCurrency");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryCurrency(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryTradeMessage(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TAPIYNFLAG isLast, ITapTrade::TapAPITradeMessage const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryTradeMessage) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspQryTradeMessage");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryTradeMessage(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRtnTradeMessage(ITapTrade::TapAPITradeMessage const *info) {
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRtnTradeMessage) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRtnTradeMessage");
  } else {
    jinfo = (void *) info; 
    swig_callbackOnRtnTradeMessage(jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryHisOrder(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TAPIYNFLAG isLast, ITapTrade::TapAPIHisOrderQryRsp const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryHisOrder) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspQryHisOrder");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryHisOrder(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryHisOrderProcess(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TAPIYNFLAG isLast, ITapTrade::TapAPIHisOrderProcessQryRsp const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryHisOrderProcess) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspQryHisOrderProcess");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryHisOrderProcess(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryHisMatch(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TAPIYNFLAG isLast, ITapTrade::TapAPIHisMatchQryRsp const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryHisMatch) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspQryHisMatch");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryHisMatch(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryHisPosition(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TAPIYNFLAG isLast, ITapTrade::TapAPIHisPositionQryRsp const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryHisPosition) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspQryHisPosition");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryHisPosition(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryHisDelivery(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TAPIYNFLAG isLast, ITapTrade::TapAPIHisDeliveryQryRsp const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryHisDelivery) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspQryHisDelivery");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryHisDelivery(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryAccountCashAdjust(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TAPIYNFLAG isLast, ITapTrade::TapAPIAccountCashAdjustQryRsp const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryAccountCashAdjust) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspQryAccountCashAdjust");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryAccountCashAdjust(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryBill(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TAPIYNFLAG isLast, ITapTrade::TapAPIBillQryRsp const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryBill) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspQryBill");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryBill(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryAccountFeeRent(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TAPIYNFLAG isLast, ITapTrade::TapAPIAccountFeeRentQryRsp const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryAccountFeeRent) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspQryAccountFeeRent");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryAccountFeeRent(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryAccountMarginRent(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TAPIYNFLAG isLast, ITapTrade::TapAPIAccountMarginRentQryRsp const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryAccountMarginRent) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspQryAccountMarginRent");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryAccountMarginRent(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspHKMarketOrderInsert(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TapAPIOrderMarketInsertRsp const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspHKMarketOrderInsert) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspHKMarketOrderInsert");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jinfo = (void *) info; 
    swig_callbackOnRspHKMarketOrderInsert(jsessionID, jerrorCode, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspHKMarketOrderDelete(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TapAPIOrderMarketDeleteRsp const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspHKMarketOrderDelete) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspHKMarketOrderDelete");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jinfo = (void *) info; 
    swig_callbackOnRspHKMarketOrderDelete(jsessionID, jerrorCode, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnHKMarketQuoteNotice(ITapTrade::TapAPIOrderQuoteMarketNotice const *info) {
  void * jinfo = 0 ;
  
  if (!swig_callbackOnHKMarketQuoteNotice) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnHKMarketQuoteNotice");
  } else {
    jinfo = (void *) info; 
    swig_callbackOnHKMarketQuoteNotice(jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspOrderLocalRemove(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TapAPIOrderLocalRemoveRsp const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspOrderLocalRemove) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspOrderLocalRemove");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jinfo = (void *) info; 
    swig_callbackOnRspOrderLocalRemove(jsessionID, jerrorCode, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspOrderLocalInput(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TapAPIOrderLocalInputRsp const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspOrderLocalInput) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspOrderLocalInput");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jinfo = (void *) info; 
    swig_callbackOnRspOrderLocalInput(jsessionID, jerrorCode, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspOrderLocalModify(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TapAPIOrderLocalModifyRsp const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspOrderLocalModify) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspOrderLocalModify");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jinfo = (void *) info; 
    swig_callbackOnRspOrderLocalModify(jsessionID, jerrorCode, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspOrderLocalTransfer(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TapAPIOrderLocalTransferRsp const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspOrderLocalTransfer) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspOrderLocalTransfer");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jinfo = (void *) info; 
    swig_callbackOnRspOrderLocalTransfer(jsessionID, jerrorCode, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspFillLocalInput(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TapAPIFillLocalInputRsp const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspFillLocalInput) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspFillLocalInput");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jinfo = (void *) info; 
    swig_callbackOnRspFillLocalInput(jsessionID, jerrorCode, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspFillLocalRemove(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TapAPIFillLocalRemoveRsp const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspFillLocalRemove) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspFillLocalRemove");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jinfo = (void *) info; 
    swig_callbackOnRspFillLocalRemove(jsessionID, jerrorCode, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQrySpotLock(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TAPIYNFLAG isLast, ITapTrade::TapAPISpotLockDataRsp const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQrySpotLock) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspQrySpotLock");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQrySpotLock(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRtnSpotLock(ITapTrade::TapAPISpotLockDataRsp const *info) {
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRtnSpotLock) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRtnSpotLock");
  } else {
    jinfo = (void *) info; 
    swig_callbackOnRtnSpotLock(jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspSubmitUserLoginInfo(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TAPIYNFLAG isLast, ITapTrade::TapAPISubmitUserLoginRspInfo const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspSubmitUserLoginInfo) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspSubmitUserLoginInfo");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspSubmitUserLoginInfo(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspSpecialOrderAction(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TapAPISpecialOrderInfo const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspSpecialOrderAction) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspSpecialOrderAction");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jinfo = (void *) info; 
    swig_callbackOnRspSpecialOrderAction(jsessionID, jerrorCode, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRtnSpecialOrder(ITapTrade::TapAPISpecialOrderInfo const *info) {
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRtnSpecialOrder) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRtnSpecialOrder");
  } else {
    jinfo = (void *) info; 
    swig_callbackOnRtnSpecialOrder(jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQrySpecialOrder(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TAPIYNFLAG isLast, ITapTrade::TapAPISpecialOrderInfo const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQrySpecialOrder) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspQrySpecialOrder");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQrySpecialOrder(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRspQryCombinePosition(ITapTrade::TAPIUINT32 sessionID, ITapTrade::TAPIINT32 errorCode, ITapTrade::TAPIYNFLAG isLast, ITapTrade::TapAPICombinePositionInfo const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryCombinePosition) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRspQryCombinePosition");
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryCombinePosition(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::OnRtnCombinePosition(ITapTrade::TapAPICombinePositionInfo const *info) {
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRtnCombinePosition) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPINotify::OnRtnCombinePosition");
  } else {
    jinfo = (void *) info; 
    swig_callbackOnRtnCombinePosition(jinfo);
  }
}

void SwigDirector_ITapTradeAPINotify::swig_connect_director(SWIG_Callback0_t callbackOnConnect, SWIG_Callback1_t callbackOnRspLogin, SWIG_Callback2_t callbackOnRtnContactInfo, SWIG_Callback3_t callbackOnRspRequestVertificateCode, SWIG_Callback4_t callbackOnExpriationDate, SWIG_Callback5_t callbackOnAPIReady, SWIG_Callback6_t callbackOnDisconnect, SWIG_Callback7_t callbackOnRspChangePassword, SWIG_Callback8_t callbackOnRspAuthPassword, SWIG_Callback9_t callbackOnRspQryTradingDate, SWIG_Callback10_t callbackOnRspSetReservedInfo, SWIG_Callback11_t callbackOnRspQryAccount, SWIG_Callback12_t callbackOnRspQryFund, SWIG_Callback13_t callbackOnRtnFund, SWIG_Callback14_t callbackOnRspQryExchange, SWIG_Callback15_t callbackOnRspQryCommodity, SWIG_Callback16_t callbackOnRspQryContract, SWIG_Callback17_t callbackOnRtnContract, SWIG_Callback18_t callbackOnRspOrderAction, SWIG_Callback19_t callbackOnRtnOrder, SWIG_Callback20_t callbackOnRspQryOrder, SWIG_Callback21_t callbackOnRspQryOrderProcess, SWIG_Callback22_t callbackOnRspQryFill, SWIG_Callback23_t callbackOnRtnFill, SWIG_Callback24_t callbackOnRspQryPosition, SWIG_Callback25_t callbackOnRtnPosition, SWIG_Callback26_t callbackOnRspQryPositionSummary, SWIG_Callback27_t callbackOnRtnPositionSummary, SWIG_Callback28_t callbackOnRtnPositionProfit, SWIG_Callback29_t callbackOnRspQryCurrency, SWIG_Callback30_t callbackOnRspQryTradeMessage, SWIG_Callback31_t callbackOnRtnTradeMessage, SWIG_Callback32_t callbackOnRspQryHisOrder, SWIG_Callback33_t callbackOnRspQryHisOrderProcess, SWIG_Callback34_t callbackOnRspQryHisMatch, SWIG_Callback35_t callbackOnRspQryHisPosition, SWIG_Callback36_t callbackOnRspQryHisDelivery, SWIG_Callback37_t callbackOnRspQryAccountCashAdjust, SWIG_Callback38_t callbackOnRspQryBill, SWIG_Callback39_t callbackOnRspQryAccountFeeRent, SWIG_Callback40_t callbackOnRspQryAccountMarginRent, SWIG_Callback41_t callbackOnRspHKMarketOrderInsert, SWIG_Callback42_t callbackOnRspHKMarketOrderDelete, SWIG_Callback43_t callbackOnHKMarketQuoteNotice, SWIG_Callback44_t callbackOnRspOrderLocalRemove, SWIG_Callback45_t callbackOnRspOrderLocalInput, SWIG_Callback46_t callbackOnRspOrderLocalModify, SWIG_Callback47_t callbackOnRspOrderLocalTransfer, SWIG_Callback48_t callbackOnRspFillLocalInput, SWIG_Callback49_t callbackOnRspFillLocalRemove, SWIG_Callback50_t callbackOnRspQrySpotLock, SWIG_Callback51_t callbackOnRtnSpotLock, SWIG_Callback52_t callbackOnRspSubmitUserLoginInfo, SWIG_Callback53_t callbackOnRspSpecialOrderAction, SWIG_Callback54_t callbackOnRtnSpecialOrder, SWIG_Callback55_t callbackOnRspQrySpecialOrder, SWIG_Callback56_t callbackOnRspQryCombinePosition, SWIG_Callback57_t callbackOnRtnCombinePosition) {
  swig_callbackOnConnect = callbackOnConnect;
  swig_callbackOnRspLogin = callbackOnRspLogin;
  swig_callbackOnRtnContactInfo = callbackOnRtnContactInfo;
  swig_callbackOnRspRequestVertificateCode = callbackOnRspRequestVertificateCode;
  swig_callbackOnExpriationDate = callbackOnExpriationDate;
  swig_callbackOnAPIReady = callbackOnAPIReady;
  swig_callbackOnDisconnect = callbackOnDisconnect;
  swig_callbackOnRspChangePassword = callbackOnRspChangePassword;
  swig_callbackOnRspAuthPassword = callbackOnRspAuthPassword;
  swig_callbackOnRspQryTradingDate = callbackOnRspQryTradingDate;
  swig_callbackOnRspSetReservedInfo = callbackOnRspSetReservedInfo;
  swig_callbackOnRspQryAccount = callbackOnRspQryAccount;
  swig_callbackOnRspQryFund = callbackOnRspQryFund;
  swig_callbackOnRtnFund = callbackOnRtnFund;
  swig_callbackOnRspQryExchange = callbackOnRspQryExchange;
  swig_callbackOnRspQryCommodity = callbackOnRspQryCommodity;
  swig_callbackOnRspQryContract = callbackOnRspQryContract;
  swig_callbackOnRtnContract = callbackOnRtnContract;
  swig_callbackOnRspOrderAction = callbackOnRspOrderAction;
  swig_callbackOnRtnOrder = callbackOnRtnOrder;
  swig_callbackOnRspQryOrder = callbackOnRspQryOrder;
  swig_callbackOnRspQryOrderProcess = callbackOnRspQryOrderProcess;
  swig_callbackOnRspQryFill = callbackOnRspQryFill;
  swig_callbackOnRtnFill = callbackOnRtnFill;
  swig_callbackOnRspQryPosition = callbackOnRspQryPosition;
  swig_callbackOnRtnPosition = callbackOnRtnPosition;
  swig_callbackOnRspQryPositionSummary = callbackOnRspQryPositionSummary;
  swig_callbackOnRtnPositionSummary = callbackOnRtnPositionSummary;
  swig_callbackOnRtnPositionProfit = callbackOnRtnPositionProfit;
  swig_callbackOnRspQryCurrency = callbackOnRspQryCurrency;
  swig_callbackOnRspQryTradeMessage = callbackOnRspQryTradeMessage;
  swig_callbackOnRtnTradeMessage = callbackOnRtnTradeMessage;
  swig_callbackOnRspQryHisOrder = callbackOnRspQryHisOrder;
  swig_callbackOnRspQryHisOrderProcess = callbackOnRspQryHisOrderProcess;
  swig_callbackOnRspQryHisMatch = callbackOnRspQryHisMatch;
  swig_callbackOnRspQryHisPosition = callbackOnRspQryHisPosition;
  swig_callbackOnRspQryHisDelivery = callbackOnRspQryHisDelivery;
  swig_callbackOnRspQryAccountCashAdjust = callbackOnRspQryAccountCashAdjust;
  swig_callbackOnRspQryBill = callbackOnRspQryBill;
  swig_callbackOnRspQryAccountFeeRent = callbackOnRspQryAccountFeeRent;
  swig_callbackOnRspQryAccountMarginRent = callbackOnRspQryAccountMarginRent;
  swig_callbackOnRspHKMarketOrderInsert = callbackOnRspHKMarketOrderInsert;
  swig_callbackOnRspHKMarketOrderDelete = callbackOnRspHKMarketOrderDelete;
  swig_callbackOnHKMarketQuoteNotice = callbackOnHKMarketQuoteNotice;
  swig_callbackOnRspOrderLocalRemove = callbackOnRspOrderLocalRemove;
  swig_callbackOnRspOrderLocalInput = callbackOnRspOrderLocalInput;
  swig_callbackOnRspOrderLocalModify = callbackOnRspOrderLocalModify;
  swig_callbackOnRspOrderLocalTransfer = callbackOnRspOrderLocalTransfer;
  swig_callbackOnRspFillLocalInput = callbackOnRspFillLocalInput;
  swig_callbackOnRspFillLocalRemove = callbackOnRspFillLocalRemove;
  swig_callbackOnRspQrySpotLock = callbackOnRspQrySpotLock;
  swig_callbackOnRtnSpotLock = callbackOnRtnSpotLock;
  swig_callbackOnRspSubmitUserLoginInfo = callbackOnRspSubmitUserLoginInfo;
  swig_callbackOnRspSpecialOrderAction = callbackOnRspSpecialOrderAction;
  swig_callbackOnRtnSpecialOrder = callbackOnRtnSpecialOrder;
  swig_callbackOnRspQrySpecialOrder = callbackOnRspQrySpecialOrder;
  swig_callbackOnRspQryCombinePosition = callbackOnRspQryCombinePosition;
  swig_callbackOnRtnCombinePosition = callbackOnRtnCombinePosition;
}

void SwigDirector_ITapTradeAPINotify::swig_init_callbacks() {
  swig_callbackOnConnect = 0;
  swig_callbackOnRspLogin = 0;
  swig_callbackOnRtnContactInfo = 0;
  swig_callbackOnRspRequestVertificateCode = 0;
  swig_callbackOnExpriationDate = 0;
  swig_callbackOnAPIReady = 0;
  swig_callbackOnDisconnect = 0;
  swig_callbackOnRspChangePassword = 0;
  swig_callbackOnRspAuthPassword = 0;
  swig_callbackOnRspQryTradingDate = 0;
  swig_callbackOnRspSetReservedInfo = 0;
  swig_callbackOnRspQryAccount = 0;
  swig_callbackOnRspQryFund = 0;
  swig_callbackOnRtnFund = 0;
  swig_callbackOnRspQryExchange = 0;
  swig_callbackOnRspQryCommodity = 0;
  swig_callbackOnRspQryContract = 0;
  swig_callbackOnRtnContract = 0;
  swig_callbackOnRspOrderAction = 0;
  swig_callbackOnRtnOrder = 0;
  swig_callbackOnRspQryOrder = 0;
  swig_callbackOnRspQryOrderProcess = 0;
  swig_callbackOnRspQryFill = 0;
  swig_callbackOnRtnFill = 0;
  swig_callbackOnRspQryPosition = 0;
  swig_callbackOnRtnPosition = 0;
  swig_callbackOnRspQryPositionSummary = 0;
  swig_callbackOnRtnPositionSummary = 0;
  swig_callbackOnRtnPositionProfit = 0;
  swig_callbackOnRspQryCurrency = 0;
  swig_callbackOnRspQryTradeMessage = 0;
  swig_callbackOnRtnTradeMessage = 0;
  swig_callbackOnRspQryHisOrder = 0;
  swig_callbackOnRspQryHisOrderProcess = 0;
  swig_callbackOnRspQryHisMatch = 0;
  swig_callbackOnRspQryHisPosition = 0;
  swig_callbackOnRspQryHisDelivery = 0;
  swig_callbackOnRspQryAccountCashAdjust = 0;
  swig_callbackOnRspQryBill = 0;
  swig_callbackOnRspQryAccountFeeRent = 0;
  swig_callbackOnRspQryAccountMarginRent = 0;
  swig_callbackOnRspHKMarketOrderInsert = 0;
  swig_callbackOnRspHKMarketOrderDelete = 0;
  swig_callbackOnHKMarketQuoteNotice = 0;
  swig_callbackOnRspOrderLocalRemove = 0;
  swig_callbackOnRspOrderLocalInput = 0;
  swig_callbackOnRspOrderLocalModify = 0;
  swig_callbackOnRspOrderLocalTransfer = 0;
  swig_callbackOnRspFillLocalInput = 0;
  swig_callbackOnRspFillLocalRemove = 0;
  swig_callbackOnRspQrySpotLock = 0;
  swig_callbackOnRtnSpotLock = 0;
  swig_callbackOnRspSubmitUserLoginInfo = 0;
  swig_callbackOnRspSpecialOrderAction = 0;
  swig_callbackOnRtnSpecialOrder = 0;
  swig_callbackOnRspQrySpecialOrder = 0;
  swig_callbackOnRspQryCombinePosition = 0;
  swig_callbackOnRtnCombinePosition = 0;
}

SwigDirector_ITapTradeAPI::SwigDirector_ITapTradeAPI() : ITapTrade::ITapTradeAPI(), Swig::Director() {
  swig_init_callbacks();
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::SetAPINotify(ITapTrade::ITapTradeAPINotify *pSpi) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jpSpi = 0 ;
  
  if (!swig_callbackSetAPINotify) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::SetAPINotify");
  } else {
    jpSpi = (void *) pSpi; 
    jresult = (int) swig_callbackSetAPINotify(jpSpi);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::SetHostAddress(ITapTrade::TAPICHAR const *IP, ITapTrade::TAPIUINT16 port, bool bSSL) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  char * jIP = 0 ;
  unsigned short jport  ;
  unsigned int jbSSL  ;
  
  if (!swig_callbackSetHostAddress__SWIG_0) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::SetHostAddress");
  } else {
    jIP = SWIG_csharp_string_callback((const char *)IP); 
    jport = port;
    jbSSL = bSSL;
    jresult = (int) swig_callbackSetHostAddress__SWIG_0(jIP, jport, jbSSL);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::Login(ITapTrade::TapAPITradeLoginAuth const *loginAuth) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jloginAuth = 0 ;
  
  if (!swig_callbackLogin) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::Login");
  } else {
    jloginAuth = (void *) loginAuth; 
    jresult = (int) swig_callbackLogin(jloginAuth);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::RequestVertificateCode(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TAPISTR_40 ContactInfo) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  char * jContactInfo  ;
  
  if (!swig_callbackRequestVertificateCode) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::RequestVertificateCode");
  } else {
    jsessionID = (void *) sessionID; 
    jContactInfo = SWIG_csharp_string_callback((const char *)ContactInfo); 
    jresult = (int) swig_callbackRequestVertificateCode(jsessionID, jContactInfo);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::SetVertificateCode(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPISecondCertificationReq *req) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jreq = 0 ;
  
  if (!swig_callbackSetVertificateCode) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::SetVertificateCode");
  } else {
    jsessionID = (void *) sessionID; 
    jreq = (void *) req; 
    jresult = (int) swig_callbackSetVertificateCode(jsessionID, jreq);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::Disconnect() {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  
  if (!swig_callbackDisconnect) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::Disconnect");
  } else {
    jresult = (int) swig_callbackDisconnect();
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::ChangePassword(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIChangePasswordReq const *req) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jreq = 0 ;
  
  if (!swig_callbackChangePassword) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::ChangePassword");
  } else {
    jsessionID = (void *) sessionID; 
    jreq = (void *) req; 
    jresult = (int) swig_callbackChangePassword(jsessionID, jreq);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::AuthPassword(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIAuthPasswordReq const *req) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jreq = 0 ;
  
  if (!swig_callbackAuthPassword) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::AuthPassword");
  } else {
    jsessionID = (void *) sessionID; 
    jreq = (void *) req; 
    jresult = (int) swig_callbackAuthPassword(jsessionID, jreq);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::HaveCertainRight(ITapTrade::TAPIRightIDType rightID) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  int jrightID  ;
  
  if (!swig_callbackHaveCertainRight) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::HaveCertainRight");
  } else {
    jrightID = rightID;
    jresult = (int) swig_callbackHaveCertainRight(jrightID);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::QryTradingDate(ITapTrade::TAPIUINT32 *sessionID) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  
  if (!swig_callbackQryTradingDate) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::QryTradingDate");
  } else {
    jsessionID = (void *) sessionID; 
    jresult = (int) swig_callbackQryTradingDate(jsessionID);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::SetReservedInfo(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TAPISTR_50 const info) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  char * jinfo  ;
  
  if (!swig_callbackSetReservedInfo) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::SetReservedInfo");
  } else {
    jsessionID = (void *) sessionID; 
    jinfo = SWIG_csharp_string_callback((const char *)info); 
    jresult = (int) swig_callbackSetReservedInfo(jsessionID, jinfo);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::QryAccount(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIAccQryReq const *qryReq) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryAccount) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::QryAccount");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryAccount(jsessionID, jqryReq);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::QryFund(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIFundReq const *qryReq) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryFund) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::QryFund");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryFund(jsessionID, jqryReq);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::QryExchange(ITapTrade::TAPIUINT32 *sessionID) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  
  if (!swig_callbackQryExchange) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::QryExchange");
  } else {
    jsessionID = (void *) sessionID; 
    jresult = (int) swig_callbackQryExchange(jsessionID);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::QryCommodity(ITapTrade::TAPIUINT32 *sessionID) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  
  if (!swig_callbackQryCommodity) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::QryCommodity");
  } else {
    jsessionID = (void *) sessionID; 
    jresult = (int) swig_callbackQryCommodity(jsessionID);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::QryContract(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPICommodity const *qryReq) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryContract) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::QryContract");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryContract(jsessionID, jqryReq);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::InsertOrder(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TAPISTR_50 *ClientOrderNo, ITapTrade::TapAPINewOrder const *order) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jClientOrderNo = 0 ;
  void * jorder = 0 ;
  
  if (!swig_callbackInsertOrder) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::InsertOrder");
  } else {
    jsessionID = (void *) sessionID; 
    jClientOrderNo = (void *) ClientOrderNo; 
    jorder = (void *) order; 
    jresult = (int) swig_callbackInsertOrder(jsessionID, jClientOrderNo, jorder);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::CancelOrder(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIOrderCancelReq const *order) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jorder = 0 ;
  
  if (!swig_callbackCancelOrder) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::CancelOrder");
  } else {
    jsessionID = (void *) sessionID; 
    jorder = (void *) order; 
    jresult = (int) swig_callbackCancelOrder(jsessionID, jorder);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::AmendOrder(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIAmendOrder const *order) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jorder = 0 ;
  
  if (!swig_callbackAmendOrder) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::AmendOrder");
  } else {
    jsessionID = (void *) sessionID; 
    jorder = (void *) order; 
    jresult = (int) swig_callbackAmendOrder(jsessionID, jorder);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::ActivateOrder(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIOrderActivateReq const *order) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jorder = 0 ;
  
  if (!swig_callbackActivateOrder) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::ActivateOrder");
  } else {
    jsessionID = (void *) sessionID; 
    jorder = (void *) order; 
    jresult = (int) swig_callbackActivateOrder(jsessionID, jorder);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::QryOrder(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIOrderQryReq const *qryReq) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryOrder) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::QryOrder");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryOrder(jsessionID, jqryReq);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::QryOrderProcess(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIOrderProcessQryReq const *qryReq) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryOrderProcess) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::QryOrderProcess");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryOrderProcess(jsessionID, jqryReq);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::QryFill(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIFillQryReq const *qryReq) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryFill) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::QryFill");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryFill(jsessionID, jqryReq);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::QryPosition(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIPositionQryReq const *qryReq) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryPosition) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::QryPosition");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryPosition(jsessionID, jqryReq);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::QryPositionSummary(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIPositionQryReq const *qryReq) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryPositionSummary) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::QryPositionSummary");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryPositionSummary(jsessionID, jqryReq);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::QryCurrency(ITapTrade::TAPIUINT32 *sessionID) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  
  if (!swig_callbackQryCurrency) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::QryCurrency");
  } else {
    jsessionID = (void *) sessionID; 
    jresult = (int) swig_callbackQryCurrency(jsessionID);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::QryAccountCashAdjust(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIAccountCashAdjustQryReq const *qryReq) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryAccountCashAdjust) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::QryAccountCashAdjust");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryAccountCashAdjust(jsessionID, jqryReq);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::QryTradeMessage(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPITradeMessageReq const *qryReq) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryTradeMessage) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::QryTradeMessage");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryTradeMessage(jsessionID, jqryReq);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::QryBill(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIBillQryReq const *qryReq) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryBill) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::QryBill");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryBill(jsessionID, jqryReq);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::QryHisOrder(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIHisOrderQryReq const *qryReq) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryHisOrder) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::QryHisOrder");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryHisOrder(jsessionID, jqryReq);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::QryHisOrderProcess(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIHisOrderProcessQryReq const *qryReq) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryHisOrderProcess) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::QryHisOrderProcess");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryHisOrderProcess(jsessionID, jqryReq);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::QryHisMatch(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIHisMatchQryReq const *qryReq) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryHisMatch) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::QryHisMatch");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryHisMatch(jsessionID, jqryReq);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::QryHisPosition(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIHisPositionQryReq const *qryReq) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryHisPosition) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::QryHisPosition");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryHisPosition(jsessionID, jqryReq);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::QryHisDelivery(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIHisDeliveryQryReq const *qryReq) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryHisDelivery) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::QryHisDelivery");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryHisDelivery(jsessionID, jqryReq);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::QryAccountFeeRent(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIAccountFeeRentQryReq const *qryReq) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryAccountFeeRent) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::QryAccountFeeRent");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryAccountFeeRent(jsessionID, jqryReq);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::QryAccountMarginRent(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIAccountMarginRentQryReq const *qryReq) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryAccountMarginRent) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::QryAccountMarginRent");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryAccountMarginRent(jsessionID, jqryReq);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::InsertHKMarketOrder(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TAPISTR_50 *ClientBuyOrderNo, ITapTrade::TAPISTR_50 *ClientSellOrderNo, ITapTrade::TapAPIOrderMarketInsertReq const *order) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jClientBuyOrderNo = 0 ;
  void * jClientSellOrderNo = 0 ;
  void * jorder = 0 ;
  
  if (!swig_callbackInsertHKMarketOrder) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::InsertHKMarketOrder");
  } else {
    jsessionID = (void *) sessionID; 
    jClientBuyOrderNo = (void *) ClientBuyOrderNo; 
    jClientSellOrderNo = (void *) ClientSellOrderNo; 
    jorder = (void *) order; 
    jresult = (int) swig_callbackInsertHKMarketOrder(jsessionID, jClientBuyOrderNo, jClientSellOrderNo, jorder);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::CancelHKMarketOrder(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIOrderMarketDeleteReq const *order) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jorder = 0 ;
  
  if (!swig_callbackCancelHKMarketOrder) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::CancelHKMarketOrder");
  } else {
    jsessionID = (void *) sessionID; 
    jorder = (void *) order; 
    jresult = (int) swig_callbackCancelHKMarketOrder(jsessionID, jorder);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::OrderLocalRemove(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIOrderLocalRemoveReq const *order) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jorder = 0 ;
  
  if (!swig_callbackOrderLocalRemove) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::OrderLocalRemove");
  } else {
    jsessionID = (void *) sessionID; 
    jorder = (void *) order; 
    jresult = (int) swig_callbackOrderLocalRemove(jsessionID, jorder);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::OrderLocalInput(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIOrderLocalInputReq const *order) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jorder = 0 ;
  
  if (!swig_callbackOrderLocalInput) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::OrderLocalInput");
  } else {
    jsessionID = (void *) sessionID; 
    jorder = (void *) order; 
    jresult = (int) swig_callbackOrderLocalInput(jsessionID, jorder);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::OrderLocalModify(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIOrderLocalModifyReq const *order) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jorder = 0 ;
  
  if (!swig_callbackOrderLocalModify) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::OrderLocalModify");
  } else {
    jsessionID = (void *) sessionID; 
    jorder = (void *) order; 
    jresult = (int) swig_callbackOrderLocalModify(jsessionID, jorder);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::OrderLocalTransfer(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIOrderLocalTransferReq const *order) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jorder = 0 ;
  
  if (!swig_callbackOrderLocalTransfer) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::OrderLocalTransfer");
  } else {
    jsessionID = (void *) sessionID; 
    jorder = (void *) order; 
    jresult = (int) swig_callbackOrderLocalTransfer(jsessionID, jorder);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::FillLocalInput(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIFillLocalInputReq const *fill) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jfill = 0 ;
  
  if (!swig_callbackFillLocalInput) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::FillLocalInput");
  } else {
    jsessionID = (void *) sessionID; 
    jfill = (void *) fill; 
    jresult = (int) swig_callbackFillLocalInput(jsessionID, jfill);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::FillLocalRemove(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPIFillLocalRemoveReq const *fill) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jfill = 0 ;
  
  if (!swig_callbackFillLocalRemove) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::FillLocalRemove");
  } else {
    jsessionID = (void *) sessionID; 
    jfill = (void *) fill; 
    jresult = (int) swig_callbackFillLocalRemove(jsessionID, jfill);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::QrySpotLock(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPISpotLockQryReq const *qryReq) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQrySpotLock) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::QrySpotLock");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQrySpotLock(jsessionID, jqryReq);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::SubmitUserLoginInfo(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPISubmitUserLoginInfo const *qryReq) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackSubmitUserLoginInfo) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::SubmitUserLoginInfo");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackSubmitUserLoginInfo(jsessionID, jqryReq);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::InsertSpecialOrder(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TAPISTR_50 *clientorderno, ITapTrade::TapAPISpecialOrderInsertReq const *order) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jclientorderno = 0 ;
  void * jorder = 0 ;
  
  if (!swig_callbackInsertSpecialOrder) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::InsertSpecialOrder");
  } else {
    jsessionID = (void *) sessionID; 
    jclientorderno = (void *) clientorderno; 
    jorder = (void *) order; 
    jresult = (int) swig_callbackInsertSpecialOrder(jsessionID, jclientorderno, jorder);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::QrySpecialOrder(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPISpecialOrderQryReq const *qryReq) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQrySpecialOrder) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::QrySpecialOrder");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQrySpecialOrder(jsessionID, jqryReq);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

ITapTrade::TAPIINT32 SwigDirector_ITapTradeAPI::QryCombinePosition(ITapTrade::TAPIUINT32 *sessionID, ITapTrade::TapAPICombinePositionQryReq const *qryReq) {
  ITapTrade::TAPIINT32 c_result = SwigValueInit< ITapTrade::TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryCombinePosition) {
    throw Swig::DirectorPureVirtualException("ITapTrade::ITapTradeAPI::QryCombinePosition");
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryCombinePosition(jsessionID, jqryReq);
    c_result = (ITapTrade::TAPIINT32)jresult; 
  }
  return c_result;
}

void SwigDirector_ITapTradeAPI::swig_connect_director(SWIG_Callback0_t callbackSetAPINotify, SWIG_Callback1_t callbackSetHostAddress__SWIG_0, SWIG_Callback2_t callbackSetHostAddress__SWIG_1, SWIG_Callback3_t callbackLogin, SWIG_Callback4_t callbackRequestVertificateCode, SWIG_Callback5_t callbackSetVertificateCode, SWIG_Callback6_t callbackDisconnect, SWIG_Callback7_t callbackChangePassword, SWIG_Callback8_t callbackAuthPassword, SWIG_Callback9_t callbackHaveCertainRight, SWIG_Callback10_t callbackQryTradingDate, SWIG_Callback11_t callbackSetReservedInfo, SWIG_Callback12_t callbackQryAccount, SWIG_Callback13_t callbackQryFund, SWIG_Callback14_t callbackQryExchange, SWIG_Callback15_t callbackQryCommodity, SWIG_Callback16_t callbackQryContract, SWIG_Callback17_t callbackInsertOrder, SWIG_Callback18_t callbackCancelOrder, SWIG_Callback19_t callbackAmendOrder, SWIG_Callback20_t callbackActivateOrder, SWIG_Callback21_t callbackQryOrder, SWIG_Callback22_t callbackQryOrderProcess, SWIG_Callback23_t callbackQryFill, SWIG_Callback24_t callbackQryPosition, SWIG_Callback25_t callbackQryPositionSummary, SWIG_Callback26_t callbackQryCurrency, SWIG_Callback27_t callbackQryAccountCashAdjust, SWIG_Callback28_t callbackQryTradeMessage, SWIG_Callback29_t callbackQryBill, SWIG_Callback30_t callbackQryHisOrder, SWIG_Callback31_t callbackQryHisOrderProcess, SWIG_Callback32_t callbackQryHisMatch, SWIG_Callback33_t callbackQryHisPosition, SWIG_Callback34_t callbackQryHisDelivery, SWIG_Callback35_t callbackQryAccountFeeRent, SWIG_Callback36_t callbackQryAccountMarginRent, SWIG_Callback37_t callbackInsertHKMarketOrder, SWIG_Callback38_t callbackCancelHKMarketOrder, SWIG_Callback39_t callbackOrderLocalRemove, SWIG_Callback40_t callbackOrderLocalInput, SWIG_Callback41_t callbackOrderLocalModify, SWIG_Callback42_t callbackOrderLocalTransfer, SWIG_Callback43_t callbackFillLocalInput, SWIG_Callback44_t callbackFillLocalRemove, SWIG_Callback45_t callbackQrySpotLock, SWIG_Callback46_t callbackSubmitUserLoginInfo, SWIG_Callback47_t callbackInsertSpecialOrder, SWIG_Callback48_t callbackQrySpecialOrder, SWIG_Callback49_t callbackQryCombinePosition) {
  swig_callbackSetAPINotify = callbackSetAPINotify;
  swig_callbackSetHostAddress__SWIG_0 = callbackSetHostAddress__SWIG_0;
  swig_callbackSetHostAddress__SWIG_1 = callbackSetHostAddress__SWIG_1;
  swig_callbackLogin = callbackLogin;
  swig_callbackRequestVertificateCode = callbackRequestVertificateCode;
  swig_callbackSetVertificateCode = callbackSetVertificateCode;
  swig_callbackDisconnect = callbackDisconnect;
  swig_callbackChangePassword = callbackChangePassword;
  swig_callbackAuthPassword = callbackAuthPassword;
  swig_callbackHaveCertainRight = callbackHaveCertainRight;
  swig_callbackQryTradingDate = callbackQryTradingDate;
  swig_callbackSetReservedInfo = callbackSetReservedInfo;
  swig_callbackQryAccount = callbackQryAccount;
  swig_callbackQryFund = callbackQryFund;
  swig_callbackQryExchange = callbackQryExchange;
  swig_callbackQryCommodity = callbackQryCommodity;
  swig_callbackQryContract = callbackQryContract;
  swig_callbackInsertOrder = callbackInsertOrder;
  swig_callbackCancelOrder = callbackCancelOrder;
  swig_callbackAmendOrder = callbackAmendOrder;
  swig_callbackActivateOrder = callbackActivateOrder;
  swig_callbackQryOrder = callbackQryOrder;
  swig_callbackQryOrderProcess = callbackQryOrderProcess;
  swig_callbackQryFill = callbackQryFill;
  swig_callbackQryPosition = callbackQryPosition;
  swig_callbackQryPositionSummary = callbackQryPositionSummary;
  swig_callbackQryCurrency = callbackQryCurrency;
  swig_callbackQryAccountCashAdjust = callbackQryAccountCashAdjust;
  swig_callbackQryTradeMessage = callbackQryTradeMessage;
  swig_callbackQryBill = callbackQryBill;
  swig_callbackQryHisOrder = callbackQryHisOrder;
  swig_callbackQryHisOrderProcess = callbackQryHisOrderProcess;
  swig_callbackQryHisMatch = callbackQryHisMatch;
  swig_callbackQryHisPosition = callbackQryHisPosition;
  swig_callbackQryHisDelivery = callbackQryHisDelivery;
  swig_callbackQryAccountFeeRent = callbackQryAccountFeeRent;
  swig_callbackQryAccountMarginRent = callbackQryAccountMarginRent;
  swig_callbackInsertHKMarketOrder = callbackInsertHKMarketOrder;
  swig_callbackCancelHKMarketOrder = callbackCancelHKMarketOrder;
  swig_callbackOrderLocalRemove = callbackOrderLocalRemove;
  swig_callbackOrderLocalInput = callbackOrderLocalInput;
  swig_callbackOrderLocalModify = callbackOrderLocalModify;
  swig_callbackOrderLocalTransfer = callbackOrderLocalTransfer;
  swig_callbackFillLocalInput = callbackFillLocalInput;
  swig_callbackFillLocalRemove = callbackFillLocalRemove;
  swig_callbackQrySpotLock = callbackQrySpotLock;
  swig_callbackSubmitUserLoginInfo = callbackSubmitUserLoginInfo;
  swig_callbackInsertSpecialOrder = callbackInsertSpecialOrder;
  swig_callbackQrySpecialOrder = callbackQrySpecialOrder;
  swig_callbackQryCombinePosition = callbackQryCombinePosition;
}

void SwigDirector_ITapTradeAPI::swig_init_callbacks() {
  swig_callbackSetAPINotify = 0;
  swig_callbackSetHostAddress__SWIG_0 = 0;
  swig_callbackSetHostAddress__SWIG_1 = 0;
  swig_callbackLogin = 0;
  swig_callbackRequestVertificateCode = 0;
  swig_callbackSetVertificateCode = 0;
  swig_callbackDisconnect = 0;
  swig_callbackChangePassword = 0;
  swig_callbackAuthPassword = 0;
  swig_callbackHaveCertainRight = 0;
  swig_callbackQryTradingDate = 0;
  swig_callbackSetReservedInfo = 0;
  swig_callbackQryAccount = 0;
  swig_callbackQryFund = 0;
  swig_callbackQryExchange = 0;
  swig_callbackQryCommodity = 0;
  swig_callbackQryContract = 0;
  swig_callbackInsertOrder = 0;
  swig_callbackCancelOrder = 0;
  swig_callbackAmendOrder = 0;
  swig_callbackActivateOrder = 0;
  swig_callbackQryOrder = 0;
  swig_callbackQryOrderProcess = 0;
  swig_callbackQryFill = 0;
  swig_callbackQryPosition = 0;
  swig_callbackQryPositionSummary = 0;
  swig_callbackQryCurrency = 0;
  swig_callbackQryAccountCashAdjust = 0;
  swig_callbackQryTradeMessage = 0;
  swig_callbackQryBill = 0;
  swig_callbackQryHisOrder = 0;
  swig_callbackQryHisOrderProcess = 0;
  swig_callbackQryHisMatch = 0;
  swig_callbackQryHisPosition = 0;
  swig_callbackQryHisDelivery = 0;
  swig_callbackQryAccountFeeRent = 0;
  swig_callbackQryAccountMarginRent = 0;
  swig_callbackInsertHKMarketOrder = 0;
  swig_callbackCancelHKMarketOrder = 0;
  swig_callbackOrderLocalRemove = 0;
  swig_callbackOrderLocalInput = 0;
  swig_callbackOrderLocalModify = 0;
  swig_callbackOrderLocalTransfer = 0;
  swig_callbackFillLocalInput = 0;
  swig_callbackFillLocalRemove = 0;
  swig_callbackQrySpotLock = 0;
  swig_callbackSubmitUserLoginInfo = 0;
  swig_callbackInsertSpecialOrder = 0;
  swig_callbackQrySpecialOrder = 0;
  swig_callbackQryCombinePosition = 0;
}


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT char SWIGSTDCALL CSharp_APIYNFLAG_YES_get() {
  char jresult ;
  ITapTrade::TAPIYNFLAG result;
  
  result = (ITapTrade::TAPIYNFLAG)(ITapTrade::TAPIYNFLAG)ITapTrade::APIYNFLAG_YES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APIYNFLAG_NO_get() {
  char jresult ;
  ITapTrade::TAPIYNFLAG result;
  
  result = (ITapTrade::TAPIYNFLAG)(ITapTrade::TAPIYNFLAG)ITapTrade::APIYNFLAG_NO;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APIPASSWORD_TRADE_get() {
  char jresult ;
  ITapTrade::TAPIPasswordType result;
  
  result = (ITapTrade::TAPIPasswordType)(ITapTrade::TAPIPasswordType)ITapTrade::APIPASSWORD_TRADE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APIPASSWORD_PHONE_get() {
  char jresult ;
  ITapTrade::TAPIPasswordType result;
  
  result = (ITapTrade::TAPIPasswordType)(ITapTrade::TAPIPasswordType)ITapTrade::APIPASSWORD_PHONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APILOGLEVEL_NONE_get() {
  char jresult ;
  ITapTrade::TAPILOGLEVEL result;
  
  result = (ITapTrade::TAPILOGLEVEL)(ITapTrade::TAPILOGLEVEL)ITapTrade::APILOGLEVEL_NONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APILOGLEVEL_ERROR_get() {
  char jresult ;
  ITapTrade::TAPILOGLEVEL result;
  
  result = (ITapTrade::TAPILOGLEVEL)(ITapTrade::TAPILOGLEVEL)ITapTrade::APILOGLEVEL_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APILOGLEVEL_WARNING_get() {
  char jresult ;
  ITapTrade::TAPILOGLEVEL result;
  
  result = (ITapTrade::TAPILOGLEVEL)(ITapTrade::TAPILOGLEVEL)ITapTrade::APILOGLEVEL_WARNING;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APILOGLEVEL_DEBUG_get() {
  char jresult ;
  ITapTrade::TAPILOGLEVEL result;
  
  result = (ITapTrade::TAPILOGLEVEL)(ITapTrade::TAPILOGLEVEL)ITapTrade::APILOGLEVEL_DEBUG;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_OPTION_TYPE_AMERICAN_get() {
  char jresult ;
  ITapTrade::TAPIOptionType result;
  
  result = (ITapTrade::TAPIOptionType)(ITapTrade::TAPIOptionType)ITapTrade::TAPI_OPTION_TYPE_AMERICAN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_OPTION_TYPE_AMERICAN2_get() {
  char jresult ;
  ITapTrade::TAPIOptionType result;
  
  result = (ITapTrade::TAPIOptionType)(ITapTrade::TAPIOptionType)ITapTrade::TAPI_OPTION_TYPE_AMERICAN2;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_OPTION_TYPE_EUROPEAN_get() {
  char jresult ;
  ITapTrade::TAPIOptionType result;
  
  result = (ITapTrade::TAPIOptionType)(ITapTrade::TAPIOptionType)ITapTrade::TAPI_OPTION_TYPE_EUROPEAN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_OPTION_TYPE_EUROPEAN2_get() {
  char jresult ;
  ITapTrade::TAPIOptionType result;
  
  result = (ITapTrade::TAPIOptionType)(ITapTrade::TAPIOptionType)ITapTrade::TAPI_OPTION_TYPE_EUROPEAN2;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_NONE_get() {
  char jresult ;
  ITapTrade::TAPICommodityType result;
  
  result = (ITapTrade::TAPICommodityType)(ITapTrade::TAPICommodityType)ITapTrade::TAPI_COMMODITY_TYPE_NONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_FUTURES_get() {
  char jresult ;
  ITapTrade::TAPICommodityType result;
  
  result = (ITapTrade::TAPICommodityType)(ITapTrade::TAPICommodityType)ITapTrade::TAPI_COMMODITY_TYPE_FUTURES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_OPTION_get() {
  char jresult ;
  ITapTrade::TAPICommodityType result;
  
  result = (ITapTrade::TAPICommodityType)(ITapTrade::TAPICommodityType)ITapTrade::TAPI_COMMODITY_TYPE_OPTION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_SPREAD_MONTH_get() {
  char jresult ;
  ITapTrade::TAPICommodityType result;
  
  result = (ITapTrade::TAPICommodityType)(ITapTrade::TAPICommodityType)ITapTrade::TAPI_COMMODITY_TYPE_SPREAD_MONTH;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_SPREAD_COMMODITY_get() {
  char jresult ;
  ITapTrade::TAPICommodityType result;
  
  result = (ITapTrade::TAPICommodityType)(ITapTrade::TAPICommodityType)ITapTrade::TAPI_COMMODITY_TYPE_SPREAD_COMMODITY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_BUL_get() {
  char jresult ;
  ITapTrade::TAPICommodityType result;
  
  result = (ITapTrade::TAPICommodityType)(ITapTrade::TAPICommodityType)ITapTrade::TAPI_COMMODITY_TYPE_BUL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_BER_get() {
  char jresult ;
  ITapTrade::TAPICommodityType result;
  
  result = (ITapTrade::TAPICommodityType)(ITapTrade::TAPICommodityType)ITapTrade::TAPI_COMMODITY_TYPE_BER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_STD_get() {
  char jresult ;
  ITapTrade::TAPICommodityType result;
  
  result = (ITapTrade::TAPICommodityType)(ITapTrade::TAPICommodityType)ITapTrade::TAPI_COMMODITY_TYPE_STD;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_STG_get() {
  char jresult ;
  ITapTrade::TAPICommodityType result;
  
  result = (ITapTrade::TAPICommodityType)(ITapTrade::TAPICommodityType)ITapTrade::TAPI_COMMODITY_TYPE_STG;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_PRT_get() {
  char jresult ;
  ITapTrade::TAPICommodityType result;
  
  result = (ITapTrade::TAPICommodityType)(ITapTrade::TAPICommodityType)ITapTrade::TAPI_COMMODITY_TYPE_PRT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_DIRECTFOREX_get() {
  char jresult ;
  ITapTrade::TAPICommodityType result;
  
  result = (ITapTrade::TAPICommodityType)(ITapTrade::TAPICommodityType)ITapTrade::TAPI_COMMODITY_TYPE_DIRECTFOREX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_INDIRECTFOREX_get() {
  char jresult ;
  ITapTrade::TAPICommodityType result;
  
  result = (ITapTrade::TAPICommodityType)(ITapTrade::TAPICommodityType)ITapTrade::TAPI_COMMODITY_TYPE_INDIRECTFOREX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_CROSSFOREX_get() {
  char jresult ;
  ITapTrade::TAPICommodityType result;
  
  result = (ITapTrade::TAPICommodityType)(ITapTrade::TAPICommodityType)ITapTrade::TAPI_COMMODITY_TYPE_CROSSFOREX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_INDEX_get() {
  char jresult ;
  ITapTrade::TAPICommodityType result;
  
  result = (ITapTrade::TAPICommodityType)(ITapTrade::TAPICommodityType)ITapTrade::TAPI_COMMODITY_TYPE_INDEX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_STOCK_get() {
  char jresult ;
  ITapTrade::TAPICommodityType result;
  
  result = (ITapTrade::TAPICommodityType)(ITapTrade::TAPICommodityType)ITapTrade::TAPI_COMMODITY_TYPE_STOCK;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CALLPUT_FLAG_CALL_get() {
  char jresult ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  result = (ITapTrade::TAPICallOrPutFlagType)(ITapTrade::TAPICallOrPutFlagType)ITapTrade::TAPI_CALLPUT_FLAG_CALL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CALLPUT_FLAG_PUT_get() {
  char jresult ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  result = (ITapTrade::TAPICallOrPutFlagType)(ITapTrade::TAPICallOrPutFlagType)ITapTrade::TAPI_CALLPUT_FLAG_PUT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CALLPUT_FLAG_NONE_get() {
  char jresult ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  result = (ITapTrade::TAPICallOrPutFlagType)(ITapTrade::TAPICallOrPutFlagType)ITapTrade::TAPI_CALLPUT_FLAG_NONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIApplicationInfo_AuthCode_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIApplicationInfo *arg1 = (ITapTrade::TapAPIApplicationInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIApplicationInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AuthCode, (const char *)arg2, 513-1);
      arg1->AuthCode[513-1] = 0;
    } else {
      arg1->AuthCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIApplicationInfo_AuthCode_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIApplicationInfo *arg1 = (ITapTrade::TapAPIApplicationInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIApplicationInfo *)jarg1; 
  result = (char *) ((arg1)->AuthCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIApplicationInfo_KeyOperationLogPath_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIApplicationInfo *arg1 = (ITapTrade::TapAPIApplicationInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIApplicationInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->KeyOperationLogPath, (const char *)arg2, 301-1);
      arg1->KeyOperationLogPath[301-1] = 0;
    } else {
      arg1->KeyOperationLogPath[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIApplicationInfo_KeyOperationLogPath_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIApplicationInfo *arg1 = (ITapTrade::TapAPIApplicationInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIApplicationInfo *)jarg1; 
  result = (char *) ((arg1)->KeyOperationLogPath);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIApplicationInfo_LogLevel_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIApplicationInfo *arg1 = (ITapTrade::TapAPIApplicationInfo *) 0 ;
  ITapTrade::TAPILOGLEVEL arg2 ;
  
  arg1 = (ITapTrade::TapAPIApplicationInfo *)jarg1; 
  arg2 = (ITapTrade::TAPILOGLEVEL)jarg2; 
  if (arg1) (arg1)->LogLevel = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIApplicationInfo_LogLevel_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIApplicationInfo *arg1 = (ITapTrade::TapAPIApplicationInfo *) 0 ;
  ITapTrade::TAPILOGLEVEL result;
  
  arg1 = (ITapTrade::TapAPIApplicationInfo *)jarg1; 
  result = (ITapTrade::TAPILOGLEVEL) ((arg1)->LogLevel);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIApplicationInfo_APPID_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIApplicationInfo *arg1 = (ITapTrade::TapAPIApplicationInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIApplicationInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->APPID, (const char *)arg2, 31-1);
      arg1->APPID[31-1] = 0;
    } else {
      arg1->APPID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIApplicationInfo_APPID_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIApplicationInfo *arg1 = (ITapTrade::TapAPIApplicationInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIApplicationInfo *)jarg1; 
  result = (char *) ((arg1)->APPID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIApplicationInfo_ReConnectCount_set(void * jarg1, int jarg2) {
  ITapTrade::TapAPIApplicationInfo *arg1 = (ITapTrade::TapAPIApplicationInfo *) 0 ;
  ITapTrade::TAPIINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIApplicationInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIINT32)jarg2; 
  if (arg1) (arg1)->ReConnectCount = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TapAPIApplicationInfo_ReConnectCount_get(void * jarg1) {
  int jresult ;
  ITapTrade::TapAPIApplicationInfo *arg1 = (ITapTrade::TapAPIApplicationInfo *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::TapAPIApplicationInfo *)jarg1; 
  result = (ITapTrade::TAPIINT32) ((arg1)->ReConnectCount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIApplicationInfo_ReConnectSeconds_set(void * jarg1, int jarg2) {
  ITapTrade::TapAPIApplicationInfo *arg1 = (ITapTrade::TapAPIApplicationInfo *) 0 ;
  ITapTrade::TAPIINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIApplicationInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIINT32)jarg2; 
  if (arg1) (arg1)->ReConnectSeconds = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TapAPIApplicationInfo_ReConnectSeconds_get(void * jarg1) {
  int jresult ;
  ITapTrade::TapAPIApplicationInfo *arg1 = (ITapTrade::TapAPIApplicationInfo *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::TapAPIApplicationInfo *)jarg1; 
  result = (ITapTrade::TAPIINT32) ((arg1)->ReConnectSeconds);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIApplicationInfo() {
  void * jresult ;
  ITapTrade::TapAPIApplicationInfo *result = 0 ;
  
  result = (ITapTrade::TapAPIApplicationInfo *)new ITapTrade::TapAPIApplicationInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIApplicationInfo(void * jarg1) {
  ITapTrade::TapAPIApplicationInfo *arg1 = (ITapTrade::TapAPIApplicationInfo *) 0 ;
  
  arg1 = (ITapTrade::TapAPIApplicationInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodity_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICommodity *arg1 = (ITapTrade::TapAPICommodity *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICommodity *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodity_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICommodity *arg1 = (ITapTrade::TapAPICommodity *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICommodity *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodity_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPICommodity *arg1 = (ITapTrade::TapAPICommodity *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPICommodity *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICommodity_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPICommodity *arg1 = (ITapTrade::TapAPICommodity *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPICommodity *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodity_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICommodity *arg1 = (ITapTrade::TapAPICommodity *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICommodity *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodity_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICommodity *arg1 = (ITapTrade::TapAPICommodity *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICommodity *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPICommodity() {
  void * jresult ;
  ITapTrade::TapAPICommodity *result = 0 ;
  
  result = (ITapTrade::TapAPICommodity *)new ITapTrade::TapAPICommodity();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPICommodity(void * jarg1) {
  ITapTrade::TapAPICommodity *arg1 = (ITapTrade::TapAPICommodity *) 0 ;
  
  arg1 = (ITapTrade::TapAPICommodity *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIContract_Commodity_set(void * jarg1, void * jarg2) {
  ITapTrade::TapAPIContract *arg1 = (ITapTrade::TapAPIContract *) 0 ;
  ITapTrade::TapAPICommodity *arg2 = (ITapTrade::TapAPICommodity *) 0 ;
  
  arg1 = (ITapTrade::TapAPIContract *)jarg1; 
  arg2 = (ITapTrade::TapAPICommodity *)jarg2; 
  if (arg1) (arg1)->Commodity = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPIContract_Commodity_get(void * jarg1) {
  void * jresult ;
  ITapTrade::TapAPIContract *arg1 = (ITapTrade::TapAPIContract *) 0 ;
  ITapTrade::TapAPICommodity *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIContract *)jarg1; 
  result = (ITapTrade::TapAPICommodity *)& ((arg1)->Commodity);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIContract_ContractNo1_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIContract *arg1 = (ITapTrade::TapAPIContract *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIContract *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo1, (const char *)arg2, 11-1);
      arg1->ContractNo1[11-1] = 0;
    } else {
      arg1->ContractNo1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIContract_ContractNo1_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIContract *arg1 = (ITapTrade::TapAPIContract *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIContract *)jarg1; 
  result = (char *) ((arg1)->ContractNo1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIContract_StrikePrice1_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIContract *arg1 = (ITapTrade::TapAPIContract *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIContract *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice1, (const char *)arg2, 11-1);
      arg1->StrikePrice1[11-1] = 0;
    } else {
      arg1->StrikePrice1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIContract_StrikePrice1_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIContract *arg1 = (ITapTrade::TapAPIContract *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIContract *)jarg1; 
  result = (char *) ((arg1)->StrikePrice1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIContract_CallOrPutFlag1_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIContract *arg1 = (ITapTrade::TapAPIContract *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIContract *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag1 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIContract_CallOrPutFlag1_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIContract *arg1 = (ITapTrade::TapAPIContract *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPIContract *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIContract_ContractNo2_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIContract *arg1 = (ITapTrade::TapAPIContract *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIContract *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo2, (const char *)arg2, 11-1);
      arg1->ContractNo2[11-1] = 0;
    } else {
      arg1->ContractNo2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIContract_ContractNo2_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIContract *arg1 = (ITapTrade::TapAPIContract *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIContract *)jarg1; 
  result = (char *) ((arg1)->ContractNo2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIContract_StrikePrice2_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIContract *arg1 = (ITapTrade::TapAPIContract *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIContract *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice2, (const char *)arg2, 11-1);
      arg1->StrikePrice2[11-1] = 0;
    } else {
      arg1->StrikePrice2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIContract_StrikePrice2_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIContract *arg1 = (ITapTrade::TapAPIContract *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIContract *)jarg1; 
  result = (char *) ((arg1)->StrikePrice2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIContract_CallOrPutFlag2_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIContract *arg1 = (ITapTrade::TapAPIContract *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIContract *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIContract_CallOrPutFlag2_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIContract *arg1 = (ITapTrade::TapAPIContract *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPIContract *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIContract() {
  void * jresult ;
  ITapTrade::TapAPIContract *result = 0 ;
  
  result = (ITapTrade::TapAPIContract *)new ITapTrade::TapAPIContract();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIContract(void * jarg1) {
  ITapTrade::TapAPIContract *arg1 = (ITapTrade::TapAPIContract *) 0 ;
  
  arg1 = (ITapTrade::TapAPIContract *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIExchangeInfo_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIExchangeInfo *arg1 = (ITapTrade::TapAPIExchangeInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIExchangeInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIExchangeInfo_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIExchangeInfo *arg1 = (ITapTrade::TapAPIExchangeInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIExchangeInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIExchangeInfo_ExchangeName_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIExchangeInfo *arg1 = (ITapTrade::TapAPIExchangeInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIExchangeInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeName, (const char *)arg2, 21-1);
      arg1->ExchangeName[21-1] = 0;
    } else {
      arg1->ExchangeName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIExchangeInfo_ExchangeName_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIExchangeInfo *arg1 = (ITapTrade::TapAPIExchangeInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIExchangeInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIExchangeInfo() {
  void * jresult ;
  ITapTrade::TapAPIExchangeInfo *result = 0 ;
  
  result = (ITapTrade::TapAPIExchangeInfo *)new ITapTrade::TapAPIExchangeInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIExchangeInfo(void * jarg1) {
  ITapTrade::TapAPIExchangeInfo *arg1 = (ITapTrade::TapAPIExchangeInfo *) 0 ;
  
  arg1 = (ITapTrade::TapAPIExchangeInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIChangePasswordReq_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIChangePasswordReq *arg1 = (ITapTrade::TapAPIChangePasswordReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIChangePasswordReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIChangePasswordReq_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIChangePasswordReq *arg1 = (ITapTrade::TapAPIChangePasswordReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIChangePasswordReq *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIChangePasswordReq_PasswordType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIChangePasswordReq *arg1 = (ITapTrade::TapAPIChangePasswordReq *) 0 ;
  ITapTrade::TAPIPasswordType arg2 ;
  
  arg1 = (ITapTrade::TapAPIChangePasswordReq *)jarg1; 
  arg2 = (ITapTrade::TAPIPasswordType)jarg2; 
  if (arg1) (arg1)->PasswordType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIChangePasswordReq_PasswordType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIChangePasswordReq *arg1 = (ITapTrade::TapAPIChangePasswordReq *) 0 ;
  ITapTrade::TAPIPasswordType result;
  
  arg1 = (ITapTrade::TapAPIChangePasswordReq *)jarg1; 
  result = (ITapTrade::TAPIPasswordType) ((arg1)->PasswordType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIChangePasswordReq_OldPassword_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIChangePasswordReq *arg1 = (ITapTrade::TapAPIChangePasswordReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIChangePasswordReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OldPassword, (const char *)arg2, 21-1);
      arg1->OldPassword[21-1] = 0;
    } else {
      arg1->OldPassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIChangePasswordReq_OldPassword_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIChangePasswordReq *arg1 = (ITapTrade::TapAPIChangePasswordReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIChangePasswordReq *)jarg1; 
  result = (char *) ((arg1)->OldPassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIChangePasswordReq_NewPassword_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIChangePasswordReq *arg1 = (ITapTrade::TapAPIChangePasswordReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIChangePasswordReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->NewPassword, (const char *)arg2, 21-1);
      arg1->NewPassword[21-1] = 0;
    } else {
      arg1->NewPassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIChangePasswordReq_NewPassword_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIChangePasswordReq *arg1 = (ITapTrade::TapAPIChangePasswordReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIChangePasswordReq *)jarg1; 
  result = (char *) ((arg1)->NewPassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIChangePasswordReq() {
  void * jresult ;
  ITapTrade::TapAPIChangePasswordReq *result = 0 ;
  
  result = (ITapTrade::TapAPIChangePasswordReq *)new ITapTrade::TapAPIChangePasswordReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIChangePasswordReq(void * jarg1) {
  ITapTrade::TapAPIChangePasswordReq *arg1 = (ITapTrade::TapAPIChangePasswordReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIChangePasswordReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAuthPasswordReq_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAuthPasswordReq *arg1 = (ITapTrade::TapAPIAuthPasswordReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAuthPasswordReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAuthPasswordReq_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAuthPasswordReq *arg1 = (ITapTrade::TapAPIAuthPasswordReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAuthPasswordReq *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAuthPasswordReq_PasswordType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIAuthPasswordReq *arg1 = (ITapTrade::TapAPIAuthPasswordReq *) 0 ;
  ITapTrade::TAPIPasswordType arg2 ;
  
  arg1 = (ITapTrade::TapAPIAuthPasswordReq *)jarg1; 
  arg2 = (ITapTrade::TAPIPasswordType)jarg2; 
  if (arg1) (arg1)->PasswordType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIAuthPasswordReq_PasswordType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIAuthPasswordReq *arg1 = (ITapTrade::TapAPIAuthPasswordReq *) 0 ;
  ITapTrade::TAPIPasswordType result;
  
  arg1 = (ITapTrade::TapAPIAuthPasswordReq *)jarg1; 
  result = (ITapTrade::TAPIPasswordType) ((arg1)->PasswordType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAuthPasswordReq_Password_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAuthPasswordReq *arg1 = (ITapTrade::TapAPIAuthPasswordReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAuthPasswordReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 21-1);
      arg1->Password[21-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAuthPasswordReq_Password_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAuthPasswordReq *arg1 = (ITapTrade::TapAPIAuthPasswordReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAuthPasswordReq *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIAuthPasswordReq() {
  void * jresult ;
  ITapTrade::TapAPIAuthPasswordReq *result = 0 ;
  
  result = (ITapTrade::TapAPIAuthPasswordReq *)new ITapTrade::TapAPIAuthPasswordReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIAuthPasswordReq(void * jarg1) {
  ITapTrade::TapAPIAuthPasswordReq *arg1 = (ITapTrade::TapAPIAuthPasswordReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIAuthPasswordReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOGIN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_USER_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOGIN_USER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_DDA_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOGIN_DDA;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_LICENSE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOGIN_LICENSE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_MODULE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOGIN_MODULE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_FORCE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOGIN_FORCE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_STATE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOGIN_STATE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_PASS_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOGIN_PASS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_RIGHT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOGIN_RIGHT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_COUNT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOGIN_COUNT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_NOTIN_SERVERFLAGUSRES_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOGIN_NOTIN_SERVERFLAGUSRES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_FREEZE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOGIN_FREEZE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_TOFREEZE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOGIN_TOFREEZE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_ACCOUNTSTATE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOGIN_ACCOUNTSTATE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_SECCERTIFI_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOGIN_SECCERTIFI;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_NOSECONDSET_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOGIN_NOSECONDSET;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_NOTURSTHOST_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOGIN_NOTURSTHOST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_NOTINTRADECENTER_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOGIN_NOTINTRADECENTER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_INCONSISTENT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOGIN_INCONSISTENT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_NOCENTERFRONTADDRESS_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOGIN_NOCENTERFRONTADDRESS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_PROHIBITACCOUNTTYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOGIN_PROHIBITACCOUNTTYPE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_GATHERINFO_DIRECT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOGIN_GATHERINFO_DIRECT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_GATHERINFO_RELAY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOGIN_GATHERINFO_RELAY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_SECONDCERTIFICATION_FAIL_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_SECONDCERTIFICATION_FAIL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_SECONDCERTIFICATION_TIMEOVER_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_SECONDCERTIFICATION_TIMEOVER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_SECONDCERTIFICATION_RELOGIN_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_SECONDCERTIFICATION_RELOGIN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_SECONDCERTIFICATION_FREEZE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_SECONDCERTIFICATION_FREEZE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_CONN_DATABASE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_CONN_DATABASE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_OPER_DATABASE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_OPER_DATABASE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_NEED_ONETOONE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_NEED_ONETOONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_EXIST_RELATEINFO_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_EXIST_RELATEINFO;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_EXIST_RELATEINFOOFGROUP_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_EXIST_RELATEINFOOFGROUP;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_CHECK_FAILED_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_CHECK_FAILED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_EXIST_OUTSIDECOMMODITYNO_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_EXIST_OUTSIDECOMMODITYNO;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_NOTEXIST_BILL_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_NOTEXIST_BILL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_PROHIBITADDACCOUNTTYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOGIN_PROHIBITADDACCOUNTTYPE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ACCOUNTINFO_NOTEXPTY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ACCOUNTINFO_NOTEXPTY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ACCOUNTINFO_SuperiorNOTEMPTY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ACCOUNTINFO_SuperiorNOTEMPTY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_USERPASSWORD_MOD_SOURCE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_USERPASSWORD_MOD_SOURCE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_USERPASSWORD_MOD_SAME_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_USERPASSWORD_MOD_SAME;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_USERPASSWORD_MOD_COMPLEXITY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_USERPASSWORD_MOD_COMPLEXITY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_CURRENCY_ONLY_ONEBASE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_CURRENCY_ONLY_ONEBASE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_CURRENCY_ONLY_USDHKD_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_CURRENCY_ONLY_USDHKD;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_GATHERINFO_NO_AUTHKEY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_GATHERINFO_NO_AUTHKEY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_GATHERINFO_AUTH_FAILED_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_GATHERINFO_AUTH_FAILED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_ACCOUNT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINSERT_ACCOUNT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_ACCOUNT_STATE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINSERT_ACCOUNT_STATE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_TRADECENT_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINSERT_TRADECENT_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINT_MAINACCOUNT_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINT_MAINACCOUNT_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINT_MAINACCINFO_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINT_MAINACCINFO_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINT_NO_OPTMARKET_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINT_NO_OPTMARKET_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINT_UN_SUPPORT_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINT_UN_SUPPORT_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_CONTRACT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINSERT_CONTRACT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_LME_NOTREADY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINSERT_LME_NOTREADY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_ERROR_ORDER_TYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINSERT_ERROR_ORDER_TYPE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_READY_TYPE_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINSERT_READY_TYPE_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_ORDER_TYPE_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINSERT_ORDER_TYPE_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_SUBCONTRACT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINSERT_SUBCONTRACT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_SPOTBUYQTY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINSERT_SPOTBUYQTY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_RESERVE_PUT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINSERT_RESERVE_PUT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_RESERVE_B_OPEN_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINSERT_RESERVE_B_OPEN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_RESERVE_S_COVER_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINSERT_RESERVE_S_COVER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_NOTRADE_ACCOUNT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDER_NOTRADE_ACCOUNT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_NOTRADE_COM_GROUP_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDER_NOTRADE_COM_GROUP;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_NOTRADE_ACC_CONTRACT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDER_NOTRADE_ACC_CONTRACT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_NOTRADE_SYSTEM_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDER_NOTRADE_SYSTEM;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_CLOSE_ACCOUNT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDER_CLOSE_ACCOUNT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_CLOSE_ACC_CONTRACT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDER_CLOSE_ACC_CONTRACT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_CLOSE_SYSTEM_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDER_CLOSE_SYSTEM;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_CLOSE_DAYS_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDER_CLOSE_DAYS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_NOTRADE_RISK_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDER_NOTRADE_RISK;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_CLOSE_RISK_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDER_CLOSE_RISK;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_POSITIONMAX_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINSERT_POSITIONMAX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_ONCEMAX_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINSERT_ONCEMAX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_TRADEROUTE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINSERT_TRADEROUTE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_IN_MOD_PRICE_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDER_IN_MOD_PRICE_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_IN_GIVEUP_POS_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDER_IN_GIVEUP_POS_MAX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAIERROR_ORDER_ETF_POSITIONMAX_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAIERROR_ORDER_ETF_POSITIONMAX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAIERROR_ORDER_ETF_BUYPOSITIONMAX_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAIERROR_ORDER_ETF_BUYPOSITIONMAX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAIERROR_ORDER_ETF_BUYONEDAYPOSITIONMAX_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAIERROR_ORDER_ETF_BUYONEDAYPOSITIONMAX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAIERROR_ORDERINSERT_NOTENOUGHSPOT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAIERROR_ORDERINSERT_NOTENOUGHSPOT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAIERROR_ORDERINSERT_RESERVE_SPOT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAIERROR_ORDERINSERT_RESERVE_SPOT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_UPPERCHANNEL_NOT_LOGIN_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_UPPERCHANNEL_NOT_LOGIN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_UPPERCHANNEL_NOT_FOUND_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_UPPERCHANNEL_NOT_FOUND;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_COMMODITY_LOCK_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_COMMODITY_LOCK;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_SPOT_ROOT_COMMODITY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_SPOT_ROOT_COMMODITY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAIERROR_SPOT_ROOTCOM_TRADEROUTE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAIERROR_SPOT_ROOTCOM_TRADEROUTE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_NOTENOUGHFUND_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINSERT_NOTENOUGHFUND;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_FEE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINSERT_FEE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_MARGIN_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINSERT_MARGIN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_BASENOFUND_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINSERT_BASENOFUND;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_MARGINAMOUNT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINSERT_MARGINAMOUNT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_OPENRATIO_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINSERT_OPENRATIO;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_GROUP_OPENRATIO_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINSERT_GROUP_OPENRATIO;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_RISKARRAY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINSERT_RISKARRAY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAIERROR_ORDERINSERT_BUYLIMITE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAIERROR_ORDERINSERT_BUYLIMITE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAIERROR_ORDERINSERT_GROUP_BUYLIMITE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAIERROR_ORDERINSERT_GROUP_BUYLIMITE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERDELETE_NOT_SYSNO_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERDELETE_NOT_SYSNO;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERDELETE_NOT_STATE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERDELETE_NOT_STATE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERDELETE_NO_INPUT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERDELETE_NO_INPUT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERDELETE_NO_TRADE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERDELETE_NO_TRADE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERMODIFY_NOT_STATE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERMODIFY_NOT_STATE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERMODIFY_BACK_INPUT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERMODIFY_BACK_INPUT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERMODIFY_RISK_ORDER_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERMODIFY_RISK_ORDER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERMODIFY_ERROR_QTY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERMODIFY_ERROR_QTY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERMODIFY_ERROR_READY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERMODIFY_ERROR_READY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINPUT_CANNOTMOVE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINPUT_CANNOTMOVE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINPUT_REPEAT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINPUT_REPEAT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_CONTRACT_QUOTE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_CONTRACT_QUOTE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_UPPER_ONCEMAX_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_UPPER_ONCEMAX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_UPPER_POSITIONMAX_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_UPPER_POSITIONMAX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_CLOSEMODE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINSERT_CLOSEMODE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_CLOSE_ORDER_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_CLOSE_ORDER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_CLOSE_MATCH_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_CLOSE_MATCH;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_MOD_DEL_NO_ORDER_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_MOD_DEL_NO_ORDER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_MOD_DEL_GATEWAY_DISCON_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_MOD_DEL_GATEWAY_DISCON;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_MATCHINPUT_REPEAT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_MATCHINPUT_REPEAT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_MATCHINPUT_NO_ORDER_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_MATCHINPUT_NO_ORDER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_MATCHINPUT_NO_CONTRACT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_MATCHINPUT_NO_CONTRACT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_MATCHINPUT_PARM_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_MATCHINPUT_PARM_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_MATCHINPUT_OSTATE_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_MATCHINPUT_OSTATE_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_MATCHREMOVE_NO_MATCH_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_MATCHREMOVE_NO_MATCH;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_MATCHREMOVE_STATE_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_MATCHREMOVE_STATE_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINPUT_STATE_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINPUT_STATE_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINPUT_MOD_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINPUT_MOD_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERREMOVE_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERREMOVE_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINPUT_MOD_STATE_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINPUT_MOD_STATE_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDEREXCHANGE_STATE_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDEREXCHANGE_STATE_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERREMOVE_NOT_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERREMOVE_NOT_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERMARKET_DELETE_NOTFOUND_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERMARKET_DELETE_NOTFOUND;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERMARKET_DEL_ACCOUNT_NE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERMARKET_DEL_ACCOUNT_NE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERMARKET_DEL_COMMODITY_NE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERMARKET_DEL_COMMODITY_NE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERMARKET_DEL_CONTRACT_NE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERMARKET_DEL_CONTRACT_NE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERMARKET_DEL_SIDE_EQ_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERMARKET_DEL_SIDE_EQ;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERMARKET_DEL_SIDE_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERMARKET_DEL_SIDE_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERMARKET_OTHER_SIDE_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERMARKET_OTHER_SIDE_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERACTIVATE_NOTFOUND_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERACTIVATE_NOTFOUND_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERACTIVATE_STATE_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERACTIVATE_STATE_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_TRANSIT_ORDERINSERT_RIGHT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_TRANSIT_ORDERINSERT_RIGHT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_TRANSIT_ORDERINSERT_DISCON_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_TRANSIT_ORDERINSERT_DISCON;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_TRANSIT_ORDERINSERT_DISCON_DEST_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_TRANSIT_ORDERINSERT_DISCON_DEST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_TRANSIT_ORDERDELETE_DISCON_DEST_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_TRANSIT_ORDERDELETE_DISCON_DEST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_TRANSIT_ORDERMODIFY_DISCON_DEST_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_TRANSIT_ORDERMODIFY_DISCON_DEST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_TRANSIT_ORDER_OPERATOR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_TRANSIT_ORDER_OPERATOR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_DISALLOWBUY_ACCOUNT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDER_DISALLOWBUY_ACCOUNT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_DISALLOWSELL_ACCOUNT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDER_DISALLOWSELL_ACCOUNT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_DISALLOWBUY_SYSTEM_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDER_DISALLOWBUY_SYSTEM;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_DISALLOWSELL_SYSTEM_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDER_DISALLOWSELL_SYSTEM;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_DIS_SELLOPTION_ACCOUNT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDER_DIS_SELLOPTION_ACCOUNT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_DIS_SELLOPTION_SYSTEM_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDER_DIS_SELLOPTION_SYSTEM;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_LOANAMOUNT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDERINSERT_LOANAMOUNT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_COMBINE_COMMODITY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_COMBINE_COMMODITY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_COMBINE_CALLORPUT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_COMBINE_CALLORPUT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_COMBINE_COMPOSITION_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_COMBINE_COMPOSITION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_COMBINE_COMPOSITION_QTY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_COMBINE_COMPOSITION_QTY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_COMBINE_HEDGEFLAG_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_COMBINE_HEDGEFLAG;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_COMBINE_ORDERSIDE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_COMBINE_ORDERSIDE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_COMBINE_CONTRACTSIZE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_COMBINE_CONTRACTSIZE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_COMBINE_CONTRACTDAYS_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_COMBINE_CONTRACTDAYS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_COMBINE_STRIKEPRICE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_COMBINE_STRIKEPRICE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_COMBINE_CONTRACT_SAME_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_COMBINE_CONTRACT_SAME;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_GW_NOT_READY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_GW_NOT_READY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_GW_INVALID_COMMODITY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_GW_INVALID_COMMODITY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_GW_INVALID_CONTRACT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_GW_INVALID_CONTRACT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_GW_INVALID_FIELD_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_GW_INVALID_FIELD;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_GW_INVALID_PRICE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_GW_INVALID_PRICE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_GW_INVALID_VOLUME_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_GW_INVALID_VOLUME;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_GW_INVALID_TYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_GW_INVALID_TYPE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_GW_INVALID_MODE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_GW_INVALID_MODE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_GW_ORDER_NOT_EXIST_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_GW_ORDER_NOT_EXIST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_GW_SEND_FAIL_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_GW_SEND_FAIL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_GW_REJ_BYUPPER_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_GW_REJ_BYUPPER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_TRADEFRONT_MODULETYPEERR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_TRADEFRONT_MODULETYPEERR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_TRADEFRONT_TOOMANYDATA_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_TRADEFRONT_TOOMANYDATA;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_TRADEFRONT_NODATA_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_TRADEFRONT_NODATA;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROT_TRADEFRONT_NOUSER_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROT_TRADEFRONT_NOUSER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_TRADEFRONT_DISCONNECT_TRADE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_TRADEFRONT_DISCONNECT_TRADE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_TRADEFRONT_DISCONNECT_MANAGE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_TRADEFRONT_DISCONNECT_MANAGE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_TRADEFRONT_ACCOUNT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_TRADEFRONT_ACCOUNT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_TRADEFRONT_ORDER_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_TRADEFRONT_ORDER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_TRADEFRONT_FREQUENCY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_TRADEFRONT_FREQUENCY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_TRADEFRONT_RUFUSE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_TRADEFRONT_RUFUSE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_TRADEFRONT_SELFMATCH_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_TRADEFRONT_SELFMATCH;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_SUCCEED_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_SUCCEED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ConnectFail_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ConnectFail;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LinkAuthFail_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LinkAuthFail;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_HostUnavailable_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_HostUnavailable;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_SendDataError_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_SendDataError;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_TestIDError_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_TestIDError;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_NotReadyTestNetwork_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_NotReadyTestNetwork;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_CurTestNotOver_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_CurTestNotOver;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_NOFrontAvailable_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_NOFrontAvailable;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DataPathAvaiable_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_DataPathAvaiable;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_RepeatLogin_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_RepeatLogin;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_InnerError_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_InnerError;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LastReqNotFinish_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LastReqNotFinish;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_InputValueError_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_InputValueError;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_AuthCode_Invalid_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_AuthCode_Invalid;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_AuthCode_Expired_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_AuthCode_Expired;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_AuthCode_TypeNotMatch_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_AuthCode_TypeNotMatch;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_API_NotReady_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_API_NotReady;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_UDP_LISTEN_FAILED_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_UDP_LISTEN_FAILED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_UDP_LISTENING_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_UDP_LISTENING;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_NotImplemented_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_NotImplemented;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_CallOneTimeOnly_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_CallOneTimeOnly;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_FREQUENCY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDER_FREQUENCY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_RENTQRY_TOOFAST_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_RENTQRY_TOOFAST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_CALL_NOCONDITION_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_CALL_NOCONDITION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_NOTFOUND_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDER_NOTFOUND;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGPATH_EMPTY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOGPATH_EMPTY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGPATH_FAILOPEN_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOGPATH_FAILOPEN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_RIGHT_TRADER_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_RIGHT_TRADER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_RIGHT_ORDERINPUT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_RIGHT_ORDERINPUT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_RIGHT_LOCALOPERATION_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_RIGHT_LOCALOPERATION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_RIGHT_ORDERTRANSFER_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_RIGHT_ORDERTRANSFER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_FILLINPUT_SYSTEMNO_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_FILLINPUT_SYSTEMNO;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_FILLREMOVE_MATCHNO_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_FILLREMOVE_MATCHNO;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_FILLREQMOVE_NOFUND_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_FILLREQMOVE_NOFUND;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOCALMODIFY_ACCOUNT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOCALMODIFY_ACCOUNT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOCALTRANSFER_ACCOUNT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_LOCALTRANSFER_ACCOUNT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_PHONE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_PHONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ERROR_CONTACT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ERROR_CONTACT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ERROR_REJESTVERTIFICATE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ERROR_REJESTVERTIFICATE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ERROR_NOTREQUESTSECONDCODE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ERROR_NOTREQUESTSECONDCODE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_RIGHT_SETPASSWORD_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_RIGHT_SETPASSWORD;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_RISK_OPERERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_RISK_OPERERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_MODACCOUNT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ORDER_MODACCOUNT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_MEMORY_ALLOCFAILED_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_MEMORY_ALLOCFAILED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ERROR_LICENSECOMMODITY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ERROR_LICENSECOMMODITY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_GATHERINFO_NORELAY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_GATHERINFO_NORELAY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_GATHERINFO_PARTY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_GATHERINFO_PARTY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ERROR_SYSTEMTYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_ERROR_SYSTEMTYPE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_GATHERINFO_DATALOAD_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_GATHERINFO_DATALOAD;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_NULL_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_NULL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIYNFLAG_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIYNFLAG;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPILOGLEVEL_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPILOGLEVEL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPICommodityType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPICommodityType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPICallOrPutFlagType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPICallOrPutFlagType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIBucketDateFlag_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIBucketDateFlag;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIHisQuoteType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIHisQuoteType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIAccountType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIAccountType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIUserTypeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIUserTypeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIAccountState_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIAccountState;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIAccountFamilyType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIAccountFamilyType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIOrderTypeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIOrderTypeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIOrderSourceType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIOrderSourceType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPITimeInForceType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPITimeInForceType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPISideType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPISideType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIPositionEffectType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIPositionEffectType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIHedgeFlagType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIHedgeFlagType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIOrderStateType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIOrderStateType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPICalculateModeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPICalculateModeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIMatchSourceType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIMatchSourceType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIOpenCloseModeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIOpenCloseModeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIFutureAlgType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIFutureAlgType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIOptionAlgType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIOptionAlgType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIBankAccountLWFlagType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIBankAccountLWFlagType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIBankAccountStateType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIBankAccountStateType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIBankAccountSwapStateType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIBankAccountSwapStateType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIBankAccountTransferStateType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIBankAccountTransferStateType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIMarginCalculateModeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIMarginCalculateModeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIOptionMarginCalculateModeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIOptionMarginCalculateModeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPICmbDirectType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPICmbDirectType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIDeliveryModeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIDeliveryModeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIContractTypeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIContractTypeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIPartyTypeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIPartyTypeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIPartyCertificateTypeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIPartyCertificateTypeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIMsgReceiverType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIMsgReceiverType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIMsgTypeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIMsgTypeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIMsgLevelType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIMsgLevelType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPITransferDirectType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPITransferDirectType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPITransferStateType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPITransferStateType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPITransferTypeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPITransferTypeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPITransferDeviceIDType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPITransferDeviceIDType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPITacticsTypeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPITacticsTypeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIORDERACT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIORDERACT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIBillTypeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIBillTypeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIBillFileTypeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIBillFileTypeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIOFFFlagType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIOFFFlagType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPICashAdjustTypeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPICashAdjustTypeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPITriggerConditionType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPITriggerConditionType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPITriggerPriceTypeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPITriggerPriceTypeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPITradingStateType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPITradingStateType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIMarketLevelType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIMarketLevelType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIOrderQryTypeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIOrderQryTypeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIClientID_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIClientID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_QryHisQuoteParam_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_QryHisQuoteParam;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIIncludeNAN_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIIncludeNAN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIExpireTime_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIExpireTime;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIPasswordType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPIPasswordType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPISettleFlagType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPISettleFlagType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPILoginTypeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TAPILoginTypeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TapAPISpecialOrderTypeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TapAPISpecialOrderTypeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TapAPICombineStrategyType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_INPUTERROR_TapAPICombineStrategyType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_CLOSE_INIT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_DISCONNECT_CLOSE_INIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_CLOSE_PASS_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_DISCONNECT_CLOSE_PASS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_READ_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_DISCONNECT_READ_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_WRITE_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_DISCONNECT_WRITE_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_BUF_FULL_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_DISCONNECT_BUF_FULL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_IOCP_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_DISCONNECT_IOCP_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_PARSE_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_DISCONNECT_PARSE_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_CONNECT_TIMEOUT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_DISCONNECT_CONNECT_TIMEOUT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_INIT_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_DISCONNECT_INIT_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_HAS_CONNECTED_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_DISCONNECT_HAS_CONNECTED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_HAS_EXIT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_DISCONNECT_HAS_EXIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_TRY_LATER_get() {
  int jresult ;
  int result;
  
  result = (int)(int)ITapTrade::TAPIERROR_DISCONNECT_TRY_LATER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ACCOUNT_TYPE_PERSON_get() {
  char jresult ;
  ITapTrade::TAPIAccountType result;
  
  result = (ITapTrade::TAPIAccountType)(ITapTrade::TAPIAccountType)ITapTrade::TAPI_ACCOUNT_TYPE_PERSON;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ACCOUNT_TYPE_ORGANIZATION_get() {
  char jresult ;
  ITapTrade::TAPIAccountType result;
  
  result = (ITapTrade::TAPIAccountType)(ITapTrade::TAPIAccountType)ITapTrade::TAPI_ACCOUNT_TYPE_ORGANIZATION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ACCOUNT_TYPE_AGENT_get() {
  char jresult ;
  ITapTrade::TAPIAccountType result;
  
  result = (ITapTrade::TAPIAccountType)(ITapTrade::TAPIAccountType)ITapTrade::TAPI_ACCOUNT_TYPE_AGENT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ACCOUNT_TYPE_MARGIN_get() {
  char jresult ;
  ITapTrade::TAPIAccountType result;
  
  result = (ITapTrade::TAPIAccountType)(ITapTrade::TAPIAccountType)ITapTrade::TAPI_ACCOUNT_TYPE_MARGIN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ACCOUNT_TYPE_HOUSE_get() {
  char jresult ;
  ITapTrade::TAPIAccountType result;
  
  result = (ITapTrade::TAPIAccountType)(ITapTrade::TAPIAccountType)ITapTrade::TAPI_ACCOUNT_TYPE_HOUSE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ACCOUNT_TYPE_STOCK_get() {
  char jresult ;
  ITapTrade::TAPIAccountType result;
  
  result = (ITapTrade::TAPIAccountType)(ITapTrade::TAPIAccountType)ITapTrade::TAPI_ACCOUNT_TYPE_STOCK;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPI_RIGHT_ORDER_DEL_get() {
  int jresult ;
  ITapTrade::TAPIRightIDType result;
  
  result = (ITapTrade::TAPIRightIDType)(ITapTrade::TAPIRightIDType)ITapTrade::TAPI_RIGHT_ORDER_DEL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPI_RIGHT_ORDER_CHECK_get() {
  int jresult ;
  ITapTrade::TAPIRightIDType result;
  
  result = (ITapTrade::TAPIRightIDType)(ITapTrade::TAPIRightIDType)ITapTrade::TAPI_RIGHT_ORDER_CHECK;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPI_RIGHT_ONLY_QRY_get() {
  int jresult ;
  ITapTrade::TAPIRightIDType result;
  
  result = (ITapTrade::TAPIRightIDType)(ITapTrade::TAPIRightIDType)ITapTrade::TAPI_RIGHT_ONLY_QRY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPI_RIGHT_ONLY_OPEN_get() {
  int jresult ;
  ITapTrade::TAPIRightIDType result;
  
  result = (ITapTrade::TAPIRightIDType)(ITapTrade::TAPIRightIDType)ITapTrade::TAPI_RIGHT_ONLY_OPEN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPI_USERTYPE_CLIENT_get() {
  int jresult ;
  ITapTrade::TAPIUserTypeType result;
  
  result = (ITapTrade::TAPIUserTypeType)(ITapTrade::TAPIUserTypeType)ITapTrade::TAPI_USERTYPE_CLIENT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPI_USERTYPE_BROKER_get() {
  int jresult ;
  ITapTrade::TAPIUserTypeType result;
  
  result = (ITapTrade::TAPIUserTypeType)(ITapTrade::TAPIUserTypeType)ITapTrade::TAPI_USERTYPE_BROKER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPI_USERTYPE_TRADER_get() {
  int jresult ;
  ITapTrade::TAPIUserTypeType result;
  
  result = (ITapTrade::TAPIUserTypeType)(ITapTrade::TAPIUserTypeType)ITapTrade::TAPI_USERTYPE_TRADER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPI_USERTYPE_RISK_get() {
  int jresult ;
  ITapTrade::TAPIUserTypeType result;
  
  result = (ITapTrade::TAPIUserTypeType)(ITapTrade::TAPIUserTypeType)ITapTrade::TAPI_USERTYPE_RISK;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPI_USERTYPE_MANAGER_get() {
  int jresult ;
  ITapTrade::TAPIUserTypeType result;
  
  result = (ITapTrade::TAPIUserTypeType)(ITapTrade::TAPIUserTypeType)ITapTrade::TAPI_USERTYPE_MANAGER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPI_USERTYPE_QUOTE_get() {
  int jresult ;
  ITapTrade::TAPIUserTypeType result;
  
  result = (ITapTrade::TAPIUserTypeType)(ITapTrade::TAPIUserTypeType)ITapTrade::TAPI_USERTYPE_QUOTE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ACCOUNT_STATE_NORMAL_get() {
  char jresult ;
  ITapTrade::TAPIAccountState result;
  
  result = (ITapTrade::TAPIAccountState)(ITapTrade::TAPIAccountState)ITapTrade::TAPI_ACCOUNT_STATE_NORMAL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ACCOUNT_STATE_CANCEL_get() {
  char jresult ;
  ITapTrade::TAPIAccountState result;
  
  result = (ITapTrade::TAPIAccountState)(ITapTrade::TAPIAccountState)ITapTrade::TAPI_ACCOUNT_STATE_CANCEL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ACCOUNT_STATE_SLEEP_get() {
  char jresult ;
  ITapTrade::TAPIAccountState result;
  
  result = (ITapTrade::TAPIAccountState)(ITapTrade::TAPIAccountState)ITapTrade::TAPI_ACCOUNT_STATE_SLEEP;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ACCOUNT_STATE_FROZEN_get() {
  char jresult ;
  ITapTrade::TAPIAccountState result;
  
  result = (ITapTrade::TAPIAccountState)(ITapTrade::TAPIAccountState)ITapTrade::TAPI_ACCOUNT_STATE_FROZEN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ACCOUNT_TRADING_RIGHT_NORMAL_get() {
  char jresult ;
  ITapTrade::TAPIAccountRightType result;
  
  result = (ITapTrade::TAPIAccountRightType)(ITapTrade::TAPIAccountRightType)ITapTrade::TAPI_ACCOUNT_TRADING_RIGHT_NORMAL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ACCOUNT_TRADING_RIGHT_NOTRADE_get() {
  char jresult ;
  ITapTrade::TAPIAccountRightType result;
  
  result = (ITapTrade::TAPIAccountRightType)(ITapTrade::TAPIAccountRightType)ITapTrade::TAPI_ACCOUNT_TRADING_RIGHT_NOTRADE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ACCOUNT_TRADING_RIGHT_CLOSE_get() {
  char jresult ;
  ITapTrade::TAPIAccountRightType result;
  
  result = (ITapTrade::TAPIAccountRightType)(ITapTrade::TAPIAccountRightType)ITapTrade::TAPI_ACCOUNT_TRADING_RIGHT_CLOSE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TYPE_MARKET_get() {
  char jresult ;
  ITapTrade::TAPIOrderTypeType result;
  
  result = (ITapTrade::TAPIOrderTypeType)(ITapTrade::TAPIOrderTypeType)ITapTrade::TAPI_ORDER_TYPE_MARKET;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TYPE_LIMIT_get() {
  char jresult ;
  ITapTrade::TAPIOrderTypeType result;
  
  result = (ITapTrade::TAPIOrderTypeType)(ITapTrade::TAPIOrderTypeType)ITapTrade::TAPI_ORDER_TYPE_LIMIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TYPE_STOP_MARKET_get() {
  char jresult ;
  ITapTrade::TAPIOrderTypeType result;
  
  result = (ITapTrade::TAPIOrderTypeType)(ITapTrade::TAPIOrderTypeType)ITapTrade::TAPI_ORDER_TYPE_STOP_MARKET;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TYPE_STOP_LIMIT_get() {
  char jresult ;
  ITapTrade::TAPIOrderTypeType result;
  
  result = (ITapTrade::TAPIOrderTypeType)(ITapTrade::TAPIOrderTypeType)ITapTrade::TAPI_ORDER_TYPE_STOP_LIMIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TYPE_OPT_EXEC_get() {
  char jresult ;
  ITapTrade::TAPIOrderTypeType result;
  
  result = (ITapTrade::TAPIOrderTypeType)(ITapTrade::TAPIOrderTypeType)ITapTrade::TAPI_ORDER_TYPE_OPT_EXEC;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TYPE_OPT_ABANDON_get() {
  char jresult ;
  ITapTrade::TAPIOrderTypeType result;
  
  result = (ITapTrade::TAPIOrderTypeType)(ITapTrade::TAPIOrderTypeType)ITapTrade::TAPI_ORDER_TYPE_OPT_ABANDON;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TYPE_REQQUOT_get() {
  char jresult ;
  ITapTrade::TAPIOrderTypeType result;
  
  result = (ITapTrade::TAPIOrderTypeType)(ITapTrade::TAPIOrderTypeType)ITapTrade::TAPI_ORDER_TYPE_REQQUOT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TYPE_RSPQUOT_get() {
  char jresult ;
  ITapTrade::TAPIOrderTypeType result;
  
  result = (ITapTrade::TAPIOrderTypeType)(ITapTrade::TAPIOrderTypeType)ITapTrade::TAPI_ORDER_TYPE_RSPQUOT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TYPE_ICEBERG_get() {
  char jresult ;
  ITapTrade::TAPIOrderTypeType result;
  
  result = (ITapTrade::TAPIOrderTypeType)(ITapTrade::TAPIOrderTypeType)ITapTrade::TAPI_ORDER_TYPE_ICEBERG;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TYPE_GHOST_get() {
  char jresult ;
  ITapTrade::TAPIOrderTypeType result;
  
  result = (ITapTrade::TAPIOrderTypeType)(ITapTrade::TAPIOrderTypeType)ITapTrade::TAPI_ORDER_TYPE_GHOST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TYPE_HKEX_AUCTION_get() {
  char jresult ;
  ITapTrade::TAPIOrderTypeType result;
  
  result = (ITapTrade::TAPIOrderTypeType)(ITapTrade::TAPIOrderTypeType)ITapTrade::TAPI_ORDER_TYPE_HKEX_AUCTION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TYPE_SWAP_get() {
  char jresult ;
  ITapTrade::TAPIOrderTypeType result;
  
  result = (ITapTrade::TAPIOrderTypeType)(ITapTrade::TAPIOrderTypeType)ITapTrade::TAPI_ORDER_TYPE_SWAP;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TYPE_LOCK_get() {
  char jresult ;
  ITapTrade::TAPIOrderTypeType result;
  
  result = (ITapTrade::TAPIOrderTypeType)(ITapTrade::TAPIOrderTypeType)ITapTrade::TAPI_ORDER_TYPE_LOCK;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TYPE_UNLOCK_get() {
  char jresult ;
  ITapTrade::TAPIOrderTypeType result;
  
  result = (ITapTrade::TAPIOrderTypeType)(ITapTrade::TAPIOrderTypeType)ITapTrade::TAPI_ORDER_TYPE_UNLOCK;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TYPE_ENHANCE_get() {
  char jresult ;
  ITapTrade::TAPIOrderTypeType result;
  
  result = (ITapTrade::TAPIOrderTypeType)(ITapTrade::TAPIOrderTypeType)ITapTrade::TAPI_ORDER_TYPE_ENHANCE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_SOURCE_SELF_ETRADER_get() {
  char jresult ;
  ITapTrade::TAPIOrderSourceType result;
  
  result = (ITapTrade::TAPIOrderSourceType)(ITapTrade::TAPIOrderSourceType)ITapTrade::TAPI_ORDER_SOURCE_SELF_ETRADER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_SOURCE_PROXY_ETRADER_get() {
  char jresult ;
  ITapTrade::TAPIOrderSourceType result;
  
  result = (ITapTrade::TAPIOrderSourceType)(ITapTrade::TAPIOrderSourceType)ITapTrade::TAPI_ORDER_SOURCE_PROXY_ETRADER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_SOURCE_JTRADER_get() {
  char jresult ;
  ITapTrade::TAPIOrderSourceType result;
  
  result = (ITapTrade::TAPIOrderSourceType)(ITapTrade::TAPIOrderSourceType)ITapTrade::TAPI_ORDER_SOURCE_JTRADER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_SOURCE_MANUAL_get() {
  char jresult ;
  ITapTrade::TAPIOrderSourceType result;
  
  result = (ITapTrade::TAPIOrderSourceType)(ITapTrade::TAPIOrderSourceType)ITapTrade::TAPI_ORDER_SOURCE_MANUAL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_SOURCE_CARRY_get() {
  char jresult ;
  ITapTrade::TAPIOrderSourceType result;
  
  result = (ITapTrade::TAPIOrderSourceType)(ITapTrade::TAPIOrderSourceType)ITapTrade::TAPI_ORDER_SOURCE_CARRY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_SOURCE_PROGRAM_get() {
  char jresult ;
  ITapTrade::TAPIOrderSourceType result;
  
  result = (ITapTrade::TAPIOrderSourceType)(ITapTrade::TAPIOrderSourceType)ITapTrade::TAPI_ORDER_SOURCE_PROGRAM;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_SOURCE_DELIVERY_get() {
  char jresult ;
  ITapTrade::TAPIOrderSourceType result;
  
  result = (ITapTrade::TAPIOrderSourceType)(ITapTrade::TAPIOrderSourceType)ITapTrade::TAPI_ORDER_SOURCE_DELIVERY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_SOURCE_ABANDON_get() {
  char jresult ;
  ITapTrade::TAPIOrderSourceType result;
  
  result = (ITapTrade::TAPIOrderSourceType)(ITapTrade::TAPIOrderSourceType)ITapTrade::TAPI_ORDER_SOURCE_ABANDON;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_SOURCE_CHANNEL_get() {
  char jresult ;
  ITapTrade::TAPIOrderSourceType result;
  
  result = (ITapTrade::TAPIOrderSourceType)(ITapTrade::TAPIOrderSourceType)ITapTrade::TAPI_ORDER_SOURCE_CHANNEL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TIMEINFORCE_GFD_get() {
  char jresult ;
  ITapTrade::TAPITimeInForceType result;
  
  result = (ITapTrade::TAPITimeInForceType)(ITapTrade::TAPITimeInForceType)ITapTrade::TAPI_ORDER_TIMEINFORCE_GFD;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TIMEINFORCE_GTC_get() {
  char jresult ;
  ITapTrade::TAPITimeInForceType result;
  
  result = (ITapTrade::TAPITimeInForceType)(ITapTrade::TAPITimeInForceType)ITapTrade::TAPI_ORDER_TIMEINFORCE_GTC;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TIMEINFORCE_GTD_get() {
  char jresult ;
  ITapTrade::TAPITimeInForceType result;
  
  result = (ITapTrade::TAPITimeInForceType)(ITapTrade::TAPITimeInForceType)ITapTrade::TAPI_ORDER_TIMEINFORCE_GTD;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TIMEINFORCE_FAK_get() {
  char jresult ;
  ITapTrade::TAPITimeInForceType result;
  
  result = (ITapTrade::TAPITimeInForceType)(ITapTrade::TAPITimeInForceType)ITapTrade::TAPI_ORDER_TIMEINFORCE_FAK;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_TIMEINFORCE_FOK_get() {
  char jresult ;
  ITapTrade::TAPITimeInForceType result;
  
  result = (ITapTrade::TAPITimeInForceType)(ITapTrade::TAPITimeInForceType)ITapTrade::TAPI_ORDER_TIMEINFORCE_FOK;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_SIDE_NONE_get() {
  char jresult ;
  ITapTrade::TAPISideType result;
  
  result = (ITapTrade::TAPISideType)(ITapTrade::TAPISideType)ITapTrade::TAPI_SIDE_NONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_SIDE_BUY_get() {
  char jresult ;
  ITapTrade::TAPISideType result;
  
  result = (ITapTrade::TAPISideType)(ITapTrade::TAPISideType)ITapTrade::TAPI_SIDE_BUY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_SIDE_SELL_get() {
  char jresult ;
  ITapTrade::TAPISideType result;
  
  result = (ITapTrade::TAPISideType)(ITapTrade::TAPISideType)ITapTrade::TAPI_SIDE_SELL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_PositionEffect_NONE_get() {
  char jresult ;
  ITapTrade::TAPIPositionEffectType result;
  
  result = (ITapTrade::TAPIPositionEffectType)(ITapTrade::TAPIPositionEffectType)ITapTrade::TAPI_PositionEffect_NONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_PositionEffect_OPEN_get() {
  char jresult ;
  ITapTrade::TAPIPositionEffectType result;
  
  result = (ITapTrade::TAPIPositionEffectType)(ITapTrade::TAPIPositionEffectType)ITapTrade::TAPI_PositionEffect_OPEN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_PositionEffect_COVER_get() {
  char jresult ;
  ITapTrade::TAPIPositionEffectType result;
  
  result = (ITapTrade::TAPIPositionEffectType)(ITapTrade::TAPIPositionEffectType)ITapTrade::TAPI_PositionEffect_COVER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_PositionEffect_COVER_TODAY_get() {
  char jresult ;
  ITapTrade::TAPIPositionEffectType result;
  
  result = (ITapTrade::TAPIPositionEffectType)(ITapTrade::TAPIPositionEffectType)ITapTrade::TAPI_PositionEffect_COVER_TODAY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_HEDGEFLAG_NONE_get() {
  char jresult ;
  ITapTrade::TAPIHedgeFlagType result;
  
  result = (ITapTrade::TAPIHedgeFlagType)(ITapTrade::TAPIHedgeFlagType)ITapTrade::TAPI_HEDGEFLAG_NONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_HEDGEFLAG_T_get() {
  char jresult ;
  ITapTrade::TAPIHedgeFlagType result;
  
  result = (ITapTrade::TAPIHedgeFlagType)(ITapTrade::TAPIHedgeFlagType)ITapTrade::TAPI_HEDGEFLAG_T;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_HEDGEFLAG_B_get() {
  char jresult ;
  ITapTrade::TAPIHedgeFlagType result;
  
  result = (ITapTrade::TAPIHedgeFlagType)(ITapTrade::TAPIHedgeFlagType)ITapTrade::TAPI_HEDGEFLAG_B;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_HEDGEFLAG_R_get() {
  char jresult ;
  ITapTrade::TAPIHedgeFlagType result;
  
  result = (ITapTrade::TAPIHedgeFlagType)(ITapTrade::TAPIHedgeFlagType)ITapTrade::TAPI_HEDGEFLAG_R;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_SUBMIT_get() {
  char jresult ;
  ITapTrade::TAPIOrderStateType result;
  
  result = (ITapTrade::TAPIOrderStateType)(ITapTrade::TAPIOrderStateType)ITapTrade::TAPI_ORDER_STATE_SUBMIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_ACCEPT_get() {
  char jresult ;
  ITapTrade::TAPIOrderStateType result;
  
  result = (ITapTrade::TAPIOrderStateType)(ITapTrade::TAPIOrderStateType)ITapTrade::TAPI_ORDER_STATE_ACCEPT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_TRIGGERING_get() {
  char jresult ;
  ITapTrade::TAPIOrderStateType result;
  
  result = (ITapTrade::TAPIOrderStateType)(ITapTrade::TAPIOrderStateType)ITapTrade::TAPI_ORDER_STATE_TRIGGERING;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_EXCTRIGGERING_get() {
  char jresult ;
  ITapTrade::TAPIOrderStateType result;
  
  result = (ITapTrade::TAPIOrderStateType)(ITapTrade::TAPIOrderStateType)ITapTrade::TAPI_ORDER_STATE_EXCTRIGGERING;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_QUEUED_get() {
  char jresult ;
  ITapTrade::TAPIOrderStateType result;
  
  result = (ITapTrade::TAPIOrderStateType)(ITapTrade::TAPIOrderStateType)ITapTrade::TAPI_ORDER_STATE_QUEUED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_PARTFINISHED_get() {
  char jresult ;
  ITapTrade::TAPIOrderStateType result;
  
  result = (ITapTrade::TAPIOrderStateType)(ITapTrade::TAPIOrderStateType)ITapTrade::TAPI_ORDER_STATE_PARTFINISHED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_FINISHED_get() {
  char jresult ;
  ITapTrade::TAPIOrderStateType result;
  
  result = (ITapTrade::TAPIOrderStateType)(ITapTrade::TAPIOrderStateType)ITapTrade::TAPI_ORDER_STATE_FINISHED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_CANCELING_get() {
  char jresult ;
  ITapTrade::TAPIOrderStateType result;
  
  result = (ITapTrade::TAPIOrderStateType)(ITapTrade::TAPIOrderStateType)ITapTrade::TAPI_ORDER_STATE_CANCELING;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_MODIFYING_get() {
  char jresult ;
  ITapTrade::TAPIOrderStateType result;
  
  result = (ITapTrade::TAPIOrderStateType)(ITapTrade::TAPIOrderStateType)ITapTrade::TAPI_ORDER_STATE_MODIFYING;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_CANCELED_get() {
  char jresult ;
  ITapTrade::TAPIOrderStateType result;
  
  result = (ITapTrade::TAPIOrderStateType)(ITapTrade::TAPIOrderStateType)ITapTrade::TAPI_ORDER_STATE_CANCELED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_LEFTDELETED_get() {
  char jresult ;
  ITapTrade::TAPIOrderStateType result;
  
  result = (ITapTrade::TAPIOrderStateType)(ITapTrade::TAPIOrderStateType)ITapTrade::TAPI_ORDER_STATE_LEFTDELETED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_FAIL_get() {
  char jresult ;
  ITapTrade::TAPIOrderStateType result;
  
  result = (ITapTrade::TAPIOrderStateType)(ITapTrade::TAPIOrderStateType)ITapTrade::TAPI_ORDER_STATE_FAIL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_DELETED_get() {
  char jresult ;
  ITapTrade::TAPIOrderStateType result;
  
  result = (ITapTrade::TAPIOrderStateType)(ITapTrade::TAPIOrderStateType)ITapTrade::TAPI_ORDER_STATE_DELETED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_SUPPENDED_get() {
  char jresult ;
  ITapTrade::TAPIOrderStateType result;
  
  result = (ITapTrade::TAPIOrderStateType)(ITapTrade::TAPIOrderStateType)ITapTrade::TAPI_ORDER_STATE_SUPPENDED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_DELETEDFOREXPIRE_get() {
  char jresult ;
  ITapTrade::TAPIOrderStateType result;
  
  result = (ITapTrade::TAPIOrderStateType)(ITapTrade::TAPIOrderStateType)ITapTrade::TAPI_ORDER_STATE_DELETEDFOREXPIRE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_EFFECT_get() {
  char jresult ;
  ITapTrade::TAPIOrderStateType result;
  
  result = (ITapTrade::TAPIOrderStateType)(ITapTrade::TAPIOrderStateType)ITapTrade::TAPI_ORDER_STATE_EFFECT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_STATE_APPLY_get() {
  char jresult ;
  ITapTrade::TAPIOrderStateType result;
  
  result = (ITapTrade::TAPIOrderStateType)(ITapTrade::TAPIOrderStateType)ITapTrade::TAPI_ORDER_STATE_APPLY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CALULATE_MODE_COMBINE_get() {
  char jresult ;
  ITapTrade::TAPICalculateModeType result;
  
  result = (ITapTrade::TAPICalculateModeType)(ITapTrade::TAPICalculateModeType)ITapTrade::TAPI_CALULATE_MODE_COMBINE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CALCULATE_MODE_PERCENTAGE_get() {
  char jresult ;
  ITapTrade::TAPICalculateModeType result;
  
  result = (ITapTrade::TAPICalculateModeType)(ITapTrade::TAPICalculateModeType)ITapTrade::TAPI_CALCULATE_MODE_PERCENTAGE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CALCULATE_MODE_QUOTA_get() {
  char jresult ;
  ITapTrade::TAPICalculateModeType result;
  
  result = (ITapTrade::TAPICalculateModeType)(ITapTrade::TAPICalculateModeType)ITapTrade::TAPI_CALCULATE_MODE_QUOTA;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CALCULATE_MODE_CHAPERCENTAGE_get() {
  char jresult ;
  ITapTrade::TAPICalculateModeType result;
  
  result = (ITapTrade::TAPICalculateModeType)(ITapTrade::TAPICalculateModeType)ITapTrade::TAPI_CALCULATE_MODE_CHAPERCENTAGE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CALCULATE_MODE_CHAQUOTA_get() {
  char jresult ;
  ITapTrade::TAPICalculateModeType result;
  
  result = (ITapTrade::TAPICalculateModeType)(ITapTrade::TAPICalculateModeType)ITapTrade::TAPI_CALCULATE_MODE_CHAQUOTA;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CALCULATE_MODE_DISCOUNT_get() {
  char jresult ;
  ITapTrade::TAPICalculateModeType result;
  
  result = (ITapTrade::TAPICalculateModeType)(ITapTrade::TAPICalculateModeType)ITapTrade::TAPI_CALCULATE_MODE_DISCOUNT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MATCH_SOURCE_ALL_get() {
  char jresult ;
  ITapTrade::TAPIMatchSourceType result;
  
  result = (ITapTrade::TAPIMatchSourceType)(ITapTrade::TAPIMatchSourceType)ITapTrade::TAPI_MATCH_SOURCE_ALL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MATCH_SOURCE_SELF_ETRADER_get() {
  char jresult ;
  ITapTrade::TAPIMatchSourceType result;
  
  result = (ITapTrade::TAPIMatchSourceType)(ITapTrade::TAPIMatchSourceType)ITapTrade::TAPI_MATCH_SOURCE_SELF_ETRADER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MATCH_SOURCE_PROXY_ETRADER_get() {
  char jresult ;
  ITapTrade::TAPIMatchSourceType result;
  
  result = (ITapTrade::TAPIMatchSourceType)(ITapTrade::TAPIMatchSourceType)ITapTrade::TAPI_MATCH_SOURCE_PROXY_ETRADER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MATCH_SOURCE_JTRADER_get() {
  char jresult ;
  ITapTrade::TAPIMatchSourceType result;
  
  result = (ITapTrade::TAPIMatchSourceType)(ITapTrade::TAPIMatchSourceType)ITapTrade::TAPI_MATCH_SOURCE_JTRADER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MATCH_SOURCE_MANUAL_get() {
  char jresult ;
  ITapTrade::TAPIMatchSourceType result;
  
  result = (ITapTrade::TAPIMatchSourceType)(ITapTrade::TAPIMatchSourceType)ITapTrade::TAPI_MATCH_SOURCE_MANUAL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MATCH_SOURCE_CARRY_get() {
  char jresult ;
  ITapTrade::TAPIMatchSourceType result;
  
  result = (ITapTrade::TAPIMatchSourceType)(ITapTrade::TAPIMatchSourceType)ITapTrade::TAPI_MATCH_SOURCE_CARRY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MATCH_SOURCE_PROGRAM_get() {
  char jresult ;
  ITapTrade::TAPIMatchSourceType result;
  
  result = (ITapTrade::TAPIMatchSourceType)(ITapTrade::TAPIMatchSourceType)ITapTrade::TAPI_MATCH_SOURCE_PROGRAM;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MATCH_SOURCE_DELIVERY_get() {
  char jresult ;
  ITapTrade::TAPIMatchSourceType result;
  
  result = (ITapTrade::TAPIMatchSourceType)(ITapTrade::TAPIMatchSourceType)ITapTrade::TAPI_MATCH_SOURCE_DELIVERY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MATCH_SOURCE_ABANDON_get() {
  char jresult ;
  ITapTrade::TAPIMatchSourceType result;
  
  result = (ITapTrade::TAPIMatchSourceType)(ITapTrade::TAPIMatchSourceType)ITapTrade::TAPI_MATCH_SOURCE_ABANDON;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MATCH_SOURCE_CHANNEL_get() {
  char jresult ;
  ITapTrade::TAPIMatchSourceType result;
  
  result = (ITapTrade::TAPIMatchSourceType)(ITapTrade::TAPIMatchSourceType)ITapTrade::TAPI_MATCH_SOURCE_CHANNEL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MATCH_SOURCE_BLOOMBERG_get() {
  char jresult ;
  ITapTrade::TAPIMatchSourceType result;
  
  result = (ITapTrade::TAPIMatchSourceType)(ITapTrade::TAPIMatchSourceType)ITapTrade::TAPI_MATCH_SOURCE_BLOOMBERG;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MATCH_SOURCE_AUTOPHONE_get() {
  char jresult ;
  ITapTrade::TAPIMatchSourceType result;
  
  result = (ITapTrade::TAPIMatchSourceType)(ITapTrade::TAPIMatchSourceType)ITapTrade::TAPI_MATCH_SOURCE_AUTOPHONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MATCH_SOURCE_GIVEUP_get() {
  char jresult ;
  ITapTrade::TAPIMatchSourceType result;
  
  result = (ITapTrade::TAPIMatchSourceType)(ITapTrade::TAPIMatchSourceType)ITapTrade::TAPI_MATCH_SOURCE_GIVEUP;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MATCH_SOURCE_EXERCISE_get() {
  char jresult ;
  ITapTrade::TAPIMatchSourceType result;
  
  result = (ITapTrade::TAPIMatchSourceType)(ITapTrade::TAPIMatchSourceType)ITapTrade::TAPI_MATCH_SOURCE_EXERCISE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CLOSE_MODE_NONE_get() {
  char jresult ;
  ITapTrade::TAPIOpenCloseModeType result;
  
  result = (ITapTrade::TAPIOpenCloseModeType)(ITapTrade::TAPIOpenCloseModeType)ITapTrade::TAPI_CLOSE_MODE_NONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CLOSE_MODE_UNFINISHED_get() {
  char jresult ;
  ITapTrade::TAPIOpenCloseModeType result;
  
  result = (ITapTrade::TAPIOpenCloseModeType)(ITapTrade::TAPIOpenCloseModeType)ITapTrade::TAPI_CLOSE_MODE_UNFINISHED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CLOSE_MODE_OPENCOVER_get() {
  char jresult ;
  ITapTrade::TAPIOpenCloseModeType result;
  
  result = (ITapTrade::TAPIOpenCloseModeType)(ITapTrade::TAPIOpenCloseModeType)ITapTrade::TAPI_CLOSE_MODE_OPENCOVER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CLOSE_MODE_CLOSETODAY_get() {
  char jresult ;
  ITapTrade::TAPIOpenCloseModeType result;
  
  result = (ITapTrade::TAPIOpenCloseModeType)(ITapTrade::TAPIOpenCloseModeType)ITapTrade::TAPI_CLOSE_MODE_CLOSETODAY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_FUTURES_ALG_ZHUBI_get() {
  char jresult ;
  ITapTrade::TAPIFutureAlgType result;
  
  result = (ITapTrade::TAPIFutureAlgType)(ITapTrade::TAPIFutureAlgType)ITapTrade::TAPI_FUTURES_ALG_ZHUBI;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_FUTURES_ALG_DINGSHI_get() {
  char jresult ;
  ITapTrade::TAPIFutureAlgType result;
  
  result = (ITapTrade::TAPIFutureAlgType)(ITapTrade::TAPIFutureAlgType)ITapTrade::TAPI_FUTURES_ALG_DINGSHI;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_OPTION_ALG_FUTURES_get() {
  char jresult ;
  ITapTrade::TAPIOptionAlgType result;
  
  result = (ITapTrade::TAPIOptionAlgType)(ITapTrade::TAPIOptionAlgType)ITapTrade::TAPI_OPTION_ALG_FUTURES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_OPTION_ALG_OPTION_get() {
  char jresult ;
  ITapTrade::TAPIOptionAlgType result;
  
  result = (ITapTrade::TAPIOptionAlgType)(ITapTrade::TAPIOptionAlgType)ITapTrade::TAPI_OPTION_ALG_OPTION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_LWFlag_L_get() {
  char jresult ;
  ITapTrade::TAPIBankAccountLWFlagType result;
  
  result = (ITapTrade::TAPIBankAccountLWFlagType)(ITapTrade::TAPIBankAccountLWFlagType)ITapTrade::TAPI_LWFlag_L;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_LWFlag_W_get() {
  char jresult ;
  ITapTrade::TAPIBankAccountLWFlagType result;
  
  result = (ITapTrade::TAPIBankAccountLWFlagType)(ITapTrade::TAPIBankAccountLWFlagType)ITapTrade::TAPI_LWFlag_W;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CASHINOUT_MODE_FEEADJUST_get() {
  char jresult ;
  ITapTrade::TAPICashAdjustTypeType result;
  
  result = (ITapTrade::TAPICashAdjustTypeType)(ITapTrade::TAPICashAdjustTypeType)ITapTrade::TAPI_CASHINOUT_MODE_FEEADJUST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CASHINOUT_MODE_YKADJUST_get() {
  char jresult ;
  ITapTrade::TAPICashAdjustTypeType result;
  
  result = (ITapTrade::TAPICashAdjustTypeType)(ITapTrade::TAPICashAdjustTypeType)ITapTrade::TAPI_CASHINOUT_MODE_YKADJUST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CASHINOUT_MODE_PLEDGE_get() {
  char jresult ;
  ITapTrade::TAPICashAdjustTypeType result;
  
  result = (ITapTrade::TAPICashAdjustTypeType)(ITapTrade::TAPICashAdjustTypeType)ITapTrade::TAPI_CASHINOUT_MODE_PLEDGE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CASHINOUT_MODE_INTERESTREVENUE_get() {
  char jresult ;
  ITapTrade::TAPICashAdjustTypeType result;
  
  result = (ITapTrade::TAPICashAdjustTypeType)(ITapTrade::TAPICashAdjustTypeType)ITapTrade::TAPI_CASHINOUT_MODE_INTERESTREVENUE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CASHINOUT_MODE_COLLECTIONCOST_get() {
  char jresult ;
  ITapTrade::TAPICashAdjustTypeType result;
  
  result = (ITapTrade::TAPICashAdjustTypeType)(ITapTrade::TAPICashAdjustTypeType)ITapTrade::TAPI_CASHINOUT_MODE_COLLECTIONCOST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CASHINOUT_MODE_OTHER_get() {
  char jresult ;
  ITapTrade::TAPICashAdjustTypeType result;
  
  result = (ITapTrade::TAPICashAdjustTypeType)(ITapTrade::TAPICashAdjustTypeType)ITapTrade::TAPI_CASHINOUT_MODE_OTHER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CASHINOUT_MODE_COMPANY_get() {
  char jresult ;
  ITapTrade::TAPICashAdjustTypeType result;
  
  result = (ITapTrade::TAPICashAdjustTypeType)(ITapTrade::TAPICashAdjustTypeType)ITapTrade::TAPI_CASHINOUT_MODE_COMPANY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_DEPOSITCALCULATE_MODE_FEN_get() {
  char jresult ;
  ITapTrade::TAPIMarginCalculateModeType result;
  
  result = (ITapTrade::TAPIMarginCalculateModeType)(ITapTrade::TAPIMarginCalculateModeType)ITapTrade::TAPI_DEPOSITCALCULATE_MODE_FEN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_DEPOSITCALCULATE_MODE_SUO_get() {
  char jresult ;
  ITapTrade::TAPIMarginCalculateModeType result;
  
  result = (ITapTrade::TAPIMarginCalculateModeType)(ITapTrade::TAPIMarginCalculateModeType)ITapTrade::TAPI_DEPOSITCALCULATE_MODE_SUO;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CMB_DIRECT_FIRST_get() {
  char jresult ;
  ITapTrade::TAPICmbDirectType result;
  
  result = (ITapTrade::TAPICmbDirectType)(ITapTrade::TAPICmbDirectType)ITapTrade::TAPI_CMB_DIRECT_FIRST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CMB_DIRECT_SECOND_get() {
  char jresult ;
  ITapTrade::TAPICmbDirectType result;
  
  result = (ITapTrade::TAPICmbDirectType)(ITapTrade::TAPICmbDirectType)ITapTrade::TAPI_CMB_DIRECT_SECOND;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_DELIVERY_MODE_GOODS_get() {
  char jresult ;
  ITapTrade::TAPIDeliveryModeType result;
  
  result = (ITapTrade::TAPIDeliveryModeType)(ITapTrade::TAPIDeliveryModeType)ITapTrade::TAPI_DELIVERY_MODE_GOODS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_DELIVERY_MODE_CASH_get() {
  char jresult ;
  ITapTrade::TAPIDeliveryModeType result;
  
  result = (ITapTrade::TAPIDeliveryModeType)(ITapTrade::TAPIDeliveryModeType)ITapTrade::TAPI_DELIVERY_MODE_CASH;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_DELIVERY_MODE_EXECUTE_get() {
  char jresult ;
  ITapTrade::TAPIDeliveryModeType result;
  
  result = (ITapTrade::TAPIDeliveryModeType)(ITapTrade::TAPIDeliveryModeType)ITapTrade::TAPI_DELIVERY_MODE_EXECUTE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_DELIVERY_MODE_ABANDON_get() {
  char jresult ;
  ITapTrade::TAPIDeliveryModeType result;
  
  result = (ITapTrade::TAPIDeliveryModeType)(ITapTrade::TAPIDeliveryModeType)ITapTrade::TAPI_DELIVERY_MODE_ABANDON;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_DELIVERY_MODE_HKF_get() {
  char jresult ;
  ITapTrade::TAPIDeliveryModeType result;
  
  result = (ITapTrade::TAPIDeliveryModeType)(ITapTrade::TAPIDeliveryModeType)ITapTrade::TAPI_DELIVERY_MODE_HKF;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CONTRACT_TYPE_TRADEQUOTE_get() {
  char jresult ;
  ITapTrade::TAPIContractTypeType result;
  
  result = (ITapTrade::TAPIContractTypeType)(ITapTrade::TAPIContractTypeType)ITapTrade::TAPI_CONTRACT_TYPE_TRADEQUOTE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CONTRACT_TYPE_QUOTE_get() {
  char jresult ;
  ITapTrade::TAPIContractTypeType result;
  
  result = (ITapTrade::TAPIContractTypeType)(ITapTrade::TAPIContractTypeType)ITapTrade::TAPI_CONTRACT_TYPE_QUOTE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TACTICS_TYPE_NONE_get() {
  char jresult ;
  ITapTrade::TAPITacticsTypeType result;
  
  result = (ITapTrade::TAPITacticsTypeType)(ITapTrade::TAPITacticsTypeType)ITapTrade::TAPI_TACTICS_TYPE_NONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TACTICS_TYPE_READY_get() {
  char jresult ;
  ITapTrade::TAPITacticsTypeType result;
  
  result = (ITapTrade::TAPITacticsTypeType)(ITapTrade::TAPITacticsTypeType)ITapTrade::TAPI_TACTICS_TYPE_READY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TACTICS_TYPE_ATUO_get() {
  char jresult ;
  ITapTrade::TAPITacticsTypeType result;
  
  result = (ITapTrade::TAPITacticsTypeType)(ITapTrade::TAPITacticsTypeType)ITapTrade::TAPI_TACTICS_TYPE_ATUO;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TACTICS_TYPE_CONDITION_get() {
  char jresult ;
  ITapTrade::TAPITacticsTypeType result;
  
  result = (ITapTrade::TAPITacticsTypeType)(ITapTrade::TAPITacticsTypeType)ITapTrade::TAPI_TACTICS_TYPE_CONDITION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APIORDER_INSERT_get() {
  char jresult ;
  ITapTrade::TAPIORDERACT result;
  
  result = (ITapTrade::TAPIORDERACT)(ITapTrade::TAPIORDERACT)ITapTrade::APIORDER_INSERT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APIORDER_MODIFY_get() {
  char jresult ;
  ITapTrade::TAPIORDERACT result;
  
  result = (ITapTrade::TAPIORDERACT)(ITapTrade::TAPIORDERACT)ITapTrade::APIORDER_MODIFY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APIORDER_DELETE_get() {
  char jresult ;
  ITapTrade::TAPIORDERACT result;
  
  result = (ITapTrade::TAPIORDERACT)(ITapTrade::TAPIORDERACT)ITapTrade::APIORDER_DELETE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APIORDER_SUSPEND_get() {
  char jresult ;
  ITapTrade::TAPIORDERACT result;
  
  result = (ITapTrade::TAPIORDERACT)(ITapTrade::TAPIORDERACT)ITapTrade::APIORDER_SUSPEND;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APIORDER_ACTIVATE_get() {
  char jresult ;
  ITapTrade::TAPIORDERACT result;
  
  result = (ITapTrade::TAPIORDERACT)(ITapTrade::TAPIORDERACT)ITapTrade::APIORDER_ACTIVATE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APIORDER_SYSTEM_DELETE_get() {
  char jresult ;
  ITapTrade::TAPIORDERACT result;
  
  result = (ITapTrade::TAPIORDERACT)(ITapTrade::TAPIORDERACT)ITapTrade::APIORDER_SYSTEM_DELETE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRIGGER_CONDITION_NONE_get() {
  char jresult ;
  ITapTrade::TAPITriggerConditionType result;
  
  result = (ITapTrade::TAPITriggerConditionType)(ITapTrade::TAPITriggerConditionType)ITapTrade::TAPI_TRIGGER_CONDITION_NONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRIGGER_CONDITION_GREAT_get() {
  char jresult ;
  ITapTrade::TAPITriggerConditionType result;
  
  result = (ITapTrade::TAPITriggerConditionType)(ITapTrade::TAPITriggerConditionType)ITapTrade::TAPI_TRIGGER_CONDITION_GREAT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRIGGER_CONDITION_LITTLE_get() {
  char jresult ;
  ITapTrade::TAPITriggerConditionType result;
  
  result = (ITapTrade::TAPITriggerConditionType)(ITapTrade::TAPITriggerConditionType)ITapTrade::TAPI_TRIGGER_CONDITION_LITTLE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRIGGER_PRICE_NONE_get() {
  char jresult ;
  ITapTrade::TAPITriggerPriceTypeType result;
  
  result = (ITapTrade::TAPITriggerPriceTypeType)(ITapTrade::TAPITriggerPriceTypeType)ITapTrade::TAPI_TRIGGER_PRICE_NONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRIGGER_PRICE_BUY_get() {
  char jresult ;
  ITapTrade::TAPITriggerPriceTypeType result;
  
  result = (ITapTrade::TAPITriggerPriceTypeType)(ITapTrade::TAPITriggerPriceTypeType)ITapTrade::TAPI_TRIGGER_PRICE_BUY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRIGGER_PRICE_SELL_get() {
  char jresult ;
  ITapTrade::TAPITriggerPriceTypeType result;
  
  result = (ITapTrade::TAPITriggerPriceTypeType)(ITapTrade::TAPITriggerPriceTypeType)ITapTrade::TAPI_TRIGGER_PRICE_SELL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRIGGER_PRICE_LAST_get() {
  char jresult ;
  ITapTrade::TAPITriggerPriceTypeType result;
  
  result = (ITapTrade::TAPITriggerPriceTypeType)(ITapTrade::TAPITriggerPriceTypeType)ITapTrade::TAPI_TRIGGER_PRICE_LAST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRADE_STATE_BID_get() {
  char jresult ;
  ITapTrade::TAPITradingStateType result;
  
  result = (ITapTrade::TAPITradingStateType)(ITapTrade::TAPITradingStateType)ITapTrade::TAPI_TRADE_STATE_BID;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRADE_STATE_MATCH_get() {
  char jresult ;
  ITapTrade::TAPITradingStateType result;
  
  result = (ITapTrade::TAPITradingStateType)(ITapTrade::TAPITradingStateType)ITapTrade::TAPI_TRADE_STATE_MATCH;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRADE_STATE_CONTINUOUS_get() {
  char jresult ;
  ITapTrade::TAPITradingStateType result;
  
  result = (ITapTrade::TAPITradingStateType)(ITapTrade::TAPITradingStateType)ITapTrade::TAPI_TRADE_STATE_CONTINUOUS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRADE_STATE_PAUSED_get() {
  char jresult ;
  ITapTrade::TAPITradingStateType result;
  
  result = (ITapTrade::TAPITradingStateType)(ITapTrade::TAPITradingStateType)ITapTrade::TAPI_TRADE_STATE_PAUSED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRADE_STATE_CLOSE_get() {
  char jresult ;
  ITapTrade::TAPITradingStateType result;
  
  result = (ITapTrade::TAPITradingStateType)(ITapTrade::TAPITradingStateType)ITapTrade::TAPI_TRADE_STATE_CLOSE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRADE_STATE_DEALLAST_get() {
  char jresult ;
  ITapTrade::TAPITradingStateType result;
  
  result = (ITapTrade::TAPITradingStateType)(ITapTrade::TAPITradingStateType)ITapTrade::TAPI_TRADE_STATE_DEALLAST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRADE_STATE_GWDISCONNECT_get() {
  char jresult ;
  ITapTrade::TAPITradingStateType result;
  
  result = (ITapTrade::TAPITradingStateType)(ITapTrade::TAPITradingStateType)ITapTrade::TAPI_TRADE_STATE_GWDISCONNECT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRADE_STATE_UNKNOWN_get() {
  char jresult ;
  ITapTrade::TAPITradingStateType result;
  
  result = (ITapTrade::TAPITradingStateType)(ITapTrade::TAPITradingStateType)ITapTrade::TAPI_TRADE_STATE_UNKNOWN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRADE_STATE_INITIALIZE_get() {
  char jresult ;
  ITapTrade::TAPITradingStateType result;
  
  result = (ITapTrade::TAPITradingStateType)(ITapTrade::TAPITradingStateType)ITapTrade::TAPI_TRADE_STATE_INITIALIZE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_TRADE_STATE_READY_get() {
  char jresult ;
  ITapTrade::TAPITradingStateType result;
  
  result = (ITapTrade::TAPITradingStateType)(ITapTrade::TAPITradingStateType)ITapTrade::TAPI_TRADE_STATE_READY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TAPI_NOTICE_IGNORE_NONE_get() {
  unsigned int jresult ;
  ITapTrade::TAPINoticeIgnoreFlagType result;
  
  result = (ITapTrade::TAPINoticeIgnoreFlagType)(ITapTrade::TAPINoticeIgnoreFlagType)ITapTrade::TAPI_NOTICE_IGNORE_NONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TAPI_NOTICE_IGNORE_ALL_get() {
  unsigned int jresult ;
  ITapTrade::TAPINoticeIgnoreFlagType result;
  
  result = (ITapTrade::TAPINoticeIgnoreFlagType)(ITapTrade::TAPINoticeIgnoreFlagType)ITapTrade::TAPI_NOTICE_IGNORE_ALL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TAPI_NOTICE_IGNORE_FUND_get() {
  unsigned int jresult ;
  ITapTrade::TAPINoticeIgnoreFlagType result;
  
  result = (ITapTrade::TAPINoticeIgnoreFlagType)(ITapTrade::TAPINoticeIgnoreFlagType)ITapTrade::TAPI_NOTICE_IGNORE_FUND;
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TAPI_NOTICE_IGNORE_ORDER_get() {
  unsigned int jresult ;
  ITapTrade::TAPINoticeIgnoreFlagType result;
  
  result = (ITapTrade::TAPINoticeIgnoreFlagType)(ITapTrade::TAPINoticeIgnoreFlagType)ITapTrade::TAPI_NOTICE_IGNORE_ORDER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TAPI_NOTICE_IGNORE_FILL_get() {
  unsigned int jresult ;
  ITapTrade::TAPINoticeIgnoreFlagType result;
  
  result = (ITapTrade::TAPINoticeIgnoreFlagType)(ITapTrade::TAPINoticeIgnoreFlagType)ITapTrade::TAPI_NOTICE_IGNORE_FILL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TAPI_NOTICE_IGNORE_POSITION_get() {
  unsigned int jresult ;
  ITapTrade::TAPINoticeIgnoreFlagType result;
  
  result = (ITapTrade::TAPINoticeIgnoreFlagType)(ITapTrade::TAPINoticeIgnoreFlagType)ITapTrade::TAPI_NOTICE_IGNORE_POSITION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TAPI_NOTICE_IGNORE_CLOSE_get() {
  unsigned int jresult ;
  ITapTrade::TAPINoticeIgnoreFlagType result;
  
  result = (ITapTrade::TAPINoticeIgnoreFlagType)(ITapTrade::TAPINoticeIgnoreFlagType)ITapTrade::TAPI_NOTICE_IGNORE_CLOSE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TAPI_NOTICE_IGNORE_POSITIONPROFIT_get() {
  unsigned int jresult ;
  ITapTrade::TAPINoticeIgnoreFlagType result;
  
  result = (ITapTrade::TAPINoticeIgnoreFlagType)(ITapTrade::TAPINoticeIgnoreFlagType)ITapTrade::TAPI_NOTICE_IGNORE_POSITIONPROFIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_QRY_TYPE_ALL_get() {
  char jresult ;
  ITapTrade::TAPIOrderQryTypeType result;
  
  result = (ITapTrade::TAPIOrderQryTypeType)(ITapTrade::TAPIOrderQryTypeType)ITapTrade::TAPI_ORDER_QRY_TYPE_ALL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ORDER_QRY_TYPE_UNENDED_get() {
  char jresult ;
  ITapTrade::TAPIOrderQryTypeType result;
  
  result = (ITapTrade::TAPIOrderQryTypeType)(ITapTrade::TAPIOrderQryTypeType)ITapTrade::TAPI_ORDER_QRY_TYPE_UNENDED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_LOGINTYPE_NORMAL_get() {
  char jresult ;
  ITapTrade::TAPILoginTypeType result;
  
  result = (ITapTrade::TAPILoginTypeType)(ITapTrade::TAPILoginTypeType)ITapTrade::TAPI_LOGINTYPE_NORMAL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_LOGINTYPE_TEMPORARY_get() {
  char jresult ;
  ITapTrade::TAPILoginTypeType result;
  
  result = (ITapTrade::TAPILoginTypeType)(ITapTrade::TAPILoginTypeType)ITapTrade::TAPI_LOGINTYPE_TEMPORARY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginAuth_UserNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeLoginAuth *arg1 = (ITapTrade::TapAPITradeLoginAuth *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginAuth *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserNo, (const char *)arg2, 21-1);
      arg1->UserNo[21-1] = 0;
    } else {
      arg1->UserNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginAuth_UserNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeLoginAuth *arg1 = (ITapTrade::TapAPITradeLoginAuth *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginAuth *)jarg1; 
  result = (char *) ((arg1)->UserNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginAuth_ISModifyPassword_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPITradeLoginAuth *arg1 = (ITapTrade::TapAPITradeLoginAuth *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginAuth *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->ISModifyPassword = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPITradeLoginAuth_ISModifyPassword_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPITradeLoginAuth *arg1 = (ITapTrade::TapAPITradeLoginAuth *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPITradeLoginAuth *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->ISModifyPassword);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginAuth_Password_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeLoginAuth *arg1 = (ITapTrade::TapAPITradeLoginAuth *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginAuth *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 21-1);
      arg1->Password[21-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginAuth_Password_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeLoginAuth *arg1 = (ITapTrade::TapAPITradeLoginAuth *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginAuth *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginAuth_NewPassword_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeLoginAuth *arg1 = (ITapTrade::TapAPITradeLoginAuth *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginAuth *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->NewPassword, (const char *)arg2, 21-1);
      arg1->NewPassword[21-1] = 0;
    } else {
      arg1->NewPassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginAuth_NewPassword_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeLoginAuth *arg1 = (ITapTrade::TapAPITradeLoginAuth *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginAuth *)jarg1; 
  result = (char *) ((arg1)->NewPassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPITradeLoginAuth() {
  void * jresult ;
  ITapTrade::TapAPITradeLoginAuth *result = 0 ;
  
  result = (ITapTrade::TapAPITradeLoginAuth *)new ITapTrade::TapAPITradeLoginAuth();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPITradeLoginAuth(void * jarg1) {
  ITapTrade::TapAPITradeLoginAuth *arg1 = (ITapTrade::TapAPITradeLoginAuth *) 0 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginAuth *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_UserNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeLoginRspInfo *arg1 = (ITapTrade::TapAPITradeLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserNo, (const char *)arg2, 21-1);
      arg1->UserNo[21-1] = 0;
    } else {
      arg1->UserNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_UserNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeLoginRspInfo *arg1 = (ITapTrade::TapAPITradeLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->UserNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_UserType_set(void * jarg1, int jarg2) {
  ITapTrade::TapAPITradeLoginRspInfo *arg1 = (ITapTrade::TapAPITradeLoginRspInfo *) 0 ;
  ITapTrade::TAPIUserTypeType arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginRspInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUserTypeType)jarg2; 
  if (arg1) (arg1)->UserType = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_UserType_get(void * jarg1) {
  int jresult ;
  ITapTrade::TapAPITradeLoginRspInfo *arg1 = (ITapTrade::TapAPITradeLoginRspInfo *) 0 ;
  ITapTrade::TAPIUserTypeType result;
  
  arg1 = (ITapTrade::TapAPITradeLoginRspInfo *)jarg1; 
  result = (ITapTrade::TAPIUserTypeType) ((arg1)->UserType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_UserName_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeLoginRspInfo *arg1 = (ITapTrade::TapAPITradeLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserName, (const char *)arg2, 21-1);
      arg1->UserName[21-1] = 0;
    } else {
      arg1->UserName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_UserName_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeLoginRspInfo *arg1 = (ITapTrade::TapAPITradeLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->UserName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_ReservedInfo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeLoginRspInfo *arg1 = (ITapTrade::TapAPITradeLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ReservedInfo, (const char *)arg2, 51-1);
      arg1->ReservedInfo[51-1] = 0;
    } else {
      arg1->ReservedInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_ReservedInfo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeLoginRspInfo *arg1 = (ITapTrade::TapAPITradeLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->ReservedInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_LastLoginIP_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeLoginRspInfo *arg1 = (ITapTrade::TapAPITradeLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastLoginIP, (const char *)arg2, 41-1);
      arg1->LastLoginIP[41-1] = 0;
    } else {
      arg1->LastLoginIP[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_LastLoginIP_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeLoginRspInfo *arg1 = (ITapTrade::TapAPITradeLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->LastLoginIP);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_LastLoginProt_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPITradeLoginRspInfo *arg1 = (ITapTrade::TapAPITradeLoginRspInfo *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginRspInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->LastLoginProt = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_LastLoginProt_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPITradeLoginRspInfo *arg1 = (ITapTrade::TapAPITradeLoginRspInfo *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPITradeLoginRspInfo *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->LastLoginProt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_LastLoginTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeLoginRspInfo *arg1 = (ITapTrade::TapAPITradeLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastLoginTime, (const char *)arg2, 20-1);
      arg1->LastLoginTime[20-1] = 0;
    } else {
      arg1->LastLoginTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_LastLoginTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeLoginRspInfo *arg1 = (ITapTrade::TapAPITradeLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->LastLoginTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_LastLogoutTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeLoginRspInfo *arg1 = (ITapTrade::TapAPITradeLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastLogoutTime, (const char *)arg2, 20-1);
      arg1->LastLogoutTime[20-1] = 0;
    } else {
      arg1->LastLogoutTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_LastLogoutTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeLoginRspInfo *arg1 = (ITapTrade::TapAPITradeLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->LastLogoutTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_TradeDate_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeLoginRspInfo *arg1 = (ITapTrade::TapAPITradeLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 11-1);
      arg1->TradeDate[11-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_TradeDate_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeLoginRspInfo *arg1 = (ITapTrade::TapAPITradeLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_LastSettleTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeLoginRspInfo *arg1 = (ITapTrade::TapAPITradeLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastSettleTime, (const char *)arg2, 20-1);
      arg1->LastSettleTime[20-1] = 0;
    } else {
      arg1->LastSettleTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_LastSettleTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeLoginRspInfo *arg1 = (ITapTrade::TapAPITradeLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->LastSettleTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_StartTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeLoginRspInfo *arg1 = (ITapTrade::TapAPITradeLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StartTime, (const char *)arg2, 20-1);
      arg1->StartTime[20-1] = 0;
    } else {
      arg1->StartTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_StartTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeLoginRspInfo *arg1 = (ITapTrade::TapAPITradeLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->StartTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_NextSecondDate_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeLoginRspInfo *arg1 = (ITapTrade::TapAPITradeLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->NextSecondDate, (const char *)arg2, 20-1);
      arg1->NextSecondDate[20-1] = 0;
    } else {
      arg1->NextSecondDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeLoginRspInfo_NextSecondDate_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeLoginRspInfo *arg1 = (ITapTrade::TapAPITradeLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->NextSecondDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPITradeLoginRspInfo() {
  void * jresult ;
  ITapTrade::TapAPITradeLoginRspInfo *result = 0 ;
  
  result = (ITapTrade::TapAPITradeLoginRspInfo *)new ITapTrade::TapAPITradeLoginRspInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPITradeLoginRspInfo(void * jarg1) {
  ITapTrade::TapAPITradeLoginRspInfo *arg1 = (ITapTrade::TapAPITradeLoginRspInfo *) 0 ;
  
  arg1 = (ITapTrade::TapAPITradeLoginRspInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIRequestVertificateCodeRsp_SecondSerialID_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIRequestVertificateCodeRsp *arg1 = (ITapTrade::TapAPIRequestVertificateCodeRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIRequestVertificateCodeRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SecondSerialID, (const char *)arg2, 5-1);
      arg1->SecondSerialID[5-1] = 0;
    } else {
      arg1->SecondSerialID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIRequestVertificateCodeRsp_SecondSerialID_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIRequestVertificateCodeRsp *arg1 = (ITapTrade::TapAPIRequestVertificateCodeRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIRequestVertificateCodeRsp *)jarg1; 
  result = (char *) ((arg1)->SecondSerialID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIRequestVertificateCodeRsp_Effective_set(void * jarg1, int jarg2) {
  ITapTrade::TapAPIRequestVertificateCodeRsp *arg1 = (ITapTrade::TapAPIRequestVertificateCodeRsp *) 0 ;
  ITapTrade::TAPIINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIRequestVertificateCodeRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIINT32)jarg2; 
  if (arg1) (arg1)->Effective = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TapAPIRequestVertificateCodeRsp_Effective_get(void * jarg1) {
  int jresult ;
  ITapTrade::TapAPIRequestVertificateCodeRsp *arg1 = (ITapTrade::TapAPIRequestVertificateCodeRsp *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::TapAPIRequestVertificateCodeRsp *)jarg1; 
  result = (ITapTrade::TAPIINT32) ((arg1)->Effective);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIRequestVertificateCodeRsp() {
  void * jresult ;
  ITapTrade::TapAPIRequestVertificateCodeRsp *result = 0 ;
  
  result = (ITapTrade::TapAPIRequestVertificateCodeRsp *)new ITapTrade::TapAPIRequestVertificateCodeRsp();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIRequestVertificateCodeRsp(void * jarg1) {
  ITapTrade::TapAPIRequestVertificateCodeRsp *arg1 = (ITapTrade::TapAPIRequestVertificateCodeRsp *) 0 ;
  
  arg1 = (ITapTrade::TapAPIRequestVertificateCodeRsp *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISecondCertificationReq_VertificateCode_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISecondCertificationReq *arg1 = (ITapTrade::TapAPISecondCertificationReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISecondCertificationReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->VertificateCode, (const char *)arg2, 11-1);
      arg1->VertificateCode[11-1] = 0;
    } else {
      arg1->VertificateCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISecondCertificationReq_VertificateCode_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISecondCertificationReq *arg1 = (ITapTrade::TapAPISecondCertificationReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISecondCertificationReq *)jarg1; 
  result = (char *) ((arg1)->VertificateCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISecondCertificationReq_LoginType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPISecondCertificationReq *arg1 = (ITapTrade::TapAPISecondCertificationReq *) 0 ;
  ITapTrade::TAPILoginTypeType arg2 ;
  
  arg1 = (ITapTrade::TapAPISecondCertificationReq *)jarg1; 
  arg2 = (ITapTrade::TAPILoginTypeType)jarg2; 
  if (arg1) (arg1)->LoginType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPISecondCertificationReq_LoginType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPISecondCertificationReq *arg1 = (ITapTrade::TapAPISecondCertificationReq *) 0 ;
  ITapTrade::TAPILoginTypeType result;
  
  arg1 = (ITapTrade::TapAPISecondCertificationReq *)jarg1; 
  result = (ITapTrade::TAPILoginTypeType) ((arg1)->LoginType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPISecondCertificationReq() {
  void * jresult ;
  ITapTrade::TapAPISecondCertificationReq *result = 0 ;
  
  result = (ITapTrade::TapAPISecondCertificationReq *)new ITapTrade::TapAPISecondCertificationReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPISecondCertificationReq(void * jarg1) {
  ITapTrade::TapAPISecondCertificationReq *arg1 = (ITapTrade::TapAPISecondCertificationReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPISecondCertificationReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIAccQryReq() {
  void * jresult ;
  ITapTrade::TapAPIAccQryReq *result = 0 ;
  
  result = (ITapTrade::TapAPIAccQryReq *)new ITapTrade::TapAPIAccQryReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIAccQryReq(void * jarg1) {
  ITapTrade::TapAPIAccQryReq *arg1 = (ITapTrade::TapAPIAccQryReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIAccQryReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountInfo_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountInfo *arg1 = (ITapTrade::TapAPIAccountInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountInfo_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountInfo *arg1 = (ITapTrade::TapAPIAccountInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountInfo *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountInfo_AccountType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIAccountInfo *arg1 = (ITapTrade::TapAPIAccountInfo *) 0 ;
  ITapTrade::TAPIAccountType arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIAccountType)jarg2; 
  if (arg1) (arg1)->AccountType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIAccountInfo_AccountType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIAccountInfo *arg1 = (ITapTrade::TapAPIAccountInfo *) 0 ;
  ITapTrade::TAPIAccountType result;
  
  arg1 = (ITapTrade::TapAPIAccountInfo *)jarg1; 
  result = (ITapTrade::TAPIAccountType) ((arg1)->AccountType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountInfo_AccountState_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIAccountInfo *arg1 = (ITapTrade::TapAPIAccountInfo *) 0 ;
  ITapTrade::TAPIAccountState arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIAccountState)jarg2; 
  if (arg1) (arg1)->AccountState = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIAccountInfo_AccountState_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIAccountInfo *arg1 = (ITapTrade::TapAPIAccountInfo *) 0 ;
  ITapTrade::TAPIAccountState result;
  
  arg1 = (ITapTrade::TapAPIAccountInfo *)jarg1; 
  result = (ITapTrade::TAPIAccountState) ((arg1)->AccountState);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountInfo_AccountTradeRight_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIAccountInfo *arg1 = (ITapTrade::TapAPIAccountInfo *) 0 ;
  ITapTrade::TAPIAccountRightType arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIAccountRightType)jarg2; 
  if (arg1) (arg1)->AccountTradeRight = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIAccountInfo_AccountTradeRight_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIAccountInfo *arg1 = (ITapTrade::TapAPIAccountInfo *) 0 ;
  ITapTrade::TAPIAccountRightType result;
  
  arg1 = (ITapTrade::TapAPIAccountInfo *)jarg1; 
  result = (ITapTrade::TAPIAccountRightType) ((arg1)->AccountTradeRight);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountInfo_CommodityGroupNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountInfo *arg1 = (ITapTrade::TapAPIAccountInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityGroupNo, (const char *)arg2, 11-1);
      arg1->CommodityGroupNo[11-1] = 0;
    } else {
      arg1->CommodityGroupNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountInfo_CommodityGroupNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountInfo *arg1 = (ITapTrade::TapAPIAccountInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityGroupNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountInfo_AccountShortName_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountInfo *arg1 = (ITapTrade::TapAPIAccountInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountShortName, (const char *)arg2, 21-1);
      arg1->AccountShortName[21-1] = 0;
    } else {
      arg1->AccountShortName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountInfo_AccountShortName_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountInfo *arg1 = (ITapTrade::TapAPIAccountInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountInfo *)jarg1; 
  result = (char *) ((arg1)->AccountShortName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountInfo_AccountEnShortName_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountInfo *arg1 = (ITapTrade::TapAPIAccountInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountEnShortName, (const char *)arg2, 21-1);
      arg1->AccountEnShortName[21-1] = 0;
    } else {
      arg1->AccountEnShortName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountInfo_AccountEnShortName_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountInfo *arg1 = (ITapTrade::TapAPIAccountInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountInfo *)jarg1; 
  result = (char *) ((arg1)->AccountEnShortName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIAccountInfo() {
  void * jresult ;
  ITapTrade::TapAPIAccountInfo *result = 0 ;
  
  result = (ITapTrade::TapAPIAccountInfo *)new ITapTrade::TapAPIAccountInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIAccountInfo(void * jarg1) {
  ITapTrade::TapAPIAccountInfo *arg1 = (ITapTrade::TapAPIAccountInfo *) 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPINewOrder_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPINewOrder_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPINewOrder_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_ContractNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPINewOrder_ContractNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_StrikePrice_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice, (const char *)arg2, 11-1);
      arg1->StrikePrice[11-1] = 0;
    } else {
      arg1->StrikePrice[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPINewOrder_StrikePrice_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (char *) ((arg1)->StrikePrice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_CallOrPutFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_CallOrPutFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_ContractNo2_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo2, (const char *)arg2, 11-1);
      arg1->ContractNo2[11-1] = 0;
    } else {
      arg1->ContractNo2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPINewOrder_ContractNo2_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (char *) ((arg1)->ContractNo2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_StrikePrice2_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice2, (const char *)arg2, 11-1);
      arg1->StrikePrice2[11-1] = 0;
    } else {
      arg1->StrikePrice2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPINewOrder_StrikePrice2_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (char *) ((arg1)->StrikePrice2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_CallOrPutFlag2_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_CallOrPutFlag2_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_OrderType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIOrderTypeType arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (ITapTrade::TAPIOrderTypeType)jarg2; 
  if (arg1) (arg1)->OrderType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_OrderType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIOrderTypeType result;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (ITapTrade::TAPIOrderTypeType) ((arg1)->OrderType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_OrderSource_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIOrderSourceType arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (ITapTrade::TAPIOrderSourceType)jarg2; 
  if (arg1) (arg1)->OrderSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_OrderSource_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIOrderSourceType result;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (ITapTrade::TAPIOrderSourceType) ((arg1)->OrderSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_TimeInForce_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPITimeInForceType arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (ITapTrade::TAPITimeInForceType)jarg2; 
  if (arg1) (arg1)->TimeInForce = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_TimeInForce_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPITimeInForceType result;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (ITapTrade::TAPITimeInForceType) ((arg1)->TimeInForce);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_ExpireTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExpireTime, (const char *)arg2, 20-1);
      arg1->ExpireTime[20-1] = 0;
    } else {
      arg1->ExpireTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPINewOrder_ExpireTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (char *) ((arg1)->ExpireTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_IsRiskOrder_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsRiskOrder = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_IsRiskOrder_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsRiskOrder);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_OrderSide_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPISideType arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (ITapTrade::TAPISideType)jarg2; 
  if (arg1) (arg1)->OrderSide = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_OrderSide_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPISideType result;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (ITapTrade::TAPISideType) ((arg1)->OrderSide);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_PositionEffect_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIPositionEffectType arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (ITapTrade::TAPIPositionEffectType)jarg2; 
  if (arg1) (arg1)->PositionEffect = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_PositionEffect_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIPositionEffectType result;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (ITapTrade::TAPIPositionEffectType) ((arg1)->PositionEffect);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_PositionEffect2_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIPositionEffectType arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (ITapTrade::TAPIPositionEffectType)jarg2; 
  if (arg1) (arg1)->PositionEffect2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_PositionEffect2_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIPositionEffectType result;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (ITapTrade::TAPIPositionEffectType) ((arg1)->PositionEffect2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_InquiryNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InquiryNo, (const char *)arg2, 51-1);
      arg1->InquiryNo[51-1] = 0;
    } else {
      arg1->InquiryNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPINewOrder_InquiryNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (char *) ((arg1)->InquiryNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_HedgeFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIHedgeFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (ITapTrade::TAPIHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_HedgeFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIHedgeFlagType result;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (ITapTrade::TAPIHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_OrderPrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OrderPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPINewOrder_OrderPrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->OrderPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_OrderPrice2_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OrderPrice2 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPINewOrder_OrderPrice2_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->OrderPrice2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_StopPrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->StopPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPINewOrder_StopPrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->StopPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_OrderQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPINewOrder_OrderQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->OrderQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_OrderMinQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderMinQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPINewOrder_OrderMinQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->OrderMinQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_MinClipSize_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->MinClipSize = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPINewOrder_MinClipSize_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->MinClipSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_MaxClipSize_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->MaxClipSize = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPINewOrder_MaxClipSize_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->MaxClipSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_RefInt_set(void * jarg1, int jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (ITapTrade::TAPIINT32)jarg2; 
  if (arg1) (arg1)->RefInt = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TapAPINewOrder_RefInt_get(void * jarg1) {
  int jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (ITapTrade::TAPIINT32) ((arg1)->RefInt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_RefDouble_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->RefDouble = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPINewOrder_RefDouble_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->RefDouble);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_RefString_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RefString, (const char *)arg2, 51-1);
      arg1->RefString[51-1] = 0;
    } else {
      arg1->RefString[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPINewOrder_RefString_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (char *) ((arg1)->RefString);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_ClientID_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 16-1);
      arg1->ClientID[16-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPINewOrder_ClientID_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_TacticsType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPITacticsTypeType arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (ITapTrade::TAPITacticsTypeType)jarg2; 
  if (arg1) (arg1)->TacticsType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_TacticsType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPITacticsTypeType result;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (ITapTrade::TAPITacticsTypeType) ((arg1)->TacticsType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_TriggerCondition_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPITriggerConditionType arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (ITapTrade::TAPITriggerConditionType)jarg2; 
  if (arg1) (arg1)->TriggerCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_TriggerCondition_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPITriggerConditionType result;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (ITapTrade::TAPITriggerConditionType) ((arg1)->TriggerCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_TriggerPriceType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPITriggerPriceTypeType arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (ITapTrade::TAPITriggerPriceTypeType)jarg2; 
  if (arg1) (arg1)->TriggerPriceType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_TriggerPriceType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPITriggerPriceTypeType result;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (ITapTrade::TAPITriggerPriceTypeType) ((arg1)->TriggerPriceType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPINewOrder_AddOneIsValid_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->AddOneIsValid = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPINewOrder_AddOneIsValid_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->AddOneIsValid);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPINewOrder() {
  void * jresult ;
  ITapTrade::TapAPINewOrder *result = 0 ;
  
  result = (ITapTrade::TapAPINewOrder *)new ITapTrade::TapAPINewOrder();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPINewOrder(void * jarg1) {
  ITapTrade::TapAPINewOrder *arg1 = (ITapTrade::TapAPINewOrder *) 0 ;
  
  arg1 = (ITapTrade::TapAPINewOrder *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_ContractNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_ContractNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_StrikePrice_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice, (const char *)arg2, 11-1);
      arg1->StrikePrice[11-1] = 0;
    } else {
      arg1->StrikePrice[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_StrikePrice_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->StrikePrice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_CallOrPutFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_CallOrPutFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_ContractNo2_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo2, (const char *)arg2, 11-1);
      arg1->ContractNo2[11-1] = 0;
    } else {
      arg1->ContractNo2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_ContractNo2_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->ContractNo2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_StrikePrice2_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice2, (const char *)arg2, 11-1);
      arg1->StrikePrice2[11-1] = 0;
    } else {
      arg1->StrikePrice2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_StrikePrice2_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->StrikePrice2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_CallOrPutFlag2_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_CallOrPutFlag2_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIOrderTypeType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIOrderTypeType)jarg2; 
  if (arg1) (arg1)->OrderType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIOrderTypeType result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIOrderTypeType) ((arg1)->OrderType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderSource_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIOrderSourceType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIOrderSourceType)jarg2; 
  if (arg1) (arg1)->OrderSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderSource_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIOrderSourceType result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIOrderSourceType) ((arg1)->OrderSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_TimeInForce_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPITimeInForceType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPITimeInForceType)jarg2; 
  if (arg1) (arg1)->TimeInForce = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_TimeInForce_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPITimeInForceType result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPITimeInForceType) ((arg1)->TimeInForce);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_ExpireTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExpireTime, (const char *)arg2, 20-1);
      arg1->ExpireTime[20-1] = 0;
    } else {
      arg1->ExpireTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_ExpireTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->ExpireTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_IsRiskOrder_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsRiskOrder = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_IsRiskOrder_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsRiskOrder);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderSide_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPISideType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPISideType)jarg2; 
  if (arg1) (arg1)->OrderSide = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderSide_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPISideType result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPISideType) ((arg1)->OrderSide);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_PositionEffect_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIPositionEffectType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIPositionEffectType)jarg2; 
  if (arg1) (arg1)->PositionEffect = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_PositionEffect_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIPositionEffectType result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIPositionEffectType) ((arg1)->PositionEffect);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_PositionEffect2_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIPositionEffectType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIPositionEffectType)jarg2; 
  if (arg1) (arg1)->PositionEffect2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_PositionEffect2_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIPositionEffectType result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIPositionEffectType) ((arg1)->PositionEffect2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_InquiryNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InquiryNo, (const char *)arg2, 51-1);
      arg1->InquiryNo[51-1] = 0;
    } else {
      arg1->InquiryNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_InquiryNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->InquiryNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_HedgeFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIHedgeFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_HedgeFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIHedgeFlagType result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderPrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OrderPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderPrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->OrderPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderPrice2_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OrderPrice2 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderPrice2_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->OrderPrice2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_StopPrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->StopPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderInfo_StopPrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->StopPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->OrderQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderMinQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderMinQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderMinQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->OrderMinQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_RefInt_set(void * jarg1, int jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIINT32)jarg2; 
  if (arg1) (arg1)->RefInt = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TapAPIOrderInfo_RefInt_get(void * jarg1) {
  int jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIINT32) ((arg1)->RefInt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_RefDouble_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->RefDouble = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderInfo_RefDouble_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->RefDouble);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_RefString_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RefString, (const char *)arg2, 51-1);
      arg1->RefString[51-1] = 0;
    } else {
      arg1->RefString[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_RefString_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->RefString);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_MinClipSize_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->MinClipSize = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfo_MinClipSize_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->MinClipSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_MaxClipSize_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->MaxClipSize = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfo_MaxClipSize_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->MaxClipSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_LicenseNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LicenseNo, (const char *)arg2, 51-1);
      arg1->LicenseNo[51-1] = 0;
    } else {
      arg1->LicenseNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_LicenseNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->LicenseNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_ServerFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPICHAR arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPICHAR)jarg2; 
  if (arg1) (arg1)->ServerFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_ServerFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPICHAR result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPICHAR) ((arg1)->ServerFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderNo, (const char *)arg2, 21-1);
      arg1->OrderNo[21-1] = 0;
    } else {
      arg1->OrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->OrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_ClientOrderNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientOrderNo, (const char *)arg2, 51-1);
      arg1->ClientOrderNo[51-1] = 0;
    } else {
      arg1->ClientOrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_ClientOrderNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->ClientOrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_ClientID_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 16-1);
      arg1->ClientID[16-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_ClientID_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_TacticsType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPITacticsTypeType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPITacticsTypeType)jarg2; 
  if (arg1) (arg1)->TacticsType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_TacticsType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPITacticsTypeType result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPITacticsTypeType) ((arg1)->TacticsType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_TriggerCondition_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPITriggerConditionType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPITriggerConditionType)jarg2; 
  if (arg1) (arg1)->TriggerCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_TriggerCondition_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPITriggerConditionType result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPITriggerConditionType) ((arg1)->TriggerCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_TriggerPriceType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPITriggerPriceTypeType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPITriggerPriceTypeType)jarg2; 
  if (arg1) (arg1)->TriggerPriceType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_TriggerPriceType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPITriggerPriceTypeType result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPITriggerPriceTypeType) ((arg1)->TriggerPriceType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_AddOneIsValid_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->AddOneIsValid = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_AddOneIsValid_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->AddOneIsValid);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_ClientLocalIP_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientLocalIP, (const char *)arg2, 41-1);
      arg1->ClientLocalIP[41-1] = 0;
    } else {
      arg1->ClientLocalIP[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_ClientLocalIP_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->ClientLocalIP);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_ClientMac_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientMac, (const char *)arg2, 13-1);
      arg1->ClientMac[13-1] = 0;
    } else {
      arg1->ClientMac[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_ClientMac_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->ClientMac);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_ClientIP_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientIP, (const char *)arg2, 41-1);
      arg1->ClientIP[41-1] = 0;
    } else {
      arg1->ClientIP[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_ClientIP_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->ClientIP);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderStreamID_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderStreamID = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderStreamID_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->OrderStreamID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_UpperNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperNo, (const char *)arg2, 11-1);
      arg1->UpperNo[11-1] = 0;
    } else {
      arg1->UpperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_UpperNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->UpperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_UpperChannelNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperChannelNo, (const char *)arg2, 11-1);
      arg1->UpperChannelNo[11-1] = 0;
    } else {
      arg1->UpperChannelNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_UpperChannelNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->UpperChannelNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderLocalNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalNo, (const char *)arg2, 21-1);
      arg1->OrderLocalNo[21-1] = 0;
    } else {
      arg1->OrderLocalNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderLocalNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->OrderLocalNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_UpperStreamID_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->UpperStreamID = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfo_UpperStreamID_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->UpperStreamID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderSystemNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSystemNo, (const char *)arg2, 51-1);
      arg1->OrderSystemNo[51-1] = 0;
    } else {
      arg1->OrderSystemNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderSystemNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->OrderSystemNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderExchangeSystemNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderExchangeSystemNo, (const char *)arg2, 51-1);
      arg1->OrderExchangeSystemNo[51-1] = 0;
    } else {
      arg1->OrderExchangeSystemNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderExchangeSystemNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->OrderExchangeSystemNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderParentSystemNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderParentSystemNo, (const char *)arg2, 51-1);
      arg1->OrderParentSystemNo[51-1] = 0;
    } else {
      arg1->OrderParentSystemNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderParentSystemNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->OrderParentSystemNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderInsertUserNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderInsertUserNo, (const char *)arg2, 21-1);
      arg1->OrderInsertUserNo[21-1] = 0;
    } else {
      arg1->OrderInsertUserNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderInsertUserNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->OrderInsertUserNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderInsertTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderInsertTime, (const char *)arg2, 20-1);
      arg1->OrderInsertTime[20-1] = 0;
    } else {
      arg1->OrderInsertTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderInsertTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->OrderInsertTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderCommandUserNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderCommandUserNo, (const char *)arg2, 21-1);
      arg1->OrderCommandUserNo[21-1] = 0;
    } else {
      arg1->OrderCommandUserNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderCommandUserNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->OrderCommandUserNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderUpdateUserNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderUpdateUserNo, (const char *)arg2, 21-1);
      arg1->OrderUpdateUserNo[21-1] = 0;
    } else {
      arg1->OrderUpdateUserNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderUpdateUserNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->OrderUpdateUserNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderUpdateTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderUpdateTime, (const char *)arg2, 20-1);
      arg1->OrderUpdateTime[20-1] = 0;
    } else {
      arg1->OrderUpdateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderUpdateTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->OrderUpdateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderState_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIOrderStateType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIOrderStateType)jarg2; 
  if (arg1) (arg1)->OrderState = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderState_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIOrderStateType result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIOrderStateType) ((arg1)->OrderState);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderMatchPrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OrderMatchPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderMatchPrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->OrderMatchPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderMatchPrice2_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OrderMatchPrice2 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderMatchPrice2_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->OrderMatchPrice2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderMatchQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderMatchQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderMatchQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->OrderMatchQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderMatchQty2_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderMatchQty2 = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfo_OrderMatchQty2_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->OrderMatchQty2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_ErrorCode_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->ErrorCode = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfo_ErrorCode_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->ErrorCode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_ErrorText_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorText, (const char *)arg2, 51-1);
      arg1->ErrorText[51-1] = 0;
    } else {
      arg1->ErrorText[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderInfo_ErrorText_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (char *) ((arg1)->ErrorText);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_IsBackInput_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsBackInput = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_IsBackInput_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsBackInput);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_IsDeleted_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsDeleted = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_IsDeleted_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsDeleted);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfo_IsAddOne_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsAddOne = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderInfo_IsAddOne_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsAddOne);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIOrderInfo() {
  void * jresult ;
  ITapTrade::TapAPIOrderInfo *result = 0 ;
  
  result = (ITapTrade::TapAPIOrderInfo *)new ITapTrade::TapAPIOrderInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIOrderInfo(void * jarg1) {
  ITapTrade::TapAPIOrderInfo *arg1 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfoNotice_SessionID_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIOrderInfoNotice *arg1 = (ITapTrade::TapAPIOrderInfoNotice *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfoNotice *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfoNotice_SessionID_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIOrderInfoNotice *arg1 = (ITapTrade::TapAPIOrderInfoNotice *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIOrderInfoNotice *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfoNotice_ErrorCode_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIOrderInfoNotice *arg1 = (ITapTrade::TapAPIOrderInfoNotice *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfoNotice *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->ErrorCode = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderInfoNotice_ErrorCode_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIOrderInfoNotice *arg1 = (ITapTrade::TapAPIOrderInfoNotice *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIOrderInfoNotice *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->ErrorCode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderInfoNotice_OrderInfo_set(void * jarg1, void * jarg2) {
  ITapTrade::TapAPIOrderInfoNotice *arg1 = (ITapTrade::TapAPIOrderInfoNotice *) 0 ;
  ITapTrade::TapAPIOrderInfo *arg2 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfoNotice *)jarg1; 
  arg2 = (ITapTrade::TapAPIOrderInfo *)jarg2; 
  if (arg1) (arg1)->OrderInfo = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPIOrderInfoNotice_OrderInfo_get(void * jarg1) {
  void * jresult ;
  ITapTrade::TapAPIOrderInfoNotice *arg1 = (ITapTrade::TapAPIOrderInfoNotice *) 0 ;
  ITapTrade::TapAPIOrderInfo *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfoNotice *)jarg1; 
  result = (ITapTrade::TapAPIOrderInfo *) ((arg1)->OrderInfo);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIOrderInfoNotice() {
  void * jresult ;
  ITapTrade::TapAPIOrderInfoNotice *result = 0 ;
  
  result = (ITapTrade::TapAPIOrderInfoNotice *)new ITapTrade::TapAPIOrderInfoNotice();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIOrderInfoNotice(void * jarg1) {
  ITapTrade::TapAPIOrderInfoNotice *arg1 = (ITapTrade::TapAPIOrderInfoNotice *) 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderInfoNotice *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderActionRsp_ActionType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderActionRsp *arg1 = (ITapTrade::TapAPIOrderActionRsp *) 0 ;
  ITapTrade::TAPIORDERACT arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderActionRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIORDERACT)jarg2; 
  if (arg1) (arg1)->ActionType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderActionRsp_ActionType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderActionRsp *arg1 = (ITapTrade::TapAPIOrderActionRsp *) 0 ;
  ITapTrade::TAPIORDERACT result;
  
  arg1 = (ITapTrade::TapAPIOrderActionRsp *)jarg1; 
  result = (ITapTrade::TAPIORDERACT) ((arg1)->ActionType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderActionRsp_OrderInfo_set(void * jarg1, void * jarg2) {
  ITapTrade::TapAPIOrderActionRsp *arg1 = (ITapTrade::TapAPIOrderActionRsp *) 0 ;
  ITapTrade::TapAPIOrderInfo *arg2 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderActionRsp *)jarg1; 
  arg2 = (ITapTrade::TapAPIOrderInfo *)jarg2; 
  if (arg1) (arg1)->OrderInfo = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPIOrderActionRsp_OrderInfo_get(void * jarg1) {
  void * jresult ;
  ITapTrade::TapAPIOrderActionRsp *arg1 = (ITapTrade::TapAPIOrderActionRsp *) 0 ;
  ITapTrade::TapAPIOrderInfo *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderActionRsp *)jarg1; 
  result = (ITapTrade::TapAPIOrderInfo *) ((arg1)->OrderInfo);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIOrderActionRsp() {
  void * jresult ;
  ITapTrade::TapAPIOrderActionRsp *result = 0 ;
  
  result = (ITapTrade::TapAPIOrderActionRsp *)new ITapTrade::TapAPIOrderActionRsp();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIOrderActionRsp(void * jarg1) {
  ITapTrade::TapAPIOrderActionRsp *arg1 = (ITapTrade::TapAPIOrderActionRsp *) 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderActionRsp *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAmendOrder_ReqData_set(void * jarg1, void * jarg2) {
  ITapTrade::TapAPIAmendOrder *arg1 = (ITapTrade::TapAPIAmendOrder *) 0 ;
  ITapTrade::TapAPINewOrder *arg2 = (ITapTrade::TapAPINewOrder *) 0 ;
  
  arg1 = (ITapTrade::TapAPIAmendOrder *)jarg1; 
  arg2 = (ITapTrade::TapAPINewOrder *)jarg2; 
  if (arg1) (arg1)->ReqData = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPIAmendOrder_ReqData_get(void * jarg1) {
  void * jresult ;
  ITapTrade::TapAPIAmendOrder *arg1 = (ITapTrade::TapAPIAmendOrder *) 0 ;
  ITapTrade::TapAPINewOrder *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAmendOrder *)jarg1; 
  result = (ITapTrade::TapAPINewOrder *)& ((arg1)->ReqData);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAmendOrder_ServerFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIAmendOrder *arg1 = (ITapTrade::TapAPIAmendOrder *) 0 ;
  ITapTrade::TAPICHAR arg2 ;
  
  arg1 = (ITapTrade::TapAPIAmendOrder *)jarg1; 
  arg2 = (ITapTrade::TAPICHAR)jarg2; 
  if (arg1) (arg1)->ServerFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIAmendOrder_ServerFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIAmendOrder *arg1 = (ITapTrade::TapAPIAmendOrder *) 0 ;
  ITapTrade::TAPICHAR result;
  
  arg1 = (ITapTrade::TapAPIAmendOrder *)jarg1; 
  result = (ITapTrade::TAPICHAR) ((arg1)->ServerFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAmendOrder_OrderNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAmendOrder *arg1 = (ITapTrade::TapAPIAmendOrder *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAmendOrder *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderNo, (const char *)arg2, 21-1);
      arg1->OrderNo[21-1] = 0;
    } else {
      arg1->OrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAmendOrder_OrderNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAmendOrder *arg1 = (ITapTrade::TapAPIAmendOrder *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAmendOrder *)jarg1; 
  result = (char *) ((arg1)->OrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIAmendOrder() {
  void * jresult ;
  ITapTrade::TapAPIAmendOrder *result = 0 ;
  
  result = (ITapTrade::TapAPIAmendOrder *)new ITapTrade::TapAPIAmendOrder();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIAmendOrder(void * jarg1) {
  ITapTrade::TapAPIAmendOrder *arg1 = (ITapTrade::TapAPIAmendOrder *) 0 ;
  
  arg1 = (ITapTrade::TapAPIAmendOrder *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderCancelReq_RefInt_set(void * jarg1, int jarg2) {
  ITapTrade::TapAPIOrderCancelReq *arg1 = (ITapTrade::TapAPIOrderCancelReq *) 0 ;
  ITapTrade::TAPIINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderCancelReq *)jarg1; 
  arg2 = (ITapTrade::TAPIINT32)jarg2; 
  if (arg1) (arg1)->RefInt = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TapAPIOrderCancelReq_RefInt_get(void * jarg1) {
  int jresult ;
  ITapTrade::TapAPIOrderCancelReq *arg1 = (ITapTrade::TapAPIOrderCancelReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::TapAPIOrderCancelReq *)jarg1; 
  result = (ITapTrade::TAPIINT32) ((arg1)->RefInt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderCancelReq_RefDouble_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIOrderCancelReq *arg1 = (ITapTrade::TapAPIOrderCancelReq *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderCancelReq *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->RefDouble = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderCancelReq_RefDouble_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIOrderCancelReq *arg1 = (ITapTrade::TapAPIOrderCancelReq *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIOrderCancelReq *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->RefDouble);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderCancelReq_RefString_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderCancelReq *arg1 = (ITapTrade::TapAPIOrderCancelReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderCancelReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RefString, (const char *)arg2, 51-1);
      arg1->RefString[51-1] = 0;
    } else {
      arg1->RefString[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderCancelReq_RefString_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderCancelReq *arg1 = (ITapTrade::TapAPIOrderCancelReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderCancelReq *)jarg1; 
  result = (char *) ((arg1)->RefString);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderCancelReq_ServerFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderCancelReq *arg1 = (ITapTrade::TapAPIOrderCancelReq *) 0 ;
  ITapTrade::TAPICHAR arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderCancelReq *)jarg1; 
  arg2 = (ITapTrade::TAPICHAR)jarg2; 
  if (arg1) (arg1)->ServerFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderCancelReq_ServerFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderCancelReq *arg1 = (ITapTrade::TapAPIOrderCancelReq *) 0 ;
  ITapTrade::TAPICHAR result;
  
  arg1 = (ITapTrade::TapAPIOrderCancelReq *)jarg1; 
  result = (ITapTrade::TAPICHAR) ((arg1)->ServerFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderCancelReq_OrderNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderCancelReq *arg1 = (ITapTrade::TapAPIOrderCancelReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderCancelReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderNo, (const char *)arg2, 21-1);
      arg1->OrderNo[21-1] = 0;
    } else {
      arg1->OrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderCancelReq_OrderNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderCancelReq *arg1 = (ITapTrade::TapAPIOrderCancelReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderCancelReq *)jarg1; 
  result = (char *) ((arg1)->OrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIOrderCancelReq() {
  void * jresult ;
  ITapTrade::TapAPIOrderCancelReq *result = 0 ;
  
  result = (ITapTrade::TapAPIOrderCancelReq *)new ITapTrade::TapAPIOrderCancelReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIOrderCancelReq(void * jarg1) {
  ITapTrade::TapAPIOrderCancelReq *arg1 = (ITapTrade::TapAPIOrderCancelReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderCancelReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderQryReq_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderQryReq_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderQryReq_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderQryReq_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderQryReq_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderQryReq_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderQryReq_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderQryReq_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderQryReq_OrderType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  ITapTrade::TAPIOrderTypeType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  arg2 = (ITapTrade::TAPIOrderTypeType)jarg2; 
  if (arg1) (arg1)->OrderType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderQryReq_OrderType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  ITapTrade::TAPIOrderTypeType result;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  result = (ITapTrade::TAPIOrderTypeType) ((arg1)->OrderType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderQryReq_OrderSource_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  ITapTrade::TAPIOrderSourceType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  arg2 = (ITapTrade::TAPIOrderSourceType)jarg2; 
  if (arg1) (arg1)->OrderSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderQryReq_OrderSource_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  ITapTrade::TAPIOrderSourceType result;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  result = (ITapTrade::TAPIOrderSourceType) ((arg1)->OrderSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderQryReq_TimeInForce_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  ITapTrade::TAPITimeInForceType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  arg2 = (ITapTrade::TAPITimeInForceType)jarg2; 
  if (arg1) (arg1)->TimeInForce = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderQryReq_TimeInForce_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  ITapTrade::TAPITimeInForceType result;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  result = (ITapTrade::TAPITimeInForceType) ((arg1)->TimeInForce);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderQryReq_ExpireTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExpireTime, (const char *)arg2, 20-1);
      arg1->ExpireTime[20-1] = 0;
    } else {
      arg1->ExpireTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderQryReq_ExpireTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  result = (char *) ((arg1)->ExpireTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderQryReq_IsRiskOrder_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsRiskOrder = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderQryReq_IsRiskOrder_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsRiskOrder);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderQryReq_ServerFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  ITapTrade::TAPICHAR arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  arg2 = (ITapTrade::TAPICHAR)jarg2; 
  if (arg1) (arg1)->ServerFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderQryReq_ServerFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  ITapTrade::TAPICHAR result;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  result = (ITapTrade::TAPICHAR) ((arg1)->ServerFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderQryReq_OrderNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderNo, (const char *)arg2, 21-1);
      arg1->OrderNo[21-1] = 0;
    } else {
      arg1->OrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderQryReq_OrderNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  result = (char *) ((arg1)->OrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderQryReq_IsBackInput_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsBackInput = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderQryReq_IsBackInput_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsBackInput);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderQryReq_IsDeleted_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsDeleted = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderQryReq_IsDeleted_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsDeleted);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderQryReq_IsAddOne_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsAddOne = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderQryReq_IsAddOne_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsAddOne);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIOrderQryReq() {
  void * jresult ;
  ITapTrade::TapAPIOrderQryReq *result = 0 ;
  
  result = (ITapTrade::TapAPIOrderQryReq *)new ITapTrade::TapAPIOrderQryReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIOrderQryReq(void * jarg1) {
  ITapTrade::TapAPIOrderQryReq *arg1 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderQryReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderProcessQryReq_ServerFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderProcessQryReq *arg1 = (ITapTrade::TapAPIOrderProcessQryReq *) 0 ;
  ITapTrade::TAPICHAR arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderProcessQryReq *)jarg1; 
  arg2 = (ITapTrade::TAPICHAR)jarg2; 
  if (arg1) (arg1)->ServerFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderProcessQryReq_ServerFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderProcessQryReq *arg1 = (ITapTrade::TapAPIOrderProcessQryReq *) 0 ;
  ITapTrade::TAPICHAR result;
  
  arg1 = (ITapTrade::TapAPIOrderProcessQryReq *)jarg1; 
  result = (ITapTrade::TAPICHAR) ((arg1)->ServerFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderProcessQryReq_OrderNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderProcessQryReq *arg1 = (ITapTrade::TapAPIOrderProcessQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderProcessQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderNo, (const char *)arg2, 21-1);
      arg1->OrderNo[21-1] = 0;
    } else {
      arg1->OrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderProcessQryReq_OrderNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderProcessQryReq *arg1 = (ITapTrade::TapAPIOrderProcessQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderProcessQryReq *)jarg1; 
  result = (char *) ((arg1)->OrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIOrderProcessQryReq() {
  void * jresult ;
  ITapTrade::TapAPIOrderProcessQryReq *result = 0 ;
  
  result = (ITapTrade::TapAPIOrderProcessQryReq *)new ITapTrade::TapAPIOrderProcessQryReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIOrderProcessQryReq(void * jarg1) {
  ITapTrade::TapAPIOrderProcessQryReq *arg1 = (ITapTrade::TapAPIOrderProcessQryReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderProcessQryReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillQryReq_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillQryReq_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillQryReq_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillQryReq_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillQryReq_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillQryReq_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillQryReq_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillQryReq_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillQryReq_ContractNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillQryReq_ContractNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillQryReq_StrikePrice_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice, (const char *)arg2, 11-1);
      arg1->StrikePrice[11-1] = 0;
    } else {
      arg1->StrikePrice[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillQryReq_StrikePrice_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  result = (char *) ((arg1)->StrikePrice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillQryReq_CallOrPutFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillQryReq_CallOrPutFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillQryReq_MatchSource_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  ITapTrade::TAPIMatchSourceType arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  arg2 = (ITapTrade::TAPIMatchSourceType)jarg2; 
  if (arg1) (arg1)->MatchSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillQryReq_MatchSource_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  ITapTrade::TAPIMatchSourceType result;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  result = (ITapTrade::TAPIMatchSourceType) ((arg1)->MatchSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillQryReq_MatchSide_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  ITapTrade::TAPISideType arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  arg2 = (ITapTrade::TAPISideType)jarg2; 
  if (arg1) (arg1)->MatchSide = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillQryReq_MatchSide_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  ITapTrade::TAPISideType result;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  result = (ITapTrade::TAPISideType) ((arg1)->MatchSide);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillQryReq_PositionEffect_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  ITapTrade::TAPIPositionEffectType arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  arg2 = (ITapTrade::TAPIPositionEffectType)jarg2; 
  if (arg1) (arg1)->PositionEffect = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillQryReq_PositionEffect_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  ITapTrade::TAPIPositionEffectType result;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  result = (ITapTrade::TAPIPositionEffectType) ((arg1)->PositionEffect);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillQryReq_ServerFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  ITapTrade::TAPICHAR arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  arg2 = (ITapTrade::TAPICHAR)jarg2; 
  if (arg1) (arg1)->ServerFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillQryReq_ServerFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  ITapTrade::TAPICHAR result;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  result = (ITapTrade::TAPICHAR) ((arg1)->ServerFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillQryReq_OrderNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderNo, (const char *)arg2, 21-1);
      arg1->OrderNo[21-1] = 0;
    } else {
      arg1->OrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillQryReq_OrderNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  result = (char *) ((arg1)->OrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillQryReq_UpperNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperNo, (const char *)arg2, 11-1);
      arg1->UpperNo[11-1] = 0;
    } else {
      arg1->UpperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillQryReq_UpperNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  result = (char *) ((arg1)->UpperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillQryReq_IsDeleted_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsDeleted = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillQryReq_IsDeleted_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsDeleted);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillQryReq_IsAddOne_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsAddOne = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillQryReq_IsAddOne_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsAddOne);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIFillQryReq() {
  void * jresult ;
  ITapTrade::TapAPIFillQryReq *result = 0 ;
  
  result = (ITapTrade::TapAPIFillQryReq *)new ITapTrade::TapAPIFillQryReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIFillQryReq(void * jarg1) {
  ITapTrade::TapAPIFillQryReq *arg1 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIFillQryReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_ContractNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_ContractNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_StrikePrice_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice, (const char *)arg2, 11-1);
      arg1->StrikePrice[11-1] = 0;
    } else {
      arg1->StrikePrice[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_StrikePrice_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->StrikePrice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_CallOrPutFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_CallOrPutFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_MatchSource_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  ITapTrade::TAPIMatchSourceType arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIMatchSourceType)jarg2; 
  if (arg1) (arg1)->MatchSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_MatchSource_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  ITapTrade::TAPIMatchSourceType result;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (ITapTrade::TAPIMatchSourceType) ((arg1)->MatchSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_MatchSide_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  ITapTrade::TAPISideType arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (ITapTrade::TAPISideType)jarg2; 
  if (arg1) (arg1)->MatchSide = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_MatchSide_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  ITapTrade::TAPISideType result;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (ITapTrade::TAPISideType) ((arg1)->MatchSide);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_PositionEffect_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  ITapTrade::TAPIPositionEffectType arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIPositionEffectType)jarg2; 
  if (arg1) (arg1)->PositionEffect = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_PositionEffect_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  ITapTrade::TAPIPositionEffectType result;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (ITapTrade::TAPIPositionEffectType) ((arg1)->PositionEffect);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_ServerFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  ITapTrade::TAPICHAR arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (ITapTrade::TAPICHAR)jarg2; 
  if (arg1) (arg1)->ServerFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_ServerFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  ITapTrade::TAPICHAR result;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (ITapTrade::TAPICHAR) ((arg1)->ServerFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_OrderNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderNo, (const char *)arg2, 21-1);
      arg1->OrderNo[21-1] = 0;
    } else {
      arg1->OrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_OrderNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->OrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_OrderSystemNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSystemNo, (const char *)arg2, 51-1);
      arg1->OrderSystemNo[51-1] = 0;
    } else {
      arg1->OrderSystemNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_OrderSystemNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->OrderSystemNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_MatchNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MatchNo, (const char *)arg2, 21-1);
      arg1->MatchNo[21-1] = 0;
    } else {
      arg1->MatchNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_MatchNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->MatchNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_UpperMatchNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperMatchNo, (const char *)arg2, 71-1);
      arg1->UpperMatchNo[71-1] = 0;
    } else {
      arg1->UpperMatchNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_UpperMatchNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->UpperMatchNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_ExchangeMatchNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeMatchNo, (const char *)arg2, 71-1);
      arg1->ExchangeMatchNo[71-1] = 0;
    } else {
      arg1->ExchangeMatchNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_ExchangeMatchNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeMatchNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_MatchDateTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MatchDateTime, (const char *)arg2, 20-1);
      arg1->MatchDateTime[20-1] = 0;
    } else {
      arg1->MatchDateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_MatchDateTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->MatchDateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_UpperMatchDateTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperMatchDateTime, (const char *)arg2, 20-1);
      arg1->UpperMatchDateTime[20-1] = 0;
    } else {
      arg1->UpperMatchDateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_UpperMatchDateTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->UpperMatchDateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_UpperNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperNo, (const char *)arg2, 11-1);
      arg1->UpperNo[11-1] = 0;
    } else {
      arg1->UpperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_UpperNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->UpperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_MatchPrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->MatchPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFillInfo_MatchPrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->MatchPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_MatchQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->MatchQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIFillInfo_MatchQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->MatchQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_IsDeleted_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsDeleted = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_IsDeleted_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsDeleted);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_IsAddOne_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsAddOne = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_IsAddOne_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsAddOne);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_FeeCurrencyGroup_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FeeCurrencyGroup, (const char *)arg2, 11-1);
      arg1->FeeCurrencyGroup[11-1] = 0;
    } else {
      arg1->FeeCurrencyGroup[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_FeeCurrencyGroup_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->FeeCurrencyGroup);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_FeeCurrency_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FeeCurrency, (const char *)arg2, 11-1);
      arg1->FeeCurrency[11-1] = 0;
    } else {
      arg1->FeeCurrency[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillInfo_FeeCurrency_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (char *) ((arg1)->FeeCurrency);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_FeeValue_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->FeeValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFillInfo_FeeValue_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->FeeValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_IsManualFee_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsManualFee = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillInfo_IsManualFee_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsManualFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillInfo_ClosePrositionPrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->ClosePrositionPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFillInfo_ClosePrositionPrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->ClosePrositionPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIFillInfo() {
  void * jresult ;
  ITapTrade::TapAPIFillInfo *result = 0 ;
  
  result = (ITapTrade::TapAPIFillInfo *)new ITapTrade::TapAPIFillInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIFillInfo(void * jarg1) {
  ITapTrade::TapAPIFillInfo *arg1 = (ITapTrade::TapAPIFillInfo *) 0 ;
  
  arg1 = (ITapTrade::TapAPIFillInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseQryReq_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICloseQryReq *arg1 = (ITapTrade::TapAPICloseQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICloseQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseQryReq_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICloseQryReq *arg1 = (ITapTrade::TapAPICloseQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICloseQryReq *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseQryReq_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICloseQryReq *arg1 = (ITapTrade::TapAPICloseQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICloseQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseQryReq_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICloseQryReq *arg1 = (ITapTrade::TapAPICloseQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICloseQryReq *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseQryReq_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPICloseQryReq *arg1 = (ITapTrade::TapAPICloseQryReq *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPICloseQryReq *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICloseQryReq_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPICloseQryReq *arg1 = (ITapTrade::TapAPICloseQryReq *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPICloseQryReq *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseQryReq_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICloseQryReq *arg1 = (ITapTrade::TapAPICloseQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICloseQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseQryReq_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICloseQryReq *arg1 = (ITapTrade::TapAPICloseQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICloseQryReq *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPICloseQryReq() {
  void * jresult ;
  ITapTrade::TapAPICloseQryReq *result = 0 ;
  
  result = (ITapTrade::TapAPICloseQryReq *)new ITapTrade::TapAPICloseQryReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPICloseQryReq(void * jarg1) {
  ITapTrade::TapAPICloseQryReq *arg1 = (ITapTrade::TapAPICloseQryReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPICloseQryReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICloseInfo_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_ContractNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_ContractNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_StrikePrice_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice, (const char *)arg2, 11-1);
      arg1->StrikePrice[11-1] = 0;
    } else {
      arg1->StrikePrice[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_StrikePrice_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->StrikePrice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CallOrPutFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICloseInfo_CallOrPutFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CloseSide_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  ITapTrade::TAPISideType arg2 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  arg2 = (ITapTrade::TAPISideType)jarg2; 
  if (arg1) (arg1)->CloseSide = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICloseInfo_CloseSide_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  ITapTrade::TAPISideType result;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  result = (ITapTrade::TAPISideType) ((arg1)->CloseSide);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CloseQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->CloseQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPICloseInfo_CloseQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->CloseQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_OpenPrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OpenPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPICloseInfo_OpenPrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->OpenPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_ClosePrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->ClosePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPICloseInfo_ClosePrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->ClosePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_OpenMatchNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OpenMatchNo, (const char *)arg2, 21-1);
      arg1->OpenMatchNo[21-1] = 0;
    } else {
      arg1->OpenMatchNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_OpenMatchNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->OpenMatchNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_OpenMatchDateTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OpenMatchDateTime, (const char *)arg2, 20-1);
      arg1->OpenMatchDateTime[20-1] = 0;
    } else {
      arg1->OpenMatchDateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_OpenMatchDateTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->OpenMatchDateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CloseMatchNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CloseMatchNo, (const char *)arg2, 21-1);
      arg1->CloseMatchNo[21-1] = 0;
    } else {
      arg1->CloseMatchNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_CloseMatchNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->CloseMatchNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CloseMatchDateTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CloseMatchDateTime, (const char *)arg2, 20-1);
      arg1->CloseMatchDateTime[20-1] = 0;
    } else {
      arg1->CloseMatchDateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_CloseMatchDateTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->CloseMatchDateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CloseStreamId_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->CloseStreamId = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPICloseInfo_CloseStreamId_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->CloseStreamId);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CommodityCurrencyGroup_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityCurrencyGroup, (const char *)arg2, 11-1);
      arg1->CommodityCurrencyGroup[11-1] = 0;
    } else {
      arg1->CommodityCurrencyGroup[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_CommodityCurrencyGroup_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityCurrencyGroup);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CommodityCurrency_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityCurrency, (const char *)arg2, 11-1);
      arg1->CommodityCurrency[11-1] = 0;
    } else {
      arg1->CommodityCurrency[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICloseInfo_CommodityCurrency_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityCurrency);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICloseInfo_CloseProfit_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->CloseProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPICloseInfo_CloseProfit_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->CloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPICloseInfo() {
  void * jresult ;
  ITapTrade::TapAPICloseInfo *result = 0 ;
  
  result = (ITapTrade::TapAPICloseInfo *)new ITapTrade::TapAPICloseInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPICloseInfo(void * jarg1) {
  ITapTrade::TapAPICloseInfo *arg1 = (ITapTrade::TapAPICloseInfo *) 0 ;
  
  arg1 = (ITapTrade::TapAPICloseInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionQryReq_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIPositionQryReq *arg1 = (ITapTrade::TapAPIPositionQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionQryReq_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIPositionQryReq *arg1 = (ITapTrade::TapAPIPositionQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIPositionQryReq *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIPositionQryReq() {
  void * jresult ;
  ITapTrade::TapAPIPositionQryReq *result = 0 ;
  
  result = (ITapTrade::TapAPIPositionQryReq *)new ITapTrade::TapAPIPositionQryReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIPositionQryReq(void * jarg1) {
  ITapTrade::TapAPIPositionQryReq *arg1 = (ITapTrade::TapAPIPositionQryReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIPositionQryReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionInfo_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_ContractNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_ContractNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_StrikePrice_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice, (const char *)arg2, 11-1);
      arg1->StrikePrice[11-1] = 0;
    } else {
      arg1->StrikePrice[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_StrikePrice_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->StrikePrice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_CallOrPutFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionInfo_CallOrPutFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_MatchSide_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPISideType arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPISideType)jarg2; 
  if (arg1) (arg1)->MatchSide = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionInfo_MatchSide_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPISideType result;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (ITapTrade::TAPISideType) ((arg1)->MatchSide);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_HedgeFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPIHedgeFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionInfo_HedgeFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPIHedgeFlagType result;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (ITapTrade::TAPIHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_PositionNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->PositionNo, (const char *)arg2, 71-1);
      arg1->PositionNo[71-1] = 0;
    } else {
      arg1->PositionNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_PositionNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->PositionNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_ServerFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPICHAR arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPICHAR)jarg2; 
  if (arg1) (arg1)->ServerFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionInfo_ServerFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPICHAR result;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (ITapTrade::TAPICHAR) ((arg1)->ServerFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_OrderNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderNo, (const char *)arg2, 21-1);
      arg1->OrderNo[21-1] = 0;
    } else {
      arg1->OrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_OrderNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->OrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_MatchNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MatchNo, (const char *)arg2, 21-1);
      arg1->MatchNo[21-1] = 0;
    } else {
      arg1->MatchNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_MatchNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->MatchNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_UpperNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperNo, (const char *)arg2, 11-1);
      arg1->UpperNo[11-1] = 0;
    } else {
      arg1->UpperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_UpperNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->UpperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_PositionPrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PositionPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionInfo_PositionPrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->PositionPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_PositionQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->PositionQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIPositionInfo_PositionQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->PositionQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_PositionStreamId_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->PositionStreamId = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIPositionInfo_PositionStreamId_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->PositionStreamId);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_CommodityCurrencyGroup_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityCurrencyGroup, (const char *)arg2, 11-1);
      arg1->CommodityCurrencyGroup[11-1] = 0;
    } else {
      arg1->CommodityCurrencyGroup[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_CommodityCurrencyGroup_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityCurrencyGroup);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_CommodityCurrency_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityCurrency, (const char *)arg2, 11-1);
      arg1->CommodityCurrency[11-1] = 0;
    } else {
      arg1->CommodityCurrency[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionInfo_CommodityCurrency_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityCurrency);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_CalculatePrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->CalculatePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionInfo_CalculatePrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->CalculatePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_AccountInitialMargin_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->AccountInitialMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionInfo_AccountInitialMargin_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->AccountInitialMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_AccountMaintenanceMargin_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->AccountMaintenanceMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionInfo_AccountMaintenanceMargin_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->AccountMaintenanceMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_UpperInitialMargin_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->UpperInitialMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionInfo_UpperInitialMargin_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->UpperInitialMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_UpperMaintenanceMargin_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->UpperMaintenanceMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionInfo_UpperMaintenanceMargin_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->UpperMaintenanceMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_PositionProfit_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionInfo_PositionProfit_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->PositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_LMEPositionProfit_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->LMEPositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionInfo_LMEPositionProfit_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->LMEPositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_OptionMarketValue_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OptionMarketValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionInfo_OptionMarketValue_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->OptionMarketValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionInfo_IsHistory_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsHistory = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionInfo_IsHistory_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsHistory);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIPositionInfo() {
  void * jresult ;
  ITapTrade::TapAPIPositionInfo *result = 0 ;
  
  result = (ITapTrade::TapAPIPositionInfo *)new ITapTrade::TapAPIPositionInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIPositionInfo(void * jarg1) {
  ITapTrade::TapAPIPositionInfo *arg1 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  
  arg1 = (ITapTrade::TapAPIPositionInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionProfit_PositionNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIPositionProfit *arg1 = (ITapTrade::TapAPIPositionProfit *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionProfit *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->PositionNo, (const char *)arg2, 71-1);
      arg1->PositionNo[71-1] = 0;
    } else {
      arg1->PositionNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionProfit_PositionNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIPositionProfit *arg1 = (ITapTrade::TapAPIPositionProfit *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIPositionProfit *)jarg1; 
  result = (char *) ((arg1)->PositionNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionProfit_PositionStreamId_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIPositionProfit *arg1 = (ITapTrade::TapAPIPositionProfit *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionProfit *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->PositionStreamId = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIPositionProfit_PositionStreamId_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIPositionProfit *arg1 = (ITapTrade::TapAPIPositionProfit *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIPositionProfit *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->PositionStreamId);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionProfit_PositionProfit_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIPositionProfit *arg1 = (ITapTrade::TapAPIPositionProfit *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionProfit *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionProfit_PositionProfit_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIPositionProfit *arg1 = (ITapTrade::TapAPIPositionProfit *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIPositionProfit *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->PositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionProfit_LMEPositionProfit_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIPositionProfit *arg1 = (ITapTrade::TapAPIPositionProfit *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionProfit *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->LMEPositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionProfit_LMEPositionProfit_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIPositionProfit *arg1 = (ITapTrade::TapAPIPositionProfit *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIPositionProfit *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->LMEPositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionProfit_OptionMarketValue_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIPositionProfit *arg1 = (ITapTrade::TapAPIPositionProfit *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionProfit *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OptionMarketValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionProfit_OptionMarketValue_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIPositionProfit *arg1 = (ITapTrade::TapAPIPositionProfit *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIPositionProfit *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->OptionMarketValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionProfit_CalculatePrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIPositionProfit *arg1 = (ITapTrade::TapAPIPositionProfit *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionProfit *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->CalculatePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionProfit_CalculatePrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIPositionProfit *arg1 = (ITapTrade::TapAPIPositionProfit *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIPositionProfit *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->CalculatePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIPositionProfit() {
  void * jresult ;
  ITapTrade::TapAPIPositionProfit *result = 0 ;
  
  result = (ITapTrade::TapAPIPositionProfit *)new ITapTrade::TapAPIPositionProfit();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIPositionProfit(void * jarg1) {
  ITapTrade::TapAPIPositionProfit *arg1 = (ITapTrade::TapAPIPositionProfit *) 0 ;
  
  arg1 = (ITapTrade::TapAPIPositionProfit *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionProfitNotice_IsLast_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIPositionProfitNotice *arg1 = (ITapTrade::TapAPIPositionProfitNotice *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionProfitNotice *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsLast = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionProfitNotice_IsLast_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIPositionProfitNotice *arg1 = (ITapTrade::TapAPIPositionProfitNotice *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIPositionProfitNotice *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsLast);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionProfitNotice_Data_set(void * jarg1, void * jarg2) {
  ITapTrade::TapAPIPositionProfitNotice *arg1 = (ITapTrade::TapAPIPositionProfitNotice *) 0 ;
  ITapTrade::TapAPIPositionProfit *arg2 = (ITapTrade::TapAPIPositionProfit *) 0 ;
  
  arg1 = (ITapTrade::TapAPIPositionProfitNotice *)jarg1; 
  arg2 = (ITapTrade::TapAPIPositionProfit *)jarg2; 
  if (arg1) (arg1)->Data = arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPIPositionProfitNotice_Data_get(void * jarg1) {
  void * jresult ;
  ITapTrade::TapAPIPositionProfitNotice *arg1 = (ITapTrade::TapAPIPositionProfitNotice *) 0 ;
  ITapTrade::TapAPIPositionProfit *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIPositionProfitNotice *)jarg1; 
  result = (ITapTrade::TapAPIPositionProfit *) ((arg1)->Data);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIPositionProfitNotice() {
  void * jresult ;
  ITapTrade::TapAPIPositionProfitNotice *result = 0 ;
  
  result = (ITapTrade::TapAPIPositionProfitNotice *)new ITapTrade::TapAPIPositionProfitNotice();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIPositionProfitNotice(void * jarg1) {
  ITapTrade::TapAPIPositionProfitNotice *arg1 = (ITapTrade::TapAPIPositionProfitNotice *) 0 ;
  
  arg1 = (ITapTrade::TapAPIPositionProfitNotice *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionSummary_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIPositionSummary *arg1 = (ITapTrade::TapAPIPositionSummary *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionSummary *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionSummary_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIPositionSummary *arg1 = (ITapTrade::TapAPIPositionSummary *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIPositionSummary *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionSummary_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIPositionSummary *arg1 = (ITapTrade::TapAPIPositionSummary *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionSummary *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionSummary_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIPositionSummary *arg1 = (ITapTrade::TapAPIPositionSummary *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIPositionSummary *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionSummary_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIPositionSummary *arg1 = (ITapTrade::TapAPIPositionSummary *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionSummary *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionSummary_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIPositionSummary *arg1 = (ITapTrade::TapAPIPositionSummary *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPIPositionSummary *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionSummary_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIPositionSummary *arg1 = (ITapTrade::TapAPIPositionSummary *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionSummary *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionSummary_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIPositionSummary *arg1 = (ITapTrade::TapAPIPositionSummary *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIPositionSummary *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionSummary_ContractNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIPositionSummary *arg1 = (ITapTrade::TapAPIPositionSummary *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionSummary *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionSummary_ContractNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIPositionSummary *arg1 = (ITapTrade::TapAPIPositionSummary *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIPositionSummary *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionSummary_StrikePrice_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIPositionSummary *arg1 = (ITapTrade::TapAPIPositionSummary *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionSummary *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice, (const char *)arg2, 11-1);
      arg1->StrikePrice[11-1] = 0;
    } else {
      arg1->StrikePrice[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIPositionSummary_StrikePrice_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIPositionSummary *arg1 = (ITapTrade::TapAPIPositionSummary *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIPositionSummary *)jarg1; 
  result = (char *) ((arg1)->StrikePrice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionSummary_CallOrPutFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIPositionSummary *arg1 = (ITapTrade::TapAPIPositionSummary *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionSummary *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionSummary_CallOrPutFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIPositionSummary *arg1 = (ITapTrade::TapAPIPositionSummary *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPIPositionSummary *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionSummary_MatchSide_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIPositionSummary *arg1 = (ITapTrade::TapAPIPositionSummary *) 0 ;
  ITapTrade::TAPISideType arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionSummary *)jarg1; 
  arg2 = (ITapTrade::TAPISideType)jarg2; 
  if (arg1) (arg1)->MatchSide = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIPositionSummary_MatchSide_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIPositionSummary *arg1 = (ITapTrade::TapAPIPositionSummary *) 0 ;
  ITapTrade::TAPISideType result;
  
  arg1 = (ITapTrade::TapAPIPositionSummary *)jarg1; 
  result = (ITapTrade::TAPISideType) ((arg1)->MatchSide);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionSummary_PositionPrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIPositionSummary *arg1 = (ITapTrade::TapAPIPositionSummary *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionSummary *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PositionPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIPositionSummary_PositionPrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIPositionSummary *arg1 = (ITapTrade::TapAPIPositionSummary *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIPositionSummary *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->PositionPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionSummary_PositionQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIPositionSummary *arg1 = (ITapTrade::TapAPIPositionSummary *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionSummary *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->PositionQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIPositionSummary_PositionQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIPositionSummary *arg1 = (ITapTrade::TapAPIPositionSummary *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIPositionSummary *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->PositionQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIPositionSummary_HisPositionQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIPositionSummary *arg1 = (ITapTrade::TapAPIPositionSummary *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIPositionSummary *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->HisPositionQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIPositionSummary_HisPositionQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIPositionSummary *arg1 = (ITapTrade::TapAPIPositionSummary *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIPositionSummary *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->HisPositionQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIPositionSummary() {
  void * jresult ;
  ITapTrade::TapAPIPositionSummary *result = 0 ;
  
  result = (ITapTrade::TapAPIPositionSummary *)new ITapTrade::TapAPIPositionSummary();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIPositionSummary(void * jarg1) {
  ITapTrade::TapAPIPositionSummary *arg1 = (ITapTrade::TapAPIPositionSummary *) 0 ;
  
  arg1 = (ITapTrade::TapAPIPositionSummary *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundReq_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFundReq *arg1 = (ITapTrade::TapAPIFundReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFundReq_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFundReq *arg1 = (ITapTrade::TapAPIFundReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFundReq *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIFundReq() {
  void * jresult ;
  ITapTrade::TapAPIFundReq *result = 0 ;
  
  result = (ITapTrade::TapAPIFundReq *)new ITapTrade::TapAPIFundReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIFundReq(void * jarg1) {
  ITapTrade::TapAPIFundReq *arg1 = (ITapTrade::TapAPIFundReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIFundReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFundData_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_CurrencyGroupNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyGroupNo, (const char *)arg2, 11-1);
      arg1->CurrencyGroupNo[11-1] = 0;
    } else {
      arg1->CurrencyGroupNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFundData_CurrencyGroupNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (char *) ((arg1)->CurrencyGroupNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_CurrencyNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyNo, (const char *)arg2, 11-1);
      arg1->CurrencyNo[11-1] = 0;
    } else {
      arg1->CurrencyNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFundData_CurrencyNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (char *) ((arg1)->CurrencyNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_TradeRate_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->TradeRate = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_TradeRate_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->TradeRate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_FutureAlg_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIFutureAlgType arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIFutureAlgType)jarg2; 
  if (arg1) (arg1)->FutureAlg = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFundData_FutureAlg_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIFutureAlgType result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIFutureAlgType) ((arg1)->FutureAlg);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_OptionAlg_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIOptionAlgType arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIOptionAlgType)jarg2; 
  if (arg1) (arg1)->OptionAlg = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFundData_OptionAlg_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIOptionAlgType result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIOptionAlgType) ((arg1)->OptionAlg);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_PreBalance_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PreBalance = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_PreBalance_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->PreBalance);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_PreUnExpProfit_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PreUnExpProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_PreUnExpProfit_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->PreUnExpProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_PreLMEPositionProfit_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PreLMEPositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_PreLMEPositionProfit_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->PreLMEPositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_PreEquity_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PreEquity = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_PreEquity_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->PreEquity);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_PreAvailable1_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PreAvailable1 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_PreAvailable1_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->PreAvailable1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_PreMarketEquity_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PreMarketEquity = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_PreMarketEquity_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->PreMarketEquity);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_CashInValue_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->CashInValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_CashInValue_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->CashInValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_CashOutValue_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->CashOutValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_CashOutValue_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->CashOutValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_CashAdjustValue_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->CashAdjustValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_CashAdjustValue_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->CashAdjustValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_CashPledged_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->CashPledged = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_CashPledged_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->CashPledged);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_FrozenFee_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->FrozenFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_FrozenFee_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->FrozenFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_FrozenDeposit_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->FrozenDeposit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_FrozenDeposit_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->FrozenDeposit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_AccountFee_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->AccountFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_AccountFee_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->AccountFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_SwapInValue_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->SwapInValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_SwapInValue_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->SwapInValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_SwapOutValue_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->SwapOutValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_SwapOutValue_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->SwapOutValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_PremiumIncome_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PremiumIncome = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_PremiumIncome_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->PremiumIncome);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_PremiumPay_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PremiumPay = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_PremiumPay_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->PremiumPay);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_CloseProfit_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->CloseProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_CloseProfit_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->CloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_FrozenFund_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->FrozenFund = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_FrozenFund_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->FrozenFund);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_UnExpProfit_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->UnExpProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_UnExpProfit_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->UnExpProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_ExpProfit_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->ExpProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_ExpProfit_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->ExpProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_PositionProfit_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_PositionProfit_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->PositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_LmePositionProfit_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->LmePositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_LmePositionProfit_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->LmePositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_OptionMarketValue_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OptionMarketValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_OptionMarketValue_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->OptionMarketValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_AccountIntialMargin_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->AccountIntialMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_AccountIntialMargin_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->AccountIntialMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_AccountMaintenanceMargin_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->AccountMaintenanceMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_AccountMaintenanceMargin_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->AccountMaintenanceMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_UpperInitalMargin_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->UpperInitalMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_UpperInitalMargin_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->UpperInitalMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_UpperMaintenanceMargin_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->UpperMaintenanceMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_UpperMaintenanceMargin_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->UpperMaintenanceMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_Discount_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->Discount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_Discount_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->Discount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_Balance_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->Balance = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_Balance_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->Balance);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_Equity_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->Equity = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_Equity_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->Equity);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_Available_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->Available = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_Available_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->Available);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_CanDraw_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->CanDraw = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_CanDraw_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->CanDraw);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_MarketEquity_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->MarketEquity = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_MarketEquity_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->MarketEquity);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFundData_AuthMoney_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->AuthMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFundData_AuthMoney_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->AuthMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIFundData() {
  void * jresult ;
  ITapTrade::TapAPIFundData *result = 0 ;
  
  result = (ITapTrade::TapAPIFundData *)new ITapTrade::TapAPIFundData();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIFundData(void * jarg1) {
  ITapTrade::TapAPIFundData *arg1 = (ITapTrade::TapAPIFundData *) 0 ;
  
  arg1 = (ITapTrade::TapAPIFundData *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodityInfo_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityName_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityName, (const char *)arg2, 21-1);
      arg1->CommodityName[21-1] = 0;
    } else {
      arg1->CommodityName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityName_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityEngName_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityEngName, (const char *)arg2, 31-1);
      arg1->CommodityEngName[31-1] = 0;
    } else {
      arg1->CommodityEngName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityEngName_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityEngName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_RelateExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RelateExchangeNo, (const char *)arg2, 11-1);
      arg1->RelateExchangeNo[11-1] = 0;
    } else {
      arg1->RelateExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodityInfo_RelateExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  result = (char *) ((arg1)->RelateExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_RelateCommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->RelateCommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICommodityInfo_RelateCommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->RelateCommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_RelateCommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RelateCommodityNo, (const char *)arg2, 11-1);
      arg1->RelateCommodityNo[11-1] = 0;
    } else {
      arg1->RelateCommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodityInfo_RelateCommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  result = (char *) ((arg1)->RelateCommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_RelateExchangeNo2_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RelateExchangeNo2, (const char *)arg2, 11-1);
      arg1->RelateExchangeNo2[11-1] = 0;
    } else {
      arg1->RelateExchangeNo2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodityInfo_RelateExchangeNo2_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  result = (char *) ((arg1)->RelateExchangeNo2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_RelateCommodityType2_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->RelateCommodityType2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICommodityInfo_RelateCommodityType2_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->RelateCommodityType2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_RelateCommodityNo2_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RelateCommodityNo2, (const char *)arg2, 11-1);
      arg1->RelateCommodityNo2[11-1] = 0;
    } else {
      arg1->RelateCommodityNo2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodityInfo_RelateCommodityNo2_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  result = (char *) ((arg1)->RelateCommodityNo2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_CurrencyGroupNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyGroupNo, (const char *)arg2, 11-1);
      arg1->CurrencyGroupNo[11-1] = 0;
    } else {
      arg1->CurrencyGroupNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodityInfo_CurrencyGroupNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  result = (char *) ((arg1)->CurrencyGroupNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_TradeCurrency_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCurrency, (const char *)arg2, 11-1);
      arg1->TradeCurrency[11-1] = 0;
    } else {
      arg1->TradeCurrency[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodityInfo_TradeCurrency_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  result = (char *) ((arg1)->TradeCurrency);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_ContractSize_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->ContractSize = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPICommodityInfo_ContractSize_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->ContractSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_OpenCloseMode_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  ITapTrade::TAPIOpenCloseModeType arg2 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIOpenCloseModeType)jarg2; 
  if (arg1) (arg1)->OpenCloseMode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICommodityInfo_OpenCloseMode_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  ITapTrade::TAPIOpenCloseModeType result;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  result = (ITapTrade::TAPIOpenCloseModeType) ((arg1)->OpenCloseMode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_StrikePriceTimes_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->StrikePriceTimes = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPICommodityInfo_StrikePriceTimes_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->StrikePriceTimes);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityTickSize_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->CommodityTickSize = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityTickSize_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->CommodityTickSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityDenominator_set(void * jarg1, int jarg2) {
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  ITapTrade::TAPIINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIINT32)jarg2; 
  if (arg1) (arg1)->CommodityDenominator = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityDenominator_get(void * jarg1) {
  int jresult ;
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  result = (ITapTrade::TAPIINT32) ((arg1)->CommodityDenominator);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_CmbDirect_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  ITapTrade::TAPICmbDirectType arg2 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  arg2 = (ITapTrade::TAPICmbDirectType)jarg2; 
  if (arg1) (arg1)->CmbDirect = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICommodityInfo_CmbDirect_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  ITapTrade::TAPICmbDirectType result;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  result = (ITapTrade::TAPICmbDirectType) ((arg1)->CmbDirect);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_DeliveryMode_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  ITapTrade::TAPIDeliveryModeType arg2 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIDeliveryModeType)jarg2; 
  if (arg1) (arg1)->DeliveryMode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICommodityInfo_DeliveryMode_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  ITapTrade::TAPIDeliveryModeType result;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  result = (ITapTrade::TAPIDeliveryModeType) ((arg1)->DeliveryMode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_DeliveryDays_set(void * jarg1, int jarg2) {
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  ITapTrade::TAPIINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIINT32)jarg2; 
  if (arg1) (arg1)->DeliveryDays = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TapAPICommodityInfo_DeliveryDays_get(void * jarg1) {
  int jresult ;
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  result = (ITapTrade::TAPIINT32) ((arg1)->DeliveryDays);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_AddOneTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AddOneTime, (const char *)arg2, 9-1);
      arg1->AddOneTime[9-1] = 0;
    } else {
      arg1->AddOneTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodityInfo_AddOneTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  result = (char *) ((arg1)->AddOneTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityTimeZone_set(void * jarg1, int jarg2) {
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  ITapTrade::TAPIINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIINT32)jarg2; 
  if (arg1) (arg1)->CommodityTimeZone = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TapAPICommodityInfo_CommodityTimeZone_get(void * jarg1) {
  int jresult ;
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  result = (ITapTrade::TAPIINT32) ((arg1)->CommodityTimeZone);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodityInfo_IsAddOne_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsAddOne = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICommodityInfo_IsAddOne_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsAddOne);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPICommodityInfo() {
  void * jresult ;
  ITapTrade::TapAPICommodityInfo *result = 0 ;
  
  result = (ITapTrade::TapAPICommodityInfo *)new ITapTrade::TapAPICommodityInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPICommodityInfo(void * jarg1) {
  ITapTrade::TapAPICommodityInfo *arg1 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  
  arg1 = (ITapTrade::TapAPICommodityInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeContractInfo_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPITradeContractInfo_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeContractInfo_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_ContractNo1_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo1, (const char *)arg2, 11-1);
      arg1->ContractNo1[11-1] = 0;
    } else {
      arg1->ContractNo1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeContractInfo_ContractNo1_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  result = (char *) ((arg1)->ContractNo1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_StrikePrice1_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice1, (const char *)arg2, 11-1);
      arg1->StrikePrice1[11-1] = 0;
    } else {
      arg1->StrikePrice1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeContractInfo_StrikePrice1_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  result = (char *) ((arg1)->StrikePrice1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_CallOrPutFlag1_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag1 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPITradeContractInfo_CallOrPutFlag1_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_ContractNo2_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo2, (const char *)arg2, 11-1);
      arg1->ContractNo2[11-1] = 0;
    } else {
      arg1->ContractNo2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeContractInfo_ContractNo2_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  result = (char *) ((arg1)->ContractNo2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_StrikePrice2_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice2, (const char *)arg2, 11-1);
      arg1->StrikePrice2[11-1] = 0;
    } else {
      arg1->StrikePrice2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeContractInfo_StrikePrice2_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  result = (char *) ((arg1)->StrikePrice2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_CallOrPutFlag2_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPITradeContractInfo_CallOrPutFlag2_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_ContractType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  ITapTrade::TAPIContractTypeType arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIContractTypeType)jarg2; 
  if (arg1) (arg1)->ContractType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPITradeContractInfo_ContractType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  ITapTrade::TAPIContractTypeType result;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  result = (ITapTrade::TAPIContractTypeType) ((arg1)->ContractType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_QuoteUnderlyingContract_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteUnderlyingContract, (const char *)arg2, 11-1);
      arg1->QuoteUnderlyingContract[11-1] = 0;
    } else {
      arg1->QuoteUnderlyingContract[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeContractInfo_QuoteUnderlyingContract_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  result = (char *) ((arg1)->QuoteUnderlyingContract);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_ContractName_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractName, (const char *)arg2, 71-1);
      arg1->ContractName[71-1] = 0;
    } else {
      arg1->ContractName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeContractInfo_ContractName_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  result = (char *) ((arg1)->ContractName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_ContractExpDate_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractExpDate, (const char *)arg2, 11-1);
      arg1->ContractExpDate[11-1] = 0;
    } else {
      arg1->ContractExpDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeContractInfo_ContractExpDate_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  result = (char *) ((arg1)->ContractExpDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_LastTradeDate_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastTradeDate, (const char *)arg2, 11-1);
      arg1->LastTradeDate[11-1] = 0;
    } else {
      arg1->LastTradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeContractInfo_LastTradeDate_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  result = (char *) ((arg1)->LastTradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeContractInfo_FirstNoticeDate_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FirstNoticeDate, (const char *)arg2, 11-1);
      arg1->FirstNoticeDate[11-1] = 0;
    } else {
      arg1->FirstNoticeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeContractInfo_FirstNoticeDate_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  result = (char *) ((arg1)->FirstNoticeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPITradeContractInfo() {
  void * jresult ;
  ITapTrade::TapAPITradeContractInfo *result = 0 ;
  
  result = (ITapTrade::TapAPITradeContractInfo *)new ITapTrade::TapAPITradeContractInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPITradeContractInfo(void * jarg1) {
  ITapTrade::TapAPITradeContractInfo *arg1 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  
  arg1 = (ITapTrade::TapAPITradeContractInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICurrencyInfo_CurrencyNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICurrencyInfo *arg1 = (ITapTrade::TapAPICurrencyInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICurrencyInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyNo, (const char *)arg2, 11-1);
      arg1->CurrencyNo[11-1] = 0;
    } else {
      arg1->CurrencyNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICurrencyInfo_CurrencyNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICurrencyInfo *arg1 = (ITapTrade::TapAPICurrencyInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICurrencyInfo *)jarg1; 
  result = (char *) ((arg1)->CurrencyNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICurrencyInfo_CurrencyGroupNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICurrencyInfo *arg1 = (ITapTrade::TapAPICurrencyInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICurrencyInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyGroupNo, (const char *)arg2, 11-1);
      arg1->CurrencyGroupNo[11-1] = 0;
    } else {
      arg1->CurrencyGroupNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICurrencyInfo_CurrencyGroupNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICurrencyInfo *arg1 = (ITapTrade::TapAPICurrencyInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICurrencyInfo *)jarg1; 
  result = (char *) ((arg1)->CurrencyGroupNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICurrencyInfo_TradeRate_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPICurrencyInfo *arg1 = (ITapTrade::TapAPICurrencyInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPICurrencyInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->TradeRate = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPICurrencyInfo_TradeRate_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPICurrencyInfo *arg1 = (ITapTrade::TapAPICurrencyInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPICurrencyInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->TradeRate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICurrencyInfo_TradeRate2_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPICurrencyInfo *arg1 = (ITapTrade::TapAPICurrencyInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPICurrencyInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->TradeRate2 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPICurrencyInfo_TradeRate2_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPICurrencyInfo *arg1 = (ITapTrade::TapAPICurrencyInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPICurrencyInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->TradeRate2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICurrencyInfo_FutureAlg_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPICurrencyInfo *arg1 = (ITapTrade::TapAPICurrencyInfo *) 0 ;
  ITapTrade::TAPIFutureAlgType arg2 ;
  
  arg1 = (ITapTrade::TapAPICurrencyInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIFutureAlgType)jarg2; 
  if (arg1) (arg1)->FutureAlg = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICurrencyInfo_FutureAlg_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPICurrencyInfo *arg1 = (ITapTrade::TapAPICurrencyInfo *) 0 ;
  ITapTrade::TAPIFutureAlgType result;
  
  arg1 = (ITapTrade::TapAPICurrencyInfo *)jarg1; 
  result = (ITapTrade::TAPIFutureAlgType) ((arg1)->FutureAlg);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICurrencyInfo_OptionAlg_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPICurrencyInfo *arg1 = (ITapTrade::TapAPICurrencyInfo *) 0 ;
  ITapTrade::TAPIOptionAlgType arg2 ;
  
  arg1 = (ITapTrade::TapAPICurrencyInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIOptionAlgType)jarg2; 
  if (arg1) (arg1)->OptionAlg = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICurrencyInfo_OptionAlg_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPICurrencyInfo *arg1 = (ITapTrade::TapAPICurrencyInfo *) 0 ;
  ITapTrade::TAPIOptionAlgType result;
  
  arg1 = (ITapTrade::TapAPICurrencyInfo *)jarg1; 
  result = (ITapTrade::TAPIOptionAlgType) ((arg1)->OptionAlg);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPICurrencyInfo() {
  void * jresult ;
  ITapTrade::TapAPICurrencyInfo *result = 0 ;
  
  result = (ITapTrade::TapAPICurrencyInfo *)new ITapTrade::TapAPICurrencyInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPICurrencyInfo(void * jarg1) {
  ITapTrade::TapAPICurrencyInfo *arg1 = (ITapTrade::TapAPICurrencyInfo *) 0 ;
  
  arg1 = (ITapTrade::TapAPICurrencyInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MSG_RECEIVER_ACCOUNTNO_get() {
  char jresult ;
  ITapTrade::TAPIMsgReceiverType result;
  
  result = (ITapTrade::TAPIMsgReceiverType)(ITapTrade::TAPIMsgReceiverType)ITapTrade::TAPI_MSG_RECEIVER_ACCOUNTNO;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MSG_RECEIVER_ACCOUNTGROUPNO_get() {
  char jresult ;
  ITapTrade::TAPIMsgReceiverType result;
  
  result = (ITapTrade::TAPIMsgReceiverType)(ITapTrade::TAPIMsgReceiverType)ITapTrade::TAPI_MSG_RECEIVER_ACCOUNTGROUPNO;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MSG_RECEIVER_ATTRIBUTE_get() {
  char jresult ;
  ITapTrade::TAPIMsgReceiverType result;
  
  result = (ITapTrade::TAPIMsgReceiverType)(ITapTrade::TAPIMsgReceiverType)ITapTrade::TAPI_MSG_RECEIVER_ATTRIBUTE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MSG_RECEIVER_USERNO_get() {
  char jresult ;
  ITapTrade::TAPIMsgReceiverType result;
  
  result = (ITapTrade::TAPIMsgReceiverType)(ITapTrade::TAPIMsgReceiverType)ITapTrade::TAPI_MSG_RECEIVER_USERNO;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MSG_LEVEL_NORMAL_get() {
  char jresult ;
  ITapTrade::TAPIMsgLevelType result;
  
  result = (ITapTrade::TAPIMsgLevelType)(ITapTrade::TAPIMsgLevelType)ITapTrade::TAPI_MSG_LEVEL_NORMAL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MSG_LEVEL_IMPORTANT_get() {
  char jresult ;
  ITapTrade::TAPIMsgLevelType result;
  
  result = (ITapTrade::TAPIMsgLevelType)(ITapTrade::TAPIMsgLevelType)ITapTrade::TAPI_MSG_LEVEL_IMPORTANT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_MSG_LEVEL_IMERGENCY_get() {
  char jresult ;
  ITapTrade::TAPIMsgLevelType result;
  
  result = (ITapTrade::TAPIMsgLevelType)(ITapTrade::TAPIMsgLevelType)ITapTrade::TAPI_MSG_LEVEL_IMERGENCY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_Msg_TYPE_MANAGER_get() {
  char jresult ;
  ITapTrade::TAPIMsgTypeType result;
  
  result = (ITapTrade::TAPIMsgTypeType)(ITapTrade::TAPIMsgTypeType)ITapTrade::TAPI_Msg_TYPE_MANAGER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_Msg_TYPE_RISKCONTROL_get() {
  char jresult ;
  ITapTrade::TAPIMsgTypeType result;
  
  result = (ITapTrade::TAPIMsgTypeType)(ITapTrade::TAPIMsgTypeType)ITapTrade::TAPI_Msg_TYPE_RISKCONTROL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_BILL_DATE_get() {
  char jresult ;
  ITapTrade::TAPIBillTypeType result;
  
  result = (ITapTrade::TAPIBillTypeType)(ITapTrade::TAPIBillTypeType)ITapTrade::TAPI_BILL_DATE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_BILL_MONTH_get() {
  char jresult ;
  ITapTrade::TAPIBillTypeType result;
  
  result = (ITapTrade::TAPIBillTypeType)(ITapTrade::TAPIBillTypeType)ITapTrade::TAPI_BILL_MONTH;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_BILL_FILE_TXT_get() {
  char jresult ;
  ITapTrade::TAPIBillFileTypeType result;
  
  result = (ITapTrade::TAPIBillFileTypeType)(ITapTrade::TAPIBillFileTypeType)ITapTrade::TAPI_BILL_FILE_TXT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_BILL_FILE_PDF_get() {
  char jresult ;
  ITapTrade::TAPIBillFileTypeType result;
  
  result = (ITapTrade::TAPIBillFileTypeType)(ITapTrade::TAPIBillFileTypeType)ITapTrade::TAPI_BILL_FILE_PDF;
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeMessageReq_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeMessageReq *arg1 = (ITapTrade::TapAPITradeMessageReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeMessageReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeMessageReq_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeMessageReq *arg1 = (ITapTrade::TapAPITradeMessageReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeMessageReq *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeMessageReq_AccountAttributeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeMessageReq *arg1 = (ITapTrade::TapAPITradeMessageReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeMessageReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountAttributeNo, (const char *)arg2, 21-1);
      arg1->AccountAttributeNo[21-1] = 0;
    } else {
      arg1->AccountAttributeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeMessageReq_AccountAttributeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeMessageReq *arg1 = (ITapTrade::TapAPITradeMessageReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeMessageReq *)jarg1; 
  result = (char *) ((arg1)->AccountAttributeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeMessageReq_BenginSendDateTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeMessageReq *arg1 = (ITapTrade::TapAPITradeMessageReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeMessageReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BenginSendDateTime, (const char *)arg2, 20-1);
      arg1->BenginSendDateTime[20-1] = 0;
    } else {
      arg1->BenginSendDateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeMessageReq_BenginSendDateTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeMessageReq *arg1 = (ITapTrade::TapAPITradeMessageReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeMessageReq *)jarg1; 
  result = (char *) ((arg1)->BenginSendDateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeMessageReq_EndSendDateTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeMessageReq *arg1 = (ITapTrade::TapAPITradeMessageReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeMessageReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->EndSendDateTime, (const char *)arg2, 20-1);
      arg1->EndSendDateTime[20-1] = 0;
    } else {
      arg1->EndSendDateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeMessageReq_EndSendDateTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeMessageReq *arg1 = (ITapTrade::TapAPITradeMessageReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeMessageReq *)jarg1; 
  result = (char *) ((arg1)->EndSendDateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPITradeMessageReq() {
  void * jresult ;
  ITapTrade::TapAPITradeMessageReq *result = 0 ;
  
  result = (ITapTrade::TapAPITradeMessageReq *)new ITapTrade::TapAPITradeMessageReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPITradeMessageReq(void * jarg1) {
  ITapTrade::TapAPITradeMessageReq *arg1 = (ITapTrade::TapAPITradeMessageReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPITradeMessageReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeMessage_SerialID_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPITradeMessage *arg1 = (ITapTrade::TapAPITradeMessage *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeMessage *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->SerialID = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPITradeMessage_SerialID_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPITradeMessage *arg1 = (ITapTrade::TapAPITradeMessage *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPITradeMessage *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->SerialID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeMessage_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeMessage *arg1 = (ITapTrade::TapAPITradeMessage *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeMessage *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeMessage_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeMessage *arg1 = (ITapTrade::TapAPITradeMessage *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeMessage *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeMessage_TMsgValidDateTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeMessage *arg1 = (ITapTrade::TapAPITradeMessage *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeMessage *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TMsgValidDateTime, (const char *)arg2, 20-1);
      arg1->TMsgValidDateTime[20-1] = 0;
    } else {
      arg1->TMsgValidDateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeMessage_TMsgValidDateTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeMessage *arg1 = (ITapTrade::TapAPITradeMessage *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeMessage *)jarg1; 
  result = (char *) ((arg1)->TMsgValidDateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeMessage_TMsgTitle_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeMessage *arg1 = (ITapTrade::TapAPITradeMessage *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeMessage *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TMsgTitle, (const char *)arg2, 51-1);
      arg1->TMsgTitle[51-1] = 0;
    } else {
      arg1->TMsgTitle[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeMessage_TMsgTitle_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeMessage *arg1 = (ITapTrade::TapAPITradeMessage *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeMessage *)jarg1; 
  result = (char *) ((arg1)->TMsgTitle);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeMessage_TMsgContent_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeMessage *arg1 = (ITapTrade::TapAPITradeMessage *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeMessage *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TMsgContent, (const char *)arg2, 501-1);
      arg1->TMsgContent[501-1] = 0;
    } else {
      arg1->TMsgContent[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeMessage_TMsgContent_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeMessage *arg1 = (ITapTrade::TapAPITradeMessage *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeMessage *)jarg1; 
  result = (char *) ((arg1)->TMsgContent);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeMessage_TMsgType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPITradeMessage *arg1 = (ITapTrade::TapAPITradeMessage *) 0 ;
  ITapTrade::TAPIMsgTypeType arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeMessage *)jarg1; 
  arg2 = (ITapTrade::TAPIMsgTypeType)jarg2; 
  if (arg1) (arg1)->TMsgType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPITradeMessage_TMsgType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPITradeMessage *arg1 = (ITapTrade::TapAPITradeMessage *) 0 ;
  ITapTrade::TAPIMsgTypeType result;
  
  arg1 = (ITapTrade::TapAPITradeMessage *)jarg1; 
  result = (ITapTrade::TAPIMsgTypeType) ((arg1)->TMsgType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeMessage_TMsgLevel_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPITradeMessage *arg1 = (ITapTrade::TapAPITradeMessage *) 0 ;
  ITapTrade::TAPIMsgLevelType arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeMessage *)jarg1; 
  arg2 = (ITapTrade::TAPIMsgLevelType)jarg2; 
  if (arg1) (arg1)->TMsgLevel = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPITradeMessage_TMsgLevel_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPITradeMessage *arg1 = (ITapTrade::TapAPITradeMessage *) 0 ;
  ITapTrade::TAPIMsgLevelType result;
  
  arg1 = (ITapTrade::TapAPITradeMessage *)jarg1; 
  result = (ITapTrade::TAPIMsgLevelType) ((arg1)->TMsgLevel);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeMessage_IsSendBySMS_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPITradeMessage *arg1 = (ITapTrade::TapAPITradeMessage *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeMessage *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsSendBySMS = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPITradeMessage_IsSendBySMS_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPITradeMessage *arg1 = (ITapTrade::TapAPITradeMessage *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPITradeMessage *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsSendBySMS);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeMessage_IsSendByEMail_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPITradeMessage *arg1 = (ITapTrade::TapAPITradeMessage *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeMessage *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsSendByEMail = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPITradeMessage_IsSendByEMail_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPITradeMessage *arg1 = (ITapTrade::TapAPITradeMessage *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPITradeMessage *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsSendByEMail);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeMessage_Sender_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeMessage *arg1 = (ITapTrade::TapAPITradeMessage *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeMessage *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Sender, (const char *)arg2, 21-1);
      arg1->Sender[21-1] = 0;
    } else {
      arg1->Sender[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeMessage_Sender_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeMessage *arg1 = (ITapTrade::TapAPITradeMessage *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeMessage *)jarg1; 
  result = (char *) ((arg1)->Sender);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradeMessage_SendDateTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradeMessage *arg1 = (ITapTrade::TapAPITradeMessage *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradeMessage *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SendDateTime, (const char *)arg2, 20-1);
      arg1->SendDateTime[20-1] = 0;
    } else {
      arg1->SendDateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradeMessage_SendDateTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradeMessage *arg1 = (ITapTrade::TapAPITradeMessage *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradeMessage *)jarg1; 
  result = (char *) ((arg1)->SendDateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPITradeMessage() {
  void * jresult ;
  ITapTrade::TapAPITradeMessage *result = 0 ;
  
  result = (ITapTrade::TapAPITradeMessage *)new ITapTrade::TapAPITradeMessage();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPITradeMessage(void * jarg1) {
  ITapTrade::TapAPITradeMessage *arg1 = (ITapTrade::TapAPITradeMessage *) 0 ;
  
  arg1 = (ITapTrade::TapAPITradeMessage *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIBillQryReq_UserNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIBillQryReq *arg1 = (ITapTrade::TapAPIBillQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIBillQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserNo, (const char *)arg2, 21-1);
      arg1->UserNo[21-1] = 0;
    } else {
      arg1->UserNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIBillQryReq_UserNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIBillQryReq *arg1 = (ITapTrade::TapAPIBillQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIBillQryReq *)jarg1; 
  result = (char *) ((arg1)->UserNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIBillQryReq_BillType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIBillQryReq *arg1 = (ITapTrade::TapAPIBillQryReq *) 0 ;
  ITapTrade::TAPIBillTypeType arg2 ;
  
  arg1 = (ITapTrade::TapAPIBillQryReq *)jarg1; 
  arg2 = (ITapTrade::TAPIBillTypeType)jarg2; 
  if (arg1) (arg1)->BillType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIBillQryReq_BillType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIBillQryReq *arg1 = (ITapTrade::TapAPIBillQryReq *) 0 ;
  ITapTrade::TAPIBillTypeType result;
  
  arg1 = (ITapTrade::TapAPIBillQryReq *)jarg1; 
  result = (ITapTrade::TAPIBillTypeType) ((arg1)->BillType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIBillQryReq_BillDate_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIBillQryReq *arg1 = (ITapTrade::TapAPIBillQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIBillQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BillDate, (const char *)arg2, 11-1);
      arg1->BillDate[11-1] = 0;
    } else {
      arg1->BillDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIBillQryReq_BillDate_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIBillQryReq *arg1 = (ITapTrade::TapAPIBillQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIBillQryReq *)jarg1; 
  result = (char *) ((arg1)->BillDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIBillQryReq_BillFileType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIBillQryReq *arg1 = (ITapTrade::TapAPIBillQryReq *) 0 ;
  ITapTrade::TAPIBillFileTypeType arg2 ;
  
  arg1 = (ITapTrade::TapAPIBillQryReq *)jarg1; 
  arg2 = (ITapTrade::TAPIBillFileTypeType)jarg2; 
  if (arg1) (arg1)->BillFileType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIBillQryReq_BillFileType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIBillQryReq *arg1 = (ITapTrade::TapAPIBillQryReq *) 0 ;
  ITapTrade::TAPIBillFileTypeType result;
  
  arg1 = (ITapTrade::TapAPIBillQryReq *)jarg1; 
  result = (ITapTrade::TAPIBillFileTypeType) ((arg1)->BillFileType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIBillQryReq() {
  void * jresult ;
  ITapTrade::TapAPIBillQryReq *result = 0 ;
  
  result = (ITapTrade::TapAPIBillQryReq *)new ITapTrade::TapAPIBillQryReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIBillQryReq(void * jarg1) {
  ITapTrade::TapAPIBillQryReq *arg1 = (ITapTrade::TapAPIBillQryReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIBillQryReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIBillQryRsp_Reqdata_set(void * jarg1, void * jarg2) {
  ITapTrade::TapAPIBillQryRsp *arg1 = (ITapTrade::TapAPIBillQryRsp *) 0 ;
  ITapTrade::TapAPIBillQryReq *arg2 = (ITapTrade::TapAPIBillQryReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIBillQryRsp *)jarg1; 
  arg2 = (ITapTrade::TapAPIBillQryReq *)jarg2; 
  if (arg1) (arg1)->Reqdata = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPIBillQryRsp_Reqdata_get(void * jarg1) {
  void * jresult ;
  ITapTrade::TapAPIBillQryRsp *arg1 = (ITapTrade::TapAPIBillQryRsp *) 0 ;
  ITapTrade::TapAPIBillQryReq *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIBillQryRsp *)jarg1; 
  result = (ITapTrade::TapAPIBillQryReq *)& ((arg1)->Reqdata);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIBillQryRsp_BillLen_set(void * jarg1, int jarg2) {
  ITapTrade::TapAPIBillQryRsp *arg1 = (ITapTrade::TapAPIBillQryRsp *) 0 ;
  ITapTrade::TAPIINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIBillQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIINT32)jarg2; 
  if (arg1) (arg1)->BillLen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TapAPIBillQryRsp_BillLen_get(void * jarg1) {
  int jresult ;
  ITapTrade::TapAPIBillQryRsp *arg1 = (ITapTrade::TapAPIBillQryRsp *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::TapAPIBillQryRsp *)jarg1; 
  result = (ITapTrade::TAPIINT32) ((arg1)->BillLen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIBillQryRsp_BillText_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIBillQryRsp *arg1 = (ITapTrade::TapAPIBillQryRsp *) 0 ;
  ITapTrade::TAPICHAR *arg2 ;
  
  arg1 = (ITapTrade::TapAPIBillQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BillText, (const char *)arg2, 1-1);
      arg1->BillText[1-1] = 0;
    } else {
      arg1->BillText[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIBillQryRsp_BillText_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIBillQryRsp *arg1 = (ITapTrade::TapAPIBillQryRsp *) 0 ;
  ITapTrade::TAPICHAR *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIBillQryRsp *)jarg1; 
  result = (ITapTrade::TAPICHAR *)(ITapTrade::TAPICHAR *) ((arg1)->BillText);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIBillQryRsp() {
  void * jresult ;
  ITapTrade::TapAPIBillQryRsp *result = 0 ;
  
  result = (ITapTrade::TapAPIBillQryRsp *)new ITapTrade::TapAPIBillQryRsp();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIBillQryRsp(void * jarg1) {
  ITapTrade::TapAPIBillQryRsp *arg1 = (ITapTrade::TapAPIBillQryRsp *) 0 ;
  
  arg1 = (ITapTrade::TapAPIBillQryRsp *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryReq_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryReq *arg1 = (ITapTrade::TapAPIHisOrderQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryReq_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryReq *arg1 = (ITapTrade::TapAPIHisOrderQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryReq *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryReq_AccountAttributeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryReq *arg1 = (ITapTrade::TapAPIHisOrderQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountAttributeNo, (const char *)arg2, 21-1);
      arg1->AccountAttributeNo[21-1] = 0;
    } else {
      arg1->AccountAttributeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryReq_AccountAttributeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryReq *arg1 = (ITapTrade::TapAPIHisOrderQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryReq *)jarg1; 
  result = (char *) ((arg1)->AccountAttributeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryReq_BeginDate_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryReq *arg1 = (ITapTrade::TapAPIHisOrderQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BeginDate, (const char *)arg2, 11-1);
      arg1->BeginDate[11-1] = 0;
    } else {
      arg1->BeginDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryReq_BeginDate_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryReq *arg1 = (ITapTrade::TapAPIHisOrderQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryReq *)jarg1; 
  result = (char *) ((arg1)->BeginDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryReq_EndDate_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryReq *arg1 = (ITapTrade::TapAPIHisOrderQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->EndDate, (const char *)arg2, 11-1);
      arg1->EndDate[11-1] = 0;
    } else {
      arg1->EndDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryReq_EndDate_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryReq *arg1 = (ITapTrade::TapAPIHisOrderQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryReq *)jarg1; 
  result = (char *) ((arg1)->EndDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIHisOrderQryReq() {
  void * jresult ;
  ITapTrade::TapAPIHisOrderQryReq *result = 0 ;
  
  result = (ITapTrade::TapAPIHisOrderQryReq *)new ITapTrade::TapAPIHisOrderQryReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIHisOrderQryReq(void * jarg1) {
  ITapTrade::TapAPIHisOrderQryReq *arg1 = (ITapTrade::TapAPIHisOrderQryReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_Date_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Date, (const char *)arg2, 11-1);
      arg1->Date[11-1] = 0;
    } else {
      arg1->Date[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_Date_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (char *) ((arg1)->Date);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_ContractNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_ContractNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_StrikePrice_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice, (const char *)arg2, 11-1);
      arg1->StrikePrice[11-1] = 0;
    } else {
      arg1->StrikePrice[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_StrikePrice_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (char *) ((arg1)->StrikePrice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_CallOrPutFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_CallOrPutFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_ContractNo2_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo2, (const char *)arg2, 11-1);
      arg1->ContractNo2[11-1] = 0;
    } else {
      arg1->ContractNo2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_ContractNo2_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (char *) ((arg1)->ContractNo2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_StrikePrice2_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice2, (const char *)arg2, 11-1);
      arg1->StrikePrice2[11-1] = 0;
    } else {
      arg1->StrikePrice2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_StrikePrice2_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (char *) ((arg1)->StrikePrice2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_CallOrPutFlag2_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_CallOrPutFlag2_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIOrderTypeType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIOrderTypeType)jarg2; 
  if (arg1) (arg1)->OrderType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIOrderTypeType result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIOrderTypeType) ((arg1)->OrderType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderSource_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIOrderSourceType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIOrderSourceType)jarg2; 
  if (arg1) (arg1)->OrderSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderSource_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIOrderSourceType result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIOrderSourceType) ((arg1)->OrderSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_TimeInForce_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPITimeInForceType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPITimeInForceType)jarg2; 
  if (arg1) (arg1)->TimeInForce = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_TimeInForce_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPITimeInForceType result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPITimeInForceType) ((arg1)->TimeInForce);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_ExpireTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExpireTime, (const char *)arg2, 20-1);
      arg1->ExpireTime[20-1] = 0;
    } else {
      arg1->ExpireTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_ExpireTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (char *) ((arg1)->ExpireTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_IsRiskOrder_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsRiskOrder = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_IsRiskOrder_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsRiskOrder);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderSide_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPISideType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPISideType)jarg2; 
  if (arg1) (arg1)->OrderSide = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderSide_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPISideType result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPISideType) ((arg1)->OrderSide);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_PositionEffect_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIPositionEffectType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIPositionEffectType)jarg2; 
  if (arg1) (arg1)->PositionEffect = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_PositionEffect_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIPositionEffectType result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIPositionEffectType) ((arg1)->PositionEffect);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_PositionEffect2_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIPositionEffectType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIPositionEffectType)jarg2; 
  if (arg1) (arg1)->PositionEffect2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_PositionEffect2_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIPositionEffectType result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIPositionEffectType) ((arg1)->PositionEffect2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_InquiryNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InquiryNo, (const char *)arg2, 51-1);
      arg1->InquiryNo[51-1] = 0;
    } else {
      arg1->InquiryNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_InquiryNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (char *) ((arg1)->InquiryNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_HedgeFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIHedgeFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_HedgeFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIHedgeFlagType result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderPrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OrderPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderPrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->OrderPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderPrice2_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OrderPrice2 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderPrice2_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->OrderPrice2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_StopPrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->StopPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_StopPrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->StopPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->OrderQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderMinQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderMinQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderMinQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->OrderMinQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderCanceledQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderCanceledQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderCanceledQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->OrderCanceledQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_RefInt_set(void * jarg1, int jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIINT32)jarg2; 
  if (arg1) (arg1)->RefInt = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_RefInt_get(void * jarg1) {
  int jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIINT32) ((arg1)->RefInt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_RefDouble_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->RefDouble = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_RefDouble_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->RefDouble);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_RefString_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RefString, (const char *)arg2, 51-1);
      arg1->RefString[51-1] = 0;
    } else {
      arg1->RefString[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_RefString_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (char *) ((arg1)->RefString);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_ServerFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPICHAR arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPICHAR)jarg2; 
  if (arg1) (arg1)->ServerFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_ServerFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPICHAR result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPICHAR) ((arg1)->ServerFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderNo, (const char *)arg2, 21-1);
      arg1->OrderNo[21-1] = 0;
    } else {
      arg1->OrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (char *) ((arg1)->OrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderStreamID_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderStreamID = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderStreamID_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->OrderStreamID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_UpperNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperNo, (const char *)arg2, 11-1);
      arg1->UpperNo[11-1] = 0;
    } else {
      arg1->UpperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_UpperNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (char *) ((arg1)->UpperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_UpperChannelNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperChannelNo, (const char *)arg2, 11-1);
      arg1->UpperChannelNo[11-1] = 0;
    } else {
      arg1->UpperChannelNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_UpperChannelNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (char *) ((arg1)->UpperChannelNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderLocalNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalNo, (const char *)arg2, 21-1);
      arg1->OrderLocalNo[21-1] = 0;
    } else {
      arg1->OrderLocalNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderLocalNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (char *) ((arg1)->OrderLocalNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_UpperStreamID_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->UpperStreamID = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_UpperStreamID_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->UpperStreamID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderSystemNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSystemNo, (const char *)arg2, 51-1);
      arg1->OrderSystemNo[51-1] = 0;
    } else {
      arg1->OrderSystemNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderSystemNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (char *) ((arg1)->OrderSystemNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderExchangeSystemNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderExchangeSystemNo, (const char *)arg2, 51-1);
      arg1->OrderExchangeSystemNo[51-1] = 0;
    } else {
      arg1->OrderExchangeSystemNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderExchangeSystemNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (char *) ((arg1)->OrderExchangeSystemNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderParentSystemNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderParentSystemNo, (const char *)arg2, 51-1);
      arg1->OrderParentSystemNo[51-1] = 0;
    } else {
      arg1->OrderParentSystemNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderParentSystemNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (char *) ((arg1)->OrderParentSystemNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderInsertUserNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderInsertUserNo, (const char *)arg2, 21-1);
      arg1->OrderInsertUserNo[21-1] = 0;
    } else {
      arg1->OrderInsertUserNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderInsertUserNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (char *) ((arg1)->OrderInsertUserNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderInsertTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderInsertTime, (const char *)arg2, 20-1);
      arg1->OrderInsertTime[20-1] = 0;
    } else {
      arg1->OrderInsertTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderInsertTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (char *) ((arg1)->OrderInsertTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderCommandUserNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderCommandUserNo, (const char *)arg2, 21-1);
      arg1->OrderCommandUserNo[21-1] = 0;
    } else {
      arg1->OrderCommandUserNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderCommandUserNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (char *) ((arg1)->OrderCommandUserNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderUpdateUserNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderUpdateUserNo, (const char *)arg2, 21-1);
      arg1->OrderUpdateUserNo[21-1] = 0;
    } else {
      arg1->OrderUpdateUserNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderUpdateUserNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (char *) ((arg1)->OrderUpdateUserNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderUpdateTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderUpdateTime, (const char *)arg2, 20-1);
      arg1->OrderUpdateTime[20-1] = 0;
    } else {
      arg1->OrderUpdateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderUpdateTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (char *) ((arg1)->OrderUpdateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderState_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIOrderStateType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIOrderStateType)jarg2; 
  if (arg1) (arg1)->OrderState = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderState_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIOrderStateType result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIOrderStateType) ((arg1)->OrderState);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderMatchPrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OrderMatchPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderMatchPrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->OrderMatchPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderMatchPrice2_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OrderMatchPrice2 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderMatchPrice2_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->OrderMatchPrice2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderMatchQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderMatchQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderMatchQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->OrderMatchQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderMatchQty2_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderMatchQty2 = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_OrderMatchQty2_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->OrderMatchQty2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_ErrorCode_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->ErrorCode = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_ErrorCode_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->ErrorCode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_ErrorText_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorText, (const char *)arg2, 51-1);
      arg1->ErrorText[51-1] = 0;
    } else {
      arg1->ErrorText[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_ErrorText_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (char *) ((arg1)->ErrorText);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_IsBackInput_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsBackInput = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_IsBackInput_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsBackInput);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_IsDeleted_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsDeleted = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_IsDeleted_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsDeleted);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_IsAddOne_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsAddOne = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_IsAddOne_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsAddOne);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_AddOneIsValid_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->AddOneIsValid = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_AddOneIsValid_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->AddOneIsValid);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_MinClipSize_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->MinClipSize = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_MinClipSize_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->MinClipSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_MaxClipSize_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->MaxClipSize = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_MaxClipSize_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->MaxClipSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_LicenseNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LicenseNo, (const char *)arg2, 51-1);
      arg1->LicenseNo[51-1] = 0;
    } else {
      arg1->LicenseNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_LicenseNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (char *) ((arg1)->LicenseNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_TacticsType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPITacticsTypeType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPITacticsTypeType)jarg2; 
  if (arg1) (arg1)->TacticsType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_TacticsType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPITacticsTypeType result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPITacticsTypeType) ((arg1)->TacticsType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_TriggerCondition_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPITriggerConditionType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPITriggerConditionType)jarg2; 
  if (arg1) (arg1)->TriggerCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_TriggerCondition_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPITriggerConditionType result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPITriggerConditionType) ((arg1)->TriggerCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_TriggerPriceType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPITriggerPriceTypeType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPITriggerPriceTypeType)jarg2; 
  if (arg1) (arg1)->TriggerPriceType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisOrderQryRsp_TriggerPriceType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  ITapTrade::TAPITriggerPriceTypeType result;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  result = (ITapTrade::TAPITriggerPriceTypeType) ((arg1)->TriggerPriceType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIHisOrderQryRsp() {
  void * jresult ;
  ITapTrade::TapAPIHisOrderQryRsp *result = 0 ;
  
  result = (ITapTrade::TapAPIHisOrderQryRsp *)new ITapTrade::TapAPIHisOrderQryRsp();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIHisOrderQryRsp(void * jarg1) {
  ITapTrade::TapAPIHisOrderQryRsp *arg1 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryReq_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisMatchQryReq *arg1 = (ITapTrade::TapAPIHisMatchQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisMatchQryReq_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisMatchQryReq *arg1 = (ITapTrade::TapAPIHisMatchQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryReq *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryReq_AccountAttributeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisMatchQryReq *arg1 = (ITapTrade::TapAPIHisMatchQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountAttributeNo, (const char *)arg2, 21-1);
      arg1->AccountAttributeNo[21-1] = 0;
    } else {
      arg1->AccountAttributeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisMatchQryReq_AccountAttributeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisMatchQryReq *arg1 = (ITapTrade::TapAPIHisMatchQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryReq *)jarg1; 
  result = (char *) ((arg1)->AccountAttributeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryReq_BeginDate_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisMatchQryReq *arg1 = (ITapTrade::TapAPIHisMatchQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BeginDate, (const char *)arg2, 11-1);
      arg1->BeginDate[11-1] = 0;
    } else {
      arg1->BeginDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisMatchQryReq_BeginDate_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisMatchQryReq *arg1 = (ITapTrade::TapAPIHisMatchQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryReq *)jarg1; 
  result = (char *) ((arg1)->BeginDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryReq_EndDate_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisMatchQryReq *arg1 = (ITapTrade::TapAPIHisMatchQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->EndDate, (const char *)arg2, 11-1);
      arg1->EndDate[11-1] = 0;
    } else {
      arg1->EndDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisMatchQryReq_EndDate_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisMatchQryReq *arg1 = (ITapTrade::TapAPIHisMatchQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryReq *)jarg1; 
  result = (char *) ((arg1)->EndDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryReq_CountType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisMatchQryReq *arg1 = (ITapTrade::TapAPIHisMatchQryReq *) 0 ;
  ITapTrade::TAPICHAR arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryReq *)jarg1; 
  arg2 = (ITapTrade::TAPICHAR)jarg2; 
  if (arg1) (arg1)->CountType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisMatchQryReq_CountType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisMatchQryReq *arg1 = (ITapTrade::TapAPIHisMatchQryReq *) 0 ;
  ITapTrade::TAPICHAR result;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryReq *)jarg1; 
  result = (ITapTrade::TAPICHAR) ((arg1)->CountType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIHisMatchQryReq() {
  void * jresult ;
  ITapTrade::TapAPIHisMatchQryReq *result = 0 ;
  
  result = (ITapTrade::TapAPIHisMatchQryReq *)new ITapTrade::TapAPIHisMatchQryReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIHisMatchQryReq(void * jarg1) {
  ITapTrade::TapAPIHisMatchQryReq *arg1 = (ITapTrade::TapAPIHisMatchQryReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_SettleDate_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SettleDate, (const char *)arg2, 11-1);
      arg1->SettleDate[11-1] = 0;
    } else {
      arg1->SettleDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_SettleDate_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (char *) ((arg1)->SettleDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_TradeDate_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 11-1);
      arg1->TradeDate[11-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_TradeDate_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_ContractNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_ContractNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_StrikePrice_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice, (const char *)arg2, 11-1);
      arg1->StrikePrice[11-1] = 0;
    } else {
      arg1->StrikePrice[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_StrikePrice_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (char *) ((arg1)->StrikePrice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_CallOrPutFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_CallOrPutFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_MatchSource_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIMatchSourceType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIMatchSourceType)jarg2; 
  if (arg1) (arg1)->MatchSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_MatchSource_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIMatchSourceType result;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (ITapTrade::TAPIMatchSourceType) ((arg1)->MatchSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_MatchSide_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPISideType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPISideType)jarg2; 
  if (arg1) (arg1)->MatchSide = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_MatchSide_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPISideType result;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (ITapTrade::TAPISideType) ((arg1)->MatchSide);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_PositionEffect_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIPositionEffectType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIPositionEffectType)jarg2; 
  if (arg1) (arg1)->PositionEffect = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_PositionEffect_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIPositionEffectType result;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (ITapTrade::TAPIPositionEffectType) ((arg1)->PositionEffect);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_HedgeFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIHedgeFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_HedgeFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIHedgeFlagType result;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (ITapTrade::TAPIHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_MatchPrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->MatchPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_MatchPrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->MatchPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_MatchQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->MatchQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_MatchQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->MatchQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_OrderNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderNo, (const char *)arg2, 21-1);
      arg1->OrderNo[21-1] = 0;
    } else {
      arg1->OrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_OrderNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (char *) ((arg1)->OrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_MatchNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MatchNo, (const char *)arg2, 21-1);
      arg1->MatchNo[21-1] = 0;
    } else {
      arg1->MatchNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_MatchNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (char *) ((arg1)->MatchNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_MatchStreamID_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->MatchStreamID = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_MatchStreamID_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->MatchStreamID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_UpperNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperNo, (const char *)arg2, 11-1);
      arg1->UpperNo[11-1] = 0;
    } else {
      arg1->UpperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_UpperNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (char *) ((arg1)->UpperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_MatchCmbNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MatchCmbNo, (const char *)arg2, 21-1);
      arg1->MatchCmbNo[21-1] = 0;
    } else {
      arg1->MatchCmbNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_MatchCmbNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (char *) ((arg1)->MatchCmbNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_ExchangeMatchNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeMatchNo, (const char *)arg2, 71-1);
      arg1->ExchangeMatchNo[71-1] = 0;
    } else {
      arg1->ExchangeMatchNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_ExchangeMatchNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (char *) ((arg1)->ExchangeMatchNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_MatchUpperStreamID_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->MatchUpperStreamID = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_MatchUpperStreamID_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->MatchUpperStreamID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_CommodityCurrencyGroup_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityCurrencyGroup, (const char *)arg2, 11-1);
      arg1->CommodityCurrencyGroup[11-1] = 0;
    } else {
      arg1->CommodityCurrencyGroup[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_CommodityCurrencyGroup_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (char *) ((arg1)->CommodityCurrencyGroup);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_CommodityCurrency_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityCurrency, (const char *)arg2, 11-1);
      arg1->CommodityCurrency[11-1] = 0;
    } else {
      arg1->CommodityCurrency[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_CommodityCurrency_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (char *) ((arg1)->CommodityCurrency);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_Turnover_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->Turnover = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_Turnover_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->Turnover);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_PremiumIncome_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PremiumIncome = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_PremiumIncome_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->PremiumIncome);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_PremiumPay_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PremiumPay = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_PremiumPay_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->PremiumPay);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_AccountFee_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->AccountFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_AccountFee_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->AccountFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_AccountFeeCurrencyGroup_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountFeeCurrencyGroup, (const char *)arg2, 11-1);
      arg1->AccountFeeCurrencyGroup[11-1] = 0;
    } else {
      arg1->AccountFeeCurrencyGroup[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_AccountFeeCurrencyGroup_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (char *) ((arg1)->AccountFeeCurrencyGroup);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_AccountFeeCurrency_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountFeeCurrency, (const char *)arg2, 11-1);
      arg1->AccountFeeCurrency[11-1] = 0;
    } else {
      arg1->AccountFeeCurrency[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_AccountFeeCurrency_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (char *) ((arg1)->AccountFeeCurrency);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_IsManualFee_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsManualFee = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_IsManualFee_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsManualFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_AccountOtherFee_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->AccountOtherFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_AccountOtherFee_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->AccountOtherFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_UpperFee_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->UpperFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_UpperFee_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->UpperFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_UpperFeeCurrencyGroup_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperFeeCurrencyGroup, (const char *)arg2, 11-1);
      arg1->UpperFeeCurrencyGroup[11-1] = 0;
    } else {
      arg1->UpperFeeCurrencyGroup[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_UpperFeeCurrencyGroup_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (char *) ((arg1)->UpperFeeCurrencyGroup);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_UpperFeeCurrency_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperFeeCurrency, (const char *)arg2, 11-1);
      arg1->UpperFeeCurrency[11-1] = 0;
    } else {
      arg1->UpperFeeCurrency[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_UpperFeeCurrency_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (char *) ((arg1)->UpperFeeCurrency);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_IsUpperManualFee_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsUpperManualFee = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_IsUpperManualFee_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsUpperManualFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_UpperOtherFee_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->UpperOtherFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_UpperOtherFee_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->UpperOtherFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_MatchDateTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MatchDateTime, (const char *)arg2, 20-1);
      arg1->MatchDateTime[20-1] = 0;
    } else {
      arg1->MatchDateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_MatchDateTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (char *) ((arg1)->MatchDateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_UpperMatchDateTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperMatchDateTime, (const char *)arg2, 20-1);
      arg1->UpperMatchDateTime[20-1] = 0;
    } else {
      arg1->UpperMatchDateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_UpperMatchDateTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (char *) ((arg1)->UpperMatchDateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_CloseProfit_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->CloseProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_CloseProfit_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->CloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_ClosePrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->ClosePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_ClosePrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->ClosePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_CloseQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->CloseQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_CloseQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->CloseQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_SettleGroupNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SettleGroupNo, (const char *)arg2, 11-1);
      arg1->SettleGroupNo[11-1] = 0;
    } else {
      arg1->SettleGroupNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_SettleGroupNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (char *) ((arg1)->SettleGroupNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_OperatorNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperatorNo, (const char *)arg2, 21-1);
      arg1->OperatorNo[21-1] = 0;
    } else {
      arg1->OperatorNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_OperatorNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (char *) ((arg1)->OperatorNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_OperateTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperateTime, (const char *)arg2, 20-1);
      arg1->OperateTime[20-1] = 0;
    } else {
      arg1->OperateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisMatchQryRsp_OperateTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  result = (char *) ((arg1)->OperateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIHisMatchQryRsp() {
  void * jresult ;
  ITapTrade::TapAPIHisMatchQryRsp *result = 0 ;
  
  result = (ITapTrade::TapAPIHisMatchQryRsp *)new ITapTrade::TapAPIHisMatchQryRsp();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIHisMatchQryRsp(void * jarg1) {
  ITapTrade::TapAPIHisMatchQryRsp *arg1 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  
  arg1 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderProcessQryReq_Date_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderProcessQryReq *arg1 = (ITapTrade::TapAPIHisOrderProcessQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderProcessQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Date, (const char *)arg2, 11-1);
      arg1->Date[11-1] = 0;
    } else {
      arg1->Date[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderProcessQryReq_Date_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderProcessQryReq *arg1 = (ITapTrade::TapAPIHisOrderProcessQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderProcessQryReq *)jarg1; 
  result = (char *) ((arg1)->Date);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisOrderProcessQryReq_OrderNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisOrderProcessQryReq *arg1 = (ITapTrade::TapAPIHisOrderProcessQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderProcessQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderNo, (const char *)arg2, 21-1);
      arg1->OrderNo[21-1] = 0;
    } else {
      arg1->OrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisOrderProcessQryReq_OrderNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisOrderProcessQryReq *arg1 = (ITapTrade::TapAPIHisOrderProcessQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderProcessQryReq *)jarg1; 
  result = (char *) ((arg1)->OrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIHisOrderProcessQryReq() {
  void * jresult ;
  ITapTrade::TapAPIHisOrderProcessQryReq *result = 0 ;
  
  result = (ITapTrade::TapAPIHisOrderProcessQryReq *)new ITapTrade::TapAPIHisOrderProcessQryReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIHisOrderProcessQryReq(void * jarg1) {
  ITapTrade::TapAPIHisOrderProcessQryReq *arg1 = (ITapTrade::TapAPIHisOrderProcessQryReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIHisOrderProcessQryReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT char SWIGSTDCALL CSharp_SettleFlag_AutoSettle_get() {
  char jresult ;
  ITapTrade::TAPISettleFlagType result;
  
  result = (ITapTrade::TAPISettleFlagType)(ITapTrade::TAPISettleFlagType)ITapTrade::SettleFlag_AutoSettle;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_SettleFlagh_Manual_get() {
  char jresult ;
  ITapTrade::TAPISettleFlagType result;
  
  result = (ITapTrade::TAPISettleFlagType)(ITapTrade::TAPISettleFlagType)ITapTrade::SettleFlagh_Manual;
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryReq_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisPositionQryReq *arg1 = (ITapTrade::TapAPIHisPositionQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisPositionQryReq_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisPositionQryReq *arg1 = (ITapTrade::TapAPIHisPositionQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryReq *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryReq_Date_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisPositionQryReq *arg1 = (ITapTrade::TapAPIHisPositionQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Date, (const char *)arg2, 11-1);
      arg1->Date[11-1] = 0;
    } else {
      arg1->Date[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisPositionQryReq_Date_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisPositionQryReq *arg1 = (ITapTrade::TapAPIHisPositionQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryReq *)jarg1; 
  result = (char *) ((arg1)->Date);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryReq_SettleFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisPositionQryReq *arg1 = (ITapTrade::TapAPIHisPositionQryReq *) 0 ;
  ITapTrade::TAPISettleFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryReq *)jarg1; 
  arg2 = (ITapTrade::TAPISettleFlagType)jarg2; 
  if (arg1) (arg1)->SettleFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisPositionQryReq_SettleFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisPositionQryReq *arg1 = (ITapTrade::TapAPIHisPositionQryReq *) 0 ;
  ITapTrade::TAPISettleFlagType result;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryReq *)jarg1; 
  result = (ITapTrade::TAPISettleFlagType) ((arg1)->SettleFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIHisPositionQryReq() {
  void * jresult ;
  ITapTrade::TapAPIHisPositionQryReq *result = 0 ;
  
  result = (ITapTrade::TapAPIHisPositionQryReq *)new ITapTrade::TapAPIHisPositionQryReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIHisPositionQryReq(void * jarg1) {
  ITapTrade::TapAPIHisPositionQryReq *arg1 = (ITapTrade::TapAPIHisPositionQryReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_SettleDate_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SettleDate, (const char *)arg2, 11-1);
      arg1->SettleDate[11-1] = 0;
    } else {
      arg1->SettleDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_SettleDate_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (char *) ((arg1)->SettleDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_OpenDate_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OpenDate, (const char *)arg2, 11-1);
      arg1->OpenDate[11-1] = 0;
    } else {
      arg1->OpenDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_OpenDate_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (char *) ((arg1)->OpenDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_ContractNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_ContractNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_StrikePrice_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice, (const char *)arg2, 11-1);
      arg1->StrikePrice[11-1] = 0;
    } else {
      arg1->StrikePrice[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_StrikePrice_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (char *) ((arg1)->StrikePrice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_CallOrPutFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_CallOrPutFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_MatchSide_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPISideType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPISideType)jarg2; 
  if (arg1) (arg1)->MatchSide = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_MatchSide_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPISideType result;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (ITapTrade::TAPISideType) ((arg1)->MatchSide);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_HedgeFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPIHedgeFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_HedgeFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPIHedgeFlagType result;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (ITapTrade::TAPIHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_PositionPrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PositionPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_PositionPrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->PositionPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_PositionQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->PositionQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_PositionQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->PositionQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_OrderNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderNo, (const char *)arg2, 21-1);
      arg1->OrderNo[21-1] = 0;
    } else {
      arg1->OrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_OrderNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (char *) ((arg1)->OrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_PositionNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->PositionNo, (const char *)arg2, 71-1);
      arg1->PositionNo[71-1] = 0;
    } else {
      arg1->PositionNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_PositionNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (char *) ((arg1)->PositionNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_UpperNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperNo, (const char *)arg2, 11-1);
      arg1->UpperNo[11-1] = 0;
    } else {
      arg1->UpperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_UpperNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (char *) ((arg1)->UpperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_CurrencyGroup_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyGroup, (const char *)arg2, 11-1);
      arg1->CurrencyGroup[11-1] = 0;
    } else {
      arg1->CurrencyGroup[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_CurrencyGroup_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (char *) ((arg1)->CurrencyGroup);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_Currency_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Currency, (const char *)arg2, 11-1);
      arg1->Currency[11-1] = 0;
    } else {
      arg1->Currency[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_Currency_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (char *) ((arg1)->Currency);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_PreSettlePrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PreSettlePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_PreSettlePrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->PreSettlePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_SettlePrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->SettlePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_SettlePrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->SettlePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_PositionDProfit_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PositionDProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_PositionDProfit_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->PositionDProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_LMEPositionProfit_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->LMEPositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_LMEPositionProfit_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->LMEPositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_OptionMarketValue_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OptionMarketValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_OptionMarketValue_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->OptionMarketValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_AccountInitialMargin_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->AccountInitialMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_AccountInitialMargin_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->AccountInitialMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_AccountMaintenanceMargin_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->AccountMaintenanceMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_AccountMaintenanceMargin_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->AccountMaintenanceMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_UpperInitialMargin_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->UpperInitialMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_UpperInitialMargin_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->UpperInitialMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_UpperMaintenanceMargin_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->UpperMaintenanceMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_UpperMaintenanceMargin_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->UpperMaintenanceMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_SettleGroupNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SettleGroupNo, (const char *)arg2, 11-1);
      arg1->SettleGroupNo[11-1] = 0;
    } else {
      arg1->SettleGroupNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisPositionQryRsp_SettleGroupNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  result = (char *) ((arg1)->SettleGroupNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIHisPositionQryRsp() {
  void * jresult ;
  ITapTrade::TapAPIHisPositionQryRsp *result = 0 ;
  
  result = (ITapTrade::TapAPIHisPositionQryRsp *)new ITapTrade::TapAPIHisPositionQryRsp();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIHisPositionQryRsp(void * jarg1) {
  ITapTrade::TapAPIHisPositionQryRsp *arg1 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  
  arg1 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryReq_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisDeliveryQryReq *arg1 = (ITapTrade::TapAPIHisDeliveryQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisDeliveryQryReq_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisDeliveryQryReq *arg1 = (ITapTrade::TapAPIHisDeliveryQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryReq *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryReq_AccountAttributeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisDeliveryQryReq *arg1 = (ITapTrade::TapAPIHisDeliveryQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountAttributeNo, (const char *)arg2, 21-1);
      arg1->AccountAttributeNo[21-1] = 0;
    } else {
      arg1->AccountAttributeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisDeliveryQryReq_AccountAttributeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisDeliveryQryReq *arg1 = (ITapTrade::TapAPIHisDeliveryQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryReq *)jarg1; 
  result = (char *) ((arg1)->AccountAttributeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryReq_BeginDate_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisDeliveryQryReq *arg1 = (ITapTrade::TapAPIHisDeliveryQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BeginDate, (const char *)arg2, 11-1);
      arg1->BeginDate[11-1] = 0;
    } else {
      arg1->BeginDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisDeliveryQryReq_BeginDate_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisDeliveryQryReq *arg1 = (ITapTrade::TapAPIHisDeliveryQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryReq *)jarg1; 
  result = (char *) ((arg1)->BeginDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryReq_EndDate_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisDeliveryQryReq *arg1 = (ITapTrade::TapAPIHisDeliveryQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->EndDate, (const char *)arg2, 11-1);
      arg1->EndDate[11-1] = 0;
    } else {
      arg1->EndDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisDeliveryQryReq_EndDate_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisDeliveryQryReq *arg1 = (ITapTrade::TapAPIHisDeliveryQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryReq *)jarg1; 
  result = (char *) ((arg1)->EndDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryReq_CountType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisDeliveryQryReq *arg1 = (ITapTrade::TapAPIHisDeliveryQryReq *) 0 ;
  ITapTrade::TAPICHAR arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryReq *)jarg1; 
  arg2 = (ITapTrade::TAPICHAR)jarg2; 
  if (arg1) (arg1)->CountType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisDeliveryQryReq_CountType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisDeliveryQryReq *arg1 = (ITapTrade::TapAPIHisDeliveryQryReq *) 0 ;
  ITapTrade::TAPICHAR result;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryReq *)jarg1; 
  result = (ITapTrade::TAPICHAR) ((arg1)->CountType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIHisDeliveryQryReq() {
  void * jresult ;
  ITapTrade::TapAPIHisDeliveryQryReq *result = 0 ;
  
  result = (ITapTrade::TapAPIHisDeliveryQryReq *)new ITapTrade::TapAPIHisDeliveryQryReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIHisDeliveryQryReq(void * jarg1) {
  ITapTrade::TapAPIHisDeliveryQryReq *arg1 = (ITapTrade::TapAPIHisDeliveryQryReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_DeliveryDate_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeliveryDate, (const char *)arg2, 11-1);
      arg1->DeliveryDate[11-1] = 0;
    } else {
      arg1->DeliveryDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_DeliveryDate_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (char *) ((arg1)->DeliveryDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_OpenDate_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OpenDate, (const char *)arg2, 11-1);
      arg1->OpenDate[11-1] = 0;
    } else {
      arg1->OpenDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_OpenDate_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (char *) ((arg1)->OpenDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_ContractNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_ContractNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_StrikePrice_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice, (const char *)arg2, 11-1);
      arg1->StrikePrice[11-1] = 0;
    } else {
      arg1->StrikePrice[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_StrikePrice_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (char *) ((arg1)->StrikePrice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_CallOrPutFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_CallOrPutFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_MatchSource_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIMatchSourceType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIMatchSourceType)jarg2; 
  if (arg1) (arg1)->MatchSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_MatchSource_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIMatchSourceType result;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (ITapTrade::TAPIMatchSourceType) ((arg1)->MatchSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_OpenSide_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPISideType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPISideType)jarg2; 
  if (arg1) (arg1)->OpenSide = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_OpenSide_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPISideType result;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (ITapTrade::TAPISideType) ((arg1)->OpenSide);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_OpenPrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OpenPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_OpenPrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->OpenPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_DeliveryPrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->DeliveryPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_DeliveryPrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->DeliveryPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_DeliveryQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->DeliveryQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_DeliveryQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->DeliveryQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_FrozenQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->FrozenQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_FrozenQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->FrozenQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_OpenNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OpenNo, (const char *)arg2, 21-1);
      arg1->OpenNo[21-1] = 0;
    } else {
      arg1->OpenNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_OpenNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (char *) ((arg1)->OpenNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_UpperNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperNo, (const char *)arg2, 11-1);
      arg1->UpperNo[11-1] = 0;
    } else {
      arg1->UpperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_UpperNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (char *) ((arg1)->UpperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_CommodityCurrencyGroupy_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityCurrencyGroupy, (const char *)arg2, 11-1);
      arg1->CommodityCurrencyGroupy[11-1] = 0;
    } else {
      arg1->CommodityCurrencyGroupy[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_CommodityCurrencyGroupy_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (char *) ((arg1)->CommodityCurrencyGroupy);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_CommodityCurrency_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityCurrency, (const char *)arg2, 11-1);
      arg1->CommodityCurrency[11-1] = 0;
    } else {
      arg1->CommodityCurrency[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_CommodityCurrency_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (char *) ((arg1)->CommodityCurrency);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_PreSettlePrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->PreSettlePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_PreSettlePrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->PreSettlePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_DeliveryProfit_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->DeliveryProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_DeliveryProfit_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->DeliveryProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_AccountFrozenInitialMargin_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->AccountFrozenInitialMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_AccountFrozenInitialMargin_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->AccountFrozenInitialMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_AccountFrozenMaintenanceMargin_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->AccountFrozenMaintenanceMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_AccountFrozenMaintenanceMargin_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->AccountFrozenMaintenanceMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_UpperFrozenInitialMargin_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->UpperFrozenInitialMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_UpperFrozenInitialMargin_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->UpperFrozenInitialMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_UpperFrozenMaintenanceMargin_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->UpperFrozenMaintenanceMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_UpperFrozenMaintenanceMargin_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->UpperFrozenMaintenanceMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_AccountFeeCurrencyGroup_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountFeeCurrencyGroup, (const char *)arg2, 11-1);
      arg1->AccountFeeCurrencyGroup[11-1] = 0;
    } else {
      arg1->AccountFeeCurrencyGroup[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_AccountFeeCurrencyGroup_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (char *) ((arg1)->AccountFeeCurrencyGroup);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_AccountFeeCurrency_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountFeeCurrency, (const char *)arg2, 11-1);
      arg1->AccountFeeCurrency[11-1] = 0;
    } else {
      arg1->AccountFeeCurrency[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_AccountFeeCurrency_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (char *) ((arg1)->AccountFeeCurrency);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_AccountDeliveryFee_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->AccountDeliveryFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_AccountDeliveryFee_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->AccountDeliveryFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_UpperFeeCurrencyGroup_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperFeeCurrencyGroup, (const char *)arg2, 11-1);
      arg1->UpperFeeCurrencyGroup[11-1] = 0;
    } else {
      arg1->UpperFeeCurrencyGroup[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_UpperFeeCurrencyGroup_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (char *) ((arg1)->UpperFeeCurrencyGroup);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_UpperFeeCurrency_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperFeeCurrency, (const char *)arg2, 11-1);
      arg1->UpperFeeCurrency[11-1] = 0;
    } else {
      arg1->UpperFeeCurrency[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_UpperFeeCurrency_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (char *) ((arg1)->UpperFeeCurrency);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_UpperDeliveryFee_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->UpperDeliveryFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_UpperDeliveryFee_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->UpperDeliveryFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_DeliveryMode_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIDeliveryModeType arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIDeliveryModeType)jarg2; 
  if (arg1) (arg1)->DeliveryMode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_DeliveryMode_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  ITapTrade::TAPIDeliveryModeType result;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (ITapTrade::TAPIDeliveryModeType) ((arg1)->DeliveryMode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_OperatorNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperatorNo, (const char *)arg2, 21-1);
      arg1->OperatorNo[21-1] = 0;
    } else {
      arg1->OperatorNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_OperatorNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (char *) ((arg1)->OperatorNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_OperateTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperateTime, (const char *)arg2, 20-1);
      arg1->OperateTime[20-1] = 0;
    } else {
      arg1->OperateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_OperateTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (char *) ((arg1)->OperateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_SettleGourpNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SettleGourpNo, (const char *)arg2, 21-1);
      arg1->SettleGourpNo[21-1] = 0;
    } else {
      arg1->SettleGourpNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIHisDeliveryQryRsp_SettleGourpNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  result = (char *) ((arg1)->SettleGourpNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIHisDeliveryQryRsp() {
  void * jresult ;
  ITapTrade::TapAPIHisDeliveryQryRsp *result = 0 ;
  
  result = (ITapTrade::TapAPIHisDeliveryQryRsp *)new ITapTrade::TapAPIHisDeliveryQryRsp();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIHisDeliveryQryRsp(void * jarg1) {
  ITapTrade::TapAPIHisDeliveryQryRsp *arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  
  arg1 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryReq_SerialID_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIAccountCashAdjustQryReq *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryReq *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryReq *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->SerialID = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryReq_SerialID_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIAccountCashAdjustQryReq *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryReq *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryReq *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->SerialID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryReq_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountCashAdjustQryReq *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryReq_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountCashAdjustQryReq *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryReq *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryReq_AccountAttributeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountCashAdjustQryReq *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountAttributeNo, (const char *)arg2, 21-1);
      arg1->AccountAttributeNo[21-1] = 0;
    } else {
      arg1->AccountAttributeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryReq_AccountAttributeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountCashAdjustQryReq *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryReq *)jarg1; 
  result = (char *) ((arg1)->AccountAttributeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryReq_BeginDate_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountCashAdjustQryReq *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BeginDate, (const char *)arg2, 11-1);
      arg1->BeginDate[11-1] = 0;
    } else {
      arg1->BeginDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryReq_BeginDate_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountCashAdjustQryReq *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryReq *)jarg1; 
  result = (char *) ((arg1)->BeginDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryReq_EndDate_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountCashAdjustQryReq *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->EndDate, (const char *)arg2, 11-1);
      arg1->EndDate[11-1] = 0;
    } else {
      arg1->EndDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryReq_EndDate_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountCashAdjustQryReq *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryReq *)jarg1; 
  result = (char *) ((arg1)->EndDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIAccountCashAdjustQryReq() {
  void * jresult ;
  ITapTrade::TapAPIAccountCashAdjustQryReq *result = 0 ;
  
  result = (ITapTrade::TapAPIAccountCashAdjustQryReq *)new ITapTrade::TapAPIAccountCashAdjustQryReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIAccountCashAdjustQryReq(void * jarg1) {
  ITapTrade::TapAPIAccountCashAdjustQryReq *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_Date_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Date, (const char *)arg2, 11-1);
      arg1->Date[11-1] = 0;
    } else {
      arg1->Date[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_Date_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  result = (char *) ((arg1)->Date);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_CashAdjustType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  ITapTrade::TAPICashAdjustTypeType arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPICashAdjustTypeType)jarg2; 
  if (arg1) (arg1)->CashAdjustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_CashAdjustType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  ITapTrade::TAPICashAdjustTypeType result;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  result = (ITapTrade::TAPICashAdjustTypeType) ((arg1)->CashAdjustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_CurrencyGroupNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyGroupNo, (const char *)arg2, 11-1);
      arg1->CurrencyGroupNo[11-1] = 0;
    } else {
      arg1->CurrencyGroupNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_CurrencyGroupNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  result = (char *) ((arg1)->CurrencyGroupNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_CurrencyNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyNo, (const char *)arg2, 11-1);
      arg1->CurrencyNo[11-1] = 0;
    } else {
      arg1->CurrencyNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_CurrencyNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  result = (char *) ((arg1)->CurrencyNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_CashAdjustValue_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->CashAdjustValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_CashAdjustValue_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->CashAdjustValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_CashAdjustRemark_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CashAdjustRemark, (const char *)arg2, 101-1);
      arg1->CashAdjustRemark[101-1] = 0;
    } else {
      arg1->CashAdjustRemark[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_CashAdjustRemark_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  result = (char *) ((arg1)->CashAdjustRemark);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_OperateTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperateTime, (const char *)arg2, 20-1);
      arg1->OperateTime[20-1] = 0;
    } else {
      arg1->OperateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_OperateTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  result = (char *) ((arg1)->OperateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_OperatorNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperatorNo, (const char *)arg2, 21-1);
      arg1->OperatorNo[21-1] = 0;
    } else {
      arg1->OperatorNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_OperatorNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  result = (char *) ((arg1)->OperatorNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_AccountBank_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountBank, (const char *)arg2, 11-1);
      arg1->AccountBank[11-1] = 0;
    } else {
      arg1->AccountBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_AccountBank_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  result = (char *) ((arg1)->AccountBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_BankAccount_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 21-1);
      arg1->BankAccount[21-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_BankAccount_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_AccountLWFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  ITapTrade::TAPIBankAccountLWFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIBankAccountLWFlagType)jarg2; 
  if (arg1) (arg1)->AccountLWFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_AccountLWFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  ITapTrade::TAPIBankAccountLWFlagType result;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  result = (ITapTrade::TAPIBankAccountLWFlagType) ((arg1)->AccountLWFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_CompanyBank_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CompanyBank, (const char *)arg2, 11-1);
      arg1->CompanyBank[11-1] = 0;
    } else {
      arg1->CompanyBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_CompanyBank_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  result = (char *) ((arg1)->CompanyBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_InternalBankAccount_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InternalBankAccount, (const char *)arg2, 21-1);
      arg1->InternalBankAccount[21-1] = 0;
    } else {
      arg1->InternalBankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_InternalBankAccount_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  result = (char *) ((arg1)->InternalBankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_CompanyLWFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  ITapTrade::TAPIBankAccountLWFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIBankAccountLWFlagType)jarg2; 
  if (arg1) (arg1)->CompanyLWFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIAccountCashAdjustQryRsp_CompanyLWFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  ITapTrade::TAPIBankAccountLWFlagType result;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  result = (ITapTrade::TAPIBankAccountLWFlagType) ((arg1)->CompanyLWFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIAccountCashAdjustQryRsp() {
  void * jresult ;
  ITapTrade::TapAPIAccountCashAdjustQryRsp *result = 0 ;
  
  result = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)new ITapTrade::TapAPIAccountCashAdjustQryRsp();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIAccountCashAdjustQryRsp(void * jarg1) {
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountFeeRentQryReq_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountFeeRentQryReq *arg1 = (ITapTrade::TapAPIAccountFeeRentQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountFeeRentQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountFeeRentQryReq_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountFeeRentQryReq *arg1 = (ITapTrade::TapAPIAccountFeeRentQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountFeeRentQryReq *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIAccountFeeRentQryReq() {
  void * jresult ;
  ITapTrade::TapAPIAccountFeeRentQryReq *result = 0 ;
  
  result = (ITapTrade::TapAPIAccountFeeRentQryReq *)new ITapTrade::TapAPIAccountFeeRentQryReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIAccountFeeRentQryReq(void * jarg1) {
  ITapTrade::TapAPIAccountFeeRentQryReq *arg1 = (ITapTrade::TapAPIAccountFeeRentQryReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountFeeRentQryReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountFeeRentQryRsp_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountFeeRentQryRsp *arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountFeeRentQryRsp_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountFeeRentQryRsp *arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountFeeRentQryRsp_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountFeeRentQryRsp *arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountFeeRentQryRsp_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountFeeRentQryRsp *arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountFeeRentQryRsp_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIAccountFeeRentQryRsp *arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIAccountFeeRentQryRsp_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIAccountFeeRentQryRsp *arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountFeeRentQryRsp_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountFeeRentQryRsp *arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountFeeRentQryRsp_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountFeeRentQryRsp *arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountFeeRentQryRsp_MatchSource_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIAccountFeeRentQryRsp *arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *) 0 ;
  ITapTrade::TAPIMatchSourceType arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIMatchSourceType)jarg2; 
  if (arg1) (arg1)->MatchSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIAccountFeeRentQryRsp_MatchSource_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIAccountFeeRentQryRsp *arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *) 0 ;
  ITapTrade::TAPIMatchSourceType result;
  
  arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *)jarg1; 
  result = (ITapTrade::TAPIMatchSourceType) ((arg1)->MatchSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountFeeRentQryRsp_CalculateMode_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIAccountFeeRentQryRsp *arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *) 0 ;
  ITapTrade::TAPICalculateModeType arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPICalculateModeType)jarg2; 
  if (arg1) (arg1)->CalculateMode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIAccountFeeRentQryRsp_CalculateMode_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIAccountFeeRentQryRsp *arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *) 0 ;
  ITapTrade::TAPICalculateModeType result;
  
  arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *)jarg1; 
  result = (ITapTrade::TAPICalculateModeType) ((arg1)->CalculateMode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountFeeRentQryRsp_CurrencyGroupNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountFeeRentQryRsp *arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyGroupNo, (const char *)arg2, 11-1);
      arg1->CurrencyGroupNo[11-1] = 0;
    } else {
      arg1->CurrencyGroupNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountFeeRentQryRsp_CurrencyGroupNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountFeeRentQryRsp *arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *)jarg1; 
  result = (char *) ((arg1)->CurrencyGroupNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountFeeRentQryRsp_CurrencyNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountFeeRentQryRsp *arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyNo, (const char *)arg2, 11-1);
      arg1->CurrencyNo[11-1] = 0;
    } else {
      arg1->CurrencyNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountFeeRentQryRsp_CurrencyNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountFeeRentQryRsp *arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *)jarg1; 
  result = (char *) ((arg1)->CurrencyNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountFeeRentQryRsp_OpenCloseFee_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIAccountFeeRentQryRsp *arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OpenCloseFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountFeeRentQryRsp_OpenCloseFee_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIAccountFeeRentQryRsp *arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->OpenCloseFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountFeeRentQryRsp_CloseTodayFee_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIAccountFeeRentQryRsp *arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->CloseTodayFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountFeeRentQryRsp_CloseTodayFee_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIAccountFeeRentQryRsp *arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->CloseTodayFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIAccountFeeRentQryRsp() {
  void * jresult ;
  ITapTrade::TapAPIAccountFeeRentQryRsp *result = 0 ;
  
  result = (ITapTrade::TapAPIAccountFeeRentQryRsp *)new ITapTrade::TapAPIAccountFeeRentQryRsp();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIAccountFeeRentQryRsp(void * jarg1) {
  ITapTrade::TapAPIAccountFeeRentQryRsp *arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *) 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountFeeRentQryRsp *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryReq_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountMarginRentQryReq *arg1 = (ITapTrade::TapAPIAccountMarginRentQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryReq_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountMarginRentQryReq *arg1 = (ITapTrade::TapAPIAccountMarginRentQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryReq *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryReq_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountMarginRentQryReq *arg1 = (ITapTrade::TapAPIAccountMarginRentQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryReq_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountMarginRentQryReq *arg1 = (ITapTrade::TapAPIAccountMarginRentQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryReq *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryReq_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIAccountMarginRentQryReq *arg1 = (ITapTrade::TapAPIAccountMarginRentQryReq *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryReq *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryReq_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIAccountMarginRentQryReq *arg1 = (ITapTrade::TapAPIAccountMarginRentQryReq *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryReq *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryReq_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountMarginRentQryReq *arg1 = (ITapTrade::TapAPIAccountMarginRentQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryReq_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountMarginRentQryReq *arg1 = (ITapTrade::TapAPIAccountMarginRentQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryReq *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIAccountMarginRentQryReq() {
  void * jresult ;
  ITapTrade::TapAPIAccountMarginRentQryReq *result = 0 ;
  
  result = (ITapTrade::TapAPIAccountMarginRentQryReq *)new ITapTrade::TapAPIAccountMarginRentQryReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIAccountMarginRentQryReq(void * jarg1) {
  ITapTrade::TapAPIAccountMarginRentQryReq *arg1 = (ITapTrade::TapAPIAccountMarginRentQryReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_ContractNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_ContractNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_StrikePrice_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice, (const char *)arg2, 11-1);
      arg1->StrikePrice[11-1] = 0;
    } else {
      arg1->StrikePrice[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_StrikePrice_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  result = (char *) ((arg1)->StrikePrice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_CallOrPutFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_CallOrPutFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_CalculateMode_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  ITapTrade::TAPICalculateModeType arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPICalculateModeType)jarg2; 
  if (arg1) (arg1)->CalculateMode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_CalculateMode_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  ITapTrade::TAPICalculateModeType result;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  result = (ITapTrade::TAPICalculateModeType) ((arg1)->CalculateMode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_CurrencyGroupNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyGroupNo, (const char *)arg2, 11-1);
      arg1->CurrencyGroupNo[11-1] = 0;
    } else {
      arg1->CurrencyGroupNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_CurrencyGroupNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  result = (char *) ((arg1)->CurrencyGroupNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_CurrencyNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyNo, (const char *)arg2, 11-1);
      arg1->CurrencyNo[11-1] = 0;
    } else {
      arg1->CurrencyNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_CurrencyNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  result = (char *) ((arg1)->CurrencyNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_InitialMargin_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->InitialMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_InitialMargin_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->InitialMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_MaintenanceMargin_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->MaintenanceMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_MaintenanceMargin_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->MaintenanceMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_SellInitialMargin_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->SellInitialMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_SellInitialMargin_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->SellInitialMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_SellMaintenanceMargin_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->SellMaintenanceMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_SellMaintenanceMargin_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->SellMaintenanceMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_LockMargin_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->LockMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIAccountMarginRentQryRsp_LockMargin_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->LockMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIAccountMarginRentQryRsp() {
  void * jresult ;
  ITapTrade::TapAPIAccountMarginRentQryRsp *result = 0 ;
  
  result = (ITapTrade::TapAPIAccountMarginRentQryRsp *)new ITapTrade::TapAPIAccountMarginRentQryRsp();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIAccountMarginRentQryRsp(void * jarg1) {
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  
  arg1 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderQuoteMarketNotice_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderQuoteMarketNotice *arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderQuoteMarketNotice_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderQuoteMarketNotice *arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderQuoteMarketNotice_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderQuoteMarketNotice *arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderQuoteMarketNotice_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderQuoteMarketNotice *arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderQuoteMarketNotice_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderQuoteMarketNotice *arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderQuoteMarketNotice_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderQuoteMarketNotice *arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderQuoteMarketNotice_ContractNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderQuoteMarketNotice *arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderQuoteMarketNotice_ContractNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderQuoteMarketNotice *arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderQuoteMarketNotice_StrikePrice_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderQuoteMarketNotice *arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice, (const char *)arg2, 11-1);
      arg1->StrikePrice[11-1] = 0;
    } else {
      arg1->StrikePrice[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderQuoteMarketNotice_StrikePrice_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderQuoteMarketNotice *arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *)jarg1; 
  result = (char *) ((arg1)->StrikePrice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderQuoteMarketNotice_CallOrPutFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderQuoteMarketNotice *arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderQuoteMarketNotice_CallOrPutFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderQuoteMarketNotice *arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderQuoteMarketNotice_OrderSide_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderQuoteMarketNotice *arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *) 0 ;
  ITapTrade::TAPISideType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *)jarg1; 
  arg2 = (ITapTrade::TAPISideType)jarg2; 
  if (arg1) (arg1)->OrderSide = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderQuoteMarketNotice_OrderSide_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderQuoteMarketNotice *arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *) 0 ;
  ITapTrade::TAPISideType result;
  
  arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *)jarg1; 
  result = (ITapTrade::TAPISideType) ((arg1)->OrderSide);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderQuoteMarketNotice_OrderQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIOrderQuoteMarketNotice *arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderQuoteMarketNotice_OrderQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIOrderQuoteMarketNotice *arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->OrderQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIOrderQuoteMarketNotice() {
  void * jresult ;
  ITapTrade::TapAPIOrderQuoteMarketNotice *result = 0 ;
  
  result = (ITapTrade::TapAPIOrderQuoteMarketNotice *)new ITapTrade::TapAPIOrderQuoteMarketNotice();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIOrderQuoteMarketNotice(void * jarg1) {
  ITapTrade::TapAPIOrderQuoteMarketNotice *arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *) 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderQuoteMarketNotice *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_ContractNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_ContractNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_StrikePrice_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice, (const char *)arg2, 11-1);
      arg1->StrikePrice[11-1] = 0;
    } else {
      arg1->StrikePrice[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_StrikePrice_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  result = (char *) ((arg1)->StrikePrice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_CallOrPutFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_CallOrPutFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_OrderType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPIOrderTypeType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  arg2 = (ITapTrade::TAPIOrderTypeType)jarg2; 
  if (arg1) (arg1)->OrderType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_OrderType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPIOrderTypeType result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  result = (ITapTrade::TAPIOrderTypeType) ((arg1)->OrderType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_TimeInForce_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPITimeInForceType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  arg2 = (ITapTrade::TAPITimeInForceType)jarg2; 
  if (arg1) (arg1)->TimeInForce = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_TimeInForce_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPITimeInForceType result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  result = (ITapTrade::TAPITimeInForceType) ((arg1)->TimeInForce);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_ExpireTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExpireTime, (const char *)arg2, 20-1);
      arg1->ExpireTime[20-1] = 0;
    } else {
      arg1->ExpireTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_ExpireTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  result = (char *) ((arg1)->ExpireTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_OrderSource_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPIOrderSourceType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  arg2 = (ITapTrade::TAPIOrderSourceType)jarg2; 
  if (arg1) (arg1)->OrderSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_OrderSource_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPIOrderSourceType result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  result = (ITapTrade::TAPIOrderSourceType) ((arg1)->OrderSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_BuyPositionEffect_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPIPositionEffectType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  arg2 = (ITapTrade::TAPIPositionEffectType)jarg2; 
  if (arg1) (arg1)->BuyPositionEffect = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_BuyPositionEffect_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPIPositionEffectType result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  result = (ITapTrade::TAPIPositionEffectType) ((arg1)->BuyPositionEffect);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_SellPositionEffect_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPIPositionEffectType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  arg2 = (ITapTrade::TAPIPositionEffectType)jarg2; 
  if (arg1) (arg1)->SellPositionEffect = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_SellPositionEffect_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPIPositionEffectType result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  result = (ITapTrade::TAPIPositionEffectType) ((arg1)->SellPositionEffect);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_AddOneIsValid_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->AddOneIsValid = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_AddOneIsValid_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->AddOneIsValid);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_OrderBuyPrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OrderBuyPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_OrderBuyPrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->OrderBuyPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_OrderSellPrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OrderSellPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_OrderSellPrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->OrderSellPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_OrderBuyQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderBuyQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_OrderBuyQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->OrderBuyQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_OrderSellQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderSellQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_OrderSellQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->OrderSellQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_ClientBuyOrderNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientBuyOrderNo, (const char *)arg2, 51-1);
      arg1->ClientBuyOrderNo[51-1] = 0;
    } else {
      arg1->ClientBuyOrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_ClientBuyOrderNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  result = (char *) ((arg1)->ClientBuyOrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_ClientSellOrderNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientSellOrderNo, (const char *)arg2, 51-1);
      arg1->ClientSellOrderNo[51-1] = 0;
    } else {
      arg1->ClientSellOrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_ClientSellOrderNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  result = (char *) ((arg1)->ClientSellOrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_RefInt_set(void * jarg1, int jarg2) {
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPIINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  arg2 = (ITapTrade::TAPIINT32)jarg2; 
  if (arg1) (arg1)->RefInt = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_RefInt_get(void * jarg1) {
  int jresult ;
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  result = (ITapTrade::TAPIINT32) ((arg1)->RefInt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_RefDouble_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->RefDouble = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_RefDouble_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->RefDouble);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_RefString_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RefString, (const char *)arg2, 51-1);
      arg1->RefString[51-1] = 0;
    } else {
      arg1->RefString[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_RefString_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  result = (char *) ((arg1)->RefString);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_Remark_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Remark, (const char *)arg2, 101-1);
      arg1->Remark[101-1] = 0;
    } else {
      arg1->Remark[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertReq_Remark_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  result = (char *) ((arg1)->Remark);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIOrderMarketInsertReq() {
  void * jresult ;
  ITapTrade::TapAPIOrderMarketInsertReq *result = 0 ;
  
  result = (ITapTrade::TapAPIOrderMarketInsertReq *)new ITapTrade::TapAPIOrderMarketInsertReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIOrderMarketInsertReq(void * jarg1) {
  ITapTrade::TapAPIOrderMarketInsertReq *arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_ContractNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_ContractNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_StrikePrice_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice, (const char *)arg2, 11-1);
      arg1->StrikePrice[11-1] = 0;
    } else {
      arg1->StrikePrice[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_StrikePrice_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (char *) ((arg1)->StrikePrice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_CallOrPutFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_CallOrPutFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_OrderType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPIOrderTypeType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIOrderTypeType)jarg2; 
  if (arg1) (arg1)->OrderType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_OrderType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPIOrderTypeType result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (ITapTrade::TAPIOrderTypeType) ((arg1)->OrderType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_TimeInForce_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPITimeInForceType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (ITapTrade::TAPITimeInForceType)jarg2; 
  if (arg1) (arg1)->TimeInForce = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_TimeInForce_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPITimeInForceType result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (ITapTrade::TAPITimeInForceType) ((arg1)->TimeInForce);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_ExpireTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExpireTime, (const char *)arg2, 20-1);
      arg1->ExpireTime[20-1] = 0;
    } else {
      arg1->ExpireTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_ExpireTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (char *) ((arg1)->ExpireTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_OrderSource_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPIOrderSourceType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIOrderSourceType)jarg2; 
  if (arg1) (arg1)->OrderSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_OrderSource_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPIOrderSourceType result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (ITapTrade::TAPIOrderSourceType) ((arg1)->OrderSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_BuyPositionEffect_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPIPositionEffectType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIPositionEffectType)jarg2; 
  if (arg1) (arg1)->BuyPositionEffect = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_BuyPositionEffect_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPIPositionEffectType result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (ITapTrade::TAPIPositionEffectType) ((arg1)->BuyPositionEffect);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_SellPositionEffect_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPIPositionEffectType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIPositionEffectType)jarg2; 
  if (arg1) (arg1)->SellPositionEffect = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_SellPositionEffect_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPIPositionEffectType result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (ITapTrade::TAPIPositionEffectType) ((arg1)->SellPositionEffect);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_OrderBuyPrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OrderBuyPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_OrderBuyPrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->OrderBuyPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_OrderSellPrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OrderSellPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_OrderSellPrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->OrderSellPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_OrderBuyQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderBuyQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_OrderBuyQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->OrderBuyQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_OrderSellQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderSellQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_OrderSellQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->OrderSellQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_ServerFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPICHAR arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (ITapTrade::TAPICHAR)jarg2; 
  if (arg1) (arg1)->ServerFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_ServerFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPICHAR result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (ITapTrade::TAPICHAR) ((arg1)->ServerFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_OrderBuyNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderBuyNo, (const char *)arg2, 21-1);
      arg1->OrderBuyNo[21-1] = 0;
    } else {
      arg1->OrderBuyNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_OrderBuyNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (char *) ((arg1)->OrderBuyNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_OrderSellNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSellNo, (const char *)arg2, 21-1);
      arg1->OrderSellNo[21-1] = 0;
    } else {
      arg1->OrderSellNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_OrderSellNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (char *) ((arg1)->OrderSellNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_AddOneIsValid_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->AddOneIsValid = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_AddOneIsValid_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->AddOneIsValid);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_OrderMarketUserNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderMarketUserNo, (const char *)arg2, 21-1);
      arg1->OrderMarketUserNo[21-1] = 0;
    } else {
      arg1->OrderMarketUserNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_OrderMarketUserNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (char *) ((arg1)->OrderMarketUserNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_OrderMarketTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderMarketTime, (const char *)arg2, 20-1);
      arg1->OrderMarketTime[20-1] = 0;
    } else {
      arg1->OrderMarketTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_OrderMarketTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (char *) ((arg1)->OrderMarketTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_RefInt_set(void * jarg1, int jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPIINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIINT32)jarg2; 
  if (arg1) (arg1)->RefInt = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_RefInt_get(void * jarg1) {
  int jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (ITapTrade::TAPIINT32) ((arg1)->RefInt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_RefDouble_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->RefDouble = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_RefDouble_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->RefDouble);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_RefString_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RefString, (const char *)arg2, 51-1);
      arg1->RefString[51-1] = 0;
    } else {
      arg1->RefString[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_RefString_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (char *) ((arg1)->RefString);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_ClientBuyOrderNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientBuyOrderNo, (const char *)arg2, 51-1);
      arg1->ClientBuyOrderNo[51-1] = 0;
    } else {
      arg1->ClientBuyOrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_ClientBuyOrderNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (char *) ((arg1)->ClientBuyOrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_ClientSellOrderNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientSellOrderNo, (const char *)arg2, 51-1);
      arg1->ClientSellOrderNo[51-1] = 0;
    } else {
      arg1->ClientSellOrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_ClientSellOrderNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (char *) ((arg1)->ClientSellOrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_ErrorCode_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->ErrorCode = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_ErrorCode_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->ErrorCode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_ErrorText_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorText, (const char *)arg2, 51-1);
      arg1->ErrorText[51-1] = 0;
    } else {
      arg1->ErrorText[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_ErrorText_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (char *) ((arg1)->ErrorText);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_ClientLocalIP_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientLocalIP, (const char *)arg2, 41-1);
      arg1->ClientLocalIP[41-1] = 0;
    } else {
      arg1->ClientLocalIP[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_ClientLocalIP_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (char *) ((arg1)->ClientLocalIP);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_ClientMac_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientMac, (const char *)arg2, 13-1);
      arg1->ClientMac[13-1] = 0;
    } else {
      arg1->ClientMac[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_ClientMac_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (char *) ((arg1)->ClientMac);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_ClientIP_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientIP, (const char *)arg2, 41-1);
      arg1->ClientIP[41-1] = 0;
    } else {
      arg1->ClientIP[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_ClientIP_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (char *) ((arg1)->ClientIP);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_Remark_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Remark, (const char *)arg2, 101-1);
      arg1->Remark[101-1] = 0;
    } else {
      arg1->Remark[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketInsertRsp_Remark_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  result = (char *) ((arg1)->Remark);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIOrderMarketInsertRsp() {
  void * jresult ;
  ITapTrade::TapAPIOrderMarketInsertRsp *result = 0 ;
  
  result = (ITapTrade::TapAPIOrderMarketInsertRsp *)new ITapTrade::TapAPIOrderMarketInsertRsp();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIOrderMarketInsertRsp(void * jarg1) {
  ITapTrade::TapAPIOrderMarketInsertRsp *arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketDeleteReq_ServerFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderMarketDeleteReq *arg1 = (ITapTrade::TapAPIOrderMarketDeleteReq *) 0 ;
  ITapTrade::TAPICHAR arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketDeleteReq *)jarg1; 
  arg2 = (ITapTrade::TAPICHAR)jarg2; 
  if (arg1) (arg1)->ServerFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderMarketDeleteReq_ServerFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderMarketDeleteReq *arg1 = (ITapTrade::TapAPIOrderMarketDeleteReq *) 0 ;
  ITapTrade::TAPICHAR result;
  
  arg1 = (ITapTrade::TapAPIOrderMarketDeleteReq *)jarg1; 
  result = (ITapTrade::TAPICHAR) ((arg1)->ServerFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketDeleteReq_OrderBuyNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketDeleteReq *arg1 = (ITapTrade::TapAPIOrderMarketDeleteReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketDeleteReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderBuyNo, (const char *)arg2, 21-1);
      arg1->OrderBuyNo[21-1] = 0;
    } else {
      arg1->OrderBuyNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketDeleteReq_OrderBuyNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketDeleteReq *arg1 = (ITapTrade::TapAPIOrderMarketDeleteReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketDeleteReq *)jarg1; 
  result = (char *) ((arg1)->OrderBuyNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderMarketDeleteReq_OrderSellNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderMarketDeleteReq *arg1 = (ITapTrade::TapAPIOrderMarketDeleteReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketDeleteReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSellNo, (const char *)arg2, 21-1);
      arg1->OrderSellNo[21-1] = 0;
    } else {
      arg1->OrderSellNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderMarketDeleteReq_OrderSellNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderMarketDeleteReq *arg1 = (ITapTrade::TapAPIOrderMarketDeleteReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketDeleteReq *)jarg1; 
  result = (char *) ((arg1)->OrderSellNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIOrderMarketDeleteReq() {
  void * jresult ;
  ITapTrade::TapAPIOrderMarketDeleteReq *result = 0 ;
  
  result = (ITapTrade::TapAPIOrderMarketDeleteReq *)new ITapTrade::TapAPIOrderMarketDeleteReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIOrderMarketDeleteReq(void * jarg1) {
  ITapTrade::TapAPIOrderMarketDeleteReq *arg1 = (ITapTrade::TapAPIOrderMarketDeleteReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderMarketDeleteReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalRemoveReq_ServerFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderLocalRemoveReq *arg1 = (ITapTrade::TapAPIOrderLocalRemoveReq *) 0 ;
  ITapTrade::TAPICHAR arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalRemoveReq *)jarg1; 
  arg2 = (ITapTrade::TAPICHAR)jarg2; 
  if (arg1) (arg1)->ServerFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderLocalRemoveReq_ServerFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderLocalRemoveReq *arg1 = (ITapTrade::TapAPIOrderLocalRemoveReq *) 0 ;
  ITapTrade::TAPICHAR result;
  
  arg1 = (ITapTrade::TapAPIOrderLocalRemoveReq *)jarg1; 
  result = (ITapTrade::TAPICHAR) ((arg1)->ServerFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalRemoveReq_OrderNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderLocalRemoveReq *arg1 = (ITapTrade::TapAPIOrderLocalRemoveReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalRemoveReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderNo, (const char *)arg2, 21-1);
      arg1->OrderNo[21-1] = 0;
    } else {
      arg1->OrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderLocalRemoveReq_OrderNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderLocalRemoveReq *arg1 = (ITapTrade::TapAPIOrderLocalRemoveReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalRemoveReq *)jarg1; 
  result = (char *) ((arg1)->OrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIOrderLocalRemoveReq() {
  void * jresult ;
  ITapTrade::TapAPIOrderLocalRemoveReq *result = 0 ;
  
  result = (ITapTrade::TapAPIOrderLocalRemoveReq *)new ITapTrade::TapAPIOrderLocalRemoveReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIOrderLocalRemoveReq(void * jarg1) {
  ITapTrade::TapAPIOrderLocalRemoveReq *arg1 = (ITapTrade::TapAPIOrderLocalRemoveReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalRemoveReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalRemoveRsp_req_set(void * jarg1, void * jarg2) {
  ITapTrade::TapAPIOrderLocalRemoveRsp *arg1 = (ITapTrade::TapAPIOrderLocalRemoveRsp *) 0 ;
  ITapTrade::TapAPIOrderLocalRemoveReq *arg2 = (ITapTrade::TapAPIOrderLocalRemoveReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalRemoveRsp *)jarg1; 
  arg2 = (ITapTrade::TapAPIOrderLocalRemoveReq *)jarg2; 
  if (arg1) (arg1)->req = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPIOrderLocalRemoveRsp_req_get(void * jarg1) {
  void * jresult ;
  ITapTrade::TapAPIOrderLocalRemoveRsp *arg1 = (ITapTrade::TapAPIOrderLocalRemoveRsp *) 0 ;
  ITapTrade::TapAPIOrderLocalRemoveReq *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalRemoveRsp *)jarg1; 
  result = (ITapTrade::TapAPIOrderLocalRemoveReq *)& ((arg1)->req);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalRemoveRsp_ClientLocalIP_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderLocalRemoveRsp *arg1 = (ITapTrade::TapAPIOrderLocalRemoveRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalRemoveRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientLocalIP, (const char *)arg2, 41-1);
      arg1->ClientLocalIP[41-1] = 0;
    } else {
      arg1->ClientLocalIP[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderLocalRemoveRsp_ClientLocalIP_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderLocalRemoveRsp *arg1 = (ITapTrade::TapAPIOrderLocalRemoveRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalRemoveRsp *)jarg1; 
  result = (char *) ((arg1)->ClientLocalIP);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalRemoveRsp_ClientMac_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderLocalRemoveRsp *arg1 = (ITapTrade::TapAPIOrderLocalRemoveRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalRemoveRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientMac, (const char *)arg2, 13-1);
      arg1->ClientMac[13-1] = 0;
    } else {
      arg1->ClientMac[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderLocalRemoveRsp_ClientMac_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderLocalRemoveRsp *arg1 = (ITapTrade::TapAPIOrderLocalRemoveRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalRemoveRsp *)jarg1; 
  result = (char *) ((arg1)->ClientMac);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalRemoveRsp_ClientIP_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderLocalRemoveRsp *arg1 = (ITapTrade::TapAPIOrderLocalRemoveRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalRemoveRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientIP, (const char *)arg2, 41-1);
      arg1->ClientIP[41-1] = 0;
    } else {
      arg1->ClientIP[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderLocalRemoveRsp_ClientIP_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderLocalRemoveRsp *arg1 = (ITapTrade::TapAPIOrderLocalRemoveRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalRemoveRsp *)jarg1; 
  result = (char *) ((arg1)->ClientIP);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIOrderLocalRemoveRsp() {
  void * jresult ;
  ITapTrade::TapAPIOrderLocalRemoveRsp *result = 0 ;
  
  result = (ITapTrade::TapAPIOrderLocalRemoveRsp *)new ITapTrade::TapAPIOrderLocalRemoveRsp();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIOrderLocalRemoveRsp(void * jarg1) {
  ITapTrade::TapAPIOrderLocalRemoveRsp *arg1 = (ITapTrade::TapAPIOrderLocalRemoveRsp *) 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalRemoveRsp *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_ContractNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_ContractNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_StrikePrice_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice, (const char *)arg2, 11-1);
      arg1->StrikePrice[11-1] = 0;
    } else {
      arg1->StrikePrice[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_StrikePrice_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (char *) ((arg1)->StrikePrice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_CallOrPutFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_CallOrPutFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_ContractNo2_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo2, (const char *)arg2, 11-1);
      arg1->ContractNo2[11-1] = 0;
    } else {
      arg1->ContractNo2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_ContractNo2_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (char *) ((arg1)->ContractNo2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_StrikePrice2_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice2, (const char *)arg2, 11-1);
      arg1->StrikePrice2[11-1] = 0;
    } else {
      arg1->StrikePrice2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_StrikePrice2_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (char *) ((arg1)->StrikePrice2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_CallOrPutFlag2_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_CallOrPutFlag2_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIOrderTypeType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPIOrderTypeType)jarg2; 
  if (arg1) (arg1)->OrderType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIOrderTypeType result;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPIOrderTypeType) ((arg1)->OrderType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderSource_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIOrderSourceType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPIOrderSourceType)jarg2; 
  if (arg1) (arg1)->OrderSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderSource_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIOrderSourceType result;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPIOrderSourceType) ((arg1)->OrderSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_TimeInForce_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPITimeInForceType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPITimeInForceType)jarg2; 
  if (arg1) (arg1)->TimeInForce = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_TimeInForce_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPITimeInForceType result;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPITimeInForceType) ((arg1)->TimeInForce);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_ExpireTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExpireTime, (const char *)arg2, 20-1);
      arg1->ExpireTime[20-1] = 0;
    } else {
      arg1->ExpireTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_ExpireTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (char *) ((arg1)->ExpireTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_IsRiskOrder_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsRiskOrder = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_IsRiskOrder_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsRiskOrder);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderSide_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPISideType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPISideType)jarg2; 
  if (arg1) (arg1)->OrderSide = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderSide_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPISideType result;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPISideType) ((arg1)->OrderSide);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_PositionEffect_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIPositionEffectType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPIPositionEffectType)jarg2; 
  if (arg1) (arg1)->PositionEffect = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_PositionEffect_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIPositionEffectType result;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPIPositionEffectType) ((arg1)->PositionEffect);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_PositionEffect2_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIPositionEffectType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPIPositionEffectType)jarg2; 
  if (arg1) (arg1)->PositionEffect2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_PositionEffect2_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIPositionEffectType result;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPIPositionEffectType) ((arg1)->PositionEffect2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_InquiryNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InquiryNo, (const char *)arg2, 51-1);
      arg1->InquiryNo[51-1] = 0;
    } else {
      arg1->InquiryNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_InquiryNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (char *) ((arg1)->InquiryNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_HedgeFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIHedgeFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPIHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_HedgeFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIHedgeFlagType result;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPIHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderPrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OrderPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderPrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->OrderPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderPrice2_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OrderPrice2 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderPrice2_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->OrderPrice2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_StopPrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->StopPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_StopPrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->StopPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->OrderQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderMinQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderMinQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderMinQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->OrderMinQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderSystemNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSystemNo, (const char *)arg2, 51-1);
      arg1->OrderSystemNo[51-1] = 0;
    } else {
      arg1->OrderSystemNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderSystemNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (char *) ((arg1)->OrderSystemNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderExchangeSystemNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderExchangeSystemNo, (const char *)arg2, 51-1);
      arg1->OrderExchangeSystemNo[51-1] = 0;
    } else {
      arg1->OrderExchangeSystemNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderExchangeSystemNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (char *) ((arg1)->OrderExchangeSystemNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_UpperNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperNo, (const char *)arg2, 11-1);
      arg1->UpperNo[11-1] = 0;
    } else {
      arg1->UpperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_UpperNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (char *) ((arg1)->UpperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderMatchPrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OrderMatchPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderMatchPrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->OrderMatchPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderMatchPrice2_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->OrderMatchPrice2 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderMatchPrice2_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->OrderMatchPrice2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderMatchQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderMatchQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderMatchQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->OrderMatchQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderMatchQty2_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderMatchQty2 = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderMatchQty2_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->OrderMatchQty2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderState_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIOrderStateType arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPIOrderStateType)jarg2; 
  if (arg1) (arg1)->OrderState = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_OrderState_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIOrderStateType result;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPIOrderStateType) ((arg1)->OrderState);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_IsAddOne_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsAddOne = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderLocalInputReq_IsAddOne_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsAddOne);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIOrderLocalInputReq() {
  void * jresult ;
  ITapTrade::TapAPIOrderLocalInputReq *result = 0 ;
  
  result = (ITapTrade::TapAPIOrderLocalInputReq *)new ITapTrade::TapAPIOrderLocalInputReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIOrderLocalInputReq(void * jarg1) {
  ITapTrade::TapAPIOrderLocalInputReq *arg1 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalModifyReq_req_set(void * jarg1, void * jarg2) {
  ITapTrade::TapAPIOrderLocalModifyReq *arg1 = (ITapTrade::TapAPIOrderLocalModifyReq *) 0 ;
  ITapTrade::TapAPIOrderLocalInputReq *arg2 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalModifyReq *)jarg1; 
  arg2 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg2; 
  if (arg1) (arg1)->req = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPIOrderLocalModifyReq_req_get(void * jarg1) {
  void * jresult ;
  ITapTrade::TapAPIOrderLocalModifyReq *arg1 = (ITapTrade::TapAPIOrderLocalModifyReq *) 0 ;
  ITapTrade::TapAPIOrderLocalInputReq *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalModifyReq *)jarg1; 
  result = (ITapTrade::TapAPIOrderLocalInputReq *)& ((arg1)->req);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalModifyReq_ServerFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderLocalModifyReq *arg1 = (ITapTrade::TapAPIOrderLocalModifyReq *) 0 ;
  ITapTrade::TAPICHAR arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalModifyReq *)jarg1; 
  arg2 = (ITapTrade::TAPICHAR)jarg2; 
  if (arg1) (arg1)->ServerFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderLocalModifyReq_ServerFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderLocalModifyReq *arg1 = (ITapTrade::TapAPIOrderLocalModifyReq *) 0 ;
  ITapTrade::TAPICHAR result;
  
  arg1 = (ITapTrade::TapAPIOrderLocalModifyReq *)jarg1; 
  result = (ITapTrade::TAPICHAR) ((arg1)->ServerFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalModifyReq_OrderNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderLocalModifyReq *arg1 = (ITapTrade::TapAPIOrderLocalModifyReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalModifyReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderNo, (const char *)arg2, 21-1);
      arg1->OrderNo[21-1] = 0;
    } else {
      arg1->OrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderLocalModifyReq_OrderNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderLocalModifyReq *arg1 = (ITapTrade::TapAPIOrderLocalModifyReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalModifyReq *)jarg1; 
  result = (char *) ((arg1)->OrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIOrderLocalModifyReq() {
  void * jresult ;
  ITapTrade::TapAPIOrderLocalModifyReq *result = 0 ;
  
  result = (ITapTrade::TapAPIOrderLocalModifyReq *)new ITapTrade::TapAPIOrderLocalModifyReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIOrderLocalModifyReq(void * jarg1) {
  ITapTrade::TapAPIOrderLocalModifyReq *arg1 = (ITapTrade::TapAPIOrderLocalModifyReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalModifyReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalTransferReq_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderLocalTransferReq *arg1 = (ITapTrade::TapAPIOrderLocalTransferReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalTransferReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderLocalTransferReq_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderLocalTransferReq *arg1 = (ITapTrade::TapAPIOrderLocalTransferReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalTransferReq *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalTransferReq_ServerFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIOrderLocalTransferReq *arg1 = (ITapTrade::TapAPIOrderLocalTransferReq *) 0 ;
  ITapTrade::TAPICHAR arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalTransferReq *)jarg1; 
  arg2 = (ITapTrade::TAPICHAR)jarg2; 
  if (arg1) (arg1)->ServerFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIOrderLocalTransferReq_ServerFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIOrderLocalTransferReq *arg1 = (ITapTrade::TapAPIOrderLocalTransferReq *) 0 ;
  ITapTrade::TAPICHAR result;
  
  arg1 = (ITapTrade::TapAPIOrderLocalTransferReq *)jarg1; 
  result = (ITapTrade::TAPICHAR) ((arg1)->ServerFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIOrderLocalTransferReq_OrderNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIOrderLocalTransferReq *arg1 = (ITapTrade::TapAPIOrderLocalTransferReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalTransferReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderNo, (const char *)arg2, 21-1);
      arg1->OrderNo[21-1] = 0;
    } else {
      arg1->OrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIOrderLocalTransferReq_OrderNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIOrderLocalTransferReq *arg1 = (ITapTrade::TapAPIOrderLocalTransferReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalTransferReq *)jarg1; 
  result = (char *) ((arg1)->OrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIOrderLocalTransferReq() {
  void * jresult ;
  ITapTrade::TapAPIOrderLocalTransferReq *result = 0 ;
  
  result = (ITapTrade::TapAPIOrderLocalTransferReq *)new ITapTrade::TapAPIOrderLocalTransferReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIOrderLocalTransferReq(void * jarg1) {
  ITapTrade::TapAPIOrderLocalTransferReq *arg1 = (ITapTrade::TapAPIOrderLocalTransferReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIOrderLocalTransferReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_ContractNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_ContractNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_StrikePrice_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice, (const char *)arg2, 11-1);
      arg1->StrikePrice[11-1] = 0;
    } else {
      arg1->StrikePrice[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_StrikePrice_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  result = (char *) ((arg1)->StrikePrice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_CallOrPutFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_CallOrPutFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_MatchSide_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  ITapTrade::TAPISideType arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPISideType)jarg2; 
  if (arg1) (arg1)->MatchSide = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_MatchSide_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  ITapTrade::TAPISideType result;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPISideType) ((arg1)->MatchSide);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_PositionEffect_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  ITapTrade::TAPIPositionEffectType arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPIPositionEffectType)jarg2; 
  if (arg1) (arg1)->PositionEffect = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_PositionEffect_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  ITapTrade::TAPIPositionEffectType result;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPIPositionEffectType) ((arg1)->PositionEffect);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_HedgeFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  ITapTrade::TAPIHedgeFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPIHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_HedgeFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  ITapTrade::TAPIHedgeFlagType result;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPIHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_MatchPrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->MatchPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_MatchPrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->MatchPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_MatchQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->MatchQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_MatchQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->MatchQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_OrderSystemNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSystemNo, (const char *)arg2, 51-1);
      arg1->OrderSystemNo[51-1] = 0;
    } else {
      arg1->OrderSystemNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_OrderSystemNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  result = (char *) ((arg1)->OrderSystemNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_UpperMatchNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperMatchNo, (const char *)arg2, 71-1);
      arg1->UpperMatchNo[71-1] = 0;
    } else {
      arg1->UpperMatchNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_UpperMatchNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  result = (char *) ((arg1)->UpperMatchNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_MatchDateTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MatchDateTime, (const char *)arg2, 20-1);
      arg1->MatchDateTime[20-1] = 0;
    } else {
      arg1->MatchDateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_MatchDateTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  result = (char *) ((arg1)->MatchDateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_UpperMatchDateTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperMatchDateTime, (const char *)arg2, 20-1);
      arg1->UpperMatchDateTime[20-1] = 0;
    } else {
      arg1->UpperMatchDateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_UpperMatchDateTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  result = (char *) ((arg1)->UpperMatchDateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_UpperNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperNo, (const char *)arg2, 11-1);
      arg1->UpperNo[11-1] = 0;
    } else {
      arg1->UpperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_UpperNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  result = (char *) ((arg1)->UpperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_IsAddOne_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsAddOne = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_IsAddOne_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsAddOne);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_FeeCurrencyGroup_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FeeCurrencyGroup, (const char *)arg2, 11-1);
      arg1->FeeCurrencyGroup[11-1] = 0;
    } else {
      arg1->FeeCurrencyGroup[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_FeeCurrencyGroup_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  result = (char *) ((arg1)->FeeCurrencyGroup);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_FeeCurrency_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FeeCurrency, (const char *)arg2, 11-1);
      arg1->FeeCurrency[11-1] = 0;
    } else {
      arg1->FeeCurrency[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_FeeCurrency_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  result = (char *) ((arg1)->FeeCurrency);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_FeeValue_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->FeeValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_FeeValue_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->FeeValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_IsManualFee_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  ITapTrade::TAPIYNFLAG arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsManualFee = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_IsManualFee_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  ITapTrade::TAPIYNFLAG result;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPIYNFLAG) ((arg1)->IsManualFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_ClosePositionPrice_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->ClosePositionPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIFillLocalInputReq_ClosePositionPrice_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->ClosePositionPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIFillLocalInputReq() {
  void * jresult ;
  ITapTrade::TapAPIFillLocalInputReq *result = 0 ;
  
  result = (ITapTrade::TapAPIFillLocalInputReq *)new ITapTrade::TapAPIFillLocalInputReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIFillLocalInputReq(void * jarg1) {
  ITapTrade::TapAPIFillLocalInputReq *arg1 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalInputReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillLocalRemoveReq_ServerFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPIFillLocalRemoveReq *arg1 = (ITapTrade::TapAPIFillLocalRemoveReq *) 0 ;
  ITapTrade::TAPICHAR arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalRemoveReq *)jarg1; 
  arg2 = (ITapTrade::TAPICHAR)jarg2; 
  if (arg1) (arg1)->ServerFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIFillLocalRemoveReq_ServerFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPIFillLocalRemoveReq *arg1 = (ITapTrade::TapAPIFillLocalRemoveReq *) 0 ;
  ITapTrade::TAPICHAR result;
  
  arg1 = (ITapTrade::TapAPIFillLocalRemoveReq *)jarg1; 
  result = (ITapTrade::TAPICHAR) ((arg1)->ServerFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIFillLocalRemoveReq_MatchNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPIFillLocalRemoveReq *arg1 = (ITapTrade::TapAPIFillLocalRemoveReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalRemoveReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MatchNo, (const char *)arg2, 21-1);
      arg1->MatchNo[21-1] = 0;
    } else {
      arg1->MatchNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIFillLocalRemoveReq_MatchNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPIFillLocalRemoveReq *arg1 = (ITapTrade::TapAPIFillLocalRemoveReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalRemoveReq *)jarg1; 
  result = (char *) ((arg1)->MatchNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIFillLocalRemoveReq() {
  void * jresult ;
  ITapTrade::TapAPIFillLocalRemoveReq *result = 0 ;
  
  result = (ITapTrade::TapAPIFillLocalRemoveReq *)new ITapTrade::TapAPIFillLocalRemoveReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIFillLocalRemoveReq(void * jarg1) {
  ITapTrade::TapAPIFillLocalRemoveReq *arg1 = (ITapTrade::TapAPIFillLocalRemoveReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPIFillLocalRemoveReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradingCalendarQryRsp_CurrTradeDate_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradingCalendarQryRsp *arg1 = (ITapTrade::TapAPITradingCalendarQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradingCalendarQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrTradeDate, (const char *)arg2, 11-1);
      arg1->CurrTradeDate[11-1] = 0;
    } else {
      arg1->CurrTradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradingCalendarQryRsp_CurrTradeDate_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradingCalendarQryRsp *arg1 = (ITapTrade::TapAPITradingCalendarQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradingCalendarQryRsp *)jarg1; 
  result = (char *) ((arg1)->CurrTradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradingCalendarQryRsp_LastSettlementDate_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradingCalendarQryRsp *arg1 = (ITapTrade::TapAPITradingCalendarQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradingCalendarQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastSettlementDate, (const char *)arg2, 11-1);
      arg1->LastSettlementDate[11-1] = 0;
    } else {
      arg1->LastSettlementDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradingCalendarQryRsp_LastSettlementDate_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradingCalendarQryRsp *arg1 = (ITapTrade::TapAPITradingCalendarQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradingCalendarQryRsp *)jarg1; 
  result = (char *) ((arg1)->LastSettlementDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradingCalendarQryRsp_PromptDate_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradingCalendarQryRsp *arg1 = (ITapTrade::TapAPITradingCalendarQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradingCalendarQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->PromptDate, (const char *)arg2, 11-1);
      arg1->PromptDate[11-1] = 0;
    } else {
      arg1->PromptDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradingCalendarQryRsp_PromptDate_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradingCalendarQryRsp *arg1 = (ITapTrade::TapAPITradingCalendarQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradingCalendarQryRsp *)jarg1; 
  result = (char *) ((arg1)->PromptDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPITradingCalendarQryRsp_LastPromptDate_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPITradingCalendarQryRsp *arg1 = (ITapTrade::TapAPITradingCalendarQryRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPITradingCalendarQryRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastPromptDate, (const char *)arg2, 11-1);
      arg1->LastPromptDate[11-1] = 0;
    } else {
      arg1->LastPromptDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPITradingCalendarQryRsp_LastPromptDate_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPITradingCalendarQryRsp *arg1 = (ITapTrade::TapAPITradingCalendarQryRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPITradingCalendarQryRsp *)jarg1; 
  result = (char *) ((arg1)->LastPromptDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPITradingCalendarQryRsp() {
  void * jresult ;
  ITapTrade::TapAPITradingCalendarQryRsp *result = 0 ;
  
  result = (ITapTrade::TapAPITradingCalendarQryRsp *)new ITapTrade::TapAPITradingCalendarQryRsp();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPITradingCalendarQryRsp(void * jarg1) {
  ITapTrade::TapAPITradingCalendarQryRsp *arg1 = (ITapTrade::TapAPITradingCalendarQryRsp *) 0 ;
  
  arg1 = (ITapTrade::TapAPITradingCalendarQryRsp *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpotLockQryReq_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpotLockQryReq *arg1 = (ITapTrade::TapAPISpotLockQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpotLockQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpotLockQryReq_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpotLockQryReq *arg1 = (ITapTrade::TapAPISpotLockQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpotLockQryReq *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPISpotLockQryReq() {
  void * jresult ;
  ITapTrade::TapAPISpotLockQryReq *result = 0 ;
  
  result = (ITapTrade::TapAPISpotLockQryReq *)new ITapTrade::TapAPISpotLockQryReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPISpotLockQryReq(void * jarg1) {
  ITapTrade::TapAPISpotLockQryReq *arg1 = (ITapTrade::TapAPISpotLockQryReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPISpotLockQryReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpotLockDataRsp_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpotLockDataRsp *arg1 = (ITapTrade::TapAPISpotLockDataRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpotLockDataRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpotLockDataRsp_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpotLockDataRsp *arg1 = (ITapTrade::TapAPISpotLockDataRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpotLockDataRsp *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpotLockDataRsp_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpotLockDataRsp *arg1 = (ITapTrade::TapAPISpotLockDataRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpotLockDataRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpotLockDataRsp_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpotLockDataRsp *arg1 = (ITapTrade::TapAPISpotLockDataRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpotLockDataRsp *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpotLockDataRsp_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPISpotLockDataRsp *arg1 = (ITapTrade::TapAPISpotLockDataRsp *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPISpotLockDataRsp *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPISpotLockDataRsp_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPISpotLockDataRsp *arg1 = (ITapTrade::TapAPISpotLockDataRsp *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPISpotLockDataRsp *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpotLockDataRsp_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpotLockDataRsp *arg1 = (ITapTrade::TapAPISpotLockDataRsp *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpotLockDataRsp *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpotLockDataRsp_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpotLockDataRsp *arg1 = (ITapTrade::TapAPISpotLockDataRsp *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpotLockDataRsp *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpotLockDataRsp_LockQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPISpotLockDataRsp *arg1 = (ITapTrade::TapAPISpotLockDataRsp *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPISpotLockDataRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->LockQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPISpotLockDataRsp_LockQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPISpotLockDataRsp *arg1 = (ITapTrade::TapAPISpotLockDataRsp *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPISpotLockDataRsp *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->LockQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpotLockDataRsp_FrozenQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPISpotLockDataRsp *arg1 = (ITapTrade::TapAPISpotLockDataRsp *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPISpotLockDataRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->FrozenQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPISpotLockDataRsp_FrozenQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPISpotLockDataRsp *arg1 = (ITapTrade::TapAPISpotLockDataRsp *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPISpotLockDataRsp *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->FrozenQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpotLockDataRsp_CanUnLockQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPISpotLockDataRsp *arg1 = (ITapTrade::TapAPISpotLockDataRsp *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPISpotLockDataRsp *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->CanUnLockQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPISpotLockDataRsp_CanUnLockQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPISpotLockDataRsp *arg1 = (ITapTrade::TapAPISpotLockDataRsp *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPISpotLockDataRsp *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->CanUnLockQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPISpotLockDataRsp() {
  void * jresult ;
  ITapTrade::TapAPISpotLockDataRsp *result = 0 ;
  
  result = (ITapTrade::TapAPISpotLockDataRsp *)new ITapTrade::TapAPISpotLockDataRsp();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPISpotLockDataRsp(void * jarg1) {
  ITapTrade::TapAPISpotLockDataRsp *arg1 = (ITapTrade::TapAPISpotLockDataRsp *) 0 ;
  
  arg1 = (ITapTrade::TapAPISpotLockDataRsp *)jarg1; 
  delete arg1;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ABNORMAL_NORMAL_get() {
  char jresult ;
  ITapTrade::TapAPIAbnormalFalgType result;
  
  result = (ITapTrade::TapAPIAbnormalFalgType)(ITapTrade::TapAPIAbnormalFalgType)ITapTrade::TAPI_ABNORMAL_NORMAL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ABNORMAL_GATHERINFO_NONE_get() {
  char jresult ;
  ITapTrade::TapAPIAbnormalFalgType result;
  
  result = (ITapTrade::TapAPIAbnormalFalgType)(ITapTrade::TapAPIAbnormalFalgType)ITapTrade::TAPI_ABNORMAL_GATHERINFO_NONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ABNORMAL_AUTHKEYVERSION_get() {
  char jresult ;
  ITapTrade::TapAPIAbnormalFalgType result;
  
  result = (ITapTrade::TapAPIAbnormalFalgType)(ITapTrade::TapAPIAbnormalFalgType)ITapTrade::TAPI_ABNORMAL_AUTHKEYVERSION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_ABNORMAL_GATHERINFO_WRONG_get() {
  char jresult ;
  ITapTrade::TapAPIAbnormalFalgType result;
  
  result = (ITapTrade::TapAPIAbnormalFalgType)(ITapTrade::TapAPIAbnormalFalgType)ITapTrade::TAPI_ABNORMAL_GATHERINFO_WRONG;
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISubmitUserLoginInfo_UserNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISubmitUserLoginInfo *arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserNo, (const char *)arg2, 21-1);
      arg1->UserNo[21-1] = 0;
    } else {
      arg1->UserNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISubmitUserLoginInfo_UserNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISubmitUserLoginInfo *arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *)jarg1; 
  result = (char *) ((arg1)->UserNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISubmitUserLoginInfo_GatherInfo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISubmitUserLoginInfo *arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->GatherInfo, (const char *)arg2, 501-1);
      arg1->GatherInfo[501-1] = 0;
    } else {
      arg1->GatherInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISubmitUserLoginInfo_GatherInfo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISubmitUserLoginInfo *arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *)jarg1; 
  result = (char *) ((arg1)->GatherInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISubmitUserLoginInfo_ClientLoginIP_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISubmitUserLoginInfo *arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientLoginIP, (const char *)arg2, 41-1);
      arg1->ClientLoginIP[41-1] = 0;
    } else {
      arg1->ClientLoginIP[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISubmitUserLoginInfo_ClientLoginIP_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISubmitUserLoginInfo *arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *)jarg1; 
  result = (char *) ((arg1)->ClientLoginIP);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISubmitUserLoginInfo_ClientLoginPort_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPISubmitUserLoginInfo *arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->ClientLoginPort = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPISubmitUserLoginInfo_ClientLoginPort_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPISubmitUserLoginInfo *arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->ClientLoginPort);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISubmitUserLoginInfo_ClientLoginDateTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISubmitUserLoginInfo *arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientLoginDateTime, (const char *)arg2, 20-1);
      arg1->ClientLoginDateTime[20-1] = 0;
    } else {
      arg1->ClientLoginDateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISubmitUserLoginInfo_ClientLoginDateTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISubmitUserLoginInfo *arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *)jarg1; 
  result = (char *) ((arg1)->ClientLoginDateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISubmitUserLoginInfo_ClientAppID_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISubmitUserLoginInfo *arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientAppID, (const char *)arg2, 31-1);
      arg1->ClientAppID[31-1] = 0;
    } else {
      arg1->ClientAppID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISubmitUserLoginInfo_ClientAppID_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISubmitUserLoginInfo *arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *)jarg1; 
  result = (char *) ((arg1)->ClientAppID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISubmitUserLoginInfo_AuthKeyVersion_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPISubmitUserLoginInfo *arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->AuthKeyVersion = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPISubmitUserLoginInfo_AuthKeyVersion_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPISubmitUserLoginInfo *arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->AuthKeyVersion);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISubmitUserLoginInfo_AbnormalNo_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPISubmitUserLoginInfo *arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *) 0 ;
  ITapTrade::TapAPIAbnormalFalgType arg2 ;
  
  arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *)jarg1; 
  arg2 = (ITapTrade::TapAPIAbnormalFalgType)jarg2; 
  if (arg1) (arg1)->AbnormalNo = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPISubmitUserLoginInfo_AbnormalNo_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPISubmitUserLoginInfo *arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *) 0 ;
  ITapTrade::TapAPIAbnormalFalgType result;
  
  arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *)jarg1; 
  result = (ITapTrade::TapAPIAbnormalFalgType) ((arg1)->AbnormalNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPISubmitUserLoginInfo() {
  void * jresult ;
  ITapTrade::TapAPISubmitUserLoginInfo *result = 0 ;
  
  result = (ITapTrade::TapAPISubmitUserLoginInfo *)new ITapTrade::TapAPISubmitUserLoginInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPISubmitUserLoginInfo(void * jarg1) {
  ITapTrade::TapAPISubmitUserLoginInfo *arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *) 0 ;
  
  arg1 = (ITapTrade::TapAPISubmitUserLoginInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISubmitUserLoginRspInfo_UserNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISubmitUserLoginRspInfo *arg1 = (ITapTrade::TapAPISubmitUserLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISubmitUserLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserNo, (const char *)arg2, 21-1);
      arg1->UserNo[21-1] = 0;
    } else {
      arg1->UserNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISubmitUserLoginRspInfo_UserNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISubmitUserLoginRspInfo *arg1 = (ITapTrade::TapAPISubmitUserLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISubmitUserLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->UserNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPISubmitUserLoginRspInfo() {
  void * jresult ;
  ITapTrade::TapAPISubmitUserLoginRspInfo *result = 0 ;
  
  result = (ITapTrade::TapAPISubmitUserLoginRspInfo *)new ITapTrade::TapAPISubmitUserLoginRspInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPISubmitUserLoginRspInfo(void * jarg1) {
  ITapTrade::TapAPISubmitUserLoginRspInfo *arg1 = (ITapTrade::TapAPISubmitUserLoginRspInfo *) 0 ;
  
  arg1 = (ITapTrade::TapAPISubmitUserLoginRspInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TAPI_STRATEGY_C_BULL_get() {
  char * jresult ;
  ITapTrade::TAPICHAR *result = 0 ;
  
  result = (ITapTrade::TAPICHAR *)(ITapTrade::TAPICHAR *)ITapTrade::TAPI_STRATEGY_C_BULL;
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TAPI_STRATEGY_P_BEAR_get() {
  char * jresult ;
  ITapTrade::TAPICHAR *result = 0 ;
  
  result = (ITapTrade::TAPICHAR *)(ITapTrade::TAPICHAR *)ITapTrade::TAPI_STRATEGY_P_BEAR;
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TAPI_STRATEGY_P_BULL_get() {
  char * jresult ;
  ITapTrade::TAPICHAR *result = 0 ;
  
  result = (ITapTrade::TAPICHAR *)(ITapTrade::TAPICHAR *)ITapTrade::TAPI_STRATEGY_P_BULL;
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TAPI_STRATEGY_C_BEAR_get() {
  char * jresult ;
  ITapTrade::TAPICHAR *result = 0 ;
  
  result = (ITapTrade::TAPICHAR *)(ITapTrade::TAPICHAR *)ITapTrade::TAPI_STRATEGY_C_BEAR;
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TAPI_STRATEGY_S_STRADDLE_get() {
  char * jresult ;
  ITapTrade::TAPICHAR *result = 0 ;
  
  result = (ITapTrade::TAPICHAR *)(ITapTrade::TAPICHAR *)ITapTrade::TAPI_STRATEGY_S_STRADDLE;
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TAPI_STRATEGY_S_STRANGLE_get() {
  char * jresult ;
  ITapTrade::TAPICHAR *result = 0 ;
  
  result = (ITapTrade::TAPICHAR *)(ITapTrade::TAPICHAR *)ITapTrade::TAPI_STRATEGY_S_STRANGLE;
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TAPI_STRATEGY_ZBD_get() {
  char * jresult ;
  ITapTrade::TAPICHAR *result = 0 ;
  
  result = (ITapTrade::TAPICHAR *)(ITapTrade::TAPICHAR *)ITapTrade::TAPI_STRATEGY_ZBD;
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TAPI_STRATEGY_ZXJ_get() {
  char * jresult ;
  ITapTrade::TAPICHAR *result = 0 ;
  
  result = (ITapTrade::TAPICHAR *)(ITapTrade::TAPICHAR *)ITapTrade::TAPI_STRATEGY_ZXJ;
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_STRATEGY_COMBINE_get() {
  char jresult ;
  ITapTrade::TapAPISpecialOrderTypeType result;
  
  result = (ITapTrade::TapAPISpecialOrderTypeType)(ITapTrade::TapAPISpecialOrderTypeType)ITapTrade::TAPI_STRATEGY_COMBINE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_STRATEGY_SPLIT_get() {
  char jresult ;
  ITapTrade::TapAPISpecialOrderTypeType result;
  
  result = (ITapTrade::TapAPISpecialOrderTypeType)(ITapTrade::TapAPISpecialOrderTypeType)ITapTrade::TAPI_STRATEGY_SPLIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_SPOT_LOCK_get() {
  char jresult ;
  ITapTrade::TapAPISpecialOrderTypeType result;
  
  result = (ITapTrade::TapAPISpecialOrderTypeType)(ITapTrade::TapAPISpecialOrderTypeType)ITapTrade::TAPI_SPOT_LOCK;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_SPOT_UNLOCK_get() {
  char jresult ;
  ITapTrade::TapAPISpecialOrderTypeType result;
  
  result = (ITapTrade::TapAPISpecialOrderTypeType)(ITapTrade::TapAPISpecialOrderTypeType)ITapTrade::TAPI_SPOT_UNLOCK;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_OPTION_EXERCISE_get() {
  char jresult ;
  ITapTrade::TapAPISpecialOrderTypeType result;
  
  result = (ITapTrade::TapAPISpecialOrderTypeType)(ITapTrade::TapAPISpecialOrderTypeType)ITapTrade::TAPI_OPTION_EXERCISE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_OPTION_EXERCISE_COMBINE_get() {
  char jresult ;
  ITapTrade::TapAPISpecialOrderTypeType result;
  
  result = (ITapTrade::TapAPISpecialOrderTypeType)(ITapTrade::TapAPISpecialOrderTypeType)ITapTrade::TAPI_OPTION_EXERCISE_COMBINE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_SpecialOrderType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  ITapTrade::TapAPISpecialOrderTypeType arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  arg2 = (ITapTrade::TapAPISpecialOrderTypeType)jarg2; 
  if (arg1) (arg1)->SpecialOrderType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_SpecialOrderType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  ITapTrade::TapAPISpecialOrderTypeType result;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  result = (ITapTrade::TapAPISpecialOrderTypeType) ((arg1)->SpecialOrderType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_OrderSource_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  ITapTrade::TAPIOrderSourceType arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  arg2 = (ITapTrade::TAPIOrderSourceType)jarg2; 
  if (arg1) (arg1)->OrderSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_OrderSource_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  ITapTrade::TAPIOrderSourceType result;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  result = (ITapTrade::TAPIOrderSourceType) ((arg1)->OrderSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_CombineNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombineNo, (const char *)arg2, 51-1);
      arg1->CombineNo[51-1] = 0;
    } else {
      arg1->CombineNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_CombineNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  result = (char *) ((arg1)->CombineNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_OrderQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_OrderQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->OrderQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_ContractNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_ContractNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_StrikePrice_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice, (const char *)arg2, 11-1);
      arg1->StrikePrice[11-1] = 0;
    } else {
      arg1->StrikePrice[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_StrikePrice_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  result = (char *) ((arg1)->StrikePrice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_CallOrPutFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_CallOrPutFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_OrderSide1_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  ITapTrade::TAPISideType arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  arg2 = (ITapTrade::TAPISideType)jarg2; 
  if (arg1) (arg1)->OrderSide1 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_OrderSide1_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  ITapTrade::TAPISideType result;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  result = (ITapTrade::TAPISideType) ((arg1)->OrderSide1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_HedgeFlag1_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  ITapTrade::TAPIHedgeFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  arg2 = (ITapTrade::TAPIHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag1 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_HedgeFlag1_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  ITapTrade::TAPIHedgeFlagType result;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  result = (ITapTrade::TAPIHedgeFlagType) ((arg1)->HedgeFlag1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_ContractNo2_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo2, (const char *)arg2, 11-1);
      arg1->ContractNo2[11-1] = 0;
    } else {
      arg1->ContractNo2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_ContractNo2_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  result = (char *) ((arg1)->ContractNo2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_StrikePrice2_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice2, (const char *)arg2, 11-1);
      arg1->StrikePrice2[11-1] = 0;
    } else {
      arg1->StrikePrice2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_StrikePrice2_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  result = (char *) ((arg1)->StrikePrice2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_CallOrPutFlag2_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPISpecialOrderInsertReq_CallOrPutFlag2_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPISpecialOrderInsertReq() {
  void * jresult ;
  ITapTrade::TapAPISpecialOrderInsertReq *result = 0 ;
  
  result = (ITapTrade::TapAPISpecialOrderInsertReq *)new ITapTrade::TapAPISpecialOrderInsertReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPISpecialOrderInsertReq(void * jarg1) {
  ITapTrade::TapAPISpecialOrderInsertReq *arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderQryReq_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderQryReq *arg1 = (ITapTrade::TapAPISpecialOrderQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderQryReq_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderQryReq *arg1 = (ITapTrade::TapAPISpecialOrderQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderQryReq *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderQryReq_OrderNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderQryReq *arg1 = (ITapTrade::TapAPISpecialOrderQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderNo, (const char *)arg2, 21-1);
      arg1->OrderNo[21-1] = 0;
    } else {
      arg1->OrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderQryReq_OrderNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderQryReq *arg1 = (ITapTrade::TapAPISpecialOrderQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderQryReq *)jarg1; 
  result = (char *) ((arg1)->OrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPISpecialOrderQryReq() {
  void * jresult ;
  ITapTrade::TapAPISpecialOrderQryReq *result = 0 ;
  
  result = (ITapTrade::TapAPISpecialOrderQryReq *)new ITapTrade::TapAPISpecialOrderQryReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPISpecialOrderQryReq(void * jarg1) {
  ITapTrade::TapAPISpecialOrderQryReq *arg1 = (ITapTrade::TapAPISpecialOrderQryReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderQryReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_SessionID_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_SessionID_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_ErrorCode_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->ErrorCode = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_ErrorCode_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->ErrorCode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_ErrorText_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorText, (const char *)arg2, 51-1);
      arg1->ErrorText[51-1] = 0;
    } else {
      arg1->ErrorText[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_ErrorText_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (char *) ((arg1)->ErrorText);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_ServerFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPICHAR arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPICHAR)jarg2; 
  if (arg1) (arg1)->ServerFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_ServerFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPICHAR result;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (ITapTrade::TAPICHAR) ((arg1)->ServerFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_OrderNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderNo, (const char *)arg2, 21-1);
      arg1->OrderNo[21-1] = 0;
    } else {
      arg1->OrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_OrderNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (char *) ((arg1)->OrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_ClientOrderNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientOrderNo, (const char *)arg2, 51-1);
      arg1->ClientOrderNo[51-1] = 0;
    } else {
      arg1->ClientOrderNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_ClientOrderNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (char *) ((arg1)->ClientOrderNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_SpecialOrderType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TapAPISpecialOrderTypeType arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TapAPISpecialOrderTypeType)jarg2; 
  if (arg1) (arg1)->SpecialOrderType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_SpecialOrderType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TapAPISpecialOrderTypeType result;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (ITapTrade::TapAPISpecialOrderTypeType) ((arg1)->SpecialOrderType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_OrderSource_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPIOrderSourceType arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIOrderSourceType)jarg2; 
  if (arg1) (arg1)->OrderSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_OrderSource_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPIOrderSourceType result;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIOrderSourceType) ((arg1)->OrderSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_CombineStrategy_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPICHAR *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombineStrategy, (const char *)arg2, 10-1);
      arg1->CombineStrategy[10-1] = 0;
    } else {
      arg1->CombineStrategy[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_CombineStrategy_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPICHAR *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (ITapTrade::TAPICHAR *) ((arg1)->CombineStrategy);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_CombineNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombineNo, (const char *)arg2, 51-1);
      arg1->CombineNo[51-1] = 0;
    } else {
      arg1->CombineNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_CombineNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (char *) ((arg1)->CombineNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_OrderQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_OrderQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->OrderQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_ContractNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_ContractNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_StrikePrice_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice, (const char *)arg2, 11-1);
      arg1->StrikePrice[11-1] = 0;
    } else {
      arg1->StrikePrice[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_StrikePrice_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (char *) ((arg1)->StrikePrice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_CallOrPutFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_CallOrPutFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_OrderSide1_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPISideType arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPISideType)jarg2; 
  if (arg1) (arg1)->OrderSide1 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_OrderSide1_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPISideType result;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (ITapTrade::TAPISideType) ((arg1)->OrderSide1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_CombineQty1_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->CombineQty1 = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_CombineQty1_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->CombineQty1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_HedgeFlag1_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPIHedgeFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag1 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_HedgeFlag1_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPIHedgeFlagType result;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIHedgeFlagType) ((arg1)->HedgeFlag1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_ContractNo2_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo2, (const char *)arg2, 11-1);
      arg1->ContractNo2[11-1] = 0;
    } else {
      arg1->ContractNo2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_ContractNo2_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (char *) ((arg1)->ContractNo2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_StrikePrice2_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice2, (const char *)arg2, 11-1);
      arg1->StrikePrice2[11-1] = 0;
    } else {
      arg1->StrikePrice2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_StrikePrice2_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (char *) ((arg1)->StrikePrice2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_CallOrPutFlag2_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_CallOrPutFlag2_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_OrderSide2_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPISideType arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPISideType)jarg2; 
  if (arg1) (arg1)->OrderSide2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_OrderSide2_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPISideType result;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (ITapTrade::TAPISideType) ((arg1)->OrderSide2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_CombineQty2_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->CombineQty2 = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_CombineQty2_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->CombineQty2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_HedgeFlag2_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPIHedgeFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_HedgeFlag2_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPIHedgeFlagType result;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIHedgeFlagType) ((arg1)->HedgeFlag2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_LicenseNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LicenseNo, (const char *)arg2, 51-1);
      arg1->LicenseNo[51-1] = 0;
    } else {
      arg1->LicenseNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_LicenseNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (char *) ((arg1)->LicenseNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_ClientLocalIP_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientLocalIP, (const char *)arg2, 41-1);
      arg1->ClientLocalIP[41-1] = 0;
    } else {
      arg1->ClientLocalIP[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_ClientLocalIP_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (char *) ((arg1)->ClientLocalIP);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_ClientMac_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientMac, (const char *)arg2, 13-1);
      arg1->ClientMac[13-1] = 0;
    } else {
      arg1->ClientMac[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_ClientMac_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (char *) ((arg1)->ClientMac);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_ClientIP_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientIP, (const char *)arg2, 41-1);
      arg1->ClientIP[41-1] = 0;
    } else {
      arg1->ClientIP[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_ClientIP_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (char *) ((arg1)->ClientIP);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_OrderStreamID_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->OrderStreamID = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_OrderStreamID_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->OrderStreamID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_UpperNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperNo, (const char *)arg2, 11-1);
      arg1->UpperNo[11-1] = 0;
    } else {
      arg1->UpperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_UpperNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (char *) ((arg1)->UpperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_UpperChannelNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperChannelNo, (const char *)arg2, 11-1);
      arg1->UpperChannelNo[11-1] = 0;
    } else {
      arg1->UpperChannelNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_UpperChannelNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (char *) ((arg1)->UpperChannelNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_OrderLocalNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalNo, (const char *)arg2, 21-1);
      arg1->OrderLocalNo[21-1] = 0;
    } else {
      arg1->OrderLocalNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_OrderLocalNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (char *) ((arg1)->OrderLocalNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_OrderSystemNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSystemNo, (const char *)arg2, 51-1);
      arg1->OrderSystemNo[51-1] = 0;
    } else {
      arg1->OrderSystemNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_OrderSystemNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (char *) ((arg1)->OrderSystemNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_OrderExchangeSystemNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderExchangeSystemNo, (const char *)arg2, 51-1);
      arg1->OrderExchangeSystemNo[51-1] = 0;
    } else {
      arg1->OrderExchangeSystemNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_OrderExchangeSystemNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (char *) ((arg1)->OrderExchangeSystemNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_OrderInsertUserNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderInsertUserNo, (const char *)arg2, 21-1);
      arg1->OrderInsertUserNo[21-1] = 0;
    } else {
      arg1->OrderInsertUserNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_OrderInsertUserNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (char *) ((arg1)->OrderInsertUserNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_OrderInsertTime_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderInsertTime, (const char *)arg2, 20-1);
      arg1->OrderInsertTime[20-1] = 0;
    } else {
      arg1->OrderInsertTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_OrderInsertTime_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (char *) ((arg1)->OrderInsertTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_OrderState_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPIOrderStateType arg2 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIOrderStateType)jarg2; 
  if (arg1) (arg1)->OrderState = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPISpecialOrderInfo_OrderState_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  ITapTrade::TAPIOrderStateType result;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  result = (ITapTrade::TAPIOrderStateType) ((arg1)->OrderState);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPISpecialOrderInfo() {
  void * jresult ;
  ITapTrade::TapAPISpecialOrderInfo *result = 0 ;
  
  result = (ITapTrade::TapAPISpecialOrderInfo *)new ITapTrade::TapAPISpecialOrderInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPISpecialOrderInfo(void * jarg1) {
  ITapTrade::TapAPISpecialOrderInfo *arg1 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  
  arg1 = (ITapTrade::TapAPISpecialOrderInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionQryReq_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICombinePositionQryReq *arg1 = (ITapTrade::TapAPICombinePositionQryReq *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionQryReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICombinePositionQryReq_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICombinePositionQryReq *arg1 = (ITapTrade::TapAPICombinePositionQryReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionQryReq *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPICombinePositionQryReq() {
  void * jresult ;
  ITapTrade::TapAPICombinePositionQryReq *result = 0 ;
  
  result = (ITapTrade::TapAPICombinePositionQryReq *)new ITapTrade::TapAPICombinePositionQryReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPICombinePositionQryReq(void * jarg1) {
  ITapTrade::TapAPICombinePositionQryReq *arg1 = (ITapTrade::TapAPICombinePositionQryReq *) 0 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionQryReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_AccountNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountNo, (const char *)arg2, 21-1);
      arg1->AccountNo[21-1] = 0;
    } else {
      arg1->AccountNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICombinePositionInfo_AccountNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (char *) ((arg1)->AccountNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_PositionStreamID_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->PositionStreamID = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPICombinePositionInfo_PositionStreamID_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->PositionStreamID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_ServerFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPICHAR arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPICHAR)jarg2; 
  if (arg1) (arg1)->ServerFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICombinePositionInfo_ServerFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPICHAR result;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (ITapTrade::TAPICHAR) ((arg1)->ServerFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_UpperNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpperNo, (const char *)arg2, 11-1);
      arg1->UpperNo[11-1] = 0;
    } else {
      arg1->UpperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICombinePositionInfo_UpperNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (char *) ((arg1)->UpperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_CombineStrategy_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPICHAR *arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombineStrategy, (const char *)arg2, 10-1);
      arg1->CombineStrategy[10-1] = 0;
    } else {
      arg1->CombineStrategy[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICombinePositionInfo_CombineStrategy_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPICHAR *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (ITapTrade::TAPICHAR *) ((arg1)->CombineStrategy);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_CombineNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombineNo, (const char *)arg2, 51-1);
      arg1->CombineNo[51-1] = 0;
    } else {
      arg1->CombineNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICombinePositionInfo_CombineNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (char *) ((arg1)->CombineNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_PositionQty_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->PositionQty = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPICombinePositionInfo_PositionQty_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->PositionQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_ExchangeNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICombinePositionInfo_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_CommodityType_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPICommodityType arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICombinePositionInfo_CommodityType_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPICommodityType result;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (ITapTrade::TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_CommodityNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICombinePositionInfo_CommodityNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_ContractNo_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo, (const char *)arg2, 11-1);
      arg1->ContractNo[11-1] = 0;
    } else {
      arg1->ContractNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICombinePositionInfo_ContractNo_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (char *) ((arg1)->ContractNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_StrikePrice_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice, (const char *)arg2, 11-1);
      arg1->StrikePrice[11-1] = 0;
    } else {
      arg1->StrikePrice[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICombinePositionInfo_StrikePrice_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (char *) ((arg1)->StrikePrice);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_CallOrPutFlag_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICombinePositionInfo_CallOrPutFlag_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_OrderSide1_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPISideType arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPISideType)jarg2; 
  if (arg1) (arg1)->OrderSide1 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICombinePositionInfo_OrderSide1_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPISideType result;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (ITapTrade::TAPISideType) ((arg1)->OrderSide1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_CombineQty1_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->CombineQty1 = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPICombinePositionInfo_CombineQty1_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->CombineQty1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_HedgeFlag1_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPIHedgeFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag1 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICombinePositionInfo_HedgeFlag1_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPIHedgeFlagType result;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (ITapTrade::TAPIHedgeFlagType) ((arg1)->HedgeFlag1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_ContractNo2_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo2, (const char *)arg2, 11-1);
      arg1->ContractNo2[11-1] = 0;
    } else {
      arg1->ContractNo2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICombinePositionInfo_ContractNo2_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (char *) ((arg1)->ContractNo2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_StrikePrice2_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice2, (const char *)arg2, 11-1);
      arg1->StrikePrice2[11-1] = 0;
    } else {
      arg1->StrikePrice2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICombinePositionInfo_StrikePrice2_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (char *) ((arg1)->StrikePrice2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_CallOrPutFlag2_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPICallOrPutFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICombinePositionInfo_CallOrPutFlag2_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPICallOrPutFlagType result;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (ITapTrade::TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_OrderSide2_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPISideType arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPISideType)jarg2; 
  if (arg1) (arg1)->OrderSide2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICombinePositionInfo_OrderSide2_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPISideType result;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (ITapTrade::TAPISideType) ((arg1)->OrderSide2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_CombineQty2_set(void * jarg1, unsigned int jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  if (arg1) (arg1)->CombineQty2 = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPICombinePositionInfo_CombineQty2_get(void * jarg1) {
  unsigned int jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPIUINT32 result;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (ITapTrade::TAPIUINT32) ((arg1)->CombineQty2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_HedgeFlag2_set(void * jarg1, char jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPIHedgeFlagType arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICombinePositionInfo_HedgeFlag2_get(void * jarg1) {
  char jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPIHedgeFlagType result;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (ITapTrade::TAPIHedgeFlagType) ((arg1)->HedgeFlag2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_CommodityCurrencyGroup_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityCurrencyGroup, (const char *)arg2, 11-1);
      arg1->CommodityCurrencyGroup[11-1] = 0;
    } else {
      arg1->CommodityCurrencyGroup[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICombinePositionInfo_CommodityCurrencyGroup_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityCurrencyGroup);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_CommodityCurrency_set(void * jarg1, char * jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityCurrency, (const char *)arg2, 11-1);
      arg1->CommodityCurrency[11-1] = 0;
    } else {
      arg1->CommodityCurrency[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICombinePositionInfo_CommodityCurrency_get(void * jarg1) {
  char * jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityCurrency);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_AccountInitialMargin_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->AccountInitialMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPICombinePositionInfo_AccountInitialMargin_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->AccountInitialMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_AccountMaintenanceMargin_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->AccountMaintenanceMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPICombinePositionInfo_AccountMaintenanceMargin_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->AccountMaintenanceMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_UpperInitialMargin_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->UpperInitialMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPICombinePositionInfo_UpperInitialMargin_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->UpperInitialMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICombinePositionInfo_UpperMaintenanceMargin_set(void * jarg1, double jarg2) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPIREAL64 arg2 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIREAL64)jarg2; 
  if (arg1) (arg1)->UpperMaintenanceMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPICombinePositionInfo_UpperMaintenanceMargin_get(void * jarg1) {
  double jresult ;
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  ITapTrade::TAPIREAL64 result;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  result = (ITapTrade::TAPIREAL64) ((arg1)->UpperMaintenanceMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPICombinePositionInfo() {
  void * jresult ;
  ITapTrade::TapAPICombinePositionInfo *result = 0 ;
  
  result = (ITapTrade::TapAPICombinePositionInfo *)new ITapTrade::TapAPICombinePositionInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPICombinePositionInfo(void * jarg1) {
  ITapTrade::TapAPICombinePositionInfo *arg1 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  
  arg1 = (ITapTrade::TapAPICombinePositionInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnConnect(void * jarg1) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  (arg1)->OnConnect();
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspLogin(void * jarg1, int jarg2, void * jarg3) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIINT32 arg2 ;
  ITapTrade::TapAPITradeLoginRspInfo *arg3 = (ITapTrade::TapAPITradeLoginRspInfo *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIINT32)jarg2; 
  arg3 = (ITapTrade::TapAPITradeLoginRspInfo *)jarg3; 
  (arg1)->OnRspLogin(arg2,(ITapTrade::TapAPITradeLoginRspInfo const *)arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRtnContactInfo(void * jarg1, int jarg2, char jarg3, char * jarg4) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIINT32 arg2 ;
  ITapTrade::TAPIYNFLAG arg3 ;
  char *arg4 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIINT32)jarg2; 
  arg3 = (ITapTrade::TAPIYNFLAG)jarg3; 
  arg4 = (char *)jarg4; 
  (arg1)->OnRtnContactInfo(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspRequestVertificateCode(void * jarg1, unsigned int jarg2, int jarg3, void * jarg4) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TapAPIRequestVertificateCodeRsp *arg4 = (ITapTrade::TapAPIRequestVertificateCodeRsp *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TapAPIRequestVertificateCodeRsp *)jarg4; 
  (arg1)->OnRspRequestVertificateCode(arg2,arg3,(ITapTrade::TapAPIRequestVertificateCodeRsp const *)arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnExpriationDate(void * jarg1, char * jarg2, int jarg3) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  char *arg2 ;
  int arg3 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (char *)jarg2; 
  arg3 = (int)jarg3; 
  (arg1)->OnExpriationDate(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnAPIReady(void * jarg1, int jarg2) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIINT32 arg2 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIINT32)jarg2; 
  (arg1)->OnAPIReady(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnDisconnect(void * jarg1, int jarg2) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIINT32 arg2 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIINT32)jarg2; 
  (arg1)->OnDisconnect(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspChangePassword(void * jarg1, unsigned int jarg2, int jarg3) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  (arg1)->OnRspChangePassword(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspAuthPassword(void * jarg1, unsigned int jarg2, int jarg3) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  (arg1)->OnRspAuthPassword(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryTradingDate(void * jarg1, unsigned int jarg2, int jarg3, void * jarg4) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TapAPITradingCalendarQryRsp *arg4 = (ITapTrade::TapAPITradingCalendarQryRsp *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TapAPITradingCalendarQryRsp *)jarg4; 
  (arg1)->OnRspQryTradingDate(arg2,arg3,(ITapTrade::TapAPITradingCalendarQryRsp const *)arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspSetReservedInfo(void * jarg1, unsigned int jarg2, int jarg3, char * jarg4) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  char *arg4 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (char *)jarg4; 
  (arg1)->OnRspSetReservedInfo(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryAccount(void * jarg1, unsigned int jarg2, unsigned int jarg3, char jarg4, void * jarg5) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIUINT32 arg3 ;
  ITapTrade::TAPIYNFLAG arg4 ;
  ITapTrade::TapAPIAccountInfo *arg5 = (ITapTrade::TapAPIAccountInfo *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIUINT32)jarg3; 
  arg4 = (ITapTrade::TAPIYNFLAG)jarg4; 
  arg5 = (ITapTrade::TapAPIAccountInfo *)jarg5; 
  (arg1)->OnRspQryAccount(arg2,arg3,arg4,(ITapTrade::TapAPIAccountInfo const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryFund(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TAPIYNFLAG arg4 ;
  ITapTrade::TapAPIFundData *arg5 = (ITapTrade::TapAPIFundData *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TAPIYNFLAG)jarg4; 
  arg5 = (ITapTrade::TapAPIFundData *)jarg5; 
  (arg1)->OnRspQryFund(arg2,arg3,arg4,(ITapTrade::TapAPIFundData const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRtnFund(void * jarg1, void * jarg2) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TapAPIFundData *arg2 = (ITapTrade::TapAPIFundData *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TapAPIFundData *)jarg2; 
  (arg1)->OnRtnFund((ITapTrade::TapAPIFundData const *)arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryExchange(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TAPIYNFLAG arg4 ;
  ITapTrade::TapAPIExchangeInfo *arg5 = (ITapTrade::TapAPIExchangeInfo *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TAPIYNFLAG)jarg4; 
  arg5 = (ITapTrade::TapAPIExchangeInfo *)jarg5; 
  (arg1)->OnRspQryExchange(arg2,arg3,arg4,(ITapTrade::TapAPIExchangeInfo const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryCommodity(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TAPIYNFLAG arg4 ;
  ITapTrade::TapAPICommodityInfo *arg5 = (ITapTrade::TapAPICommodityInfo *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TAPIYNFLAG)jarg4; 
  arg5 = (ITapTrade::TapAPICommodityInfo *)jarg5; 
  (arg1)->OnRspQryCommodity(arg2,arg3,arg4,(ITapTrade::TapAPICommodityInfo const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryContract(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TAPIYNFLAG arg4 ;
  ITapTrade::TapAPITradeContractInfo *arg5 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TAPIYNFLAG)jarg4; 
  arg5 = (ITapTrade::TapAPITradeContractInfo *)jarg5; 
  (arg1)->OnRspQryContract(arg2,arg3,arg4,(ITapTrade::TapAPITradeContractInfo const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRtnContract(void * jarg1, void * jarg2) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TapAPITradeContractInfo *arg2 = (ITapTrade::TapAPITradeContractInfo *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TapAPITradeContractInfo *)jarg2; 
  (arg1)->OnRtnContract((ITapTrade::TapAPITradeContractInfo const *)arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspOrderAction(void * jarg1, unsigned int jarg2, int jarg3, void * jarg4) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TapAPIOrderActionRsp *arg4 = (ITapTrade::TapAPIOrderActionRsp *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TapAPIOrderActionRsp *)jarg4; 
  (arg1)->OnRspOrderAction(arg2,arg3,(ITapTrade::TapAPIOrderActionRsp const *)arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRtnOrder(void * jarg1, void * jarg2) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TapAPIOrderInfoNotice *arg2 = (ITapTrade::TapAPIOrderInfoNotice *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TapAPIOrderInfoNotice *)jarg2; 
  (arg1)->OnRtnOrder((ITapTrade::TapAPIOrderInfoNotice const *)arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryOrder(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TAPIYNFLAG arg4 ;
  ITapTrade::TapAPIOrderInfo *arg5 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TAPIYNFLAG)jarg4; 
  arg5 = (ITapTrade::TapAPIOrderInfo *)jarg5; 
  (arg1)->OnRspQryOrder(arg2,arg3,arg4,(ITapTrade::TapAPIOrderInfo const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryOrderProcess(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TAPIYNFLAG arg4 ;
  ITapTrade::TapAPIOrderInfo *arg5 = (ITapTrade::TapAPIOrderInfo *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TAPIYNFLAG)jarg4; 
  arg5 = (ITapTrade::TapAPIOrderInfo *)jarg5; 
  (arg1)->OnRspQryOrderProcess(arg2,arg3,arg4,(ITapTrade::TapAPIOrderInfo const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryFill(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TAPIYNFLAG arg4 ;
  ITapTrade::TapAPIFillInfo *arg5 = (ITapTrade::TapAPIFillInfo *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TAPIYNFLAG)jarg4; 
  arg5 = (ITapTrade::TapAPIFillInfo *)jarg5; 
  (arg1)->OnRspQryFill(arg2,arg3,arg4,(ITapTrade::TapAPIFillInfo const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRtnFill(void * jarg1, void * jarg2) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TapAPIFillInfo *arg2 = (ITapTrade::TapAPIFillInfo *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TapAPIFillInfo *)jarg2; 
  (arg1)->OnRtnFill((ITapTrade::TapAPIFillInfo const *)arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryPosition(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TAPIYNFLAG arg4 ;
  ITapTrade::TapAPIPositionInfo *arg5 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TAPIYNFLAG)jarg4; 
  arg5 = (ITapTrade::TapAPIPositionInfo *)jarg5; 
  (arg1)->OnRspQryPosition(arg2,arg3,arg4,(ITapTrade::TapAPIPositionInfo const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRtnPosition(void * jarg1, void * jarg2) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TapAPIPositionInfo *arg2 = (ITapTrade::TapAPIPositionInfo *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TapAPIPositionInfo *)jarg2; 
  (arg1)->OnRtnPosition((ITapTrade::TapAPIPositionInfo const *)arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryPositionSummary(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TAPIYNFLAG arg4 ;
  ITapTrade::TapAPIPositionSummary *arg5 = (ITapTrade::TapAPIPositionSummary *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TAPIYNFLAG)jarg4; 
  arg5 = (ITapTrade::TapAPIPositionSummary *)jarg5; 
  (arg1)->OnRspQryPositionSummary(arg2,arg3,arg4,(ITapTrade::TapAPIPositionSummary const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRtnPositionSummary(void * jarg1, void * jarg2) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TapAPIPositionSummary *arg2 = (ITapTrade::TapAPIPositionSummary *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TapAPIPositionSummary *)jarg2; 
  (arg1)->OnRtnPositionSummary((ITapTrade::TapAPIPositionSummary const *)arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRtnPositionProfit(void * jarg1, void * jarg2) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TapAPIPositionProfitNotice *arg2 = (ITapTrade::TapAPIPositionProfitNotice *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TapAPIPositionProfitNotice *)jarg2; 
  (arg1)->OnRtnPositionProfit((ITapTrade::TapAPIPositionProfitNotice const *)arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryCurrency(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TAPIYNFLAG arg4 ;
  ITapTrade::TapAPICurrencyInfo *arg5 = (ITapTrade::TapAPICurrencyInfo *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TAPIYNFLAG)jarg4; 
  arg5 = (ITapTrade::TapAPICurrencyInfo *)jarg5; 
  (arg1)->OnRspQryCurrency(arg2,arg3,arg4,(ITapTrade::TapAPICurrencyInfo const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryTradeMessage(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TAPIYNFLAG arg4 ;
  ITapTrade::TapAPITradeMessage *arg5 = (ITapTrade::TapAPITradeMessage *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TAPIYNFLAG)jarg4; 
  arg5 = (ITapTrade::TapAPITradeMessage *)jarg5; 
  (arg1)->OnRspQryTradeMessage(arg2,arg3,arg4,(ITapTrade::TapAPITradeMessage const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRtnTradeMessage(void * jarg1, void * jarg2) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TapAPITradeMessage *arg2 = (ITapTrade::TapAPITradeMessage *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TapAPITradeMessage *)jarg2; 
  (arg1)->OnRtnTradeMessage((ITapTrade::TapAPITradeMessage const *)arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryHisOrder(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TAPIYNFLAG arg4 ;
  ITapTrade::TapAPIHisOrderQryRsp *arg5 = (ITapTrade::TapAPIHisOrderQryRsp *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TAPIYNFLAG)jarg4; 
  arg5 = (ITapTrade::TapAPIHisOrderQryRsp *)jarg5; 
  (arg1)->OnRspQryHisOrder(arg2,arg3,arg4,(ITapTrade::TapAPIHisOrderQryRsp const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryHisOrderProcess(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TAPIYNFLAG arg4 ;
  ITapTrade::TapAPIHisOrderProcessQryRsp *arg5 = (ITapTrade::TapAPIHisOrderProcessQryRsp *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TAPIYNFLAG)jarg4; 
  arg5 = (ITapTrade::TapAPIHisOrderProcessQryRsp *)jarg5; 
  (arg1)->OnRspQryHisOrderProcess(arg2,arg3,arg4,(ITapTrade::TapAPIHisOrderProcessQryRsp const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryHisMatch(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TAPIYNFLAG arg4 ;
  ITapTrade::TapAPIHisMatchQryRsp *arg5 = (ITapTrade::TapAPIHisMatchQryRsp *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TAPIYNFLAG)jarg4; 
  arg5 = (ITapTrade::TapAPIHisMatchQryRsp *)jarg5; 
  (arg1)->OnRspQryHisMatch(arg2,arg3,arg4,(ITapTrade::TapAPIHisMatchQryRsp const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryHisPosition(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TAPIYNFLAG arg4 ;
  ITapTrade::TapAPIHisPositionQryRsp *arg5 = (ITapTrade::TapAPIHisPositionQryRsp *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TAPIYNFLAG)jarg4; 
  arg5 = (ITapTrade::TapAPIHisPositionQryRsp *)jarg5; 
  (arg1)->OnRspQryHisPosition(arg2,arg3,arg4,(ITapTrade::TapAPIHisPositionQryRsp const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryHisDelivery(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TAPIYNFLAG arg4 ;
  ITapTrade::TapAPIHisDeliveryQryRsp *arg5 = (ITapTrade::TapAPIHisDeliveryQryRsp *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TAPIYNFLAG)jarg4; 
  arg5 = (ITapTrade::TapAPIHisDeliveryQryRsp *)jarg5; 
  (arg1)->OnRspQryHisDelivery(arg2,arg3,arg4,(ITapTrade::TapAPIHisDeliveryQryRsp const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryAccountCashAdjust(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TAPIYNFLAG arg4 ;
  ITapTrade::TapAPIAccountCashAdjustQryRsp *arg5 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TAPIYNFLAG)jarg4; 
  arg5 = (ITapTrade::TapAPIAccountCashAdjustQryRsp *)jarg5; 
  (arg1)->OnRspQryAccountCashAdjust(arg2,arg3,arg4,(ITapTrade::TapAPIAccountCashAdjustQryRsp const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryBill(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TAPIYNFLAG arg4 ;
  ITapTrade::TapAPIBillQryRsp *arg5 = (ITapTrade::TapAPIBillQryRsp *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TAPIYNFLAG)jarg4; 
  arg5 = (ITapTrade::TapAPIBillQryRsp *)jarg5; 
  (arg1)->OnRspQryBill(arg2,arg3,arg4,(ITapTrade::TapAPIBillQryRsp const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryAccountFeeRent(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TAPIYNFLAG arg4 ;
  ITapTrade::TapAPIAccountFeeRentQryRsp *arg5 = (ITapTrade::TapAPIAccountFeeRentQryRsp *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TAPIYNFLAG)jarg4; 
  arg5 = (ITapTrade::TapAPIAccountFeeRentQryRsp *)jarg5; 
  (arg1)->OnRspQryAccountFeeRent(arg2,arg3,arg4,(ITapTrade::TapAPIAccountFeeRentQryRsp const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryAccountMarginRent(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TAPIYNFLAG arg4 ;
  ITapTrade::TapAPIAccountMarginRentQryRsp *arg5 = (ITapTrade::TapAPIAccountMarginRentQryRsp *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TAPIYNFLAG)jarg4; 
  arg5 = (ITapTrade::TapAPIAccountMarginRentQryRsp *)jarg5; 
  (arg1)->OnRspQryAccountMarginRent(arg2,arg3,arg4,(ITapTrade::TapAPIAccountMarginRentQryRsp const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspHKMarketOrderInsert(void * jarg1, unsigned int jarg2, int jarg3, void * jarg4) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TapAPIOrderMarketInsertRsp *arg4 = (ITapTrade::TapAPIOrderMarketInsertRsp *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TapAPIOrderMarketInsertRsp *)jarg4; 
  (arg1)->OnRspHKMarketOrderInsert(arg2,arg3,(ITapTrade::TapAPIOrderMarketInsertRsp const *)arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspHKMarketOrderDelete(void * jarg1, unsigned int jarg2, int jarg3, void * jarg4) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TapAPIOrderMarketDeleteRsp *arg4 = (ITapTrade::TapAPIOrderMarketDeleteRsp *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TapAPIOrderMarketDeleteRsp *)jarg4; 
  (arg1)->OnRspHKMarketOrderDelete(arg2,arg3,(ITapTrade::TapAPIOrderMarketDeleteRsp const *)arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnHKMarketQuoteNotice(void * jarg1, void * jarg2) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TapAPIOrderQuoteMarketNotice *arg2 = (ITapTrade::TapAPIOrderQuoteMarketNotice *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TapAPIOrderQuoteMarketNotice *)jarg2; 
  (arg1)->OnHKMarketQuoteNotice((ITapTrade::TapAPIOrderQuoteMarketNotice const *)arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspOrderLocalRemove(void * jarg1, unsigned int jarg2, int jarg3, void * jarg4) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TapAPIOrderLocalRemoveRsp *arg4 = (ITapTrade::TapAPIOrderLocalRemoveRsp *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TapAPIOrderLocalRemoveRsp *)jarg4; 
  (arg1)->OnRspOrderLocalRemove(arg2,arg3,(ITapTrade::TapAPIOrderLocalRemoveRsp const *)arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspOrderLocalInput(void * jarg1, unsigned int jarg2, int jarg3, void * jarg4) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TapAPIOrderLocalInputRsp *arg4 = (ITapTrade::TapAPIOrderLocalInputRsp *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TapAPIOrderLocalInputRsp *)jarg4; 
  (arg1)->OnRspOrderLocalInput(arg2,arg3,(ITapTrade::TapAPIOrderLocalInputRsp const *)arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspOrderLocalModify(void * jarg1, unsigned int jarg2, int jarg3, void * jarg4) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TapAPIOrderLocalModifyRsp *arg4 = (ITapTrade::TapAPIOrderLocalModifyRsp *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TapAPIOrderLocalModifyRsp *)jarg4; 
  (arg1)->OnRspOrderLocalModify(arg2,arg3,(ITapTrade::TapAPIOrderLocalModifyRsp const *)arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspOrderLocalTransfer(void * jarg1, unsigned int jarg2, int jarg3, void * jarg4) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TapAPIOrderLocalTransferRsp *arg4 = (ITapTrade::TapAPIOrderLocalTransferRsp *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TapAPIOrderLocalTransferRsp *)jarg4; 
  (arg1)->OnRspOrderLocalTransfer(arg2,arg3,(ITapTrade::TapAPIOrderLocalTransferRsp const *)arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspFillLocalInput(void * jarg1, unsigned int jarg2, int jarg3, void * jarg4) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TapAPIFillLocalInputRsp *arg4 = (ITapTrade::TapAPIFillLocalInputRsp *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TapAPIFillLocalInputRsp *)jarg4; 
  (arg1)->OnRspFillLocalInput(arg2,arg3,(ITapTrade::TapAPIFillLocalInputRsp const *)arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspFillLocalRemove(void * jarg1, unsigned int jarg2, int jarg3, void * jarg4) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TapAPIFillLocalRemoveRsp *arg4 = (ITapTrade::TapAPIFillLocalRemoveRsp *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TapAPIFillLocalRemoveRsp *)jarg4; 
  (arg1)->OnRspFillLocalRemove(arg2,arg3,(ITapTrade::TapAPIFillLocalRemoveRsp const *)arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQrySpotLock(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TAPIYNFLAG arg4 ;
  ITapTrade::TapAPISpotLockDataRsp *arg5 = (ITapTrade::TapAPISpotLockDataRsp *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TAPIYNFLAG)jarg4; 
  arg5 = (ITapTrade::TapAPISpotLockDataRsp *)jarg5; 
  (arg1)->OnRspQrySpotLock(arg2,arg3,arg4,(ITapTrade::TapAPISpotLockDataRsp const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRtnSpotLock(void * jarg1, void * jarg2) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TapAPISpotLockDataRsp *arg2 = (ITapTrade::TapAPISpotLockDataRsp *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TapAPISpotLockDataRsp *)jarg2; 
  (arg1)->OnRtnSpotLock((ITapTrade::TapAPISpotLockDataRsp const *)arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspSubmitUserLoginInfo(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TAPIYNFLAG arg4 ;
  ITapTrade::TapAPISubmitUserLoginRspInfo *arg5 = (ITapTrade::TapAPISubmitUserLoginRspInfo *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TAPIYNFLAG)jarg4; 
  arg5 = (ITapTrade::TapAPISubmitUserLoginRspInfo *)jarg5; 
  (arg1)->OnRspSubmitUserLoginInfo(arg2,arg3,arg4,(ITapTrade::TapAPISubmitUserLoginRspInfo const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspSpecialOrderAction(void * jarg1, unsigned int jarg2, int jarg3, void * jarg4) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TapAPISpecialOrderInfo *arg4 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TapAPISpecialOrderInfo *)jarg4; 
  (arg1)->OnRspSpecialOrderAction(arg2,arg3,(ITapTrade::TapAPISpecialOrderInfo const *)arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRtnSpecialOrder(void * jarg1, void * jarg2) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TapAPISpecialOrderInfo *arg2 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TapAPISpecialOrderInfo *)jarg2; 
  (arg1)->OnRtnSpecialOrder((ITapTrade::TapAPISpecialOrderInfo const *)arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQrySpecialOrder(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TAPIYNFLAG arg4 ;
  ITapTrade::TapAPISpecialOrderInfo *arg5 = (ITapTrade::TapAPISpecialOrderInfo *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TAPIYNFLAG)jarg4; 
  arg5 = (ITapTrade::TapAPISpecialOrderInfo *)jarg5; 
  (arg1)->OnRspQrySpecialOrder(arg2,arg3,arg4,(ITapTrade::TapAPISpecialOrderInfo const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRspQryCombinePosition(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIUINT32 arg2 ;
  ITapTrade::TAPIINT32 arg3 ;
  ITapTrade::TAPIYNFLAG arg4 ;
  ITapTrade::TapAPICombinePositionInfo *arg5 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32)jarg2; 
  arg3 = (ITapTrade::TAPIINT32)jarg3; 
  arg4 = (ITapTrade::TAPIYNFLAG)jarg4; 
  arg5 = (ITapTrade::TapAPICombinePositionInfo *)jarg5; 
  (arg1)->OnRspQryCombinePosition(arg2,arg3,arg4,(ITapTrade::TapAPICombinePositionInfo const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_OnRtnCombinePosition(void * jarg1, void * jarg2) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TapAPICombinePositionInfo *arg2 = (ITapTrade::TapAPICombinePositionInfo *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  arg2 = (ITapTrade::TapAPICombinePositionInfo *)jarg2; 
  (arg1)->OnRtnCombinePosition((ITapTrade::TapAPICombinePositionInfo const *)arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_ITapTradeAPINotify() {
  void * jresult ;
  ITapTrade::ITapTradeAPINotify *result = 0 ;
  
  result = (ITapTrade::ITapTradeAPINotify *)new SwigDirector_ITapTradeAPINotify();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_ITapTradeAPINotify(void * jarg1) {
  ITapTrade::ITapTradeAPINotify *arg1 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPINotify *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPINotify_director_connect(void *objarg, SwigDirector_ITapTradeAPINotify::SWIG_Callback0_t callback0, SwigDirector_ITapTradeAPINotify::SWIG_Callback1_t callback1, SwigDirector_ITapTradeAPINotify::SWIG_Callback2_t callback2, SwigDirector_ITapTradeAPINotify::SWIG_Callback3_t callback3, SwigDirector_ITapTradeAPINotify::SWIG_Callback4_t callback4, SwigDirector_ITapTradeAPINotify::SWIG_Callback5_t callback5, SwigDirector_ITapTradeAPINotify::SWIG_Callback6_t callback6, SwigDirector_ITapTradeAPINotify::SWIG_Callback7_t callback7, SwigDirector_ITapTradeAPINotify::SWIG_Callback8_t callback8, SwigDirector_ITapTradeAPINotify::SWIG_Callback9_t callback9, SwigDirector_ITapTradeAPINotify::SWIG_Callback10_t callback10, SwigDirector_ITapTradeAPINotify::SWIG_Callback11_t callback11, SwigDirector_ITapTradeAPINotify::SWIG_Callback12_t callback12, SwigDirector_ITapTradeAPINotify::SWIG_Callback13_t callback13, SwigDirector_ITapTradeAPINotify::SWIG_Callback14_t callback14, SwigDirector_ITapTradeAPINotify::SWIG_Callback15_t callback15, SwigDirector_ITapTradeAPINotify::SWIG_Callback16_t callback16, SwigDirector_ITapTradeAPINotify::SWIG_Callback17_t callback17, SwigDirector_ITapTradeAPINotify::SWIG_Callback18_t callback18, SwigDirector_ITapTradeAPINotify::SWIG_Callback19_t callback19, SwigDirector_ITapTradeAPINotify::SWIG_Callback20_t callback20, SwigDirector_ITapTradeAPINotify::SWIG_Callback21_t callback21, SwigDirector_ITapTradeAPINotify::SWIG_Callback22_t callback22, SwigDirector_ITapTradeAPINotify::SWIG_Callback23_t callback23, SwigDirector_ITapTradeAPINotify::SWIG_Callback24_t callback24, SwigDirector_ITapTradeAPINotify::SWIG_Callback25_t callback25, SwigDirector_ITapTradeAPINotify::SWIG_Callback26_t callback26, SwigDirector_ITapTradeAPINotify::SWIG_Callback27_t callback27, SwigDirector_ITapTradeAPINotify::SWIG_Callback28_t callback28, SwigDirector_ITapTradeAPINotify::SWIG_Callback29_t callback29, SwigDirector_ITapTradeAPINotify::SWIG_Callback30_t callback30, SwigDirector_ITapTradeAPINotify::SWIG_Callback31_t callback31, SwigDirector_ITapTradeAPINotify::SWIG_Callback32_t callback32, SwigDirector_ITapTradeAPINotify::SWIG_Callback33_t callback33, SwigDirector_ITapTradeAPINotify::SWIG_Callback34_t callback34, SwigDirector_ITapTradeAPINotify::SWIG_Callback35_t callback35, SwigDirector_ITapTradeAPINotify::SWIG_Callback36_t callback36, SwigDirector_ITapTradeAPINotify::SWIG_Callback37_t callback37, SwigDirector_ITapTradeAPINotify::SWIG_Callback38_t callback38, SwigDirector_ITapTradeAPINotify::SWIG_Callback39_t callback39, SwigDirector_ITapTradeAPINotify::SWIG_Callback40_t callback40, SwigDirector_ITapTradeAPINotify::SWIG_Callback41_t callback41, SwigDirector_ITapTradeAPINotify::SWIG_Callback42_t callback42, SwigDirector_ITapTradeAPINotify::SWIG_Callback43_t callback43, SwigDirector_ITapTradeAPINotify::SWIG_Callback44_t callback44, SwigDirector_ITapTradeAPINotify::SWIG_Callback45_t callback45, SwigDirector_ITapTradeAPINotify::SWIG_Callback46_t callback46, SwigDirector_ITapTradeAPINotify::SWIG_Callback47_t callback47, SwigDirector_ITapTradeAPINotify::SWIG_Callback48_t callback48, SwigDirector_ITapTradeAPINotify::SWIG_Callback49_t callback49, SwigDirector_ITapTradeAPINotify::SWIG_Callback50_t callback50, SwigDirector_ITapTradeAPINotify::SWIG_Callback51_t callback51, SwigDirector_ITapTradeAPINotify::SWIG_Callback52_t callback52, SwigDirector_ITapTradeAPINotify::SWIG_Callback53_t callback53, SwigDirector_ITapTradeAPINotify::SWIG_Callback54_t callback54, SwigDirector_ITapTradeAPINotify::SWIG_Callback55_t callback55, SwigDirector_ITapTradeAPINotify::SWIG_Callback56_t callback56, SwigDirector_ITapTradeAPINotify::SWIG_Callback57_t callback57) {
  ITapTrade::ITapTradeAPINotify *obj = (ITapTrade::ITapTradeAPINotify *)objarg;
  SwigDirector_ITapTradeAPINotify *director = dynamic_cast<SwigDirector_ITapTradeAPINotify *>(obj);
  if (director) {
    director->swig_connect_director(callback0, callback1, callback2, callback3, callback4, callback5, callback6, callback7, callback8, callback9, callback10, callback11, callback12, callback13, callback14, callback15, callback16, callback17, callback18, callback19, callback20, callback21, callback22, callback23, callback24, callback25, callback26, callback27, callback28, callback29, callback30, callback31, callback32, callback33, callback34, callback35, callback36, callback37, callback38, callback39, callback40, callback41, callback42, callback43, callback44, callback45, callback46, callback47, callback48, callback49, callback50, callback51, callback52, callback53, callback54, callback55, callback56, callback57);
  }
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_SetAPINotify(void * jarg1, void * jarg2) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::ITapTradeAPINotify *arg2 = (ITapTrade::ITapTradeAPINotify *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::ITapTradeAPINotify *)jarg2; 
  result = (ITapTrade::TAPIINT32)(arg1)->SetAPINotify(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_SetHostAddress__SWIG_0(void * jarg1, char * jarg2, unsigned short jarg3, unsigned int jarg4) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPICHAR *arg2 = (ITapTrade::TAPICHAR *) 0 ;
  ITapTrade::TAPIUINT16 arg3 ;
  bool arg4 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPICHAR *)jarg2; 
  arg3 = (ITapTrade::TAPIUINT16)jarg3; 
  arg4 = jarg4 ? true : false; 
  result = (ITapTrade::TAPIINT32)(arg1)->SetHostAddress((ITapTrade::TAPICHAR const *)arg2,arg3,arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_SetHostAddress__SWIG_1(void * jarg1, char * jarg2, unsigned short jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPICHAR *arg2 = (ITapTrade::TAPICHAR *) 0 ;
  ITapTrade::TAPIUINT16 arg3 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPICHAR *)jarg2; 
  arg3 = (ITapTrade::TAPIUINT16)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->SetHostAddress((ITapTrade::TAPICHAR const *)arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_Login(void * jarg1, void * jarg2) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TapAPITradeLoginAuth *arg2 = (ITapTrade::TapAPITradeLoginAuth *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TapAPITradeLoginAuth *)jarg2; 
  result = (ITapTrade::TAPIINT32)(arg1)->Login((ITapTrade::TapAPITradeLoginAuth const *)arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_RequestVertificateCode(void * jarg1, void * jarg2, char * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  char *arg3 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (char *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->RequestVertificateCode(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_SetVertificateCode(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPISecondCertificationReq *arg3 = (ITapTrade::TapAPISecondCertificationReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPISecondCertificationReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->SetVertificateCode(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_Disconnect(void * jarg1) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  result = (ITapTrade::TAPIINT32)(arg1)->Disconnect();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_ChangePassword(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIChangePasswordReq *arg3 = (ITapTrade::TapAPIChangePasswordReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIChangePasswordReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->ChangePassword(arg2,(ITapTrade::TapAPIChangePasswordReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_AuthPassword(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIAuthPasswordReq *arg3 = (ITapTrade::TapAPIAuthPasswordReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIAuthPasswordReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->AuthPassword(arg2,(ITapTrade::TapAPIAuthPasswordReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_HaveCertainRight(void * jarg1, int jarg2) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIRightIDType arg2 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIRightIDType)jarg2; 
  result = (ITapTrade::TAPIINT32)(arg1)->HaveCertainRight(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryTradingDate(void * jarg1, void * jarg2) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  result = (ITapTrade::TAPIINT32)(arg1)->QryTradingDate(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_SetReservedInfo(void * jarg1, void * jarg2, char * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  char *arg3 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (char *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->SetReservedInfo(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryAccount(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIAccQryReq *arg3 = (ITapTrade::TapAPIAccQryReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIAccQryReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->QryAccount(arg2,(ITapTrade::TapAPIAccQryReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryFund(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIFundReq *arg3 = (ITapTrade::TapAPIFundReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIFundReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->QryFund(arg2,(ITapTrade::TapAPIFundReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryExchange(void * jarg1, void * jarg2) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  result = (ITapTrade::TAPIINT32)(arg1)->QryExchange(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryCommodity(void * jarg1, void * jarg2) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  result = (ITapTrade::TAPIINT32)(arg1)->QryCommodity(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryContract(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPICommodity *arg3 = (ITapTrade::TapAPICommodity *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPICommodity *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->QryContract(arg2,(ITapTrade::TapAPICommodity const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_InsertOrder(void * jarg1, void * jarg2, void * jarg3, void * jarg4) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TAPISTR_50 *arg3 = (ITapTrade::TAPISTR_50 *) 0 ;
  ITapTrade::TapAPINewOrder *arg4 = (ITapTrade::TapAPINewOrder *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TAPISTR_50 *)jarg3; 
  arg4 = (ITapTrade::TapAPINewOrder *)jarg4; 
  result = (ITapTrade::TAPIINT32)(arg1)->InsertOrder(arg2,arg3,(ITapTrade::TapAPINewOrder const *)arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_CancelOrder(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIOrderCancelReq *arg3 = (ITapTrade::TapAPIOrderCancelReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIOrderCancelReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->CancelOrder(arg2,(ITapTrade::TapAPIOrderCancelReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_AmendOrder(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIAmendOrder *arg3 = (ITapTrade::TapAPIAmendOrder *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIAmendOrder *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->AmendOrder(arg2,(ITapTrade::TapAPIAmendOrder const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_ActivateOrder(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIOrderActivateReq *arg3 = (ITapTrade::TapAPIOrderActivateReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIOrderActivateReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->ActivateOrder(arg2,(ITapTrade::TapAPIOrderActivateReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryOrder(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIOrderQryReq *arg3 = (ITapTrade::TapAPIOrderQryReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIOrderQryReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->QryOrder(arg2,(ITapTrade::TapAPIOrderQryReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryOrderProcess(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIOrderProcessQryReq *arg3 = (ITapTrade::TapAPIOrderProcessQryReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIOrderProcessQryReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->QryOrderProcess(arg2,(ITapTrade::TapAPIOrderProcessQryReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryFill(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIFillQryReq *arg3 = (ITapTrade::TapAPIFillQryReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIFillQryReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->QryFill(arg2,(ITapTrade::TapAPIFillQryReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryPosition(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIPositionQryReq *arg3 = (ITapTrade::TapAPIPositionQryReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIPositionQryReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->QryPosition(arg2,(ITapTrade::TapAPIPositionQryReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryPositionSummary(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIPositionQryReq *arg3 = (ITapTrade::TapAPIPositionQryReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIPositionQryReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->QryPositionSummary(arg2,(ITapTrade::TapAPIPositionQryReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryCurrency(void * jarg1, void * jarg2) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  result = (ITapTrade::TAPIINT32)(arg1)->QryCurrency(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryAccountCashAdjust(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIAccountCashAdjustQryReq *arg3 = (ITapTrade::TapAPIAccountCashAdjustQryReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIAccountCashAdjustQryReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->QryAccountCashAdjust(arg2,(ITapTrade::TapAPIAccountCashAdjustQryReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryTradeMessage(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPITradeMessageReq *arg3 = (ITapTrade::TapAPITradeMessageReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPITradeMessageReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->QryTradeMessage(arg2,(ITapTrade::TapAPITradeMessageReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryBill(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIBillQryReq *arg3 = (ITapTrade::TapAPIBillQryReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIBillQryReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->QryBill(arg2,(ITapTrade::TapAPIBillQryReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryHisOrder(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIHisOrderQryReq *arg3 = (ITapTrade::TapAPIHisOrderQryReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIHisOrderQryReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->QryHisOrder(arg2,(ITapTrade::TapAPIHisOrderQryReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryHisOrderProcess(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIHisOrderProcessQryReq *arg3 = (ITapTrade::TapAPIHisOrderProcessQryReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIHisOrderProcessQryReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->QryHisOrderProcess(arg2,(ITapTrade::TapAPIHisOrderProcessQryReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryHisMatch(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIHisMatchQryReq *arg3 = (ITapTrade::TapAPIHisMatchQryReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIHisMatchQryReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->QryHisMatch(arg2,(ITapTrade::TapAPIHisMatchQryReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryHisPosition(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIHisPositionQryReq *arg3 = (ITapTrade::TapAPIHisPositionQryReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIHisPositionQryReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->QryHisPosition(arg2,(ITapTrade::TapAPIHisPositionQryReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryHisDelivery(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIHisDeliveryQryReq *arg3 = (ITapTrade::TapAPIHisDeliveryQryReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIHisDeliveryQryReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->QryHisDelivery(arg2,(ITapTrade::TapAPIHisDeliveryQryReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryAccountFeeRent(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIAccountFeeRentQryReq *arg3 = (ITapTrade::TapAPIAccountFeeRentQryReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIAccountFeeRentQryReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->QryAccountFeeRent(arg2,(ITapTrade::TapAPIAccountFeeRentQryReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryAccountMarginRent(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIAccountMarginRentQryReq *arg3 = (ITapTrade::TapAPIAccountMarginRentQryReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIAccountMarginRentQryReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->QryAccountMarginRent(arg2,(ITapTrade::TapAPIAccountMarginRentQryReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_InsertHKMarketOrder(void * jarg1, void * jarg2, void * jarg3, void * jarg4, void * jarg5) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TAPISTR_50 *arg3 = (ITapTrade::TAPISTR_50 *) 0 ;
  ITapTrade::TAPISTR_50 *arg4 = (ITapTrade::TAPISTR_50 *) 0 ;
  ITapTrade::TapAPIOrderMarketInsertReq *arg5 = (ITapTrade::TapAPIOrderMarketInsertReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TAPISTR_50 *)jarg3; 
  arg4 = (ITapTrade::TAPISTR_50 *)jarg4; 
  arg5 = (ITapTrade::TapAPIOrderMarketInsertReq *)jarg5; 
  result = (ITapTrade::TAPIINT32)(arg1)->InsertHKMarketOrder(arg2,arg3,arg4,(ITapTrade::TapAPIOrderMarketInsertReq const *)arg5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_CancelHKMarketOrder(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIOrderMarketDeleteReq *arg3 = (ITapTrade::TapAPIOrderMarketDeleteReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIOrderMarketDeleteReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->CancelHKMarketOrder(arg2,(ITapTrade::TapAPIOrderMarketDeleteReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_OrderLocalRemove(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIOrderLocalRemoveReq *arg3 = (ITapTrade::TapAPIOrderLocalRemoveReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIOrderLocalRemoveReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->OrderLocalRemove(arg2,(ITapTrade::TapAPIOrderLocalRemoveReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_OrderLocalInput(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIOrderLocalInputReq *arg3 = (ITapTrade::TapAPIOrderLocalInputReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIOrderLocalInputReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->OrderLocalInput(arg2,(ITapTrade::TapAPIOrderLocalInputReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_OrderLocalModify(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIOrderLocalModifyReq *arg3 = (ITapTrade::TapAPIOrderLocalModifyReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIOrderLocalModifyReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->OrderLocalModify(arg2,(ITapTrade::TapAPIOrderLocalModifyReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_OrderLocalTransfer(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIOrderLocalTransferReq *arg3 = (ITapTrade::TapAPIOrderLocalTransferReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIOrderLocalTransferReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->OrderLocalTransfer(arg2,(ITapTrade::TapAPIOrderLocalTransferReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_FillLocalInput(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIFillLocalInputReq *arg3 = (ITapTrade::TapAPIFillLocalInputReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIFillLocalInputReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->FillLocalInput(arg2,(ITapTrade::TapAPIFillLocalInputReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_FillLocalRemove(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPIFillLocalRemoveReq *arg3 = (ITapTrade::TapAPIFillLocalRemoveReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPIFillLocalRemoveReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->FillLocalRemove(arg2,(ITapTrade::TapAPIFillLocalRemoveReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QrySpotLock(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPISpotLockQryReq *arg3 = (ITapTrade::TapAPISpotLockQryReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPISpotLockQryReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->QrySpotLock(arg2,(ITapTrade::TapAPISpotLockQryReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_SubmitUserLoginInfo(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPISubmitUserLoginInfo *arg3 = (ITapTrade::TapAPISubmitUserLoginInfo *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPISubmitUserLoginInfo *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->SubmitUserLoginInfo(arg2,(ITapTrade::TapAPISubmitUserLoginInfo const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_InsertSpecialOrder(void * jarg1, void * jarg2, void * jarg3, void * jarg4) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TAPISTR_50 *arg3 = (ITapTrade::TAPISTR_50 *) 0 ;
  ITapTrade::TapAPISpecialOrderInsertReq *arg4 = (ITapTrade::TapAPISpecialOrderInsertReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TAPISTR_50 *)jarg3; 
  arg4 = (ITapTrade::TapAPISpecialOrderInsertReq *)jarg4; 
  result = (ITapTrade::TAPIINT32)(arg1)->InsertSpecialOrder(arg2,arg3,(ITapTrade::TapAPISpecialOrderInsertReq const *)arg4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QrySpecialOrder(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPISpecialOrderQryReq *arg3 = (ITapTrade::TapAPISpecialOrderQryReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPISpecialOrderQryReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->QrySpecialOrder(arg2,(ITapTrade::TapAPISpecialOrderQryReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapTradeAPI_QryCombinePosition(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  ITapTrade::TAPIUINT32 *arg2 = (ITapTrade::TAPIUINT32 *) 0 ;
  ITapTrade::TapAPICombinePositionQryReq *arg3 = (ITapTrade::TapAPICombinePositionQryReq *) 0 ;
  ITapTrade::TAPIINT32 result;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  arg2 = (ITapTrade::TAPIUINT32 *)jarg2; 
  arg3 = (ITapTrade::TapAPICombinePositionQryReq *)jarg3; 
  result = (ITapTrade::TAPIINT32)(arg1)->QryCombinePosition(arg2,(ITapTrade::TapAPICombinePositionQryReq const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_ITapTradeAPI() {
  void * jresult ;
  ITapTrade::ITapTradeAPI *result = 0 ;
  
  result = (ITapTrade::ITapTradeAPI *)new SwigDirector_ITapTradeAPI();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_ITapTradeAPI(void * jarg1) {
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapTradeAPI_director_connect(void *objarg, SwigDirector_ITapTradeAPI::SWIG_Callback0_t callback0, SwigDirector_ITapTradeAPI::SWIG_Callback1_t callback1, SwigDirector_ITapTradeAPI::SWIG_Callback2_t callback2, SwigDirector_ITapTradeAPI::SWIG_Callback3_t callback3, SwigDirector_ITapTradeAPI::SWIG_Callback4_t callback4, SwigDirector_ITapTradeAPI::SWIG_Callback5_t callback5, SwigDirector_ITapTradeAPI::SWIG_Callback6_t callback6, SwigDirector_ITapTradeAPI::SWIG_Callback7_t callback7, SwigDirector_ITapTradeAPI::SWIG_Callback8_t callback8, SwigDirector_ITapTradeAPI::SWIG_Callback9_t callback9, SwigDirector_ITapTradeAPI::SWIG_Callback10_t callback10, SwigDirector_ITapTradeAPI::SWIG_Callback11_t callback11, SwigDirector_ITapTradeAPI::SWIG_Callback12_t callback12, SwigDirector_ITapTradeAPI::SWIG_Callback13_t callback13, SwigDirector_ITapTradeAPI::SWIG_Callback14_t callback14, SwigDirector_ITapTradeAPI::SWIG_Callback15_t callback15, SwigDirector_ITapTradeAPI::SWIG_Callback16_t callback16, SwigDirector_ITapTradeAPI::SWIG_Callback17_t callback17, SwigDirector_ITapTradeAPI::SWIG_Callback18_t callback18, SwigDirector_ITapTradeAPI::SWIG_Callback19_t callback19, SwigDirector_ITapTradeAPI::SWIG_Callback20_t callback20, SwigDirector_ITapTradeAPI::SWIG_Callback21_t callback21, SwigDirector_ITapTradeAPI::SWIG_Callback22_t callback22, SwigDirector_ITapTradeAPI::SWIG_Callback23_t callback23, SwigDirector_ITapTradeAPI::SWIG_Callback24_t callback24, SwigDirector_ITapTradeAPI::SWIG_Callback25_t callback25, SwigDirector_ITapTradeAPI::SWIG_Callback26_t callback26, SwigDirector_ITapTradeAPI::SWIG_Callback27_t callback27, SwigDirector_ITapTradeAPI::SWIG_Callback28_t callback28, SwigDirector_ITapTradeAPI::SWIG_Callback29_t callback29, SwigDirector_ITapTradeAPI::SWIG_Callback30_t callback30, SwigDirector_ITapTradeAPI::SWIG_Callback31_t callback31, SwigDirector_ITapTradeAPI::SWIG_Callback32_t callback32, SwigDirector_ITapTradeAPI::SWIG_Callback33_t callback33, SwigDirector_ITapTradeAPI::SWIG_Callback34_t callback34, SwigDirector_ITapTradeAPI::SWIG_Callback35_t callback35, SwigDirector_ITapTradeAPI::SWIG_Callback36_t callback36, SwigDirector_ITapTradeAPI::SWIG_Callback37_t callback37, SwigDirector_ITapTradeAPI::SWIG_Callback38_t callback38, SwigDirector_ITapTradeAPI::SWIG_Callback39_t callback39, SwigDirector_ITapTradeAPI::SWIG_Callback40_t callback40, SwigDirector_ITapTradeAPI::SWIG_Callback41_t callback41, SwigDirector_ITapTradeAPI::SWIG_Callback42_t callback42, SwigDirector_ITapTradeAPI::SWIG_Callback43_t callback43, SwigDirector_ITapTradeAPI::SWIG_Callback44_t callback44, SwigDirector_ITapTradeAPI::SWIG_Callback45_t callback45, SwigDirector_ITapTradeAPI::SWIG_Callback46_t callback46, SwigDirector_ITapTradeAPI::SWIG_Callback47_t callback47, SwigDirector_ITapTradeAPI::SWIG_Callback48_t callback48, SwigDirector_ITapTradeAPI::SWIG_Callback49_t callback49) {
  ITapTrade::ITapTradeAPI *obj = (ITapTrade::ITapTradeAPI *)objarg;
  SwigDirector_ITapTradeAPI *director = dynamic_cast<SwigDirector_ITapTradeAPI *>(obj);
  if (director) {
    director->swig_connect_director(callback0, callback1, callback2, callback3, callback4, callback5, callback6, callback7, callback8, callback9, callback10, callback11, callback12, callback13, callback14, callback15, callback16, callback17, callback18, callback19, callback20, callback21, callback22, callback23, callback24, callback25, callback26, callback27, callback28, callback29, callback30, callback31, callback32, callback33, callback34, callback35, callback36, callback37, callback38, callback39, callback40, callback41, callback42, callback43, callback44, callback45, callback46, callback47, callback48, callback49);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateITapTradeAPI(void * jarg1, void * jarg2) {
  void * jresult ;
  ITapTrade::TapAPIApplicationInfo *arg1 = (ITapTrade::TapAPIApplicationInfo *) 0 ;
  ITapTrade::TAPIINT32 *arg2 = 0 ;
  ITapTrade::ITapTradeAPI *result = 0 ;
  
  arg1 = (ITapTrade::TapAPIApplicationInfo *)jarg1; 
  arg2 = (ITapTrade::TAPIINT32 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "ITapTrade::TAPIINT32 & type is null", 0);
    return 0;
  } 
  result = (ITapTrade::ITapTradeAPI *)CreateITapTradeAPI((ITapTrade::TapAPIApplicationInfo const *)arg1,*arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FreeITapTradeAPI(void * jarg1) {
  ITapTrade::ITapTradeAPI *arg1 = (ITapTrade::ITapTradeAPI *) 0 ;
  
  arg1 = (ITapTrade::ITapTradeAPI *)jarg1; 
  FreeITapTradeAPI(arg1);
}


SWIGEXPORT char * SWIGSTDCALL CSharp_GetITapTradeAPIVersion() {
  char * jresult ;
  ITapTrade::TAPICHAR *result = 0 ;
  
  result = (ITapTrade::TAPICHAR *)GetITapTradeAPIVersion();
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_GetITapErrorDescribe(int jarg1) {
  char * jresult ;
  ITapTrade::TAPIINT32 arg1 ;
  char *result = 0 ;
  
  arg1 = (ITapTrade::TAPIINT32)jarg1; 
  result = (char *)GetITapErrorDescribe(arg1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


#ifdef __cplusplus
}
#endif

