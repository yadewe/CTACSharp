/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */


#ifndef SWIGCSHARP
#define SWIGCSHARP
#endif

#define SWIG_DIRECTORS


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stdlib.h>
#include <string.h>
#include <stdio.h>


/* Support for throwing C# exceptions from C/C++. There are two types: 
 * Exceptions that take a message and ArgumentExceptions that take a message and a parameter name. */
typedef enum {
  SWIG_CSharpApplicationException,
  SWIG_CSharpArithmeticException,
  SWIG_CSharpDivideByZeroException,
  SWIG_CSharpIndexOutOfRangeException,
  SWIG_CSharpInvalidCastException,
  SWIG_CSharpInvalidOperationException,
  SWIG_CSharpIOException,
  SWIG_CSharpNullReferenceException,
  SWIG_CSharpOutOfMemoryException,
  SWIG_CSharpOverflowException,
  SWIG_CSharpSystemException
} SWIG_CSharpExceptionCodes;

typedef enum {
  SWIG_CSharpArgumentException,
  SWIG_CSharpArgumentNullException,
  SWIG_CSharpArgumentOutOfRangeException
} SWIG_CSharpExceptionArgumentCodes;

typedef void (SWIGSTDCALL* SWIG_CSharpExceptionCallback_t)(const char *);
typedef void (SWIGSTDCALL* SWIG_CSharpExceptionArgumentCallback_t)(const char *, const char *);

typedef struct {
  SWIG_CSharpExceptionCodes code;
  SWIG_CSharpExceptionCallback_t callback;
} SWIG_CSharpException_t;

typedef struct {
  SWIG_CSharpExceptionArgumentCodes code;
  SWIG_CSharpExceptionArgumentCallback_t callback;
} SWIG_CSharpExceptionArgument_t;

static SWIG_CSharpException_t SWIG_csharp_exceptions[] = {
  { SWIG_CSharpApplicationException, NULL },
  { SWIG_CSharpArithmeticException, NULL },
  { SWIG_CSharpDivideByZeroException, NULL },
  { SWIG_CSharpIndexOutOfRangeException, NULL },
  { SWIG_CSharpInvalidCastException, NULL },
  { SWIG_CSharpInvalidOperationException, NULL },
  { SWIG_CSharpIOException, NULL },
  { SWIG_CSharpNullReferenceException, NULL },
  { SWIG_CSharpOutOfMemoryException, NULL },
  { SWIG_CSharpOverflowException, NULL },
  { SWIG_CSharpSystemException, NULL }
};

static SWIG_CSharpExceptionArgument_t SWIG_csharp_exceptions_argument[] = {
  { SWIG_CSharpArgumentException, NULL },
  { SWIG_CSharpArgumentNullException, NULL },
  { SWIG_CSharpArgumentOutOfRangeException, NULL }
};

static void SWIGUNUSED SWIG_CSharpSetPendingException(SWIG_CSharpExceptionCodes code, const char *msg) {
  SWIG_CSharpExceptionCallback_t callback = SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions)/sizeof(SWIG_CSharpException_t)) {
    callback = SWIG_csharp_exceptions[code].callback;
  }
  callback(msg);
}

static void SWIGUNUSED SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpExceptionArgumentCodes code, const char *msg, const char *param_name) {
  SWIG_CSharpExceptionArgumentCallback_t callback = SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions_argument)/sizeof(SWIG_CSharpExceptionArgument_t)) {
    callback = SWIG_csharp_exceptions_argument[code].callback;
  }
  callback(msg, param_name);
}


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionCallbacks_TapQuoteCppWrapper(
                                                SWIG_CSharpExceptionCallback_t applicationCallback,
                                                SWIG_CSharpExceptionCallback_t arithmeticCallback,
                                                SWIG_CSharpExceptionCallback_t divideByZeroCallback, 
                                                SWIG_CSharpExceptionCallback_t indexOutOfRangeCallback, 
                                                SWIG_CSharpExceptionCallback_t invalidCastCallback,
                                                SWIG_CSharpExceptionCallback_t invalidOperationCallback,
                                                SWIG_CSharpExceptionCallback_t ioCallback,
                                                SWIG_CSharpExceptionCallback_t nullReferenceCallback,
                                                SWIG_CSharpExceptionCallback_t outOfMemoryCallback, 
                                                SWIG_CSharpExceptionCallback_t overflowCallback, 
                                                SWIG_CSharpExceptionCallback_t systemCallback) {
  SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback = applicationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpArithmeticException].callback = arithmeticCallback;
  SWIG_csharp_exceptions[SWIG_CSharpDivideByZeroException].callback = divideByZeroCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIndexOutOfRangeException].callback = indexOutOfRangeCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidCastException].callback = invalidCastCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidOperationException].callback = invalidOperationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIOException].callback = ioCallback;
  SWIG_csharp_exceptions[SWIG_CSharpNullReferenceException].callback = nullReferenceCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOutOfMemoryException].callback = outOfMemoryCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOverflowException].callback = overflowCallback;
  SWIG_csharp_exceptions[SWIG_CSharpSystemException].callback = systemCallback;
}

#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionArgumentCallbacks_TapQuoteCppWrapper(
                                                SWIG_CSharpExceptionArgumentCallback_t argumentCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentNullCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentOutOfRangeCallback) {
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback = argumentCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentNullException].callback = argumentNullCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentOutOfRangeException].callback = argumentOutOfRangeCallback;
}


/* Callback for returning strings to C# without leaking memory */
typedef char * (SWIGSTDCALL* SWIG_CSharpStringHelperCallback)(const char *);
static SWIG_CSharpStringHelperCallback SWIG_csharp_string_callback = NULL;


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterStringCallback_TapQuoteCppWrapper(SWIG_CSharpStringHelperCallback callback) {
  SWIG_csharp_string_callback = callback;
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, msg, ""); return nullreturn; } else

/* -----------------------------------------------------------------------------
 * director_common.swg
 *
 * This file contains support for director classes which is common between
 * languages.
 * ----------------------------------------------------------------------------- */

/*
  Use -DSWIG_DIRECTOR_STATIC if you prefer to avoid the use of the
  'Swig' namespace. This could be useful for multi-modules projects.
*/
#ifdef SWIG_DIRECTOR_STATIC
/* Force anonymous (static) namespace */
#define Swig
#endif
/* -----------------------------------------------------------------------------
 * director.swg
 *
 * This file contains support for director classes so that C# proxy
 * methods can be called from C++.
 * ----------------------------------------------------------------------------- */

#if defined(DEBUG_DIRECTOR_OWNED)
#include <iostream>
#endif
#include <string>
#include <exception>

namespace Swig {
  /* Director base class - not currently used in C# directors */
  class Director {
  };

  /* Base class for director exceptions */
  class DirectorException : public std::exception {
  protected:
    std::string swig_msg;

  public:
    DirectorException(const char *msg) : swig_msg(msg) {
    }

    DirectorException(const std::string &msg) : swig_msg(msg) {
    }

    virtual ~DirectorException() throw() {
    }

    const char *what() const throw() {
      return swig_msg.c_str();
    }
  };

  /* Pure virtual method exception */
  class DirectorPureVirtualException : public DirectorException {
  public:
    DirectorPureVirtualException(const char *msg) : DirectorException(std::string("Attempt to invoke pure virtual method ") + msg) {
    }

    static void raise(const char *msg) {
      throw DirectorPureVirtualException(msg);
    }
  };
}


#include "TapAPICommDef.h"
#include "TapAPIError.h"
#include "TapQuoteAPIDataType.h"
#include "TapQuoteAPI.h"



/* ---------------------------------------------------
 * C++ director class methods
 * --------------------------------------------------- */

#include "TapQuoteCppWrapper_wrap.h"

SwigDirector_ITapQuoteAPINotify::SwigDirector_ITapQuoteAPINotify() : ITapQuoteAPINotify(), Swig::Director() {
  swig_init_callbacks();
}

void SwigDirector_ITapQuoteAPINotify::OnRspLogin(TAPIINT32 errorCode, TapAPIQuotLoginRspInfo const *info) {
  int jerrorCode  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspLogin) {
    Swig::DirectorPureVirtualException::raise("ITapQuoteAPINotify::OnRspLogin");
    return;
  } else {
    jerrorCode = errorCode;
    jinfo = (void *) info; 
    swig_callbackOnRspLogin(jerrorCode, jinfo);
  }
}

void SwigDirector_ITapQuoteAPINotify::OnAPIReady() {
  if (!swig_callbackOnAPIReady) {
    Swig::DirectorPureVirtualException::raise("ITapQuoteAPINotify::OnAPIReady");
    return;
  } else {
    swig_callbackOnAPIReady();
  }
}

void SwigDirector_ITapQuoteAPINotify::OnDisconnect(TAPIINT32 reasonCode) {
  int jreasonCode  ;
  
  if (!swig_callbackOnDisconnect) {
    Swig::DirectorPureVirtualException::raise("ITapQuoteAPINotify::OnDisconnect");
    return;
  } else {
    jreasonCode = reasonCode;
    swig_callbackOnDisconnect(jreasonCode);
  }
}

void SwigDirector_ITapQuoteAPINotify::OnRspQryCommodity(TAPIUINT32 sessionID, TAPIINT32 errorCode, TAPIYNFLAG isLast, TapAPIQuoteCommodityInfo const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryCommodity) {
    Swig::DirectorPureVirtualException::raise("ITapQuoteAPINotify::OnRspQryCommodity");
    return;
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryCommodity(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapQuoteAPINotify::OnRspQryContract(TAPIUINT32 sessionID, TAPIINT32 errorCode, TAPIYNFLAG isLast, TapAPIQuoteContractInfo const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspQryContract) {
    Swig::DirectorPureVirtualException::raise("ITapQuoteAPINotify::OnRspQryContract");
    return;
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspQryContract(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapQuoteAPINotify::OnRspSubscribeQuote(TAPIUINT32 sessionID, TAPIINT32 errorCode, TAPIYNFLAG isLast, TapAPIQuoteWhole const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspSubscribeQuote) {
    Swig::DirectorPureVirtualException::raise("ITapQuoteAPINotify::OnRspSubscribeQuote");
    return;
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspSubscribeQuote(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapQuoteAPINotify::OnRspUnSubscribeQuote(TAPIUINT32 sessionID, TAPIINT32 errorCode, TAPIYNFLAG isLast, TapAPIContract const *info) {
  unsigned int jsessionID  ;
  int jerrorCode  ;
  char jisLast  ;
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRspUnSubscribeQuote) {
    Swig::DirectorPureVirtualException::raise("ITapQuoteAPINotify::OnRspUnSubscribeQuote");
    return;
  } else {
    jsessionID = sessionID;
    jerrorCode = errorCode;
    jisLast = isLast;
    jinfo = (void *) info; 
    swig_callbackOnRspUnSubscribeQuote(jsessionID, jerrorCode, jisLast, jinfo);
  }
}

void SwigDirector_ITapQuoteAPINotify::OnRtnQuote(TapAPIQuoteWhole const *info) {
  void * jinfo = 0 ;
  
  if (!swig_callbackOnRtnQuote) {
    Swig::DirectorPureVirtualException::raise("ITapQuoteAPINotify::OnRtnQuote");
    return;
  } else {
    jinfo = (void *) info; 
    swig_callbackOnRtnQuote(jinfo);
  }
}

void SwigDirector_ITapQuoteAPINotify::swig_connect_director(SWIG_Callback0_t callbackOnRspLogin, SWIG_Callback1_t callbackOnAPIReady, SWIG_Callback2_t callbackOnDisconnect, SWIG_Callback3_t callbackOnRspQryCommodity, SWIG_Callback4_t callbackOnRspQryContract, SWIG_Callback5_t callbackOnRspSubscribeQuote, SWIG_Callback6_t callbackOnRspUnSubscribeQuote, SWIG_Callback7_t callbackOnRtnQuote) {
  swig_callbackOnRspLogin = callbackOnRspLogin;
  swig_callbackOnAPIReady = callbackOnAPIReady;
  swig_callbackOnDisconnect = callbackOnDisconnect;
  swig_callbackOnRspQryCommodity = callbackOnRspQryCommodity;
  swig_callbackOnRspQryContract = callbackOnRspQryContract;
  swig_callbackOnRspSubscribeQuote = callbackOnRspSubscribeQuote;
  swig_callbackOnRspUnSubscribeQuote = callbackOnRspUnSubscribeQuote;
  swig_callbackOnRtnQuote = callbackOnRtnQuote;
}

void SwigDirector_ITapQuoteAPINotify::swig_init_callbacks() {
  swig_callbackOnRspLogin = 0;
  swig_callbackOnAPIReady = 0;
  swig_callbackOnDisconnect = 0;
  swig_callbackOnRspQryCommodity = 0;
  swig_callbackOnRspQryContract = 0;
  swig_callbackOnRspSubscribeQuote = 0;
  swig_callbackOnRspUnSubscribeQuote = 0;
  swig_callbackOnRtnQuote = 0;
}

SwigDirector_ITapQuoteAPI::SwigDirector_ITapQuoteAPI() : ITapQuoteAPI(), Swig::Director() {
  swig_init_callbacks();
}

TAPIINT32 SwigDirector_ITapQuoteAPI::SetAPINotify(ITapQuoteAPINotify *apiNotify) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  void * japiNotify = 0 ;
  
  if (!swig_callbackSetAPINotify) {
    Swig::DirectorPureVirtualException::raise("ITapQuoteAPI::SetAPINotify");
    return c_result;
  } else {
    japiNotify = (void *) apiNotify; 
    jresult = (int) swig_callbackSetAPINotify(japiNotify);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapQuoteAPI::SetHostAddress(TAPICHAR const *IP, TAPIUINT16 port) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  char * jIP = 0 ;
  unsigned short jport  ;
  
  if (!swig_callbackSetHostAddress) {
    Swig::DirectorPureVirtualException::raise("ITapQuoteAPI::SetHostAddress");
    return c_result;
  } else {
    jIP = SWIG_csharp_string_callback((const char *)IP); 
    jport = port;
    jresult = (int) swig_callbackSetHostAddress(jIP, jport);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapQuoteAPI::Login(TapAPIQuoteLoginAuth const *loginAuth) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  void * jloginAuth = 0 ;
  
  if (!swig_callbackLogin) {
    Swig::DirectorPureVirtualException::raise("ITapQuoteAPI::Login");
    return c_result;
  } else {
    jloginAuth = (void *) loginAuth; 
    jresult = (int) swig_callbackLogin(jloginAuth);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapQuoteAPI::Disconnect() {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  
  if (!swig_callbackDisconnect) {
    Swig::DirectorPureVirtualException::raise("ITapQuoteAPI::Disconnect");
    return c_result;
  } else {
    jresult = (int) swig_callbackDisconnect();
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapQuoteAPI::QryCommodity(TAPIUINT32 *sessionID) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  
  if (!swig_callbackQryCommodity) {
    Swig::DirectorPureVirtualException::raise("ITapQuoteAPI::QryCommodity");
    return c_result;
  } else {
    jsessionID = (void *) sessionID; 
    jresult = (int) swig_callbackQryCommodity(jsessionID);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapQuoteAPI::QryContract(TAPIUINT32 *sessionID, TapAPICommodity const *qryReq) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jqryReq = 0 ;
  
  if (!swig_callbackQryContract) {
    Swig::DirectorPureVirtualException::raise("ITapQuoteAPI::QryContract");
    return c_result;
  } else {
    jsessionID = (void *) sessionID; 
    jqryReq = (void *) qryReq; 
    jresult = (int) swig_callbackQryContract(jsessionID, jqryReq);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapQuoteAPI::SubscribeQuote(TAPIUINT32 *sessionID, TapAPIContract const *contract) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jcontract = 0 ;
  
  if (!swig_callbackSubscribeQuote) {
    Swig::DirectorPureVirtualException::raise("ITapQuoteAPI::SubscribeQuote");
    return c_result;
  } else {
    jsessionID = (void *) sessionID; 
    jcontract = (void *) contract; 
    jresult = (int) swig_callbackSubscribeQuote(jsessionID, jcontract);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

TAPIINT32 SwigDirector_ITapQuoteAPI::UnSubscribeQuote(TAPIUINT32 *sessionID, TapAPIContract const *contract) {
  TAPIINT32 c_result = SwigValueInit< TAPIINT32 >() ;
  int jresult = 0 ;
  void * jsessionID = 0 ;
  void * jcontract = 0 ;
  
  if (!swig_callbackUnSubscribeQuote) {
    Swig::DirectorPureVirtualException::raise("ITapQuoteAPI::UnSubscribeQuote");
    return c_result;
  } else {
    jsessionID = (void *) sessionID; 
    jcontract = (void *) contract; 
    jresult = (int) swig_callbackUnSubscribeQuote(jsessionID, jcontract);
    c_result = (TAPIINT32)jresult; 
  }
  return c_result;
}

void SwigDirector_ITapQuoteAPI::swig_connect_director(SWIG_Callback0_t callbackSetAPINotify, SWIG_Callback1_t callbackSetHostAddress, SWIG_Callback2_t callbackLogin, SWIG_Callback3_t callbackDisconnect, SWIG_Callback4_t callbackQryCommodity, SWIG_Callback5_t callbackQryContract, SWIG_Callback6_t callbackSubscribeQuote, SWIG_Callback7_t callbackUnSubscribeQuote) {
  swig_callbackSetAPINotify = callbackSetAPINotify;
  swig_callbackSetHostAddress = callbackSetHostAddress;
  swig_callbackLogin = callbackLogin;
  swig_callbackDisconnect = callbackDisconnect;
  swig_callbackQryCommodity = callbackQryCommodity;
  swig_callbackQryContract = callbackQryContract;
  swig_callbackSubscribeQuote = callbackSubscribeQuote;
  swig_callbackUnSubscribeQuote = callbackUnSubscribeQuote;
}

void SwigDirector_ITapQuoteAPI::swig_init_callbacks() {
  swig_callbackSetAPINotify = 0;
  swig_callbackSetHostAddress = 0;
  swig_callbackLogin = 0;
  swig_callbackDisconnect = 0;
  swig_callbackQryCommodity = 0;
  swig_callbackQryContract = 0;
  swig_callbackSubscribeQuote = 0;
  swig_callbackUnSubscribeQuote = 0;
}


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT char SWIGSTDCALL CSharp_APIYNFLAG_YES_get() {
  char jresult ;
  TAPIYNFLAG result;
  
  result = (TAPIYNFLAG)(TAPIYNFLAG)APIYNFLAG_YES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APIYNFLAG_NO_get() {
  char jresult ;
  TAPIYNFLAG result;
  
  result = (TAPIYNFLAG)(TAPIYNFLAG)APIYNFLAG_NO;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APILOGLEVEL_NONE_get() {
  char jresult ;
  TAPILOGLEVEL result;
  
  result = (TAPILOGLEVEL)(TAPILOGLEVEL)APILOGLEVEL_NONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APILOGLEVEL_ERROR_get() {
  char jresult ;
  TAPILOGLEVEL result;
  
  result = (TAPILOGLEVEL)(TAPILOGLEVEL)APILOGLEVEL_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APILOGLEVEL_WARNING_get() {
  char jresult ;
  TAPILOGLEVEL result;
  
  result = (TAPILOGLEVEL)(TAPILOGLEVEL)APILOGLEVEL_WARNING;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_APILOGLEVEL_DEBUG_get() {
  char jresult ;
  TAPILOGLEVEL result;
  
  result = (TAPILOGLEVEL)(TAPILOGLEVEL)APILOGLEVEL_DEBUG;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_NONE_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_NONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_SPOT_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_SPOT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_FUTURES_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_FUTURES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_OPTION_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_OPTION;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_SPREAD_MONTH_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_SPREAD_MONTH;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_SPREAD_COMMODITY_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_SPREAD_COMMODITY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_BUL_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_BUL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_BER_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_BER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_STD_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_STD;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_STG_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_STG;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_PRT_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_PRT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_DIRECTFOREX_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_DIRECTFOREX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_INDIRECTFOREX_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_INDIRECTFOREX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_CROSSFOREX_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_CROSSFOREX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_INDEX_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_INDEX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_STOCK_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_STOCK;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_COMMODITY_TYPE_SPOT_TRADINGDEFER_get() {
  char jresult ;
  TAPICommodityType result;
  
  result = (TAPICommodityType)(TAPICommodityType)TAPI_COMMODITY_TYPE_SPOT_TRADINGDEFER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CALLPUT_FLAG_CALL_get() {
  char jresult ;
  TAPICallOrPutFlagType result;
  
  result = (TAPICallOrPutFlagType)(TAPICallOrPutFlagType)TAPI_CALLPUT_FLAG_CALL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CALLPUT_FLAG_PUT_get() {
  char jresult ;
  TAPICallOrPutFlagType result;
  
  result = (TAPICallOrPutFlagType)(TAPICallOrPutFlagType)TAPI_CALLPUT_FLAG_PUT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TAPI_CALLPUT_FLAG_NONE_get() {
  char jresult ;
  TAPICallOrPutFlagType result;
  
  result = (TAPICallOrPutFlagType)(TAPICallOrPutFlagType)TAPI_CALLPUT_FLAG_NONE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIApplicationInfo_AuthCode_set(void * jarg1, char * jarg2) {
  TapAPIApplicationInfo *arg1 = (TapAPIApplicationInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIApplicationInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AuthCode, (const char *)arg2, 513-1);
      arg1->AuthCode[513-1] = 0;
    } else {
      arg1->AuthCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIApplicationInfo_AuthCode_get(void * jarg1) {
  char * jresult ;
  TapAPIApplicationInfo *arg1 = (TapAPIApplicationInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIApplicationInfo *)jarg1; 
  result = (char *) ((arg1)->AuthCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIApplicationInfo_KeyOperationLogPath_set(void * jarg1, char * jarg2) {
  TapAPIApplicationInfo *arg1 = (TapAPIApplicationInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIApplicationInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->KeyOperationLogPath, (const char *)arg2, 301-1);
      arg1->KeyOperationLogPath[301-1] = 0;
    } else {
      arg1->KeyOperationLogPath[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIApplicationInfo_KeyOperationLogPath_get(void * jarg1) {
  char * jresult ;
  TapAPIApplicationInfo *arg1 = (TapAPIApplicationInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIApplicationInfo *)jarg1; 
  result = (char *) ((arg1)->KeyOperationLogPath);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIApplicationInfo() {
  void * jresult ;
  TapAPIApplicationInfo *result = 0 ;
  
  result = (TapAPIApplicationInfo *)new TapAPIApplicationInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIApplicationInfo(void * jarg1) {
  TapAPIApplicationInfo *arg1 = (TapAPIApplicationInfo *) 0 ;
  
  arg1 = (TapAPIApplicationInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodity_ExchangeNo_set(void * jarg1, char * jarg2) {
  TapAPICommodity *arg1 = (TapAPICommodity *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICommodity *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodity_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  TapAPICommodity *arg1 = (TapAPICommodity *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICommodity *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodity_CommodityType_set(void * jarg1, char jarg2) {
  TapAPICommodity *arg1 = (TapAPICommodity *) 0 ;
  TAPICommodityType arg2 ;
  
  arg1 = (TapAPICommodity *)jarg1; 
  arg2 = (TAPICommodityType)jarg2; 
  if (arg1) (arg1)->CommodityType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPICommodity_CommodityType_get(void * jarg1) {
  char jresult ;
  TapAPICommodity *arg1 = (TapAPICommodity *) 0 ;
  TAPICommodityType result;
  
  arg1 = (TapAPICommodity *)jarg1; 
  result = (TAPICommodityType) ((arg1)->CommodityType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPICommodity_CommodityNo_set(void * jarg1, char * jarg2) {
  TapAPICommodity *arg1 = (TapAPICommodity *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPICommodity *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityNo, (const char *)arg2, 11-1);
      arg1->CommodityNo[11-1] = 0;
    } else {
      arg1->CommodityNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPICommodity_CommodityNo_get(void * jarg1) {
  char * jresult ;
  TapAPICommodity *arg1 = (TapAPICommodity *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPICommodity *)jarg1; 
  result = (char *) ((arg1)->CommodityNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPICommodity() {
  void * jresult ;
  TapAPICommodity *result = 0 ;
  
  result = (TapAPICommodity *)new TapAPICommodity();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPICommodity(void * jarg1) {
  TapAPICommodity *arg1 = (TapAPICommodity *) 0 ;
  
  arg1 = (TapAPICommodity *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIContract_Commodity_set(void * jarg1, void * jarg2) {
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  TapAPICommodity *arg2 = (TapAPICommodity *) 0 ;
  
  arg1 = (TapAPIContract *)jarg1; 
  arg2 = (TapAPICommodity *)jarg2; 
  if (arg1) (arg1)->Commodity = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPIContract_Commodity_get(void * jarg1) {
  void * jresult ;
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  TapAPICommodity *result = 0 ;
  
  arg1 = (TapAPIContract *)jarg1; 
  result = (TapAPICommodity *)& ((arg1)->Commodity);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIContract_ContractNo1_set(void * jarg1, char * jarg2) {
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIContract *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo1, (const char *)arg2, 11-1);
      arg1->ContractNo1[11-1] = 0;
    } else {
      arg1->ContractNo1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIContract_ContractNo1_get(void * jarg1) {
  char * jresult ;
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIContract *)jarg1; 
  result = (char *) ((arg1)->ContractNo1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIContract_StrikePrice1_set(void * jarg1, char * jarg2) {
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIContract *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice1, (const char *)arg2, 11-1);
      arg1->StrikePrice1[11-1] = 0;
    } else {
      arg1->StrikePrice1[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIContract_StrikePrice1_get(void * jarg1) {
  char * jresult ;
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIContract *)jarg1; 
  result = (char *) ((arg1)->StrikePrice1);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIContract_CallOrPutFlag1_set(void * jarg1, char jarg2) {
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  TAPICallOrPutFlagType arg2 ;
  
  arg1 = (TapAPIContract *)jarg1; 
  arg2 = (TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag1 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIContract_CallOrPutFlag1_get(void * jarg1) {
  char jresult ;
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  TAPICallOrPutFlagType result;
  
  arg1 = (TapAPIContract *)jarg1; 
  result = (TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIContract_ContractNo2_set(void * jarg1, char * jarg2) {
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIContract *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractNo2, (const char *)arg2, 11-1);
      arg1->ContractNo2[11-1] = 0;
    } else {
      arg1->ContractNo2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIContract_ContractNo2_get(void * jarg1) {
  char * jresult ;
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIContract *)jarg1; 
  result = (char *) ((arg1)->ContractNo2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIContract_StrikePrice2_set(void * jarg1, char * jarg2) {
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIContract *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StrikePrice2, (const char *)arg2, 11-1);
      arg1->StrikePrice2[11-1] = 0;
    } else {
      arg1->StrikePrice2[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIContract_StrikePrice2_get(void * jarg1) {
  char * jresult ;
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIContract *)jarg1; 
  result = (char *) ((arg1)->StrikePrice2);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIContract_CallOrPutFlag2_set(void * jarg1, char jarg2) {
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  TAPICallOrPutFlagType arg2 ;
  
  arg1 = (TapAPIContract *)jarg1; 
  arg2 = (TAPICallOrPutFlagType)jarg2; 
  if (arg1) (arg1)->CallOrPutFlag2 = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIContract_CallOrPutFlag2_get(void * jarg1) {
  char jresult ;
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  TAPICallOrPutFlagType result;
  
  arg1 = (TapAPIContract *)jarg1; 
  result = (TAPICallOrPutFlagType) ((arg1)->CallOrPutFlag2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIContract() {
  void * jresult ;
  TapAPIContract *result = 0 ;
  
  result = (TapAPIContract *)new TapAPIContract();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIContract(void * jarg1) {
  TapAPIContract *arg1 = (TapAPIContract *) 0 ;
  
  arg1 = (TapAPIContract *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIExchangeInfo_ExchangeNo_set(void * jarg1, char * jarg2) {
  TapAPIExchangeInfo *arg1 = (TapAPIExchangeInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIExchangeInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeNo, (const char *)arg2, 11-1);
      arg1->ExchangeNo[11-1] = 0;
    } else {
      arg1->ExchangeNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIExchangeInfo_ExchangeNo_get(void * jarg1) {
  char * jresult ;
  TapAPIExchangeInfo *arg1 = (TapAPIExchangeInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIExchangeInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIExchangeInfo_ExchangeName_set(void * jarg1, char * jarg2) {
  TapAPIExchangeInfo *arg1 = (TapAPIExchangeInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIExchangeInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeName, (const char *)arg2, 21-1);
      arg1->ExchangeName[21-1] = 0;
    } else {
      arg1->ExchangeName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIExchangeInfo_ExchangeName_get(void * jarg1) {
  char * jresult ;
  TapAPIExchangeInfo *arg1 = (TapAPIExchangeInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIExchangeInfo *)jarg1; 
  result = (char *) ((arg1)->ExchangeName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIExchangeInfo() {
  void * jresult ;
  TapAPIExchangeInfo *result = 0 ;
  
  result = (TapAPIExchangeInfo *)new TapAPIExchangeInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIExchangeInfo(void * jarg1) {
  TapAPIExchangeInfo *arg1 = (TapAPIExchangeInfo *) 0 ;
  
  arg1 = (TapAPIExchangeInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIChangePasswordReq_OldPassword_set(void * jarg1, char * jarg2) {
  TapAPIChangePasswordReq *arg1 = (TapAPIChangePasswordReq *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIChangePasswordReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OldPassword, (const char *)arg2, 21-1);
      arg1->OldPassword[21-1] = 0;
    } else {
      arg1->OldPassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIChangePasswordReq_OldPassword_get(void * jarg1) {
  char * jresult ;
  TapAPIChangePasswordReq *arg1 = (TapAPIChangePasswordReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIChangePasswordReq *)jarg1; 
  result = (char *) ((arg1)->OldPassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIChangePasswordReq_NewPassword_set(void * jarg1, char * jarg2) {
  TapAPIChangePasswordReq *arg1 = (TapAPIChangePasswordReq *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIChangePasswordReq *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->NewPassword, (const char *)arg2, 21-1);
      arg1->NewPassword[21-1] = 0;
    } else {
      arg1->NewPassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIChangePasswordReq_NewPassword_get(void * jarg1) {
  char * jresult ;
  TapAPIChangePasswordReq *arg1 = (TapAPIChangePasswordReq *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIChangePasswordReq *)jarg1; 
  result = (char *) ((arg1)->NewPassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIChangePasswordReq() {
  void * jresult ;
  TapAPIChangePasswordReq *result = 0 ;
  
  result = (TapAPIChangePasswordReq *)new TapAPIChangePasswordReq();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIChangePasswordReq(void * jarg1) {
  TapAPIChangePasswordReq *arg1 = (TapAPIChangePasswordReq *) 0 ;
  
  arg1 = (TapAPIChangePasswordReq *)jarg1; 
  delete arg1;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_SUCCEED_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_SUCCEED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ConnectFail_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ConnectFail;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LinkAuthFail_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LinkAuthFail;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_HostUnavailable_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_HostUnavailable;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_SendDataError_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_SendDataError;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_TestIDError_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_TestIDError;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_NotReadyTestNetwork_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_NotReadyTestNetwork;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_CurTestNotOver_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_CurTestNotOver;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_NOFrontAvailable_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_NOFrontAvailable;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DataPathAvaiable_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DataPathAvaiable;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_RepeatLogin_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_RepeatLogin;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_InnerError_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_InnerError;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LastReqNotFinish_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LastReqNotFinish;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_InputValueError_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_InputValueError;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_AuthCode_Invalid_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_AuthCode_Invalid;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_AuthCode_Expired_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_AuthCode_Expired;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_AuthCode_TypeNotMatch_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_AuthCode_TypeNotMatch;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_API_NotReady_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_API_NotReady;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_UDP_LISTEN_FAILED_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_UDP_LISTEN_FAILED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_UDP_LISTENING_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_UDP_LISTENING;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_NotImplemented_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_NotImplemented;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_CallOneTimeOnly_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_CallOneTimeOnly;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_Frequently_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_Frequently;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_NULL_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_NULL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIYNFLAG_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIYNFLAG;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPILOGLEVEL_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPILOGLEVEL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPICommodityType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPICommodityType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPICallOrPutFlagType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPICallOrPutFlagType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIAccountType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIAccountType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIAccountState_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIAccountState;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIAccountFamilyType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIAccountFamilyType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIOrderTypeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIOrderTypeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIOrderSourceType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIOrderSourceType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPITimeInForceType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPITimeInForceType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPISideType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPISideType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIPositionEffectType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIPositionEffectType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIHedgeFlagType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIHedgeFlagType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIOrderStateType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIOrderStateType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPICalculateModeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPICalculateModeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIMatchSourceType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIMatchSourceType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIOpenCloseModeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIOpenCloseModeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIFutureAlgType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIFutureAlgType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIOptionAlgType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIOptionAlgType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIBankAccountLWFlagType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIBankAccountLWFlagType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIMarginCalculateModeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIMarginCalculateModeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIOptionMarginCalculateModeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIOptionMarginCalculateModeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPICmbDirectType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPICmbDirectType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIDeliveryModeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIDeliveryModeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIContractTypeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIContractTypeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPITacticsTypeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPITacticsTypeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIORDERACT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIORDERACT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPITriggerConditionType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPITriggerConditionType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPITriggerPriceTypeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPITriggerPriceTypeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPITradingStateType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPITradingStateType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIMarketLevelType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIMarketLevelType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_INPUTERROR_TAPIOrderQryTypeType_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_INPUTERROR_TAPIOrderQryTypeType;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_CLOSE_INIT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DISCONNECT_CLOSE_INIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_CLOSE_PASS_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DISCONNECT_CLOSE_PASS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_READ_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DISCONNECT_READ_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_WRITE_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DISCONNECT_WRITE_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_BUF_FULL_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DISCONNECT_BUF_FULL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_IOCP_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DISCONNECT_IOCP_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_PARSE_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DISCONNECT_PARSE_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_CONNECT_TIMEOUT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DISCONNECT_CONNECT_TIMEOUT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_INIT_ERROR_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DISCONNECT_INIT_ERROR;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_HAS_CONNECTED_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DISCONNECT_HAS_CONNECTED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_HAS_EXIT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DISCONNECT_HAS_EXIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_TRY_LATER_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DISCONNECT_TRY_LATER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_DISCONNECT_HEARTBEAT_FAILED_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_DISCONNECT_HEARTBEAT_FAILED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LOGIN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_USER_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LOGIN_USER;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_DDA_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LOGIN_DDA;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_LICENSE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LOGIN_LICENSE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_MODULE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LOGIN_MODULE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_FORCE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LOGIN_FORCE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_STATE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LOGIN_STATE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_PASS_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LOGIN_PASS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_RIGHT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LOGIN_RIGHT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_COUNT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LOGIN_COUNT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_NOTIN_SERVERFLAGUSRES_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LOGIN_NOTIN_SERVERFLAGUSRES;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_USER_EXPIRED_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LOGIN_USER_EXPIRED;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_LOGIN_NO_ACCOUNT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_LOGIN_NO_ACCOUNT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_USERINFO_QRY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_USERINFO_QRY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_USERALLRIGHT_QRY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_USERALLRIGHT_QRY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_USERALLACCOUNT_QRY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_USERALLACCOUNT_QRY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_USERPASSWORD_MOD_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_USERPASSWORD_MOD;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_USERPASSWORD_MOD_SOURCE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_USERPASSWORD_MOD_SOURCE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_USERPASSWORD_MOD_SAME_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_USERPASSWORD_MOD_SAME;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_USERPASSWORD_MOD_COMPLEXITY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_USERPASSWORD_MOD_COMPLEXITY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ACCOUNTINFO_QRY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ACCOUNTINFO_QRY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_TRADENO_QRY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_TRADENO_QRY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_CONTRACTINFO_QRY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_CONTRACTINFO_QRY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_SPECIALOPTIONFUTURE_QRY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_SPECIALOPTIONFUTURE_QRY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_COMMODITYORDERTYPE_QRY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_COMMODITYORDERTYPE_QRY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERTIMEINFORCE_QRY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERTIMEINFORCE_QRY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_USER_ORDER_FREQUENCE_QRY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_USER_ORDER_FREQUENCE_QRY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_ACCOUNT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_ACCOUNT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_ACCOUNT_STATE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_ACCOUNT_STATE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_CONTRACT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_CONTRACT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_TRADEROUTE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_TRADEROUTE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_POSITIONMAX_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_POSITIONMAX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_NOTRADE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDER_NOTRADE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_CLOSE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDER_CLOSE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_NOTENOUGHFUND_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_NOTENOUGHFUND;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_ORDERTYPE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_ORDERTYPE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_TIMEINFORCE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_TIMEINFORCE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_NO_TACTICS_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_NO_TACTICS;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_POSITION_CANNOT_CLOSE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_POSITION_CANNOT_CLOSE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_AUTOCHECK_FAIL_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_AUTOCHECK_FAIL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_LME_NOTREADY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_LME_NOTREADY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_CLOSEMODE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_CLOSEMODE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_PARENTNOTENOUGHFUND_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_PARENTNOTENOUGHFUND;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_SWAP_CONTRACT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_SWAP_CONTRACT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_USERNO_NOTHAS_ACCOUNT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_USERNO_NOTHAS_ACCOUNT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_UPPERCHANNEL_BROKEN_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_UPPERCHANNEL_BROKEN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_UPPERCHANNEL_NOT_EXIST_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_UPPERCHANNEL_NOT_EXIST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERDELETE_NOT_SYSNO_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERDELETE_NOT_SYSNO;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERDELETE_NOT_STATE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERDELETE_NOT_STATE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERACTIVE_NOT_STATE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERACTIVE_NOT_STATE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERCHECK_NOT_STATE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERCHECK_NOT_STATE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERCHECK_FAIL_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERCHECK_FAIL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERMODIFY_NOT_STATE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERMODIFY_NOT_STATE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERMODIFY_BACK_INPUT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERMODIFY_BACK_INPUT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_FEE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_FEE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERINSERT_MARGIN_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERINSERT_MARGIN;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_NO_PERMIT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDER_NO_PERMIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_RSPQUOTE_NO_PERMIT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_RSPQUOTE_NO_PERMIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_RSPQUOTE_CHILD_NO_PERMIT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_RSPQUOTE_CHILD_NO_PERMIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_TRADENO_NOT_FIND_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_TRADENO_NOT_FIND;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_NO_CLOSE_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDER_NO_CLOSE;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_QRY_QUOTE_NO_PERMIT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_QRY_QUOTE_NO_PERMIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_EXPIREDATE_NO_PERMIT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_EXPIREDATE_NO_PERMIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_CMB_NO_PERMIT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_CMB_NO_PERMIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERSERVER_NO_PERMIT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERSERVER_NO_PERMIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_POSITION_CANNOT_EXEC_OR_ABANDON_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_POSITION_CANNOT_EXEC_OR_ABANDON;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERCHECK_NO_PERMIT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERCHECK_NO_PERMIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDERMAXOPENVOL_NO_PERMIT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDERMAXOPENVOL_NO_PERMIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_QTY_NO_PERMIT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDER_QTY_NO_PERMIT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_FREQUENCY_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDER_FREQUENCY;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_ORDER_QUERYING_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_ORDER_QUERYING;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_SUBSCRIBEQUOTE_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_SUBSCRIBEQUOTE_MAX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_SUBSCRIBEQUOTE_EXCHANGE_MAX_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_SUBSCRIBEQUOTE_EXCHANGE_MAX;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_SUBSCRIBEQUOTE_NO_RIGHT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_SUBSCRIBEQUOTE_NO_RIGHT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_SUBSCRIBEQUOTE_NO_EXCHANGE_RIGHT_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_SUBSCRIBEQUOTE_NO_EXCHANGE_RIGHT;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_SUBSCRIBEQUOTE_COMMODITY_NOT_EXIST_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_SUBSCRIBEQUOTE_COMMODITY_NOT_EXIST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_SUBSCRIBEQUOTE_CONTRACT_MAY_NOT_EXIST_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_SUBSCRIBEQUOTE_CONTRACT_MAY_NOT_EXIST;
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TAPIERROR_QUOTEFRONT_UNKNOWN_PROTOCOL_get() {
  int jresult ;
  int result;
  
  result = (int)(int)TAPIERROR_QUOTEFRONT_UNKNOWN_PROTOCOL;
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteLoginAuth_UserNo_set(void * jarg1, char * jarg2) {
  TapAPIQuoteLoginAuth *arg1 = (TapAPIQuoteLoginAuth *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIQuoteLoginAuth *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserNo, (const char *)arg2, 21-1);
      arg1->UserNo[21-1] = 0;
    } else {
      arg1->UserNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIQuoteLoginAuth_UserNo_get(void * jarg1) {
  char * jresult ;
  TapAPIQuoteLoginAuth *arg1 = (TapAPIQuoteLoginAuth *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIQuoteLoginAuth *)jarg1; 
  result = (char *) ((arg1)->UserNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteLoginAuth_ISModifyPassword_set(void * jarg1, char jarg2) {
  TapAPIQuoteLoginAuth *arg1 = (TapAPIQuoteLoginAuth *) 0 ;
  TAPIYNFLAG arg2 ;
  
  arg1 = (TapAPIQuoteLoginAuth *)jarg1; 
  arg2 = (TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->ISModifyPassword = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIQuoteLoginAuth_ISModifyPassword_get(void * jarg1) {
  char jresult ;
  TapAPIQuoteLoginAuth *arg1 = (TapAPIQuoteLoginAuth *) 0 ;
  TAPIYNFLAG result;
  
  arg1 = (TapAPIQuoteLoginAuth *)jarg1; 
  result = (TAPIYNFLAG) ((arg1)->ISModifyPassword);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteLoginAuth_Password_set(void * jarg1, char * jarg2) {
  TapAPIQuoteLoginAuth *arg1 = (TapAPIQuoteLoginAuth *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIQuoteLoginAuth *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 21-1);
      arg1->Password[21-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIQuoteLoginAuth_Password_get(void * jarg1) {
  char * jresult ;
  TapAPIQuoteLoginAuth *arg1 = (TapAPIQuoteLoginAuth *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIQuoteLoginAuth *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteLoginAuth_NewPassword_set(void * jarg1, char * jarg2) {
  TapAPIQuoteLoginAuth *arg1 = (TapAPIQuoteLoginAuth *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIQuoteLoginAuth *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->NewPassword, (const char *)arg2, 21-1);
      arg1->NewPassword[21-1] = 0;
    } else {
      arg1->NewPassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIQuoteLoginAuth_NewPassword_get(void * jarg1) {
  char * jresult ;
  TapAPIQuoteLoginAuth *arg1 = (TapAPIQuoteLoginAuth *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIQuoteLoginAuth *)jarg1; 
  result = (char *) ((arg1)->NewPassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteLoginAuth_QuoteTempPassword_set(void * jarg1, char * jarg2) {
  TapAPIQuoteLoginAuth *arg1 = (TapAPIQuoteLoginAuth *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIQuoteLoginAuth *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteTempPassword, (const char *)arg2, 21-1);
      arg1->QuoteTempPassword[21-1] = 0;
    } else {
      arg1->QuoteTempPassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIQuoteLoginAuth_QuoteTempPassword_get(void * jarg1) {
  char * jresult ;
  TapAPIQuoteLoginAuth *arg1 = (TapAPIQuoteLoginAuth *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIQuoteLoginAuth *)jarg1; 
  result = (char *) ((arg1)->QuoteTempPassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteLoginAuth_ISDDA_set(void * jarg1, char jarg2) {
  TapAPIQuoteLoginAuth *arg1 = (TapAPIQuoteLoginAuth *) 0 ;
  TAPIYNFLAG arg2 ;
  
  arg1 = (TapAPIQuoteLoginAuth *)jarg1; 
  arg2 = (TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->ISDDA = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIQuoteLoginAuth_ISDDA_get(void * jarg1) {
  char jresult ;
  TapAPIQuoteLoginAuth *arg1 = (TapAPIQuoteLoginAuth *) 0 ;
  TAPIYNFLAG result;
  
  arg1 = (TapAPIQuoteLoginAuth *)jarg1; 
  result = (TAPIYNFLAG) ((arg1)->ISDDA);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteLoginAuth_DDASerialNo_set(void * jarg1, char * jarg2) {
  TapAPIQuoteLoginAuth *arg1 = (TapAPIQuoteLoginAuth *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIQuoteLoginAuth *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DDASerialNo, (const char *)arg2, 31-1);
      arg1->DDASerialNo[31-1] = 0;
    } else {
      arg1->DDASerialNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIQuoteLoginAuth_DDASerialNo_get(void * jarg1) {
  char * jresult ;
  TapAPIQuoteLoginAuth *arg1 = (TapAPIQuoteLoginAuth *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIQuoteLoginAuth *)jarg1; 
  result = (char *) ((arg1)->DDASerialNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIQuoteLoginAuth() {
  void * jresult ;
  TapAPIQuoteLoginAuth *result = 0 ;
  
  result = (TapAPIQuoteLoginAuth *)new TapAPIQuoteLoginAuth();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIQuoteLoginAuth(void * jarg1) {
  TapAPIQuoteLoginAuth *arg1 = (TapAPIQuoteLoginAuth *) 0 ;
  
  arg1 = (TapAPIQuoteLoginAuth *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuotLoginRspInfo_UserNo_set(void * jarg1, char * jarg2) {
  TapAPIQuotLoginRspInfo *arg1 = (TapAPIQuotLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIQuotLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserNo, (const char *)arg2, 21-1);
      arg1->UserNo[21-1] = 0;
    } else {
      arg1->UserNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIQuotLoginRspInfo_UserNo_get(void * jarg1) {
  char * jresult ;
  TapAPIQuotLoginRspInfo *arg1 = (TapAPIQuotLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIQuotLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->UserNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuotLoginRspInfo_UserType_set(void * jarg1, int jarg2) {
  TapAPIQuotLoginRspInfo *arg1 = (TapAPIQuotLoginRspInfo *) 0 ;
  TAPIINT32 arg2 ;
  
  arg1 = (TapAPIQuotLoginRspInfo *)jarg1; 
  arg2 = (TAPIINT32)jarg2; 
  if (arg1) (arg1)->UserType = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TapAPIQuotLoginRspInfo_UserType_get(void * jarg1) {
  int jresult ;
  TapAPIQuotLoginRspInfo *arg1 = (TapAPIQuotLoginRspInfo *) 0 ;
  TAPIINT32 result;
  
  arg1 = (TapAPIQuotLoginRspInfo *)jarg1; 
  result = (TAPIINT32) ((arg1)->UserType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuotLoginRspInfo_UserName_set(void * jarg1, char * jarg2) {
  TapAPIQuotLoginRspInfo *arg1 = (TapAPIQuotLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIQuotLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserName, (const char *)arg2, 21-1);
      arg1->UserName[21-1] = 0;
    } else {
      arg1->UserName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIQuotLoginRspInfo_UserName_get(void * jarg1) {
  char * jresult ;
  TapAPIQuotLoginRspInfo *arg1 = (TapAPIQuotLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIQuotLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->UserName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuotLoginRspInfo_QuoteTempPassword_set(void * jarg1, char * jarg2) {
  TapAPIQuotLoginRspInfo *arg1 = (TapAPIQuotLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIQuotLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteTempPassword, (const char *)arg2, 21-1);
      arg1->QuoteTempPassword[21-1] = 0;
    } else {
      arg1->QuoteTempPassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIQuotLoginRspInfo_QuoteTempPassword_get(void * jarg1) {
  char * jresult ;
  TapAPIQuotLoginRspInfo *arg1 = (TapAPIQuotLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIQuotLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->QuoteTempPassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuotLoginRspInfo_ReservedInfo_set(void * jarg1, char * jarg2) {
  TapAPIQuotLoginRspInfo *arg1 = (TapAPIQuotLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIQuotLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ReservedInfo, (const char *)arg2, 51-1);
      arg1->ReservedInfo[51-1] = 0;
    } else {
      arg1->ReservedInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIQuotLoginRspInfo_ReservedInfo_get(void * jarg1) {
  char * jresult ;
  TapAPIQuotLoginRspInfo *arg1 = (TapAPIQuotLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIQuotLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->ReservedInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuotLoginRspInfo_LastLoginIP_set(void * jarg1, char * jarg2) {
  TapAPIQuotLoginRspInfo *arg1 = (TapAPIQuotLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIQuotLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastLoginIP, (const char *)arg2, 41-1);
      arg1->LastLoginIP[41-1] = 0;
    } else {
      arg1->LastLoginIP[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIQuotLoginRspInfo_LastLoginIP_get(void * jarg1) {
  char * jresult ;
  TapAPIQuotLoginRspInfo *arg1 = (TapAPIQuotLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIQuotLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->LastLoginIP);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuotLoginRspInfo_LastLoginProt_set(void * jarg1, unsigned int jarg2) {
  TapAPIQuotLoginRspInfo *arg1 = (TapAPIQuotLoginRspInfo *) 0 ;
  TAPIUINT32 arg2 ;
  
  arg1 = (TapAPIQuotLoginRspInfo *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  if (arg1) (arg1)->LastLoginProt = arg2;
}


SWIGEXPORT unsigned int SWIGSTDCALL CSharp_TapAPIQuotLoginRspInfo_LastLoginProt_get(void * jarg1) {
  unsigned int jresult ;
  TapAPIQuotLoginRspInfo *arg1 = (TapAPIQuotLoginRspInfo *) 0 ;
  TAPIUINT32 result;
  
  arg1 = (TapAPIQuotLoginRspInfo *)jarg1; 
  result = (TAPIUINT32) ((arg1)->LastLoginProt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuotLoginRspInfo_LastLoginTime_set(void * jarg1, char * jarg2) {
  TapAPIQuotLoginRspInfo *arg1 = (TapAPIQuotLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIQuotLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastLoginTime, (const char *)arg2, 20-1);
      arg1->LastLoginTime[20-1] = 0;
    } else {
      arg1->LastLoginTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIQuotLoginRspInfo_LastLoginTime_get(void * jarg1) {
  char * jresult ;
  TapAPIQuotLoginRspInfo *arg1 = (TapAPIQuotLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIQuotLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->LastLoginTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuotLoginRspInfo_LastLogoutTime_set(void * jarg1, char * jarg2) {
  TapAPIQuotLoginRspInfo *arg1 = (TapAPIQuotLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIQuotLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastLogoutTime, (const char *)arg2, 20-1);
      arg1->LastLogoutTime[20-1] = 0;
    } else {
      arg1->LastLogoutTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIQuotLoginRspInfo_LastLogoutTime_get(void * jarg1) {
  char * jresult ;
  TapAPIQuotLoginRspInfo *arg1 = (TapAPIQuotLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIQuotLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->LastLogoutTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuotLoginRspInfo_TradeDate_set(void * jarg1, char * jarg2) {
  TapAPIQuotLoginRspInfo *arg1 = (TapAPIQuotLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIQuotLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 11-1);
      arg1->TradeDate[11-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIQuotLoginRspInfo_TradeDate_get(void * jarg1) {
  char * jresult ;
  TapAPIQuotLoginRspInfo *arg1 = (TapAPIQuotLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIQuotLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuotLoginRspInfo_LastSettleTime_set(void * jarg1, char * jarg2) {
  TapAPIQuotLoginRspInfo *arg1 = (TapAPIQuotLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIQuotLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastSettleTime, (const char *)arg2, 20-1);
      arg1->LastSettleTime[20-1] = 0;
    } else {
      arg1->LastSettleTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIQuotLoginRspInfo_LastSettleTime_get(void * jarg1) {
  char * jresult ;
  TapAPIQuotLoginRspInfo *arg1 = (TapAPIQuotLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIQuotLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->LastSettleTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuotLoginRspInfo_StartTime_set(void * jarg1, char * jarg2) {
  TapAPIQuotLoginRspInfo *arg1 = (TapAPIQuotLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIQuotLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StartTime, (const char *)arg2, 20-1);
      arg1->StartTime[20-1] = 0;
    } else {
      arg1->StartTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIQuotLoginRspInfo_StartTime_get(void * jarg1) {
  char * jresult ;
  TapAPIQuotLoginRspInfo *arg1 = (TapAPIQuotLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIQuotLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->StartTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuotLoginRspInfo_InitTime_set(void * jarg1, char * jarg2) {
  TapAPIQuotLoginRspInfo *arg1 = (TapAPIQuotLoginRspInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIQuotLoginRspInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InitTime, (const char *)arg2, 20-1);
      arg1->InitTime[20-1] = 0;
    } else {
      arg1->InitTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIQuotLoginRspInfo_InitTime_get(void * jarg1) {
  char * jresult ;
  TapAPIQuotLoginRspInfo *arg1 = (TapAPIQuotLoginRspInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIQuotLoginRspInfo *)jarg1; 
  result = (char *) ((arg1)->InitTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIQuotLoginRspInfo() {
  void * jresult ;
  TapAPIQuotLoginRspInfo *result = 0 ;
  
  result = (TapAPIQuotLoginRspInfo *)new TapAPIQuotLoginRspInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIQuotLoginRspInfo(void * jarg1) {
  TapAPIQuotLoginRspInfo *arg1 = (TapAPIQuotLoginRspInfo *) 0 ;
  
  arg1 = (TapAPIQuotLoginRspInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteCommodityInfo_Commodity_set(void * jarg1, void * jarg2) {
  TapAPIQuoteCommodityInfo *arg1 = (TapAPIQuoteCommodityInfo *) 0 ;
  TapAPICommodity *arg2 = (TapAPICommodity *) 0 ;
  
  arg1 = (TapAPIQuoteCommodityInfo *)jarg1; 
  arg2 = (TapAPICommodity *)jarg2; 
  if (arg1) (arg1)->Commodity = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPIQuoteCommodityInfo_Commodity_get(void * jarg1) {
  void * jresult ;
  TapAPIQuoteCommodityInfo *arg1 = (TapAPIQuoteCommodityInfo *) 0 ;
  TapAPICommodity *result = 0 ;
  
  arg1 = (TapAPIQuoteCommodityInfo *)jarg1; 
  result = (TapAPICommodity *)& ((arg1)->Commodity);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteCommodityInfo_CommodityName_set(void * jarg1, char * jarg2) {
  TapAPIQuoteCommodityInfo *arg1 = (TapAPIQuoteCommodityInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIQuoteCommodityInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityName, (const char *)arg2, 21-1);
      arg1->CommodityName[21-1] = 0;
    } else {
      arg1->CommodityName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIQuoteCommodityInfo_CommodityName_get(void * jarg1) {
  char * jresult ;
  TapAPIQuoteCommodityInfo *arg1 = (TapAPIQuoteCommodityInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIQuoteCommodityInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteCommodityInfo_CommodityEngName_set(void * jarg1, char * jarg2) {
  TapAPIQuoteCommodityInfo *arg1 = (TapAPIQuoteCommodityInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIQuoteCommodityInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommodityEngName, (const char *)arg2, 31-1);
      arg1->CommodityEngName[31-1] = 0;
    } else {
      arg1->CommodityEngName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIQuoteCommodityInfo_CommodityEngName_get(void * jarg1) {
  char * jresult ;
  TapAPIQuoteCommodityInfo *arg1 = (TapAPIQuoteCommodityInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIQuoteCommodityInfo *)jarg1; 
  result = (char *) ((arg1)->CommodityEngName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteCommodityInfo_ContractSize_set(void * jarg1, double jarg2) {
  TapAPIQuoteCommodityInfo *arg1 = (TapAPIQuoteCommodityInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIQuoteCommodityInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->ContractSize = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteCommodityInfo_ContractSize_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteCommodityInfo *arg1 = (TapAPIQuoteCommodityInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIQuoteCommodityInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->ContractSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteCommodityInfo_CommodityTickSize_set(void * jarg1, double jarg2) {
  TapAPIQuoteCommodityInfo *arg1 = (TapAPIQuoteCommodityInfo *) 0 ;
  TAPIREAL64 arg2 ;
  
  arg1 = (TapAPIQuoteCommodityInfo *)jarg1; 
  arg2 = (TAPIREAL64)jarg2; 
  if (arg1) (arg1)->CommodityTickSize = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteCommodityInfo_CommodityTickSize_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteCommodityInfo *arg1 = (TapAPIQuoteCommodityInfo *) 0 ;
  TAPIREAL64 result;
  
  arg1 = (TapAPIQuoteCommodityInfo *)jarg1; 
  result = (TAPIREAL64) ((arg1)->CommodityTickSize);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteCommodityInfo_CommodityDenominator_set(void * jarg1, int jarg2) {
  TapAPIQuoteCommodityInfo *arg1 = (TapAPIQuoteCommodityInfo *) 0 ;
  TAPIINT32 arg2 ;
  
  arg1 = (TapAPIQuoteCommodityInfo *)jarg1; 
  arg2 = (TAPIINT32)jarg2; 
  if (arg1) (arg1)->CommodityDenominator = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TapAPIQuoteCommodityInfo_CommodityDenominator_get(void * jarg1) {
  int jresult ;
  TapAPIQuoteCommodityInfo *arg1 = (TapAPIQuoteCommodityInfo *) 0 ;
  TAPIINT32 result;
  
  arg1 = (TapAPIQuoteCommodityInfo *)jarg1; 
  result = (TAPIINT32) ((arg1)->CommodityDenominator);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteCommodityInfo_CmbDirect_set(void * jarg1, char jarg2) {
  TapAPIQuoteCommodityInfo *arg1 = (TapAPIQuoteCommodityInfo *) 0 ;
  TAPICHAR arg2 ;
  
  arg1 = (TapAPIQuoteCommodityInfo *)jarg1; 
  arg2 = (TAPICHAR)jarg2; 
  if (arg1) (arg1)->CmbDirect = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIQuoteCommodityInfo_CmbDirect_get(void * jarg1) {
  char jresult ;
  TapAPIQuoteCommodityInfo *arg1 = (TapAPIQuoteCommodityInfo *) 0 ;
  TAPICHAR result;
  
  arg1 = (TapAPIQuoteCommodityInfo *)jarg1; 
  result = (TAPICHAR) ((arg1)->CmbDirect);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteCommodityInfo_CommodityContractLen_set(void * jarg1, int jarg2) {
  TapAPIQuoteCommodityInfo *arg1 = (TapAPIQuoteCommodityInfo *) 0 ;
  TAPIINT32 arg2 ;
  
  arg1 = (TapAPIQuoteCommodityInfo *)jarg1; 
  arg2 = (TAPIINT32)jarg2; 
  if (arg1) (arg1)->CommodityContractLen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_TapAPIQuoteCommodityInfo_CommodityContractLen_get(void * jarg1) {
  int jresult ;
  TapAPIQuoteCommodityInfo *arg1 = (TapAPIQuoteCommodityInfo *) 0 ;
  TAPIINT32 result;
  
  arg1 = (TapAPIQuoteCommodityInfo *)jarg1; 
  result = (TAPIINT32) ((arg1)->CommodityContractLen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteCommodityInfo_IsDST_set(void * jarg1, char jarg2) {
  TapAPIQuoteCommodityInfo *arg1 = (TapAPIQuoteCommodityInfo *) 0 ;
  TAPIYNFLAG arg2 ;
  
  arg1 = (TapAPIQuoteCommodityInfo *)jarg1; 
  arg2 = (TAPIYNFLAG)jarg2; 
  if (arg1) (arg1)->IsDST = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIQuoteCommodityInfo_IsDST_get(void * jarg1) {
  char jresult ;
  TapAPIQuoteCommodityInfo *arg1 = (TapAPIQuoteCommodityInfo *) 0 ;
  TAPIYNFLAG result;
  
  arg1 = (TapAPIQuoteCommodityInfo *)jarg1; 
  result = (TAPIYNFLAG) ((arg1)->IsDST);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteCommodityInfo_RelateCommodity1_set(void * jarg1, void * jarg2) {
  TapAPIQuoteCommodityInfo *arg1 = (TapAPIQuoteCommodityInfo *) 0 ;
  TapAPICommodity *arg2 = (TapAPICommodity *) 0 ;
  
  arg1 = (TapAPIQuoteCommodityInfo *)jarg1; 
  arg2 = (TapAPICommodity *)jarg2; 
  if (arg1) (arg1)->RelateCommodity1 = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPIQuoteCommodityInfo_RelateCommodity1_get(void * jarg1) {
  void * jresult ;
  TapAPIQuoteCommodityInfo *arg1 = (TapAPIQuoteCommodityInfo *) 0 ;
  TapAPICommodity *result = 0 ;
  
  arg1 = (TapAPIQuoteCommodityInfo *)jarg1; 
  result = (TapAPICommodity *)& ((arg1)->RelateCommodity1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteCommodityInfo_RelateCommodity2_set(void * jarg1, void * jarg2) {
  TapAPIQuoteCommodityInfo *arg1 = (TapAPIQuoteCommodityInfo *) 0 ;
  TapAPICommodity *arg2 = (TapAPICommodity *) 0 ;
  
  arg1 = (TapAPIQuoteCommodityInfo *)jarg1; 
  arg2 = (TapAPICommodity *)jarg2; 
  if (arg1) (arg1)->RelateCommodity2 = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPIQuoteCommodityInfo_RelateCommodity2_get(void * jarg1) {
  void * jresult ;
  TapAPIQuoteCommodityInfo *arg1 = (TapAPIQuoteCommodityInfo *) 0 ;
  TapAPICommodity *result = 0 ;
  
  arg1 = (TapAPIQuoteCommodityInfo *)jarg1; 
  result = (TapAPICommodity *)& ((arg1)->RelateCommodity2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIQuoteCommodityInfo() {
  void * jresult ;
  TapAPIQuoteCommodityInfo *result = 0 ;
  
  result = (TapAPIQuoteCommodityInfo *)new TapAPIQuoteCommodityInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIQuoteCommodityInfo(void * jarg1) {
  TapAPIQuoteCommodityInfo *arg1 = (TapAPIQuoteCommodityInfo *) 0 ;
  
  arg1 = (TapAPIQuoteCommodityInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteContractInfo_Contract_set(void * jarg1, void * jarg2) {
  TapAPIQuoteContractInfo *arg1 = (TapAPIQuoteContractInfo *) 0 ;
  TapAPIContract *arg2 = (TapAPIContract *) 0 ;
  
  arg1 = (TapAPIQuoteContractInfo *)jarg1; 
  arg2 = (TapAPIContract *)jarg2; 
  if (arg1) (arg1)->Contract = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPIQuoteContractInfo_Contract_get(void * jarg1) {
  void * jresult ;
  TapAPIQuoteContractInfo *arg1 = (TapAPIQuoteContractInfo *) 0 ;
  TapAPIContract *result = 0 ;
  
  arg1 = (TapAPIQuoteContractInfo *)jarg1; 
  result = (TapAPIContract *)& ((arg1)->Contract);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteContractInfo_ContractType_set(void * jarg1, char jarg2) {
  TapAPIQuoteContractInfo *arg1 = (TapAPIQuoteContractInfo *) 0 ;
  TAPICHAR arg2 ;
  
  arg1 = (TapAPIQuoteContractInfo *)jarg1; 
  arg2 = (TAPICHAR)jarg2; 
  if (arg1) (arg1)->ContractType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIQuoteContractInfo_ContractType_get(void * jarg1) {
  char jresult ;
  TapAPIQuoteContractInfo *arg1 = (TapAPIQuoteContractInfo *) 0 ;
  TAPICHAR result;
  
  arg1 = (TapAPIQuoteContractInfo *)jarg1; 
  result = (TAPICHAR) ((arg1)->ContractType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteContractInfo_QuoteUnderlyingContract_set(void * jarg1, char * jarg2) {
  TapAPIQuoteContractInfo *arg1 = (TapAPIQuoteContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIQuoteContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteUnderlyingContract, (const char *)arg2, 11-1);
      arg1->QuoteUnderlyingContract[11-1] = 0;
    } else {
      arg1->QuoteUnderlyingContract[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIQuoteContractInfo_QuoteUnderlyingContract_get(void * jarg1) {
  char * jresult ;
  TapAPIQuoteContractInfo *arg1 = (TapAPIQuoteContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIQuoteContractInfo *)jarg1; 
  result = (char *) ((arg1)->QuoteUnderlyingContract);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteContractInfo_ContractName_set(void * jarg1, char * jarg2) {
  TapAPIQuoteContractInfo *arg1 = (TapAPIQuoteContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIQuoteContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractName, (const char *)arg2, 71-1);
      arg1->ContractName[71-1] = 0;
    } else {
      arg1->ContractName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIQuoteContractInfo_ContractName_get(void * jarg1) {
  char * jresult ;
  TapAPIQuoteContractInfo *arg1 = (TapAPIQuoteContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIQuoteContractInfo *)jarg1; 
  result = (char *) ((arg1)->ContractName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteContractInfo_ContractExpDate_set(void * jarg1, char * jarg2) {
  TapAPIQuoteContractInfo *arg1 = (TapAPIQuoteContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIQuoteContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ContractExpDate, (const char *)arg2, 11-1);
      arg1->ContractExpDate[11-1] = 0;
    } else {
      arg1->ContractExpDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIQuoteContractInfo_ContractExpDate_get(void * jarg1) {
  char * jresult ;
  TapAPIQuoteContractInfo *arg1 = (TapAPIQuoteContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIQuoteContractInfo *)jarg1; 
  result = (char *) ((arg1)->ContractExpDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteContractInfo_LastTradeDate_set(void * jarg1, char * jarg2) {
  TapAPIQuoteContractInfo *arg1 = (TapAPIQuoteContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIQuoteContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastTradeDate, (const char *)arg2, 11-1);
      arg1->LastTradeDate[11-1] = 0;
    } else {
      arg1->LastTradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIQuoteContractInfo_LastTradeDate_get(void * jarg1) {
  char * jresult ;
  TapAPIQuoteContractInfo *arg1 = (TapAPIQuoteContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIQuoteContractInfo *)jarg1; 
  result = (char *) ((arg1)->LastTradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteContractInfo_FirstNoticeDate_set(void * jarg1, char * jarg2) {
  TapAPIQuoteContractInfo *arg1 = (TapAPIQuoteContractInfo *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIQuoteContractInfo *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FirstNoticeDate, (const char *)arg2, 11-1);
      arg1->FirstNoticeDate[11-1] = 0;
    } else {
      arg1->FirstNoticeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIQuoteContractInfo_FirstNoticeDate_get(void * jarg1) {
  char * jresult ;
  TapAPIQuoteContractInfo *arg1 = (TapAPIQuoteContractInfo *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIQuoteContractInfo *)jarg1; 
  result = (char *) ((arg1)->FirstNoticeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIQuoteContractInfo() {
  void * jresult ;
  TapAPIQuoteContractInfo *result = 0 ;
  
  result = (TapAPIQuoteContractInfo *)new TapAPIQuoteContractInfo();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIQuoteContractInfo(void * jarg1) {
  TapAPIQuoteContractInfo *arg1 = (TapAPIQuoteContractInfo *) 0 ;
  
  arg1 = (TapAPIQuoteContractInfo *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_Contract_set(void * jarg1, void * jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TapAPIContract *arg2 = (TapAPIContract *) 0 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TapAPIContract *)jarg2; 
  if (arg1) (arg1)->Contract = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPIQuoteWhole_Contract_get(void * jarg1) {
  void * jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TapAPIContract *result = 0 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TapAPIContract *)& ((arg1)->Contract);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_CurrencyNo_set(void * jarg1, char * jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyNo, (const char *)arg2, 11-1);
      arg1->CurrencyNo[11-1] = 0;
    } else {
      arg1->CurrencyNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIQuoteWhole_CurrencyNo_get(void * jarg1) {
  char * jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (char *) ((arg1)->CurrencyNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_TradingState_set(void * jarg1, char jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPICHAR arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPICHAR)jarg2; 
  if (arg1) (arg1)->TradingState = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_TapAPIQuoteWhole_TradingState_get(void * jarg1) {
  char jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPICHAR result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPICHAR) ((arg1)->TradingState);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_DateTimeStamp_set(void * jarg1, char * jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  char *arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DateTimeStamp, (const char *)arg2, 24-1);
      arg1->DateTimeStamp[24-1] = 0;
    } else {
      arg1->DateTimeStamp[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_TapAPIQuoteWhole_DateTimeStamp_get(void * jarg1) {
  char * jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  char *result = 0 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (char *) ((arg1)->DateTimeStamp);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QPreClosingPrice_set(void * jarg1, double jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE)jarg2; 
  if (arg1) (arg1)->QPreClosingPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteWhole_QPreClosingPrice_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE) ((arg1)->QPreClosingPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QPreSettlePrice_set(void * jarg1, double jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE)jarg2; 
  if (arg1) (arg1)->QPreSettlePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteWhole_QPreSettlePrice_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE) ((arg1)->QPreSettlePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QPrePositionQty_set(void * jarg1, unsigned long long jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQVOLUME arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQVOLUME)jarg2; 
  if (arg1) (arg1)->QPrePositionQty = arg2;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_TapAPIQuoteWhole_QPrePositionQty_get(void * jarg1) {
  unsigned long long jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQVOLUME result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQVOLUME) ((arg1)->QPrePositionQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QOpeningPrice_set(void * jarg1, double jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE)jarg2; 
  if (arg1) (arg1)->QOpeningPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteWhole_QOpeningPrice_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE) ((arg1)->QOpeningPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QLastPrice_set(void * jarg1, double jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE)jarg2; 
  if (arg1) (arg1)->QLastPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteWhole_QLastPrice_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE) ((arg1)->QLastPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QHighPrice_set(void * jarg1, double jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE)jarg2; 
  if (arg1) (arg1)->QHighPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteWhole_QHighPrice_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE) ((arg1)->QHighPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QLowPrice_set(void * jarg1, double jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE)jarg2; 
  if (arg1) (arg1)->QLowPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteWhole_QLowPrice_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE) ((arg1)->QLowPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QHisHighPrice_set(void * jarg1, double jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE)jarg2; 
  if (arg1) (arg1)->QHisHighPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteWhole_QHisHighPrice_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE) ((arg1)->QHisHighPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QHisLowPrice_set(void * jarg1, double jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE)jarg2; 
  if (arg1) (arg1)->QHisLowPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteWhole_QHisLowPrice_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE) ((arg1)->QHisLowPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QLimitUpPrice_set(void * jarg1, double jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE)jarg2; 
  if (arg1) (arg1)->QLimitUpPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteWhole_QLimitUpPrice_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE) ((arg1)->QLimitUpPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QLimitDownPrice_set(void * jarg1, double jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE)jarg2; 
  if (arg1) (arg1)->QLimitDownPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteWhole_QLimitDownPrice_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE) ((arg1)->QLimitDownPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QTotalQty_set(void * jarg1, unsigned long long jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQVOLUME arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQVOLUME)jarg2; 
  if (arg1) (arg1)->QTotalQty = arg2;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_TapAPIQuoteWhole_QTotalQty_get(void * jarg1) {
  unsigned long long jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQVOLUME result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQVOLUME) ((arg1)->QTotalQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QTotalTurnover_set(void * jarg1, double jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE)jarg2; 
  if (arg1) (arg1)->QTotalTurnover = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteWhole_QTotalTurnover_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE) ((arg1)->QTotalTurnover);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QPositionQty_set(void * jarg1, unsigned long long jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQVOLUME arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQVOLUME)jarg2; 
  if (arg1) (arg1)->QPositionQty = arg2;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_TapAPIQuoteWhole_QPositionQty_get(void * jarg1) {
  unsigned long long jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQVOLUME result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQVOLUME) ((arg1)->QPositionQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QAveragePrice_set(void * jarg1, double jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE)jarg2; 
  if (arg1) (arg1)->QAveragePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteWhole_QAveragePrice_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE) ((arg1)->QAveragePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QClosingPrice_set(void * jarg1, double jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE)jarg2; 
  if (arg1) (arg1)->QClosingPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteWhole_QClosingPrice_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE) ((arg1)->QClosingPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QSettlePrice_set(void * jarg1, double jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE)jarg2; 
  if (arg1) (arg1)->QSettlePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteWhole_QSettlePrice_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE) ((arg1)->QSettlePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QLastQty_set(void * jarg1, unsigned long long jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQVOLUME arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQVOLUME)jarg2; 
  if (arg1) (arg1)->QLastQty = arg2;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_TapAPIQuoteWhole_QLastQty_get(void * jarg1) {
  unsigned long long jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQVOLUME result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQVOLUME) ((arg1)->QLastQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QBidPrice_set(void * jarg1, void * jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE *arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE *)jarg2; 
  {
    size_t ii;
    TAPIQPRICE *b = (TAPIQPRICE *) arg1->QBidPrice;
    for (ii = 0; ii < (size_t)20; ii++) b[ii] = *((TAPIQPRICE *) arg2 + ii);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPIQuoteWhole_QBidPrice_get(void * jarg1) {
  void * jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE *result = 0 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE *)(TAPIQPRICE *) ((arg1)->QBidPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QBidQty_set(void * jarg1, void * jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQVOLUME *arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQVOLUME *)jarg2; 
  {
    size_t ii;
    TAPIQVOLUME *b = (TAPIQVOLUME *) arg1->QBidQty;
    for (ii = 0; ii < (size_t)20; ii++) b[ii] = *((TAPIQVOLUME *) arg2 + ii);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPIQuoteWhole_QBidQty_get(void * jarg1) {
  void * jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQVOLUME *result = 0 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQVOLUME *)(TAPIQVOLUME *) ((arg1)->QBidQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QAskPrice_set(void * jarg1, void * jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE *arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE *)jarg2; 
  {
    size_t ii;
    TAPIQPRICE *b = (TAPIQPRICE *) arg1->QAskPrice;
    for (ii = 0; ii < (size_t)20; ii++) b[ii] = *((TAPIQPRICE *) arg2 + ii);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPIQuoteWhole_QAskPrice_get(void * jarg1) {
  void * jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE *result = 0 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE *)(TAPIQPRICE *) ((arg1)->QAskPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QAskQty_set(void * jarg1, void * jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQVOLUME *arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQVOLUME *)jarg2; 
  {
    size_t ii;
    TAPIQVOLUME *b = (TAPIQVOLUME *) arg1->QAskQty;
    for (ii = 0; ii < (size_t)20; ii++) b[ii] = *((TAPIQVOLUME *) arg2 + ii);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPIQuoteWhole_QAskQty_get(void * jarg1) {
  void * jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQVOLUME *result = 0 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQVOLUME *)(TAPIQVOLUME *) ((arg1)->QAskQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QImpliedBidPrice_set(void * jarg1, double jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE)jarg2; 
  if (arg1) (arg1)->QImpliedBidPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteWhole_QImpliedBidPrice_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE) ((arg1)->QImpliedBidPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QImpliedBidQty_set(void * jarg1, unsigned long long jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQVOLUME arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQVOLUME)jarg2; 
  if (arg1) (arg1)->QImpliedBidQty = arg2;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_TapAPIQuoteWhole_QImpliedBidQty_get(void * jarg1) {
  unsigned long long jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQVOLUME result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQVOLUME) ((arg1)->QImpliedBidQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QImpliedAskPrice_set(void * jarg1, double jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE)jarg2; 
  if (arg1) (arg1)->QImpliedAskPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteWhole_QImpliedAskPrice_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE) ((arg1)->QImpliedAskPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QImpliedAskQty_set(void * jarg1, unsigned long long jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQVOLUME arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQVOLUME)jarg2; 
  if (arg1) (arg1)->QImpliedAskQty = arg2;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_TapAPIQuoteWhole_QImpliedAskQty_get(void * jarg1) {
  unsigned long long jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQVOLUME result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQVOLUME) ((arg1)->QImpliedAskQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QPreDelta_set(void * jarg1, double jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE)jarg2; 
  if (arg1) (arg1)->QPreDelta = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteWhole_QPreDelta_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE) ((arg1)->QPreDelta);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QCurrDelta_set(void * jarg1, double jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE)jarg2; 
  if (arg1) (arg1)->QCurrDelta = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteWhole_QCurrDelta_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE) ((arg1)->QCurrDelta);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QInsideQty_set(void * jarg1, unsigned long long jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQVOLUME arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQVOLUME)jarg2; 
  if (arg1) (arg1)->QInsideQty = arg2;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_TapAPIQuoteWhole_QInsideQty_get(void * jarg1) {
  unsigned long long jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQVOLUME result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQVOLUME) ((arg1)->QInsideQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QOutsideQty_set(void * jarg1, unsigned long long jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQVOLUME arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQVOLUME)jarg2; 
  if (arg1) (arg1)->QOutsideQty = arg2;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_TapAPIQuoteWhole_QOutsideQty_get(void * jarg1) {
  unsigned long long jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQVOLUME result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQVOLUME) ((arg1)->QOutsideQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QTurnoverRate_set(void * jarg1, double jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE)jarg2; 
  if (arg1) (arg1)->QTurnoverRate = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteWhole_QTurnoverRate_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE) ((arg1)->QTurnoverRate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_Q5DAvgQty_set(void * jarg1, unsigned long long jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQVOLUME arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQVOLUME)jarg2; 
  if (arg1) (arg1)->Q5DAvgQty = arg2;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_TapAPIQuoteWhole_Q5DAvgQty_get(void * jarg1) {
  unsigned long long jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQVOLUME result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQVOLUME) ((arg1)->Q5DAvgQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QPERatio_set(void * jarg1, double jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE)jarg2; 
  if (arg1) (arg1)->QPERatio = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteWhole_QPERatio_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE) ((arg1)->QPERatio);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QTotalValue_set(void * jarg1, double jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE)jarg2; 
  if (arg1) (arg1)->QTotalValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteWhole_QTotalValue_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE) ((arg1)->QTotalValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QNegotiableValue_set(void * jarg1, double jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE)jarg2; 
  if (arg1) (arg1)->QNegotiableValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteWhole_QNegotiableValue_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE) ((arg1)->QNegotiableValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QPositionTrend_set(void * jarg1, long long jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQDIFF arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQDIFF)jarg2; 
  if (arg1) (arg1)->QPositionTrend = arg2;
}


SWIGEXPORT long long SWIGSTDCALL CSharp_TapAPIQuoteWhole_QPositionTrend_get(void * jarg1) {
  long long jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQDIFF result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQDIFF) ((arg1)->QPositionTrend);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QChangeSpeed_set(void * jarg1, double jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE)jarg2; 
  if (arg1) (arg1)->QChangeSpeed = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteWhole_QChangeSpeed_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE) ((arg1)->QChangeSpeed);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QChangeRate_set(void * jarg1, double jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE)jarg2; 
  if (arg1) (arg1)->QChangeRate = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteWhole_QChangeRate_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE) ((arg1)->QChangeRate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QChangeValue_set(void * jarg1, double jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE)jarg2; 
  if (arg1) (arg1)->QChangeValue = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteWhole_QChangeValue_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE) ((arg1)->QChangeValue);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QSwing_set(void * jarg1, double jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQPRICE)jarg2; 
  if (arg1) (arg1)->QSwing = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_TapAPIQuoteWhole_QSwing_get(void * jarg1) {
  double jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQPRICE result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQPRICE) ((arg1)->QSwing);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QTotalBidQty_set(void * jarg1, unsigned long long jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQVOLUME arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQVOLUME)jarg2; 
  if (arg1) (arg1)->QTotalBidQty = arg2;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_TapAPIQuoteWhole_QTotalBidQty_get(void * jarg1) {
  unsigned long long jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQVOLUME result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQVOLUME) ((arg1)->QTotalBidQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_QTotalAskQty_set(void * jarg1, unsigned long long jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQVOLUME arg2 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TAPIQVOLUME)jarg2; 
  if (arg1) (arg1)->QTotalAskQty = arg2;
}


SWIGEXPORT unsigned long long SWIGSTDCALL CSharp_TapAPIQuoteWhole_QTotalAskQty_get(void * jarg1) {
  unsigned long long jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TAPIQVOLUME result;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TAPIQVOLUME) ((arg1)->QTotalAskQty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_TapAPIQuoteWhole_UnderlyContract_set(void * jarg1, void * jarg2) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TapAPIContract *arg2 = (TapAPIContract *) 0 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  arg2 = (TapAPIContract *)jarg2; 
  if (arg1) (arg1)->UnderlyContract = *arg2;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_TapAPIQuoteWhole_UnderlyContract_get(void * jarg1) {
  void * jresult ;
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  TapAPIContract *result = 0 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  result = (TapAPIContract *)& ((arg1)->UnderlyContract);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_TapAPIQuoteWhole() {
  void * jresult ;
  TapAPIQuoteWhole *result = 0 ;
  
  result = (TapAPIQuoteWhole *)new TapAPIQuoteWhole();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_TapAPIQuoteWhole(void * jarg1) {
  TapAPIQuoteWhole *arg1 = (TapAPIQuoteWhole *) 0 ;
  
  arg1 = (TapAPIQuoteWhole *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapQuoteAPINotify_OnRspLogin(void * jarg1, int jarg2, void * jarg3) {
  ITapQuoteAPINotify *arg1 = (ITapQuoteAPINotify *) 0 ;
  TAPIINT32 arg2 ;
  TapAPIQuotLoginRspInfo *arg3 = (TapAPIQuotLoginRspInfo *) 0 ;
  
  arg1 = (ITapQuoteAPINotify *)jarg1; 
  arg2 = (TAPIINT32)jarg2; 
  arg3 = (TapAPIQuotLoginRspInfo *)jarg3; 
  (arg1)->OnRspLogin(arg2,(TapAPIQuotLoginRspInfo const *)arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapQuoteAPINotify_OnAPIReady(void * jarg1) {
  ITapQuoteAPINotify *arg1 = (ITapQuoteAPINotify *) 0 ;
  
  arg1 = (ITapQuoteAPINotify *)jarg1; 
  (arg1)->OnAPIReady();
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapQuoteAPINotify_OnDisconnect(void * jarg1, int jarg2) {
  ITapQuoteAPINotify *arg1 = (ITapQuoteAPINotify *) 0 ;
  TAPIINT32 arg2 ;
  
  arg1 = (ITapQuoteAPINotify *)jarg1; 
  arg2 = (TAPIINT32)jarg2; 
  (arg1)->OnDisconnect(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapQuoteAPINotify_OnRspQryCommodity(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapQuoteAPINotify *arg1 = (ITapQuoteAPINotify *) 0 ;
  TAPIUINT32 arg2 ;
  TAPIINT32 arg3 ;
  TAPIYNFLAG arg4 ;
  TapAPIQuoteCommodityInfo *arg5 = (TapAPIQuoteCommodityInfo *) 0 ;
  
  arg1 = (ITapQuoteAPINotify *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  arg3 = (TAPIINT32)jarg3; 
  arg4 = (TAPIYNFLAG)jarg4; 
  arg5 = (TapAPIQuoteCommodityInfo *)jarg5; 
  (arg1)->OnRspQryCommodity(arg2,arg3,arg4,(TapAPIQuoteCommodityInfo const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapQuoteAPINotify_OnRspQryContract(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapQuoteAPINotify *arg1 = (ITapQuoteAPINotify *) 0 ;
  TAPIUINT32 arg2 ;
  TAPIINT32 arg3 ;
  TAPIYNFLAG arg4 ;
  TapAPIQuoteContractInfo *arg5 = (TapAPIQuoteContractInfo *) 0 ;
  
  arg1 = (ITapQuoteAPINotify *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  arg3 = (TAPIINT32)jarg3; 
  arg4 = (TAPIYNFLAG)jarg4; 
  arg5 = (TapAPIQuoteContractInfo *)jarg5; 
  (arg1)->OnRspQryContract(arg2,arg3,arg4,(TapAPIQuoteContractInfo const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapQuoteAPINotify_OnRspSubscribeQuote(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapQuoteAPINotify *arg1 = (ITapQuoteAPINotify *) 0 ;
  TAPIUINT32 arg2 ;
  TAPIINT32 arg3 ;
  TAPIYNFLAG arg4 ;
  TapAPIQuoteWhole *arg5 = (TapAPIQuoteWhole *) 0 ;
  
  arg1 = (ITapQuoteAPINotify *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  arg3 = (TAPIINT32)jarg3; 
  arg4 = (TAPIYNFLAG)jarg4; 
  arg5 = (TapAPIQuoteWhole *)jarg5; 
  (arg1)->OnRspSubscribeQuote(arg2,arg3,arg4,(TapAPIQuoteWhole const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapQuoteAPINotify_OnRspUnSubscribeQuote(void * jarg1, unsigned int jarg2, int jarg3, char jarg4, void * jarg5) {
  ITapQuoteAPINotify *arg1 = (ITapQuoteAPINotify *) 0 ;
  TAPIUINT32 arg2 ;
  TAPIINT32 arg3 ;
  TAPIYNFLAG arg4 ;
  TapAPIContract *arg5 = (TapAPIContract *) 0 ;
  
  arg1 = (ITapQuoteAPINotify *)jarg1; 
  arg2 = (TAPIUINT32)jarg2; 
  arg3 = (TAPIINT32)jarg3; 
  arg4 = (TAPIYNFLAG)jarg4; 
  arg5 = (TapAPIContract *)jarg5; 
  (arg1)->OnRspUnSubscribeQuote(arg2,arg3,arg4,(TapAPIContract const *)arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapQuoteAPINotify_OnRtnQuote(void * jarg1, void * jarg2) {
  ITapQuoteAPINotify *arg1 = (ITapQuoteAPINotify *) 0 ;
  TapAPIQuoteWhole *arg2 = (TapAPIQuoteWhole *) 0 ;
  
  arg1 = (ITapQuoteAPINotify *)jarg1; 
  arg2 = (TapAPIQuoteWhole *)jarg2; 
  (arg1)->OnRtnQuote((TapAPIQuoteWhole const *)arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_ITapQuoteAPINotify() {
  void * jresult ;
  ITapQuoteAPINotify *result = 0 ;
  
  result = (ITapQuoteAPINotify *)new SwigDirector_ITapQuoteAPINotify();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_ITapQuoteAPINotify(void * jarg1) {
  ITapQuoteAPINotify *arg1 = (ITapQuoteAPINotify *) 0 ;
  
  arg1 = (ITapQuoteAPINotify *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapQuoteAPINotify_director_connect(void *objarg, SwigDirector_ITapQuoteAPINotify::SWIG_Callback0_t callback0, SwigDirector_ITapQuoteAPINotify::SWIG_Callback1_t callback1, SwigDirector_ITapQuoteAPINotify::SWIG_Callback2_t callback2, SwigDirector_ITapQuoteAPINotify::SWIG_Callback3_t callback3, SwigDirector_ITapQuoteAPINotify::SWIG_Callback4_t callback4, SwigDirector_ITapQuoteAPINotify::SWIG_Callback5_t callback5, SwigDirector_ITapQuoteAPINotify::SWIG_Callback6_t callback6, SwigDirector_ITapQuoteAPINotify::SWIG_Callback7_t callback7) {
  ITapQuoteAPINotify *obj = (ITapQuoteAPINotify *)objarg;
  SwigDirector_ITapQuoteAPINotify *director = static_cast<SwigDirector_ITapQuoteAPINotify *>(obj);
  director->swig_connect_director(callback0, callback1, callback2, callback3, callback4, callback5, callback6, callback7);
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapQuoteAPI_SetAPINotify(void * jarg1, void * jarg2) {
  int jresult ;
  ITapQuoteAPI *arg1 = (ITapQuoteAPI *) 0 ;
  ITapQuoteAPINotify *arg2 = (ITapQuoteAPINotify *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapQuoteAPI *)jarg1; 
  arg2 = (ITapQuoteAPINotify *)jarg2; 
  result = (TAPIINT32)(arg1)->SetAPINotify(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapQuoteAPI_SetHostAddress(void * jarg1, char * jarg2, unsigned short jarg3) {
  int jresult ;
  ITapQuoteAPI *arg1 = (ITapQuoteAPI *) 0 ;
  TAPICHAR *arg2 = (TAPICHAR *) 0 ;
  TAPIUINT16 arg3 ;
  TAPIINT32 result;
  
  arg1 = (ITapQuoteAPI *)jarg1; 
  arg2 = (TAPICHAR *)jarg2; 
  arg3 = (TAPIUINT16)jarg3; 
  result = (TAPIINT32)(arg1)->SetHostAddress((TAPICHAR const *)arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapQuoteAPI_Login(void * jarg1, void * jarg2) {
  int jresult ;
  ITapQuoteAPI *arg1 = (ITapQuoteAPI *) 0 ;
  TapAPIQuoteLoginAuth *arg2 = (TapAPIQuoteLoginAuth *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapQuoteAPI *)jarg1; 
  arg2 = (TapAPIQuoteLoginAuth *)jarg2; 
  result = (TAPIINT32)(arg1)->Login((TapAPIQuoteLoginAuth const *)arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapQuoteAPI_Disconnect(void * jarg1) {
  int jresult ;
  ITapQuoteAPI *arg1 = (ITapQuoteAPI *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapQuoteAPI *)jarg1; 
  result = (TAPIINT32)(arg1)->Disconnect();
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapQuoteAPI_QryCommodity(void * jarg1, void * jarg2) {
  int jresult ;
  ITapQuoteAPI *arg1 = (ITapQuoteAPI *) 0 ;
  TAPIUINT32 *arg2 = (TAPIUINT32 *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapQuoteAPI *)jarg1; 
  arg2 = (TAPIUINT32 *)jarg2; 
  result = (TAPIINT32)(arg1)->QryCommodity(arg2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapQuoteAPI_QryContract(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapQuoteAPI *arg1 = (ITapQuoteAPI *) 0 ;
  TAPIUINT32 *arg2 = (TAPIUINT32 *) 0 ;
  TapAPICommodity *arg3 = (TapAPICommodity *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapQuoteAPI *)jarg1; 
  arg2 = (TAPIUINT32 *)jarg2; 
  arg3 = (TapAPICommodity *)jarg3; 
  result = (TAPIINT32)(arg1)->QryContract(arg2,(TapAPICommodity const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapQuoteAPI_SubscribeQuote(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapQuoteAPI *arg1 = (ITapQuoteAPI *) 0 ;
  TAPIUINT32 *arg2 = (TAPIUINT32 *) 0 ;
  TapAPIContract *arg3 = (TapAPIContract *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapQuoteAPI *)jarg1; 
  arg2 = (TAPIUINT32 *)jarg2; 
  arg3 = (TapAPIContract *)jarg3; 
  result = (TAPIINT32)(arg1)->SubscribeQuote(arg2,(TapAPIContract const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_ITapQuoteAPI_UnSubscribeQuote(void * jarg1, void * jarg2, void * jarg3) {
  int jresult ;
  ITapQuoteAPI *arg1 = (ITapQuoteAPI *) 0 ;
  TAPIUINT32 *arg2 = (TAPIUINT32 *) 0 ;
  TapAPIContract *arg3 = (TapAPIContract *) 0 ;
  TAPIINT32 result;
  
  arg1 = (ITapQuoteAPI *)jarg1; 
  arg2 = (TAPIUINT32 *)jarg2; 
  arg3 = (TapAPIContract *)jarg3; 
  result = (TAPIINT32)(arg1)->UnSubscribeQuote(arg2,(TapAPIContract const *)arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_new_ITapQuoteAPI() {
  void * jresult ;
  ITapQuoteAPI *result = 0 ;
  
  result = (ITapQuoteAPI *)new SwigDirector_ITapQuoteAPI();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_delete_ITapQuoteAPI(void * jarg1) {
  ITapQuoteAPI *arg1 = (ITapQuoteAPI *) 0 ;
  
  arg1 = (ITapQuoteAPI *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_ITapQuoteAPI_director_connect(void *objarg, SwigDirector_ITapQuoteAPI::SWIG_Callback0_t callback0, SwigDirector_ITapQuoteAPI::SWIG_Callback1_t callback1, SwigDirector_ITapQuoteAPI::SWIG_Callback2_t callback2, SwigDirector_ITapQuoteAPI::SWIG_Callback3_t callback3, SwigDirector_ITapQuoteAPI::SWIG_Callback4_t callback4, SwigDirector_ITapQuoteAPI::SWIG_Callback5_t callback5, SwigDirector_ITapQuoteAPI::SWIG_Callback6_t callback6, SwigDirector_ITapQuoteAPI::SWIG_Callback7_t callback7) {
  ITapQuoteAPI *obj = (ITapQuoteAPI *)objarg;
  SwigDirector_ITapQuoteAPI *director = static_cast<SwigDirector_ITapQuoteAPI *>(obj);
  director->swig_connect_director(callback0, callback1, callback2, callback3, callback4, callback5, callback6, callback7);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CreateTapQuoteAPI(void * jarg1, void * jarg2) {
  void * jresult ;
  TapAPIApplicationInfo *arg1 = (TapAPIApplicationInfo *) 0 ;
  TAPIINT32 *arg2 = 0 ;
  ITapQuoteAPI *result = 0 ;
  
  arg1 = (TapAPIApplicationInfo *)jarg1; 
  arg2 = (TAPIINT32 *)jarg2;
  if (!arg2) {
    SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentNullException, "TAPIINT32 & type is null", 0);
    return 0;
  } 
  result = (ITapQuoteAPI *)CreateTapQuoteAPI((TapAPIApplicationInfo const *)arg1,*arg2);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_FreeTapQuoteAPI(void * jarg1) {
  ITapQuoteAPI *arg1 = (ITapQuoteAPI *) 0 ;
  
  arg1 = (ITapQuoteAPI *)jarg1; 
  FreeTapQuoteAPI(arg1);
}


SWIGEXPORT char * SWIGSTDCALL CSharp_GetTapQuoteAPIVersion() {
  char * jresult ;
  TAPICHAR *result = 0 ;
  
  result = (TAPICHAR *)GetTapQuoteAPIVersion();
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_SetTapQuoteAPIDataPath(char * jarg1) {
  int jresult ;
  TAPICHAR *arg1 = (TAPICHAR *) 0 ;
  TAPIINT32 result;
  
  arg1 = (TAPICHAR *)jarg1; 
  result = (TAPIINT32)SetTapQuoteAPIDataPath((char const *)arg1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_SetTapQuoteAPILogLevel(char jarg1) {
  int jresult ;
  TAPILOGLEVEL arg1 ;
  TAPIINT32 result;
  
  arg1 = (TAPILOGLEVEL)jarg1; 
  result = (TAPIINT32)SetTapQuoteAPILogLevel(arg1);
  jresult = result; 
  return jresult;
}


#ifdef __cplusplus
}
#endif

