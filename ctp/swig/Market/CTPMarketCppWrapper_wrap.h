/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_CTPMarketCppWrapper_WRAP_H_
#define SWIG_CTPMarketCppWrapper_WRAP_H_

class SwigDirector_CThostFtdcMdSpi : public CThostFtdcMdSpi, public Swig::Director {

public:
    SwigDirector_CThostFtdcMdSpi();
    virtual void OnFrontConnected();
    virtual void OnFrontDisconnected(int nReason);
    virtual void OnHeartBeatWarning(int nTimeLapse);
    virtual void OnRspUserLogin(CThostFtdcRspUserLoginField *pRspUserLogin, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
    virtual void OnRspUserLogout(CThostFtdcUserLogoutField *pUserLogout, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
    virtual void OnRspError(CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
    virtual void OnRspSubMarketData(CThostFtdcSpecificInstrumentField *pSpecificInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
    virtual void OnRspUnSubMarketData(CThostFtdcSpecificInstrumentField *pSpecificInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
    virtual void OnRspSubForQuoteRsp(CThostFtdcSpecificInstrumentField *pSpecificInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
    virtual void OnRspUnSubForQuoteRsp(CThostFtdcSpecificInstrumentField *pSpecificInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast);
    virtual void OnRtnDepthMarketData(CThostFtdcDepthMarketDataField *pDepthMarketData);
    virtual void OnRtnForQuoteRsp(CThostFtdcForQuoteRspField *pForQuoteRsp);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)(int);
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(int);
    typedef void (SWIGSTDCALL* SWIG_Callback3_t)(void *, void *, int, unsigned int);
    typedef void (SWIGSTDCALL* SWIG_Callback4_t)(void *, void *, int, unsigned int);
    typedef void (SWIGSTDCALL* SWIG_Callback5_t)(void *, int, unsigned int);
    typedef void (SWIGSTDCALL* SWIG_Callback6_t)(void *, void *, int, unsigned int);
    typedef void (SWIGSTDCALL* SWIG_Callback7_t)(void *, void *, int, unsigned int);
    typedef void (SWIGSTDCALL* SWIG_Callback8_t)(void *, void *, int, unsigned int);
    typedef void (SWIGSTDCALL* SWIG_Callback9_t)(void *, void *, int, unsigned int);
    typedef void (SWIGSTDCALL* SWIG_Callback10_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback11_t)(void *);
    void swig_connect_director(SWIG_Callback0_t callbackOnFrontConnected, SWIG_Callback1_t callbackOnFrontDisconnected, SWIG_Callback2_t callbackOnHeartBeatWarning, SWIG_Callback3_t callbackOnRspUserLogin, SWIG_Callback4_t callbackOnRspUserLogout, SWIG_Callback5_t callbackOnRspError, SWIG_Callback6_t callbackOnRspSubMarketData, SWIG_Callback7_t callbackOnRspUnSubMarketData, SWIG_Callback8_t callbackOnRspSubForQuoteRsp, SWIG_Callback9_t callbackOnRspUnSubForQuoteRsp, SWIG_Callback10_t callbackOnRtnDepthMarketData, SWIG_Callback11_t callbackOnRtnForQuoteRsp);

private:
    SWIG_Callback0_t swig_callbackOnFrontConnected;
    SWIG_Callback1_t swig_callbackOnFrontDisconnected;
    SWIG_Callback2_t swig_callbackOnHeartBeatWarning;
    SWIG_Callback3_t swig_callbackOnRspUserLogin;
    SWIG_Callback4_t swig_callbackOnRspUserLogout;
    SWIG_Callback5_t swig_callbackOnRspError;
    SWIG_Callback6_t swig_callbackOnRspSubMarketData;
    SWIG_Callback7_t swig_callbackOnRspUnSubMarketData;
    SWIG_Callback8_t swig_callbackOnRspSubForQuoteRsp;
    SWIG_Callback9_t swig_callbackOnRspUnSubForQuoteRsp;
    SWIG_Callback10_t swig_callbackOnRtnDepthMarketData;
    SWIG_Callback11_t swig_callbackOnRtnForQuoteRsp;
    void swig_init_callbacks();
};

class SwigDirector_CThostFtdcMdApi : public CThostFtdcMdApi, public Swig::Director {

public:
    SwigDirector_CThostFtdcMdApi();
    virtual void Release();
    virtual void Init();
    virtual int Join();
    virtual char const *GetTradingDay();
    virtual void RegisterFront(char *pszFrontAddress);
    virtual void RegisterNameServer(char *pszNsAddress);
    virtual void RegisterFensUserInfo(CThostFtdcFensUserInfoField *pFensUserInfo);
    virtual void RegisterSpi(CThostFtdcMdSpi *pSpi);
    virtual int SubscribeMarketData(char *ppInstrumentID[], int nCount);
    virtual int UnSubscribeMarketData(char *ppInstrumentID[], int nCount);
    virtual int SubscribeForQuoteRsp(char *ppInstrumentID[], int nCount);
    virtual int UnSubscribeForQuoteRsp(char *ppInstrumentID[], int nCount);
    virtual int ReqUserLogin(CThostFtdcReqUserLoginField *pReqUserLoginField, int nRequestID);
    virtual int ReqUserLogout(CThostFtdcUserLogoutField *pUserLogout, int nRequestID);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)();
    typedef int (SWIGSTDCALL* SWIG_Callback2_t)();
    typedef char * (SWIGSTDCALL* SWIG_Callback3_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback4_t)(char *);
    typedef void (SWIGSTDCALL* SWIG_Callback5_t)(char *);
    typedef void (SWIGSTDCALL* SWIG_Callback6_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback7_t)(void *);
    typedef int (SWIGSTDCALL* SWIG_Callback8_t)(void *, int);
    typedef int (SWIGSTDCALL* SWIG_Callback9_t)(void *, int);
    typedef int (SWIGSTDCALL* SWIG_Callback10_t)(void *, int);
    typedef int (SWIGSTDCALL* SWIG_Callback11_t)(void *, int);
    typedef int (SWIGSTDCALL* SWIG_Callback12_t)(void *, int);
    typedef int (SWIGSTDCALL* SWIG_Callback13_t)(void *, int);
    void swig_connect_director(SWIG_Callback0_t callbackRelease, SWIG_Callback1_t callbackInit, SWIG_Callback2_t callbackJoin, SWIG_Callback3_t callbackGetTradingDay, SWIG_Callback4_t callbackRegisterFront, SWIG_Callback5_t callbackRegisterNameServer, SWIG_Callback6_t callbackRegisterFensUserInfo, SWIG_Callback7_t callbackRegisterSpi, SWIG_Callback8_t callbackSubscribeMarketData, SWIG_Callback9_t callbackUnSubscribeMarketData, SWIG_Callback10_t callbackSubscribeForQuoteRsp, SWIG_Callback11_t callbackUnSubscribeForQuoteRsp, SWIG_Callback12_t callbackReqUserLogin, SWIG_Callback13_t callbackReqUserLogout);

private:
    SWIG_Callback0_t swig_callbackRelease;
    SWIG_Callback1_t swig_callbackInit;
    SWIG_Callback2_t swig_callbackJoin;
    SWIG_Callback3_t swig_callbackGetTradingDay;
    SWIG_Callback4_t swig_callbackRegisterFront;
    SWIG_Callback5_t swig_callbackRegisterNameServer;
    SWIG_Callback6_t swig_callbackRegisterFensUserInfo;
    SWIG_Callback7_t swig_callbackRegisterSpi;
    SWIG_Callback8_t swig_callbackSubscribeMarketData;
    SWIG_Callback9_t swig_callbackUnSubscribeMarketData;
    SWIG_Callback10_t swig_callbackSubscribeForQuoteRsp;
    SWIG_Callback11_t swig_callbackUnSubscribeForQuoteRsp;
    SWIG_Callback12_t swig_callbackReqUserLogin;
    SWIG_Callback13_t swig_callbackReqUserLogout;
    void swig_init_callbacks();
};


#endif
