//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace CTACSharp.CTP.Trade {

public class CThostFtdcUserSessionField : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CThostFtdcUserSessionField(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CThostFtdcUserSessionField obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~CThostFtdcUserSessionField() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          CTPTradeCppWrapperPINVOKE.delete_CThostFtdcUserSessionField(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public int FrontID {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcUserSessionField_FrontID_set(swigCPtr, value);
    } 
    get {
      int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcUserSessionField_FrontID_get(swigCPtr);
      return ret;
    } 
  }

  public int SessionID {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcUserSessionField_SessionID_set(swigCPtr, value);
    } 
    get {
      int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcUserSessionField_SessionID_get(swigCPtr);
      return ret;
    } 
  }

  public string BrokerID {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcUserSessionField_BrokerID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcUserSessionField_BrokerID_get(swigCPtr);
      return ret;
    } 
  }

  public string UserID {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcUserSessionField_UserID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcUserSessionField_UserID_get(swigCPtr);
      return ret;
    } 
  }

  public string LoginDate {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcUserSessionField_LoginDate_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcUserSessionField_LoginDate_get(swigCPtr);
      return ret;
    } 
  }

  public string LoginTime {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcUserSessionField_LoginTime_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcUserSessionField_LoginTime_get(swigCPtr);
      return ret;
    } 
  }

  public string IPAddress {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcUserSessionField_IPAddress_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcUserSessionField_IPAddress_get(swigCPtr);
      return ret;
    } 
  }

  public string UserProductInfo {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcUserSessionField_UserProductInfo_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcUserSessionField_UserProductInfo_get(swigCPtr);
      return ret;
    } 
  }

  public string InterfaceProductInfo {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcUserSessionField_InterfaceProductInfo_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcUserSessionField_InterfaceProductInfo_get(swigCPtr);
      return ret;
    } 
  }

  public string ProtocolInfo {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcUserSessionField_ProtocolInfo_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcUserSessionField_ProtocolInfo_get(swigCPtr);
      return ret;
    } 
  }

  public string MacAddress {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcUserSessionField_MacAddress_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcUserSessionField_MacAddress_get(swigCPtr);
      return ret;
    } 
  }

  public CThostFtdcUserSessionField() : this(CTPTradeCppWrapperPINVOKE.new_CThostFtdcUserSessionField(), true) {
  }

}

}
