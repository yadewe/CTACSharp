//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace CTACSharp.CTP.Trade {

public class CThostFtdcErrorConditionalOrderField : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CThostFtdcErrorConditionalOrderField(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CThostFtdcErrorConditionalOrderField obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~CThostFtdcErrorConditionalOrderField() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          CTPTradeCppWrapperPINVOKE.delete_CThostFtdcErrorConditionalOrderField(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public string BrokerID {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_BrokerID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_BrokerID_get(swigCPtr);
      return ret;
    } 
  }

  public string InvestorID {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_InvestorID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_InvestorID_get(swigCPtr);
      return ret;
    } 
  }

  public string InstrumentID {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_InstrumentID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_InstrumentID_get(swigCPtr);
      return ret;
    } 
  }

  public string OrderRef {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_OrderRef_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_OrderRef_get(swigCPtr);
      return ret;
    } 
  }

  public string UserID {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_UserID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_UserID_get(swigCPtr);
      return ret;
    } 
  }

  public char OrderPriceType {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_OrderPriceType_set(swigCPtr, value);
    } 
    get {
      char ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_OrderPriceType_get(swigCPtr);
      return ret;
    } 
  }

  public char Direction {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_Direction_set(swigCPtr, value);
    } 
    get {
      char ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_Direction_get(swigCPtr);
      return ret;
    } 
  }

  public string CombOffsetFlag {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_CombOffsetFlag_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_CombOffsetFlag_get(swigCPtr);
      return ret;
    } 
  }

  public string CombHedgeFlag {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_CombHedgeFlag_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_CombHedgeFlag_get(swigCPtr);
      return ret;
    } 
  }

  public double LimitPrice {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_LimitPrice_set(swigCPtr, value);
    } 
    get {
      double ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_LimitPrice_get(swigCPtr);
      return ret;
    } 
  }

  public int VolumeTotalOriginal {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_VolumeTotalOriginal_set(swigCPtr, value);
    } 
    get {
      int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_VolumeTotalOriginal_get(swigCPtr);
      return ret;
    } 
  }

  public char TimeCondition {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_TimeCondition_set(swigCPtr, value);
    } 
    get {
      char ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_TimeCondition_get(swigCPtr);
      return ret;
    } 
  }

  public string GTDDate {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_GTDDate_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_GTDDate_get(swigCPtr);
      return ret;
    } 
  }

  public char VolumeCondition {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_VolumeCondition_set(swigCPtr, value);
    } 
    get {
      char ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_VolumeCondition_get(swigCPtr);
      return ret;
    } 
  }

  public int MinVolume {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_MinVolume_set(swigCPtr, value);
    } 
    get {
      int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_MinVolume_get(swigCPtr);
      return ret;
    } 
  }

  public char ContingentCondition {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_ContingentCondition_set(swigCPtr, value);
    } 
    get {
      char ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_ContingentCondition_get(swigCPtr);
      return ret;
    } 
  }

  public double StopPrice {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_StopPrice_set(swigCPtr, value);
    } 
    get {
      double ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_StopPrice_get(swigCPtr);
      return ret;
    } 
  }

  public char ForceCloseReason {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_ForceCloseReason_set(swigCPtr, value);
    } 
    get {
      char ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_ForceCloseReason_get(swigCPtr);
      return ret;
    } 
  }

  public int IsAutoSuspend {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_IsAutoSuspend_set(swigCPtr, value);
    } 
    get {
      int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_IsAutoSuspend_get(swigCPtr);
      return ret;
    } 
  }

  public string BusinessUnit {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_BusinessUnit_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_BusinessUnit_get(swigCPtr);
      return ret;
    } 
  }

  public int RequestID {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_RequestID_set(swigCPtr, value);
    } 
    get {
      int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_RequestID_get(swigCPtr);
      return ret;
    } 
  }

  public string OrderLocalID {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_OrderLocalID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_OrderLocalID_get(swigCPtr);
      return ret;
    } 
  }

  public string ExchangeID {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_ExchangeID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_ExchangeID_get(swigCPtr);
      return ret;
    } 
  }

  public string ParticipantID {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_ParticipantID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_ParticipantID_get(swigCPtr);
      return ret;
    } 
  }

  public string ClientID {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_ClientID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_ClientID_get(swigCPtr);
      return ret;
    } 
  }

  public string ExchangeInstID {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_ExchangeInstID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_ExchangeInstID_get(swigCPtr);
      return ret;
    } 
  }

  public string TraderID {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_TraderID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_TraderID_get(swigCPtr);
      return ret;
    } 
  }

  public int InstallID {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_InstallID_set(swigCPtr, value);
    } 
    get {
      int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_InstallID_get(swigCPtr);
      return ret;
    } 
  }

  public char OrderSubmitStatus {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_OrderSubmitStatus_set(swigCPtr, value);
    } 
    get {
      char ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_OrderSubmitStatus_get(swigCPtr);
      return ret;
    } 
  }

  public int NotifySequence {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_NotifySequence_set(swigCPtr, value);
    } 
    get {
      int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_NotifySequence_get(swigCPtr);
      return ret;
    } 
  }

  public string TradingDay {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_TradingDay_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_TradingDay_get(swigCPtr);
      return ret;
    } 
  }

  public int SettlementID {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_SettlementID_set(swigCPtr, value);
    } 
    get {
      int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_SettlementID_get(swigCPtr);
      return ret;
    } 
  }

  public string OrderSysID {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_OrderSysID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_OrderSysID_get(swigCPtr);
      return ret;
    } 
  }

  public char OrderSource {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_OrderSource_set(swigCPtr, value);
    } 
    get {
      char ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_OrderSource_get(swigCPtr);
      return ret;
    } 
  }

  public char OrderStatus {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_OrderStatus_set(swigCPtr, value);
    } 
    get {
      char ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_OrderStatus_get(swigCPtr);
      return ret;
    } 
  }

  public char OrderType {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_OrderType_set(swigCPtr, value);
    } 
    get {
      char ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_OrderType_get(swigCPtr);
      return ret;
    } 
  }

  public int VolumeTraded {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_VolumeTraded_set(swigCPtr, value);
    } 
    get {
      int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_VolumeTraded_get(swigCPtr);
      return ret;
    } 
  }

  public int VolumeTotal {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_VolumeTotal_set(swigCPtr, value);
    } 
    get {
      int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_VolumeTotal_get(swigCPtr);
      return ret;
    } 
  }

  public string InsertDate {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_InsertDate_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_InsertDate_get(swigCPtr);
      return ret;
    } 
  }

  public string InsertTime {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_InsertTime_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_InsertTime_get(swigCPtr);
      return ret;
    } 
  }

  public string ActiveTime {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_ActiveTime_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_ActiveTime_get(swigCPtr);
      return ret;
    } 
  }

  public string SuspendTime {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_SuspendTime_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_SuspendTime_get(swigCPtr);
      return ret;
    } 
  }

  public string UpdateTime {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_UpdateTime_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_UpdateTime_get(swigCPtr);
      return ret;
    } 
  }

  public string CancelTime {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_CancelTime_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_CancelTime_get(swigCPtr);
      return ret;
    } 
  }

  public string ActiveTraderID {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_ActiveTraderID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_ActiveTraderID_get(swigCPtr);
      return ret;
    } 
  }

  public string ClearingPartID {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_ClearingPartID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_ClearingPartID_get(swigCPtr);
      return ret;
    } 
  }

  public int SequenceNo {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_SequenceNo_set(swigCPtr, value);
    } 
    get {
      int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_SequenceNo_get(swigCPtr);
      return ret;
    } 
  }

  public int FrontID {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_FrontID_set(swigCPtr, value);
    } 
    get {
      int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_FrontID_get(swigCPtr);
      return ret;
    } 
  }

  public int SessionID {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_SessionID_set(swigCPtr, value);
    } 
    get {
      int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_SessionID_get(swigCPtr);
      return ret;
    } 
  }

  public string UserProductInfo {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_UserProductInfo_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_UserProductInfo_get(swigCPtr);
      return ret;
    } 
  }

  public string StatusMsg {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_StatusMsg_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_StatusMsg_get(swigCPtr);
      return ret;
    } 
  }

  public int UserForceClose {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_UserForceClose_set(swigCPtr, value);
    } 
    get {
      int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_UserForceClose_get(swigCPtr);
      return ret;
    } 
  }

  public string ActiveUserID {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_ActiveUserID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_ActiveUserID_get(swigCPtr);
      return ret;
    } 
  }

  public int BrokerOrderSeq {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_BrokerOrderSeq_set(swigCPtr, value);
    } 
    get {
      int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_BrokerOrderSeq_get(swigCPtr);
      return ret;
    } 
  }

  public string RelativeOrderSysID {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_RelativeOrderSysID_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_RelativeOrderSysID_get(swigCPtr);
      return ret;
    } 
  }

  public int ZCETotalTradedVolume {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_ZCETotalTradedVolume_set(swigCPtr, value);
    } 
    get {
      int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_ZCETotalTradedVolume_get(swigCPtr);
      return ret;
    } 
  }

  public int ErrorID {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_ErrorID_set(swigCPtr, value);
    } 
    get {
      int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_ErrorID_get(swigCPtr);
      return ret;
    } 
  }

  public string ErrorMsg {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_ErrorMsg_set(swigCPtr, value);
    } 
    get {
      string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_ErrorMsg_get(swigCPtr);
      return ret;
    } 
  }

  public int IsSwapOrder {
    set {
      CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_IsSwapOrder_set(swigCPtr, value);
    } 
    get {
      int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcErrorConditionalOrderField_IsSwapOrder_get(swigCPtr);
      return ret;
    } 
  }

  public CThostFtdcErrorConditionalOrderField() : this(CTPTradeCppWrapperPINVOKE.new_CThostFtdcErrorConditionalOrderField(), true) {
  }

}

}
