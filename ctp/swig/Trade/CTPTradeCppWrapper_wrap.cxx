/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */


#ifndef SWIGCSHARP
#define SWIGCSHARP
#endif

#define SWIG_DIRECTORS


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stdlib.h>
#include <string.h>
#include <stdio.h>


/* Support for throwing C# exceptions from C/C++. There are two types: 
 * Exceptions that take a message and ArgumentExceptions that take a message and a parameter name. */
typedef enum {
  SWIG_CSharpApplicationException,
  SWIG_CSharpArithmeticException,
  SWIG_CSharpDivideByZeroException,
  SWIG_CSharpIndexOutOfRangeException,
  SWIG_CSharpInvalidCastException,
  SWIG_CSharpInvalidOperationException,
  SWIG_CSharpIOException,
  SWIG_CSharpNullReferenceException,
  SWIG_CSharpOutOfMemoryException,
  SWIG_CSharpOverflowException,
  SWIG_CSharpSystemException
} SWIG_CSharpExceptionCodes;

typedef enum {
  SWIG_CSharpArgumentException,
  SWIG_CSharpArgumentNullException,
  SWIG_CSharpArgumentOutOfRangeException
} SWIG_CSharpExceptionArgumentCodes;

typedef void (SWIGSTDCALL* SWIG_CSharpExceptionCallback_t)(const char *);
typedef void (SWIGSTDCALL* SWIG_CSharpExceptionArgumentCallback_t)(const char *, const char *);

typedef struct {
  SWIG_CSharpExceptionCodes code;
  SWIG_CSharpExceptionCallback_t callback;
} SWIG_CSharpException_t;

typedef struct {
  SWIG_CSharpExceptionArgumentCodes code;
  SWIG_CSharpExceptionArgumentCallback_t callback;
} SWIG_CSharpExceptionArgument_t;

static SWIG_CSharpException_t SWIG_csharp_exceptions[] = {
  { SWIG_CSharpApplicationException, NULL },
  { SWIG_CSharpArithmeticException, NULL },
  { SWIG_CSharpDivideByZeroException, NULL },
  { SWIG_CSharpIndexOutOfRangeException, NULL },
  { SWIG_CSharpInvalidCastException, NULL },
  { SWIG_CSharpInvalidOperationException, NULL },
  { SWIG_CSharpIOException, NULL },
  { SWIG_CSharpNullReferenceException, NULL },
  { SWIG_CSharpOutOfMemoryException, NULL },
  { SWIG_CSharpOverflowException, NULL },
  { SWIG_CSharpSystemException, NULL }
};

static SWIG_CSharpExceptionArgument_t SWIG_csharp_exceptions_argument[] = {
  { SWIG_CSharpArgumentException, NULL },
  { SWIG_CSharpArgumentNullException, NULL },
  { SWIG_CSharpArgumentOutOfRangeException, NULL }
};

static void SWIGUNUSED SWIG_CSharpSetPendingException(SWIG_CSharpExceptionCodes code, const char *msg) {
  SWIG_CSharpExceptionCallback_t callback = SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions)/sizeof(SWIG_CSharpException_t)) {
    callback = SWIG_csharp_exceptions[code].callback;
  }
  callback(msg);
}

static void SWIGUNUSED SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpExceptionArgumentCodes code, const char *msg, const char *param_name) {
  SWIG_CSharpExceptionArgumentCallback_t callback = SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback;
  if ((size_t)code < sizeof(SWIG_csharp_exceptions_argument)/sizeof(SWIG_CSharpExceptionArgument_t)) {
    callback = SWIG_csharp_exceptions_argument[code].callback;
  }
  callback(msg, param_name);
}


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionCallbacks_CTPTradeCppWrapper(
                                                SWIG_CSharpExceptionCallback_t applicationCallback,
                                                SWIG_CSharpExceptionCallback_t arithmeticCallback,
                                                SWIG_CSharpExceptionCallback_t divideByZeroCallback, 
                                                SWIG_CSharpExceptionCallback_t indexOutOfRangeCallback, 
                                                SWIG_CSharpExceptionCallback_t invalidCastCallback,
                                                SWIG_CSharpExceptionCallback_t invalidOperationCallback,
                                                SWIG_CSharpExceptionCallback_t ioCallback,
                                                SWIG_CSharpExceptionCallback_t nullReferenceCallback,
                                                SWIG_CSharpExceptionCallback_t outOfMemoryCallback, 
                                                SWIG_CSharpExceptionCallback_t overflowCallback, 
                                                SWIG_CSharpExceptionCallback_t systemCallback) {
  SWIG_csharp_exceptions[SWIG_CSharpApplicationException].callback = applicationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpArithmeticException].callback = arithmeticCallback;
  SWIG_csharp_exceptions[SWIG_CSharpDivideByZeroException].callback = divideByZeroCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIndexOutOfRangeException].callback = indexOutOfRangeCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidCastException].callback = invalidCastCallback;
  SWIG_csharp_exceptions[SWIG_CSharpInvalidOperationException].callback = invalidOperationCallback;
  SWIG_csharp_exceptions[SWIG_CSharpIOException].callback = ioCallback;
  SWIG_csharp_exceptions[SWIG_CSharpNullReferenceException].callback = nullReferenceCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOutOfMemoryException].callback = outOfMemoryCallback;
  SWIG_csharp_exceptions[SWIG_CSharpOverflowException].callback = overflowCallback;
  SWIG_csharp_exceptions[SWIG_CSharpSystemException].callback = systemCallback;
}

#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterExceptionArgumentCallbacks_CTPTradeCppWrapper(
                                                SWIG_CSharpExceptionArgumentCallback_t argumentCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentNullCallback,
                                                SWIG_CSharpExceptionArgumentCallback_t argumentOutOfRangeCallback) {
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentException].callback = argumentCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentNullException].callback = argumentNullCallback;
  SWIG_csharp_exceptions_argument[SWIG_CSharpArgumentOutOfRangeException].callback = argumentOutOfRangeCallback;
}


/* Callback for returning strings to C# without leaking memory */
typedef char * (SWIGSTDCALL* SWIG_CSharpStringHelperCallback)(const char *);
static SWIG_CSharpStringHelperCallback SWIG_csharp_string_callback = NULL;


#ifdef __cplusplus
extern "C" 
#endif
SWIGEXPORT void SWIGSTDCALL SWIGRegisterStringCallback_CTPTradeCppWrapper(SWIG_CSharpStringHelperCallback callback) {
  SWIG_csharp_string_callback = callback;
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_CSharpSetPendingExceptionArgument(SWIG_CSharpArgumentOutOfRangeException, msg, ""); return nullreturn; } else

/* -----------------------------------------------------------------------------
 * director_common.swg
 *
 * This file contains support for director classes which is common between
 * languages.
 * ----------------------------------------------------------------------------- */

/*
  Use -DSWIG_DIRECTOR_STATIC if you prefer to avoid the use of the
  'Swig' namespace. This could be useful for multi-modules projects.
*/
#ifdef SWIG_DIRECTOR_STATIC
/* Force anonymous (static) namespace */
#define Swig
#endif
/* -----------------------------------------------------------------------------
 * director.swg
 *
 * This file contains support for director classes so that C# proxy
 * methods can be called from C++.
 * ----------------------------------------------------------------------------- */

#if defined(DEBUG_DIRECTOR_OWNED)
#include <iostream>
#endif
#include <string>
#include <exception>

namespace Swig {
  /* Director base class - not currently used in C# directors */
  class Director {
  };

  /* Base class for director exceptions */
  class DirectorException : public std::exception {
  protected:
    std::string swig_msg;

  public:
    DirectorException(const char *msg) : swig_msg(msg) {
    }

    DirectorException(const std::string &msg) : swig_msg(msg) {
    }

    virtual ~DirectorException() throw() {
    }

    const char *what() const throw() {
      return swig_msg.c_str();
    }
  };

  /* Pure virtual method exception */
  class DirectorPureVirtualException : public DirectorException {
  public:
    DirectorPureVirtualException(const char *msg) : DirectorException(std::string("Attempt to invoke pure virtual method ") + msg) {
    }
  };
}


#include "ThostFtdcUserApiDataType.h"
#include "ThostFtdcUserApiStruct.h"
#include "ThostFtdcTraderApi.h"



/* ---------------------------------------------------
 * C++ director class methods
 * --------------------------------------------------- */

#include "CTPTradeCppWrapper_wrap.h"

SwigDirector_CThostFtdcTraderSpi::SwigDirector_CThostFtdcTraderSpi() : CThostFtdcTraderSpi(), Swig::Director() {
  swig_init_callbacks();
}

void SwigDirector_CThostFtdcTraderSpi::OnFrontConnected() {
  if (!swig_callbackOnFrontConnected) {
    CThostFtdcTraderSpi::OnFrontConnected();
    return;
  } else {
    swig_callbackOnFrontConnected();
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnFrontDisconnected(int nReason) {
  int jnReason  ;
  
  if (!swig_callbackOnFrontDisconnected) {
    CThostFtdcTraderSpi::OnFrontDisconnected(nReason);
    return;
  } else {
    jnReason = nReason;
    swig_callbackOnFrontDisconnected(jnReason);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnHeartBeatWarning(int nTimeLapse) {
  int jnTimeLapse  ;
  
  if (!swig_callbackOnHeartBeatWarning) {
    CThostFtdcTraderSpi::OnHeartBeatWarning(nTimeLapse);
    return;
  } else {
    jnTimeLapse = nTimeLapse;
    swig_callbackOnHeartBeatWarning(jnTimeLapse);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspAuthenticate(CThostFtdcRspAuthenticateField *pRspAuthenticateField, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpRspAuthenticateField = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspAuthenticate) {
    CThostFtdcTraderSpi::OnRspAuthenticate(pRspAuthenticateField,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpRspAuthenticateField = (void *) pRspAuthenticateField; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspAuthenticate(jpRspAuthenticateField, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspUserLogin(CThostFtdcRspUserLoginField *pRspUserLogin, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpRspUserLogin = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspUserLogin) {
    CThostFtdcTraderSpi::OnRspUserLogin(pRspUserLogin,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpRspUserLogin = (void *) pRspUserLogin; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspUserLogin(jpRspUserLogin, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspUserLogout(CThostFtdcUserLogoutField *pUserLogout, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpUserLogout = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspUserLogout) {
    CThostFtdcTraderSpi::OnRspUserLogout(pUserLogout,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpUserLogout = (void *) pUserLogout; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspUserLogout(jpUserLogout, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspUserPasswordUpdate(CThostFtdcUserPasswordUpdateField *pUserPasswordUpdate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpUserPasswordUpdate = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspUserPasswordUpdate) {
    CThostFtdcTraderSpi::OnRspUserPasswordUpdate(pUserPasswordUpdate,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpUserPasswordUpdate = (void *) pUserPasswordUpdate; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspUserPasswordUpdate(jpUserPasswordUpdate, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspTradingAccountPasswordUpdate(CThostFtdcTradingAccountPasswordUpdateField *pTradingAccountPasswordUpdate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpTradingAccountPasswordUpdate = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspTradingAccountPasswordUpdate) {
    CThostFtdcTraderSpi::OnRspTradingAccountPasswordUpdate(pTradingAccountPasswordUpdate,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpTradingAccountPasswordUpdate = (void *) pTradingAccountPasswordUpdate; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspTradingAccountPasswordUpdate(jpTradingAccountPasswordUpdate, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspOrderInsert(CThostFtdcInputOrderField *pInputOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpInputOrder = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspOrderInsert) {
    CThostFtdcTraderSpi::OnRspOrderInsert(pInputOrder,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpInputOrder = (void *) pInputOrder; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspOrderInsert(jpInputOrder, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspParkedOrderInsert(CThostFtdcParkedOrderField *pParkedOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpParkedOrder = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspParkedOrderInsert) {
    CThostFtdcTraderSpi::OnRspParkedOrderInsert(pParkedOrder,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpParkedOrder = (void *) pParkedOrder; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspParkedOrderInsert(jpParkedOrder, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspParkedOrderAction(CThostFtdcParkedOrderActionField *pParkedOrderAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpParkedOrderAction = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspParkedOrderAction) {
    CThostFtdcTraderSpi::OnRspParkedOrderAction(pParkedOrderAction,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpParkedOrderAction = (void *) pParkedOrderAction; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspParkedOrderAction(jpParkedOrderAction, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspOrderAction(CThostFtdcInputOrderActionField *pInputOrderAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpInputOrderAction = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspOrderAction) {
    CThostFtdcTraderSpi::OnRspOrderAction(pInputOrderAction,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpInputOrderAction = (void *) pInputOrderAction; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspOrderAction(jpInputOrderAction, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQueryMaxOrderVolume(CThostFtdcQueryMaxOrderVolumeField *pQueryMaxOrderVolume, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpQueryMaxOrderVolume = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQueryMaxOrderVolume) {
    CThostFtdcTraderSpi::OnRspQueryMaxOrderVolume(pQueryMaxOrderVolume,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpQueryMaxOrderVolume = (void *) pQueryMaxOrderVolume; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQueryMaxOrderVolume(jpQueryMaxOrderVolume, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspSettlementInfoConfirm(CThostFtdcSettlementInfoConfirmField *pSettlementInfoConfirm, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpSettlementInfoConfirm = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspSettlementInfoConfirm) {
    CThostFtdcTraderSpi::OnRspSettlementInfoConfirm(pSettlementInfoConfirm,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpSettlementInfoConfirm = (void *) pSettlementInfoConfirm; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspSettlementInfoConfirm(jpSettlementInfoConfirm, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspRemoveParkedOrder(CThostFtdcRemoveParkedOrderField *pRemoveParkedOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpRemoveParkedOrder = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspRemoveParkedOrder) {
    CThostFtdcTraderSpi::OnRspRemoveParkedOrder(pRemoveParkedOrder,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpRemoveParkedOrder = (void *) pRemoveParkedOrder; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspRemoveParkedOrder(jpRemoveParkedOrder, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspRemoveParkedOrderAction(CThostFtdcRemoveParkedOrderActionField *pRemoveParkedOrderAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpRemoveParkedOrderAction = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspRemoveParkedOrderAction) {
    CThostFtdcTraderSpi::OnRspRemoveParkedOrderAction(pRemoveParkedOrderAction,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpRemoveParkedOrderAction = (void *) pRemoveParkedOrderAction; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspRemoveParkedOrderAction(jpRemoveParkedOrderAction, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspExecOrderInsert(CThostFtdcInputExecOrderField *pInputExecOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpInputExecOrder = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspExecOrderInsert) {
    CThostFtdcTraderSpi::OnRspExecOrderInsert(pInputExecOrder,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpInputExecOrder = (void *) pInputExecOrder; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspExecOrderInsert(jpInputExecOrder, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspExecOrderAction(CThostFtdcInputExecOrderActionField *pInputExecOrderAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpInputExecOrderAction = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspExecOrderAction) {
    CThostFtdcTraderSpi::OnRspExecOrderAction(pInputExecOrderAction,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpInputExecOrderAction = (void *) pInputExecOrderAction; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspExecOrderAction(jpInputExecOrderAction, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspForQuoteInsert(CThostFtdcInputForQuoteField *pInputForQuote, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpInputForQuote = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspForQuoteInsert) {
    CThostFtdcTraderSpi::OnRspForQuoteInsert(pInputForQuote,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpInputForQuote = (void *) pInputForQuote; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspForQuoteInsert(jpInputForQuote, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQuoteInsert(CThostFtdcInputQuoteField *pInputQuote, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpInputQuote = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQuoteInsert) {
    CThostFtdcTraderSpi::OnRspQuoteInsert(pInputQuote,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpInputQuote = (void *) pInputQuote; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQuoteInsert(jpInputQuote, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQuoteAction(CThostFtdcInputQuoteActionField *pInputQuoteAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpInputQuoteAction = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQuoteAction) {
    CThostFtdcTraderSpi::OnRspQuoteAction(pInputQuoteAction,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpInputQuoteAction = (void *) pInputQuoteAction; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQuoteAction(jpInputQuoteAction, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspCombActionInsert(CThostFtdcInputCombActionField *pInputCombAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpInputCombAction = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspCombActionInsert) {
    CThostFtdcTraderSpi::OnRspCombActionInsert(pInputCombAction,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpInputCombAction = (void *) pInputCombAction; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspCombActionInsert(jpInputCombAction, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryOrder(CThostFtdcOrderField *pOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpOrder = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryOrder) {
    CThostFtdcTraderSpi::OnRspQryOrder(pOrder,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpOrder = (void *) pOrder; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryOrder(jpOrder, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryTrade(CThostFtdcTradeField *pTrade, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpTrade = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryTrade) {
    CThostFtdcTraderSpi::OnRspQryTrade(pTrade,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpTrade = (void *) pTrade; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryTrade(jpTrade, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryInvestorPosition(CThostFtdcInvestorPositionField *pInvestorPosition, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpInvestorPosition = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryInvestorPosition) {
    CThostFtdcTraderSpi::OnRspQryInvestorPosition(pInvestorPosition,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpInvestorPosition = (void *) pInvestorPosition; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryInvestorPosition(jpInvestorPosition, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryTradingAccount(CThostFtdcTradingAccountField *pTradingAccount, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpTradingAccount = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryTradingAccount) {
    CThostFtdcTraderSpi::OnRspQryTradingAccount(pTradingAccount,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpTradingAccount = (void *) pTradingAccount; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryTradingAccount(jpTradingAccount, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryInvestor(CThostFtdcInvestorField *pInvestor, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpInvestor = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryInvestor) {
    CThostFtdcTraderSpi::OnRspQryInvestor(pInvestor,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpInvestor = (void *) pInvestor; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryInvestor(jpInvestor, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryTradingCode(CThostFtdcTradingCodeField *pTradingCode, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpTradingCode = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryTradingCode) {
    CThostFtdcTraderSpi::OnRspQryTradingCode(pTradingCode,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpTradingCode = (void *) pTradingCode; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryTradingCode(jpTradingCode, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryInstrumentMarginRate(CThostFtdcInstrumentMarginRateField *pInstrumentMarginRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpInstrumentMarginRate = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryInstrumentMarginRate) {
    CThostFtdcTraderSpi::OnRspQryInstrumentMarginRate(pInstrumentMarginRate,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpInstrumentMarginRate = (void *) pInstrumentMarginRate; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryInstrumentMarginRate(jpInstrumentMarginRate, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryInstrumentCommissionRate(CThostFtdcInstrumentCommissionRateField *pInstrumentCommissionRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpInstrumentCommissionRate = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryInstrumentCommissionRate) {
    CThostFtdcTraderSpi::OnRspQryInstrumentCommissionRate(pInstrumentCommissionRate,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpInstrumentCommissionRate = (void *) pInstrumentCommissionRate; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryInstrumentCommissionRate(jpInstrumentCommissionRate, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryExchange(CThostFtdcExchangeField *pExchange, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpExchange = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryExchange) {
    CThostFtdcTraderSpi::OnRspQryExchange(pExchange,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpExchange = (void *) pExchange; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryExchange(jpExchange, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryProduct(CThostFtdcProductField *pProduct, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpProduct = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryProduct) {
    CThostFtdcTraderSpi::OnRspQryProduct(pProduct,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpProduct = (void *) pProduct; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryProduct(jpProduct, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryInstrument(CThostFtdcInstrumentField *pInstrument, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpInstrument = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryInstrument) {
    CThostFtdcTraderSpi::OnRspQryInstrument(pInstrument,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpInstrument = (void *) pInstrument; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryInstrument(jpInstrument, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryDepthMarketData(CThostFtdcDepthMarketDataField *pDepthMarketData, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpDepthMarketData = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryDepthMarketData) {
    CThostFtdcTraderSpi::OnRspQryDepthMarketData(pDepthMarketData,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpDepthMarketData = (void *) pDepthMarketData; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryDepthMarketData(jpDepthMarketData, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQrySettlementInfo(CThostFtdcSettlementInfoField *pSettlementInfo, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpSettlementInfo = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQrySettlementInfo) {
    CThostFtdcTraderSpi::OnRspQrySettlementInfo(pSettlementInfo,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpSettlementInfo = (void *) pSettlementInfo; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQrySettlementInfo(jpSettlementInfo, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryTransferBank(CThostFtdcTransferBankField *pTransferBank, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpTransferBank = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryTransferBank) {
    CThostFtdcTraderSpi::OnRspQryTransferBank(pTransferBank,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpTransferBank = (void *) pTransferBank; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryTransferBank(jpTransferBank, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryInvestorPositionDetail(CThostFtdcInvestorPositionDetailField *pInvestorPositionDetail, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpInvestorPositionDetail = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryInvestorPositionDetail) {
    CThostFtdcTraderSpi::OnRspQryInvestorPositionDetail(pInvestorPositionDetail,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpInvestorPositionDetail = (void *) pInvestorPositionDetail; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryInvestorPositionDetail(jpInvestorPositionDetail, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryNotice(CThostFtdcNoticeField *pNotice, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpNotice = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryNotice) {
    CThostFtdcTraderSpi::OnRspQryNotice(pNotice,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpNotice = (void *) pNotice; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryNotice(jpNotice, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQrySettlementInfoConfirm(CThostFtdcSettlementInfoConfirmField *pSettlementInfoConfirm, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpSettlementInfoConfirm = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQrySettlementInfoConfirm) {
    CThostFtdcTraderSpi::OnRspQrySettlementInfoConfirm(pSettlementInfoConfirm,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpSettlementInfoConfirm = (void *) pSettlementInfoConfirm; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQrySettlementInfoConfirm(jpSettlementInfoConfirm, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryInvestorPositionCombineDetail(CThostFtdcInvestorPositionCombineDetailField *pInvestorPositionCombineDetail, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpInvestorPositionCombineDetail = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryInvestorPositionCombineDetail) {
    CThostFtdcTraderSpi::OnRspQryInvestorPositionCombineDetail(pInvestorPositionCombineDetail,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpInvestorPositionCombineDetail = (void *) pInvestorPositionCombineDetail; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryInvestorPositionCombineDetail(jpInvestorPositionCombineDetail, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryCFMMCTradingAccountKey(CThostFtdcCFMMCTradingAccountKeyField *pCFMMCTradingAccountKey, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpCFMMCTradingAccountKey = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryCFMMCTradingAccountKey) {
    CThostFtdcTraderSpi::OnRspQryCFMMCTradingAccountKey(pCFMMCTradingAccountKey,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpCFMMCTradingAccountKey = (void *) pCFMMCTradingAccountKey; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryCFMMCTradingAccountKey(jpCFMMCTradingAccountKey, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryEWarrantOffset(CThostFtdcEWarrantOffsetField *pEWarrantOffset, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpEWarrantOffset = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryEWarrantOffset) {
    CThostFtdcTraderSpi::OnRspQryEWarrantOffset(pEWarrantOffset,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpEWarrantOffset = (void *) pEWarrantOffset; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryEWarrantOffset(jpEWarrantOffset, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryInvestorProductGroupMargin(CThostFtdcInvestorProductGroupMarginField *pInvestorProductGroupMargin, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpInvestorProductGroupMargin = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryInvestorProductGroupMargin) {
    CThostFtdcTraderSpi::OnRspQryInvestorProductGroupMargin(pInvestorProductGroupMargin,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpInvestorProductGroupMargin = (void *) pInvestorProductGroupMargin; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryInvestorProductGroupMargin(jpInvestorProductGroupMargin, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryExchangeMarginRate(CThostFtdcExchangeMarginRateField *pExchangeMarginRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpExchangeMarginRate = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryExchangeMarginRate) {
    CThostFtdcTraderSpi::OnRspQryExchangeMarginRate(pExchangeMarginRate,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpExchangeMarginRate = (void *) pExchangeMarginRate; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryExchangeMarginRate(jpExchangeMarginRate, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryExchangeMarginRateAdjust(CThostFtdcExchangeMarginRateAdjustField *pExchangeMarginRateAdjust, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpExchangeMarginRateAdjust = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryExchangeMarginRateAdjust) {
    CThostFtdcTraderSpi::OnRspQryExchangeMarginRateAdjust(pExchangeMarginRateAdjust,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpExchangeMarginRateAdjust = (void *) pExchangeMarginRateAdjust; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryExchangeMarginRateAdjust(jpExchangeMarginRateAdjust, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryExchangeRate(CThostFtdcExchangeRateField *pExchangeRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpExchangeRate = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryExchangeRate) {
    CThostFtdcTraderSpi::OnRspQryExchangeRate(pExchangeRate,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpExchangeRate = (void *) pExchangeRate; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryExchangeRate(jpExchangeRate, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQrySecAgentACIDMap(CThostFtdcSecAgentACIDMapField *pSecAgentACIDMap, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpSecAgentACIDMap = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQrySecAgentACIDMap) {
    CThostFtdcTraderSpi::OnRspQrySecAgentACIDMap(pSecAgentACIDMap,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpSecAgentACIDMap = (void *) pSecAgentACIDMap; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQrySecAgentACIDMap(jpSecAgentACIDMap, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryProductExchRate(CThostFtdcProductExchRateField *pProductExchRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpProductExchRate = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryProductExchRate) {
    CThostFtdcTraderSpi::OnRspQryProductExchRate(pProductExchRate,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpProductExchRate = (void *) pProductExchRate; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryProductExchRate(jpProductExchRate, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryOptionInstrTradeCost(CThostFtdcOptionInstrTradeCostField *pOptionInstrTradeCost, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpOptionInstrTradeCost = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryOptionInstrTradeCost) {
    CThostFtdcTraderSpi::OnRspQryOptionInstrTradeCost(pOptionInstrTradeCost,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpOptionInstrTradeCost = (void *) pOptionInstrTradeCost; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryOptionInstrTradeCost(jpOptionInstrTradeCost, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryOptionInstrCommRate(CThostFtdcOptionInstrCommRateField *pOptionInstrCommRate, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpOptionInstrCommRate = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryOptionInstrCommRate) {
    CThostFtdcTraderSpi::OnRspQryOptionInstrCommRate(pOptionInstrCommRate,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpOptionInstrCommRate = (void *) pOptionInstrCommRate; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryOptionInstrCommRate(jpOptionInstrCommRate, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryExecOrder(CThostFtdcExecOrderField *pExecOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpExecOrder = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryExecOrder) {
    CThostFtdcTraderSpi::OnRspQryExecOrder(pExecOrder,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpExecOrder = (void *) pExecOrder; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryExecOrder(jpExecOrder, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryForQuote(CThostFtdcForQuoteField *pForQuote, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpForQuote = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryForQuote) {
    CThostFtdcTraderSpi::OnRspQryForQuote(pForQuote,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpForQuote = (void *) pForQuote; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryForQuote(jpForQuote, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryQuote(CThostFtdcQuoteField *pQuote, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpQuote = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryQuote) {
    CThostFtdcTraderSpi::OnRspQryQuote(pQuote,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpQuote = (void *) pQuote; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryQuote(jpQuote, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryCombInstrumentGuard(CThostFtdcCombInstrumentGuardField *pCombInstrumentGuard, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpCombInstrumentGuard = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryCombInstrumentGuard) {
    CThostFtdcTraderSpi::OnRspQryCombInstrumentGuard(pCombInstrumentGuard,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpCombInstrumentGuard = (void *) pCombInstrumentGuard; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryCombInstrumentGuard(jpCombInstrumentGuard, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryCombAction(CThostFtdcCombActionField *pCombAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpCombAction = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryCombAction) {
    CThostFtdcTraderSpi::OnRspQryCombAction(pCombAction,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpCombAction = (void *) pCombAction; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryCombAction(jpCombAction, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryTransferSerial(CThostFtdcTransferSerialField *pTransferSerial, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpTransferSerial = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryTransferSerial) {
    CThostFtdcTraderSpi::OnRspQryTransferSerial(pTransferSerial,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpTransferSerial = (void *) pTransferSerial; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryTransferSerial(jpTransferSerial, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryAccountregister(CThostFtdcAccountregisterField *pAccountregister, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpAccountregister = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryAccountregister) {
    CThostFtdcTraderSpi::OnRspQryAccountregister(pAccountregister,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpAccountregister = (void *) pAccountregister; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryAccountregister(jpAccountregister, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspError(CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspError) {
    CThostFtdcTraderSpi::OnRspError(pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspError(jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRtnOrder(CThostFtdcOrderField *pOrder) {
  void * jpOrder = 0 ;
  
  if (!swig_callbackOnRtnOrder) {
    CThostFtdcTraderSpi::OnRtnOrder(pOrder);
    return;
  } else {
    jpOrder = (void *) pOrder; 
    swig_callbackOnRtnOrder(jpOrder);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRtnTrade(CThostFtdcTradeField *pTrade) {
  void * jpTrade = 0 ;
  
  if (!swig_callbackOnRtnTrade) {
    CThostFtdcTraderSpi::OnRtnTrade(pTrade);
    return;
  } else {
    jpTrade = (void *) pTrade; 
    swig_callbackOnRtnTrade(jpTrade);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnErrRtnOrderInsert(CThostFtdcInputOrderField *pInputOrder, CThostFtdcRspInfoField *pRspInfo) {
  void * jpInputOrder = 0 ;
  void * jpRspInfo = 0 ;
  
  if (!swig_callbackOnErrRtnOrderInsert) {
    CThostFtdcTraderSpi::OnErrRtnOrderInsert(pInputOrder,pRspInfo);
    return;
  } else {
    jpInputOrder = (void *) pInputOrder; 
    jpRspInfo = (void *) pRspInfo; 
    swig_callbackOnErrRtnOrderInsert(jpInputOrder, jpRspInfo);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnErrRtnOrderAction(CThostFtdcOrderActionField *pOrderAction, CThostFtdcRspInfoField *pRspInfo) {
  void * jpOrderAction = 0 ;
  void * jpRspInfo = 0 ;
  
  if (!swig_callbackOnErrRtnOrderAction) {
    CThostFtdcTraderSpi::OnErrRtnOrderAction(pOrderAction,pRspInfo);
    return;
  } else {
    jpOrderAction = (void *) pOrderAction; 
    jpRspInfo = (void *) pRspInfo; 
    swig_callbackOnErrRtnOrderAction(jpOrderAction, jpRspInfo);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRtnInstrumentStatus(CThostFtdcInstrumentStatusField *pInstrumentStatus) {
  void * jpInstrumentStatus = 0 ;
  
  if (!swig_callbackOnRtnInstrumentStatus) {
    CThostFtdcTraderSpi::OnRtnInstrumentStatus(pInstrumentStatus);
    return;
  } else {
    jpInstrumentStatus = (void *) pInstrumentStatus; 
    swig_callbackOnRtnInstrumentStatus(jpInstrumentStatus);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRtnTradingNotice(CThostFtdcTradingNoticeInfoField *pTradingNoticeInfo) {
  void * jpTradingNoticeInfo = 0 ;
  
  if (!swig_callbackOnRtnTradingNotice) {
    CThostFtdcTraderSpi::OnRtnTradingNotice(pTradingNoticeInfo);
    return;
  } else {
    jpTradingNoticeInfo = (void *) pTradingNoticeInfo; 
    swig_callbackOnRtnTradingNotice(jpTradingNoticeInfo);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRtnErrorConditionalOrder(CThostFtdcErrorConditionalOrderField *pErrorConditionalOrder) {
  void * jpErrorConditionalOrder = 0 ;
  
  if (!swig_callbackOnRtnErrorConditionalOrder) {
    CThostFtdcTraderSpi::OnRtnErrorConditionalOrder(pErrorConditionalOrder);
    return;
  } else {
    jpErrorConditionalOrder = (void *) pErrorConditionalOrder; 
    swig_callbackOnRtnErrorConditionalOrder(jpErrorConditionalOrder);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRtnExecOrder(CThostFtdcExecOrderField *pExecOrder) {
  void * jpExecOrder = 0 ;
  
  if (!swig_callbackOnRtnExecOrder) {
    CThostFtdcTraderSpi::OnRtnExecOrder(pExecOrder);
    return;
  } else {
    jpExecOrder = (void *) pExecOrder; 
    swig_callbackOnRtnExecOrder(jpExecOrder);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnErrRtnExecOrderInsert(CThostFtdcInputExecOrderField *pInputExecOrder, CThostFtdcRspInfoField *pRspInfo) {
  void * jpInputExecOrder = 0 ;
  void * jpRspInfo = 0 ;
  
  if (!swig_callbackOnErrRtnExecOrderInsert) {
    CThostFtdcTraderSpi::OnErrRtnExecOrderInsert(pInputExecOrder,pRspInfo);
    return;
  } else {
    jpInputExecOrder = (void *) pInputExecOrder; 
    jpRspInfo = (void *) pRspInfo; 
    swig_callbackOnErrRtnExecOrderInsert(jpInputExecOrder, jpRspInfo);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnErrRtnExecOrderAction(CThostFtdcExecOrderActionField *pExecOrderAction, CThostFtdcRspInfoField *pRspInfo) {
  void * jpExecOrderAction = 0 ;
  void * jpRspInfo = 0 ;
  
  if (!swig_callbackOnErrRtnExecOrderAction) {
    CThostFtdcTraderSpi::OnErrRtnExecOrderAction(pExecOrderAction,pRspInfo);
    return;
  } else {
    jpExecOrderAction = (void *) pExecOrderAction; 
    jpRspInfo = (void *) pRspInfo; 
    swig_callbackOnErrRtnExecOrderAction(jpExecOrderAction, jpRspInfo);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnErrRtnForQuoteInsert(CThostFtdcInputForQuoteField *pInputForQuote, CThostFtdcRspInfoField *pRspInfo) {
  void * jpInputForQuote = 0 ;
  void * jpRspInfo = 0 ;
  
  if (!swig_callbackOnErrRtnForQuoteInsert) {
    CThostFtdcTraderSpi::OnErrRtnForQuoteInsert(pInputForQuote,pRspInfo);
    return;
  } else {
    jpInputForQuote = (void *) pInputForQuote; 
    jpRspInfo = (void *) pRspInfo; 
    swig_callbackOnErrRtnForQuoteInsert(jpInputForQuote, jpRspInfo);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRtnQuote(CThostFtdcQuoteField *pQuote) {
  void * jpQuote = 0 ;
  
  if (!swig_callbackOnRtnQuote) {
    CThostFtdcTraderSpi::OnRtnQuote(pQuote);
    return;
  } else {
    jpQuote = (void *) pQuote; 
    swig_callbackOnRtnQuote(jpQuote);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnErrRtnQuoteInsert(CThostFtdcInputQuoteField *pInputQuote, CThostFtdcRspInfoField *pRspInfo) {
  void * jpInputQuote = 0 ;
  void * jpRspInfo = 0 ;
  
  if (!swig_callbackOnErrRtnQuoteInsert) {
    CThostFtdcTraderSpi::OnErrRtnQuoteInsert(pInputQuote,pRspInfo);
    return;
  } else {
    jpInputQuote = (void *) pInputQuote; 
    jpRspInfo = (void *) pRspInfo; 
    swig_callbackOnErrRtnQuoteInsert(jpInputQuote, jpRspInfo);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnErrRtnQuoteAction(CThostFtdcQuoteActionField *pQuoteAction, CThostFtdcRspInfoField *pRspInfo) {
  void * jpQuoteAction = 0 ;
  void * jpRspInfo = 0 ;
  
  if (!swig_callbackOnErrRtnQuoteAction) {
    CThostFtdcTraderSpi::OnErrRtnQuoteAction(pQuoteAction,pRspInfo);
    return;
  } else {
    jpQuoteAction = (void *) pQuoteAction; 
    jpRspInfo = (void *) pRspInfo; 
    swig_callbackOnErrRtnQuoteAction(jpQuoteAction, jpRspInfo);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRtnForQuoteRsp(CThostFtdcForQuoteRspField *pForQuoteRsp) {
  void * jpForQuoteRsp = 0 ;
  
  if (!swig_callbackOnRtnForQuoteRsp) {
    CThostFtdcTraderSpi::OnRtnForQuoteRsp(pForQuoteRsp);
    return;
  } else {
    jpForQuoteRsp = (void *) pForQuoteRsp; 
    swig_callbackOnRtnForQuoteRsp(jpForQuoteRsp);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRtnCFMMCTradingAccountToken(CThostFtdcCFMMCTradingAccountTokenField *pCFMMCTradingAccountToken) {
  void * jpCFMMCTradingAccountToken = 0 ;
  
  if (!swig_callbackOnRtnCFMMCTradingAccountToken) {
    CThostFtdcTraderSpi::OnRtnCFMMCTradingAccountToken(pCFMMCTradingAccountToken);
    return;
  } else {
    jpCFMMCTradingAccountToken = (void *) pCFMMCTradingAccountToken; 
    swig_callbackOnRtnCFMMCTradingAccountToken(jpCFMMCTradingAccountToken);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRtnCombAction(CThostFtdcCombActionField *pCombAction) {
  void * jpCombAction = 0 ;
  
  if (!swig_callbackOnRtnCombAction) {
    CThostFtdcTraderSpi::OnRtnCombAction(pCombAction);
    return;
  } else {
    jpCombAction = (void *) pCombAction; 
    swig_callbackOnRtnCombAction(jpCombAction);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnErrRtnCombActionInsert(CThostFtdcInputCombActionField *pInputCombAction, CThostFtdcRspInfoField *pRspInfo) {
  void * jpInputCombAction = 0 ;
  void * jpRspInfo = 0 ;
  
  if (!swig_callbackOnErrRtnCombActionInsert) {
    CThostFtdcTraderSpi::OnErrRtnCombActionInsert(pInputCombAction,pRspInfo);
    return;
  } else {
    jpInputCombAction = (void *) pInputCombAction; 
    jpRspInfo = (void *) pRspInfo; 
    swig_callbackOnErrRtnCombActionInsert(jpInputCombAction, jpRspInfo);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryContractBank(CThostFtdcContractBankField *pContractBank, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpContractBank = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryContractBank) {
    CThostFtdcTraderSpi::OnRspQryContractBank(pContractBank,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpContractBank = (void *) pContractBank; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryContractBank(jpContractBank, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryParkedOrder(CThostFtdcParkedOrderField *pParkedOrder, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpParkedOrder = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryParkedOrder) {
    CThostFtdcTraderSpi::OnRspQryParkedOrder(pParkedOrder,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpParkedOrder = (void *) pParkedOrder; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryParkedOrder(jpParkedOrder, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryParkedOrderAction(CThostFtdcParkedOrderActionField *pParkedOrderAction, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpParkedOrderAction = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryParkedOrderAction) {
    CThostFtdcTraderSpi::OnRspQryParkedOrderAction(pParkedOrderAction,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpParkedOrderAction = (void *) pParkedOrderAction; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryParkedOrderAction(jpParkedOrderAction, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryTradingNotice(CThostFtdcTradingNoticeField *pTradingNotice, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpTradingNotice = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryTradingNotice) {
    CThostFtdcTraderSpi::OnRspQryTradingNotice(pTradingNotice,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpTradingNotice = (void *) pTradingNotice; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryTradingNotice(jpTradingNotice, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryBrokerTradingParams(CThostFtdcBrokerTradingParamsField *pBrokerTradingParams, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpBrokerTradingParams = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryBrokerTradingParams) {
    CThostFtdcTraderSpi::OnRspQryBrokerTradingParams(pBrokerTradingParams,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpBrokerTradingParams = (void *) pBrokerTradingParams; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryBrokerTradingParams(jpBrokerTradingParams, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQryBrokerTradingAlgos(CThostFtdcBrokerTradingAlgosField *pBrokerTradingAlgos, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpBrokerTradingAlgos = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQryBrokerTradingAlgos) {
    CThostFtdcTraderSpi::OnRspQryBrokerTradingAlgos(pBrokerTradingAlgos,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpBrokerTradingAlgos = (void *) pBrokerTradingAlgos; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQryBrokerTradingAlgos(jpBrokerTradingAlgos, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQueryCFMMCTradingAccountToken(CThostFtdcQueryCFMMCTradingAccountTokenField *pQueryCFMMCTradingAccountToken, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpQueryCFMMCTradingAccountToken = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQueryCFMMCTradingAccountToken) {
    CThostFtdcTraderSpi::OnRspQueryCFMMCTradingAccountToken(pQueryCFMMCTradingAccountToken,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpQueryCFMMCTradingAccountToken = (void *) pQueryCFMMCTradingAccountToken; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQueryCFMMCTradingAccountToken(jpQueryCFMMCTradingAccountToken, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRtnFromBankToFutureByBank(CThostFtdcRspTransferField *pRspTransfer) {
  void * jpRspTransfer = 0 ;
  
  if (!swig_callbackOnRtnFromBankToFutureByBank) {
    CThostFtdcTraderSpi::OnRtnFromBankToFutureByBank(pRspTransfer);
    return;
  } else {
    jpRspTransfer = (void *) pRspTransfer; 
    swig_callbackOnRtnFromBankToFutureByBank(jpRspTransfer);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRtnFromFutureToBankByBank(CThostFtdcRspTransferField *pRspTransfer) {
  void * jpRspTransfer = 0 ;
  
  if (!swig_callbackOnRtnFromFutureToBankByBank) {
    CThostFtdcTraderSpi::OnRtnFromFutureToBankByBank(pRspTransfer);
    return;
  } else {
    jpRspTransfer = (void *) pRspTransfer; 
    swig_callbackOnRtnFromFutureToBankByBank(jpRspTransfer);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRtnRepealFromBankToFutureByBank(CThostFtdcRspRepealField *pRspRepeal) {
  void * jpRspRepeal = 0 ;
  
  if (!swig_callbackOnRtnRepealFromBankToFutureByBank) {
    CThostFtdcTraderSpi::OnRtnRepealFromBankToFutureByBank(pRspRepeal);
    return;
  } else {
    jpRspRepeal = (void *) pRspRepeal; 
    swig_callbackOnRtnRepealFromBankToFutureByBank(jpRspRepeal);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRtnRepealFromFutureToBankByBank(CThostFtdcRspRepealField *pRspRepeal) {
  void * jpRspRepeal = 0 ;
  
  if (!swig_callbackOnRtnRepealFromFutureToBankByBank) {
    CThostFtdcTraderSpi::OnRtnRepealFromFutureToBankByBank(pRspRepeal);
    return;
  } else {
    jpRspRepeal = (void *) pRspRepeal; 
    swig_callbackOnRtnRepealFromFutureToBankByBank(jpRspRepeal);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRtnFromBankToFutureByFuture(CThostFtdcRspTransferField *pRspTransfer) {
  void * jpRspTransfer = 0 ;
  
  if (!swig_callbackOnRtnFromBankToFutureByFuture) {
    CThostFtdcTraderSpi::OnRtnFromBankToFutureByFuture(pRspTransfer);
    return;
  } else {
    jpRspTransfer = (void *) pRspTransfer; 
    swig_callbackOnRtnFromBankToFutureByFuture(jpRspTransfer);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRtnFromFutureToBankByFuture(CThostFtdcRspTransferField *pRspTransfer) {
  void * jpRspTransfer = 0 ;
  
  if (!swig_callbackOnRtnFromFutureToBankByFuture) {
    CThostFtdcTraderSpi::OnRtnFromFutureToBankByFuture(pRspTransfer);
    return;
  } else {
    jpRspTransfer = (void *) pRspTransfer; 
    swig_callbackOnRtnFromFutureToBankByFuture(jpRspTransfer);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRtnRepealFromBankToFutureByFutureManual(CThostFtdcRspRepealField *pRspRepeal) {
  void * jpRspRepeal = 0 ;
  
  if (!swig_callbackOnRtnRepealFromBankToFutureByFutureManual) {
    CThostFtdcTraderSpi::OnRtnRepealFromBankToFutureByFutureManual(pRspRepeal);
    return;
  } else {
    jpRspRepeal = (void *) pRspRepeal; 
    swig_callbackOnRtnRepealFromBankToFutureByFutureManual(jpRspRepeal);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRtnRepealFromFutureToBankByFutureManual(CThostFtdcRspRepealField *pRspRepeal) {
  void * jpRspRepeal = 0 ;
  
  if (!swig_callbackOnRtnRepealFromFutureToBankByFutureManual) {
    CThostFtdcTraderSpi::OnRtnRepealFromFutureToBankByFutureManual(pRspRepeal);
    return;
  } else {
    jpRspRepeal = (void *) pRspRepeal; 
    swig_callbackOnRtnRepealFromFutureToBankByFutureManual(jpRspRepeal);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRtnQueryBankBalanceByFuture(CThostFtdcNotifyQueryAccountField *pNotifyQueryAccount) {
  void * jpNotifyQueryAccount = 0 ;
  
  if (!swig_callbackOnRtnQueryBankBalanceByFuture) {
    CThostFtdcTraderSpi::OnRtnQueryBankBalanceByFuture(pNotifyQueryAccount);
    return;
  } else {
    jpNotifyQueryAccount = (void *) pNotifyQueryAccount; 
    swig_callbackOnRtnQueryBankBalanceByFuture(jpNotifyQueryAccount);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnErrRtnBankToFutureByFuture(CThostFtdcReqTransferField *pReqTransfer, CThostFtdcRspInfoField *pRspInfo) {
  void * jpReqTransfer = 0 ;
  void * jpRspInfo = 0 ;
  
  if (!swig_callbackOnErrRtnBankToFutureByFuture) {
    CThostFtdcTraderSpi::OnErrRtnBankToFutureByFuture(pReqTransfer,pRspInfo);
    return;
  } else {
    jpReqTransfer = (void *) pReqTransfer; 
    jpRspInfo = (void *) pRspInfo; 
    swig_callbackOnErrRtnBankToFutureByFuture(jpReqTransfer, jpRspInfo);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnErrRtnFutureToBankByFuture(CThostFtdcReqTransferField *pReqTransfer, CThostFtdcRspInfoField *pRspInfo) {
  void * jpReqTransfer = 0 ;
  void * jpRspInfo = 0 ;
  
  if (!swig_callbackOnErrRtnFutureToBankByFuture) {
    CThostFtdcTraderSpi::OnErrRtnFutureToBankByFuture(pReqTransfer,pRspInfo);
    return;
  } else {
    jpReqTransfer = (void *) pReqTransfer; 
    jpRspInfo = (void *) pRspInfo; 
    swig_callbackOnErrRtnFutureToBankByFuture(jpReqTransfer, jpRspInfo);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnErrRtnRepealBankToFutureByFutureManual(CThostFtdcReqRepealField *pReqRepeal, CThostFtdcRspInfoField *pRspInfo) {
  void * jpReqRepeal = 0 ;
  void * jpRspInfo = 0 ;
  
  if (!swig_callbackOnErrRtnRepealBankToFutureByFutureManual) {
    CThostFtdcTraderSpi::OnErrRtnRepealBankToFutureByFutureManual(pReqRepeal,pRspInfo);
    return;
  } else {
    jpReqRepeal = (void *) pReqRepeal; 
    jpRspInfo = (void *) pRspInfo; 
    swig_callbackOnErrRtnRepealBankToFutureByFutureManual(jpReqRepeal, jpRspInfo);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnErrRtnRepealFutureToBankByFutureManual(CThostFtdcReqRepealField *pReqRepeal, CThostFtdcRspInfoField *pRspInfo) {
  void * jpReqRepeal = 0 ;
  void * jpRspInfo = 0 ;
  
  if (!swig_callbackOnErrRtnRepealFutureToBankByFutureManual) {
    CThostFtdcTraderSpi::OnErrRtnRepealFutureToBankByFutureManual(pReqRepeal,pRspInfo);
    return;
  } else {
    jpReqRepeal = (void *) pReqRepeal; 
    jpRspInfo = (void *) pRspInfo; 
    swig_callbackOnErrRtnRepealFutureToBankByFutureManual(jpReqRepeal, jpRspInfo);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnErrRtnQueryBankBalanceByFuture(CThostFtdcReqQueryAccountField *pReqQueryAccount, CThostFtdcRspInfoField *pRspInfo) {
  void * jpReqQueryAccount = 0 ;
  void * jpRspInfo = 0 ;
  
  if (!swig_callbackOnErrRtnQueryBankBalanceByFuture) {
    CThostFtdcTraderSpi::OnErrRtnQueryBankBalanceByFuture(pReqQueryAccount,pRspInfo);
    return;
  } else {
    jpReqQueryAccount = (void *) pReqQueryAccount; 
    jpRspInfo = (void *) pRspInfo; 
    swig_callbackOnErrRtnQueryBankBalanceByFuture(jpReqQueryAccount, jpRspInfo);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRtnRepealFromBankToFutureByFuture(CThostFtdcRspRepealField *pRspRepeal) {
  void * jpRspRepeal = 0 ;
  
  if (!swig_callbackOnRtnRepealFromBankToFutureByFuture) {
    CThostFtdcTraderSpi::OnRtnRepealFromBankToFutureByFuture(pRspRepeal);
    return;
  } else {
    jpRspRepeal = (void *) pRspRepeal; 
    swig_callbackOnRtnRepealFromBankToFutureByFuture(jpRspRepeal);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRtnRepealFromFutureToBankByFuture(CThostFtdcRspRepealField *pRspRepeal) {
  void * jpRspRepeal = 0 ;
  
  if (!swig_callbackOnRtnRepealFromFutureToBankByFuture) {
    CThostFtdcTraderSpi::OnRtnRepealFromFutureToBankByFuture(pRspRepeal);
    return;
  } else {
    jpRspRepeal = (void *) pRspRepeal; 
    swig_callbackOnRtnRepealFromFutureToBankByFuture(jpRspRepeal);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspFromBankToFutureByFuture(CThostFtdcReqTransferField *pReqTransfer, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpReqTransfer = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspFromBankToFutureByFuture) {
    CThostFtdcTraderSpi::OnRspFromBankToFutureByFuture(pReqTransfer,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpReqTransfer = (void *) pReqTransfer; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspFromBankToFutureByFuture(jpReqTransfer, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspFromFutureToBankByFuture(CThostFtdcReqTransferField *pReqTransfer, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpReqTransfer = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspFromFutureToBankByFuture) {
    CThostFtdcTraderSpi::OnRspFromFutureToBankByFuture(pReqTransfer,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpReqTransfer = (void *) pReqTransfer; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspFromFutureToBankByFuture(jpReqTransfer, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRspQueryBankAccountMoneyByFuture(CThostFtdcReqQueryAccountField *pReqQueryAccount, CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast) {
  void * jpReqQueryAccount = 0 ;
  void * jpRspInfo = 0 ;
  int jnRequestID  ;
  unsigned int jbIsLast  ;
  
  if (!swig_callbackOnRspQueryBankAccountMoneyByFuture) {
    CThostFtdcTraderSpi::OnRspQueryBankAccountMoneyByFuture(pReqQueryAccount,pRspInfo,nRequestID,bIsLast);
    return;
  } else {
    jpReqQueryAccount = (void *) pReqQueryAccount; 
    jpRspInfo = (void *) pRspInfo; 
    jnRequestID = nRequestID;
    jbIsLast = bIsLast;
    swig_callbackOnRspQueryBankAccountMoneyByFuture(jpReqQueryAccount, jpRspInfo, jnRequestID, jbIsLast);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRtnOpenAccountByBank(CThostFtdcOpenAccountField *pOpenAccount) {
  void * jpOpenAccount = 0 ;
  
  if (!swig_callbackOnRtnOpenAccountByBank) {
    CThostFtdcTraderSpi::OnRtnOpenAccountByBank(pOpenAccount);
    return;
  } else {
    jpOpenAccount = (void *) pOpenAccount; 
    swig_callbackOnRtnOpenAccountByBank(jpOpenAccount);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRtnCancelAccountByBank(CThostFtdcCancelAccountField *pCancelAccount) {
  void * jpCancelAccount = 0 ;
  
  if (!swig_callbackOnRtnCancelAccountByBank) {
    CThostFtdcTraderSpi::OnRtnCancelAccountByBank(pCancelAccount);
    return;
  } else {
    jpCancelAccount = (void *) pCancelAccount; 
    swig_callbackOnRtnCancelAccountByBank(jpCancelAccount);
  }
}

void SwigDirector_CThostFtdcTraderSpi::OnRtnChangeAccountByBank(CThostFtdcChangeAccountField *pChangeAccount) {
  void * jpChangeAccount = 0 ;
  
  if (!swig_callbackOnRtnChangeAccountByBank) {
    CThostFtdcTraderSpi::OnRtnChangeAccountByBank(pChangeAccount);
    return;
  } else {
    jpChangeAccount = (void *) pChangeAccount; 
    swig_callbackOnRtnChangeAccountByBank(jpChangeAccount);
  }
}

void SwigDirector_CThostFtdcTraderSpi::swig_connect_director(SWIG_Callback0_t callbackOnFrontConnected, SWIG_Callback1_t callbackOnFrontDisconnected, SWIG_Callback2_t callbackOnHeartBeatWarning, SWIG_Callback3_t callbackOnRspAuthenticate, SWIG_Callback4_t callbackOnRspUserLogin, SWIG_Callback5_t callbackOnRspUserLogout, SWIG_Callback6_t callbackOnRspUserPasswordUpdate, SWIG_Callback7_t callbackOnRspTradingAccountPasswordUpdate, SWIG_Callback8_t callbackOnRspOrderInsert, SWIG_Callback9_t callbackOnRspParkedOrderInsert, SWIG_Callback10_t callbackOnRspParkedOrderAction, SWIG_Callback11_t callbackOnRspOrderAction, SWIG_Callback12_t callbackOnRspQueryMaxOrderVolume, SWIG_Callback13_t callbackOnRspSettlementInfoConfirm, SWIG_Callback14_t callbackOnRspRemoveParkedOrder, SWIG_Callback15_t callbackOnRspRemoveParkedOrderAction, SWIG_Callback16_t callbackOnRspExecOrderInsert, SWIG_Callback17_t callbackOnRspExecOrderAction, SWIG_Callback18_t callbackOnRspForQuoteInsert, SWIG_Callback19_t callbackOnRspQuoteInsert, SWIG_Callback20_t callbackOnRspQuoteAction, SWIG_Callback21_t callbackOnRspCombActionInsert, SWIG_Callback22_t callbackOnRspQryOrder, SWIG_Callback23_t callbackOnRspQryTrade, SWIG_Callback24_t callbackOnRspQryInvestorPosition, SWIG_Callback25_t callbackOnRspQryTradingAccount, SWIG_Callback26_t callbackOnRspQryInvestor, SWIG_Callback27_t callbackOnRspQryTradingCode, SWIG_Callback28_t callbackOnRspQryInstrumentMarginRate, SWIG_Callback29_t callbackOnRspQryInstrumentCommissionRate, SWIG_Callback30_t callbackOnRspQryExchange, SWIG_Callback31_t callbackOnRspQryProduct, SWIG_Callback32_t callbackOnRspQryInstrument, SWIG_Callback33_t callbackOnRspQryDepthMarketData, SWIG_Callback34_t callbackOnRspQrySettlementInfo, SWIG_Callback35_t callbackOnRspQryTransferBank, SWIG_Callback36_t callbackOnRspQryInvestorPositionDetail, SWIG_Callback37_t callbackOnRspQryNotice, SWIG_Callback38_t callbackOnRspQrySettlementInfoConfirm, SWIG_Callback39_t callbackOnRspQryInvestorPositionCombineDetail, SWIG_Callback40_t callbackOnRspQryCFMMCTradingAccountKey, SWIG_Callback41_t callbackOnRspQryEWarrantOffset, SWIG_Callback42_t callbackOnRspQryInvestorProductGroupMargin, SWIG_Callback43_t callbackOnRspQryExchangeMarginRate, SWIG_Callback44_t callbackOnRspQryExchangeMarginRateAdjust, SWIG_Callback45_t callbackOnRspQryExchangeRate, SWIG_Callback46_t callbackOnRspQrySecAgentACIDMap, SWIG_Callback47_t callbackOnRspQryProductExchRate, SWIG_Callback48_t callbackOnRspQryOptionInstrTradeCost, SWIG_Callback49_t callbackOnRspQryOptionInstrCommRate, SWIG_Callback50_t callbackOnRspQryExecOrder, SWIG_Callback51_t callbackOnRspQryForQuote, SWIG_Callback52_t callbackOnRspQryQuote, SWIG_Callback53_t callbackOnRspQryCombInstrumentGuard, SWIG_Callback54_t callbackOnRspQryCombAction, SWIG_Callback55_t callbackOnRspQryTransferSerial, SWIG_Callback56_t callbackOnRspQryAccountregister, SWIG_Callback57_t callbackOnRspError, SWIG_Callback58_t callbackOnRtnOrder, SWIG_Callback59_t callbackOnRtnTrade, SWIG_Callback60_t callbackOnErrRtnOrderInsert, SWIG_Callback61_t callbackOnErrRtnOrderAction, SWIG_Callback62_t callbackOnRtnInstrumentStatus, SWIG_Callback63_t callbackOnRtnTradingNotice, SWIG_Callback64_t callbackOnRtnErrorConditionalOrder, SWIG_Callback65_t callbackOnRtnExecOrder, SWIG_Callback66_t callbackOnErrRtnExecOrderInsert, SWIG_Callback67_t callbackOnErrRtnExecOrderAction, SWIG_Callback68_t callbackOnErrRtnForQuoteInsert, SWIG_Callback69_t callbackOnRtnQuote, SWIG_Callback70_t callbackOnErrRtnQuoteInsert, SWIG_Callback71_t callbackOnErrRtnQuoteAction, SWIG_Callback72_t callbackOnRtnForQuoteRsp, SWIG_Callback73_t callbackOnRtnCFMMCTradingAccountToken, SWIG_Callback74_t callbackOnRtnCombAction, SWIG_Callback75_t callbackOnErrRtnCombActionInsert, SWIG_Callback76_t callbackOnRspQryContractBank, SWIG_Callback77_t callbackOnRspQryParkedOrder, SWIG_Callback78_t callbackOnRspQryParkedOrderAction, SWIG_Callback79_t callbackOnRspQryTradingNotice, SWIG_Callback80_t callbackOnRspQryBrokerTradingParams, SWIG_Callback81_t callbackOnRspQryBrokerTradingAlgos, SWIG_Callback82_t callbackOnRspQueryCFMMCTradingAccountToken, SWIG_Callback83_t callbackOnRtnFromBankToFutureByBank, SWIG_Callback84_t callbackOnRtnFromFutureToBankByBank, SWIG_Callback85_t callbackOnRtnRepealFromBankToFutureByBank, SWIG_Callback86_t callbackOnRtnRepealFromFutureToBankByBank, SWIG_Callback87_t callbackOnRtnFromBankToFutureByFuture, SWIG_Callback88_t callbackOnRtnFromFutureToBankByFuture, SWIG_Callback89_t callbackOnRtnRepealFromBankToFutureByFutureManual, SWIG_Callback90_t callbackOnRtnRepealFromFutureToBankByFutureManual, SWIG_Callback91_t callbackOnRtnQueryBankBalanceByFuture, SWIG_Callback92_t callbackOnErrRtnBankToFutureByFuture, SWIG_Callback93_t callbackOnErrRtnFutureToBankByFuture, SWIG_Callback94_t callbackOnErrRtnRepealBankToFutureByFutureManual, SWIG_Callback95_t callbackOnErrRtnRepealFutureToBankByFutureManual, SWIG_Callback96_t callbackOnErrRtnQueryBankBalanceByFuture, SWIG_Callback97_t callbackOnRtnRepealFromBankToFutureByFuture, SWIG_Callback98_t callbackOnRtnRepealFromFutureToBankByFuture, SWIG_Callback99_t callbackOnRspFromBankToFutureByFuture, SWIG_Callback100_t callbackOnRspFromFutureToBankByFuture, SWIG_Callback101_t callbackOnRspQueryBankAccountMoneyByFuture, SWIG_Callback102_t callbackOnRtnOpenAccountByBank, SWIG_Callback103_t callbackOnRtnCancelAccountByBank, SWIG_Callback104_t callbackOnRtnChangeAccountByBank) {
  swig_callbackOnFrontConnected = callbackOnFrontConnected;
  swig_callbackOnFrontDisconnected = callbackOnFrontDisconnected;
  swig_callbackOnHeartBeatWarning = callbackOnHeartBeatWarning;
  swig_callbackOnRspAuthenticate = callbackOnRspAuthenticate;
  swig_callbackOnRspUserLogin = callbackOnRspUserLogin;
  swig_callbackOnRspUserLogout = callbackOnRspUserLogout;
  swig_callbackOnRspUserPasswordUpdate = callbackOnRspUserPasswordUpdate;
  swig_callbackOnRspTradingAccountPasswordUpdate = callbackOnRspTradingAccountPasswordUpdate;
  swig_callbackOnRspOrderInsert = callbackOnRspOrderInsert;
  swig_callbackOnRspParkedOrderInsert = callbackOnRspParkedOrderInsert;
  swig_callbackOnRspParkedOrderAction = callbackOnRspParkedOrderAction;
  swig_callbackOnRspOrderAction = callbackOnRspOrderAction;
  swig_callbackOnRspQueryMaxOrderVolume = callbackOnRspQueryMaxOrderVolume;
  swig_callbackOnRspSettlementInfoConfirm = callbackOnRspSettlementInfoConfirm;
  swig_callbackOnRspRemoveParkedOrder = callbackOnRspRemoveParkedOrder;
  swig_callbackOnRspRemoveParkedOrderAction = callbackOnRspRemoveParkedOrderAction;
  swig_callbackOnRspExecOrderInsert = callbackOnRspExecOrderInsert;
  swig_callbackOnRspExecOrderAction = callbackOnRspExecOrderAction;
  swig_callbackOnRspForQuoteInsert = callbackOnRspForQuoteInsert;
  swig_callbackOnRspQuoteInsert = callbackOnRspQuoteInsert;
  swig_callbackOnRspQuoteAction = callbackOnRspQuoteAction;
  swig_callbackOnRspCombActionInsert = callbackOnRspCombActionInsert;
  swig_callbackOnRspQryOrder = callbackOnRspQryOrder;
  swig_callbackOnRspQryTrade = callbackOnRspQryTrade;
  swig_callbackOnRspQryInvestorPosition = callbackOnRspQryInvestorPosition;
  swig_callbackOnRspQryTradingAccount = callbackOnRspQryTradingAccount;
  swig_callbackOnRspQryInvestor = callbackOnRspQryInvestor;
  swig_callbackOnRspQryTradingCode = callbackOnRspQryTradingCode;
  swig_callbackOnRspQryInstrumentMarginRate = callbackOnRspQryInstrumentMarginRate;
  swig_callbackOnRspQryInstrumentCommissionRate = callbackOnRspQryInstrumentCommissionRate;
  swig_callbackOnRspQryExchange = callbackOnRspQryExchange;
  swig_callbackOnRspQryProduct = callbackOnRspQryProduct;
  swig_callbackOnRspQryInstrument = callbackOnRspQryInstrument;
  swig_callbackOnRspQryDepthMarketData = callbackOnRspQryDepthMarketData;
  swig_callbackOnRspQrySettlementInfo = callbackOnRspQrySettlementInfo;
  swig_callbackOnRspQryTransferBank = callbackOnRspQryTransferBank;
  swig_callbackOnRspQryInvestorPositionDetail = callbackOnRspQryInvestorPositionDetail;
  swig_callbackOnRspQryNotice = callbackOnRspQryNotice;
  swig_callbackOnRspQrySettlementInfoConfirm = callbackOnRspQrySettlementInfoConfirm;
  swig_callbackOnRspQryInvestorPositionCombineDetail = callbackOnRspQryInvestorPositionCombineDetail;
  swig_callbackOnRspQryCFMMCTradingAccountKey = callbackOnRspQryCFMMCTradingAccountKey;
  swig_callbackOnRspQryEWarrantOffset = callbackOnRspQryEWarrantOffset;
  swig_callbackOnRspQryInvestorProductGroupMargin = callbackOnRspQryInvestorProductGroupMargin;
  swig_callbackOnRspQryExchangeMarginRate = callbackOnRspQryExchangeMarginRate;
  swig_callbackOnRspQryExchangeMarginRateAdjust = callbackOnRspQryExchangeMarginRateAdjust;
  swig_callbackOnRspQryExchangeRate = callbackOnRspQryExchangeRate;
  swig_callbackOnRspQrySecAgentACIDMap = callbackOnRspQrySecAgentACIDMap;
  swig_callbackOnRspQryProductExchRate = callbackOnRspQryProductExchRate;
  swig_callbackOnRspQryOptionInstrTradeCost = callbackOnRspQryOptionInstrTradeCost;
  swig_callbackOnRspQryOptionInstrCommRate = callbackOnRspQryOptionInstrCommRate;
  swig_callbackOnRspQryExecOrder = callbackOnRspQryExecOrder;
  swig_callbackOnRspQryForQuote = callbackOnRspQryForQuote;
  swig_callbackOnRspQryQuote = callbackOnRspQryQuote;
  swig_callbackOnRspQryCombInstrumentGuard = callbackOnRspQryCombInstrumentGuard;
  swig_callbackOnRspQryCombAction = callbackOnRspQryCombAction;
  swig_callbackOnRspQryTransferSerial = callbackOnRspQryTransferSerial;
  swig_callbackOnRspQryAccountregister = callbackOnRspQryAccountregister;
  swig_callbackOnRspError = callbackOnRspError;
  swig_callbackOnRtnOrder = callbackOnRtnOrder;
  swig_callbackOnRtnTrade = callbackOnRtnTrade;
  swig_callbackOnErrRtnOrderInsert = callbackOnErrRtnOrderInsert;
  swig_callbackOnErrRtnOrderAction = callbackOnErrRtnOrderAction;
  swig_callbackOnRtnInstrumentStatus = callbackOnRtnInstrumentStatus;
  swig_callbackOnRtnTradingNotice = callbackOnRtnTradingNotice;
  swig_callbackOnRtnErrorConditionalOrder = callbackOnRtnErrorConditionalOrder;
  swig_callbackOnRtnExecOrder = callbackOnRtnExecOrder;
  swig_callbackOnErrRtnExecOrderInsert = callbackOnErrRtnExecOrderInsert;
  swig_callbackOnErrRtnExecOrderAction = callbackOnErrRtnExecOrderAction;
  swig_callbackOnErrRtnForQuoteInsert = callbackOnErrRtnForQuoteInsert;
  swig_callbackOnRtnQuote = callbackOnRtnQuote;
  swig_callbackOnErrRtnQuoteInsert = callbackOnErrRtnQuoteInsert;
  swig_callbackOnErrRtnQuoteAction = callbackOnErrRtnQuoteAction;
  swig_callbackOnRtnForQuoteRsp = callbackOnRtnForQuoteRsp;
  swig_callbackOnRtnCFMMCTradingAccountToken = callbackOnRtnCFMMCTradingAccountToken;
  swig_callbackOnRtnCombAction = callbackOnRtnCombAction;
  swig_callbackOnErrRtnCombActionInsert = callbackOnErrRtnCombActionInsert;
  swig_callbackOnRspQryContractBank = callbackOnRspQryContractBank;
  swig_callbackOnRspQryParkedOrder = callbackOnRspQryParkedOrder;
  swig_callbackOnRspQryParkedOrderAction = callbackOnRspQryParkedOrderAction;
  swig_callbackOnRspQryTradingNotice = callbackOnRspQryTradingNotice;
  swig_callbackOnRspQryBrokerTradingParams = callbackOnRspQryBrokerTradingParams;
  swig_callbackOnRspQryBrokerTradingAlgos = callbackOnRspQryBrokerTradingAlgos;
  swig_callbackOnRspQueryCFMMCTradingAccountToken = callbackOnRspQueryCFMMCTradingAccountToken;
  swig_callbackOnRtnFromBankToFutureByBank = callbackOnRtnFromBankToFutureByBank;
  swig_callbackOnRtnFromFutureToBankByBank = callbackOnRtnFromFutureToBankByBank;
  swig_callbackOnRtnRepealFromBankToFutureByBank = callbackOnRtnRepealFromBankToFutureByBank;
  swig_callbackOnRtnRepealFromFutureToBankByBank = callbackOnRtnRepealFromFutureToBankByBank;
  swig_callbackOnRtnFromBankToFutureByFuture = callbackOnRtnFromBankToFutureByFuture;
  swig_callbackOnRtnFromFutureToBankByFuture = callbackOnRtnFromFutureToBankByFuture;
  swig_callbackOnRtnRepealFromBankToFutureByFutureManual = callbackOnRtnRepealFromBankToFutureByFutureManual;
  swig_callbackOnRtnRepealFromFutureToBankByFutureManual = callbackOnRtnRepealFromFutureToBankByFutureManual;
  swig_callbackOnRtnQueryBankBalanceByFuture = callbackOnRtnQueryBankBalanceByFuture;
  swig_callbackOnErrRtnBankToFutureByFuture = callbackOnErrRtnBankToFutureByFuture;
  swig_callbackOnErrRtnFutureToBankByFuture = callbackOnErrRtnFutureToBankByFuture;
  swig_callbackOnErrRtnRepealBankToFutureByFutureManual = callbackOnErrRtnRepealBankToFutureByFutureManual;
  swig_callbackOnErrRtnRepealFutureToBankByFutureManual = callbackOnErrRtnRepealFutureToBankByFutureManual;
  swig_callbackOnErrRtnQueryBankBalanceByFuture = callbackOnErrRtnQueryBankBalanceByFuture;
  swig_callbackOnRtnRepealFromBankToFutureByFuture = callbackOnRtnRepealFromBankToFutureByFuture;
  swig_callbackOnRtnRepealFromFutureToBankByFuture = callbackOnRtnRepealFromFutureToBankByFuture;
  swig_callbackOnRspFromBankToFutureByFuture = callbackOnRspFromBankToFutureByFuture;
  swig_callbackOnRspFromFutureToBankByFuture = callbackOnRspFromFutureToBankByFuture;
  swig_callbackOnRspQueryBankAccountMoneyByFuture = callbackOnRspQueryBankAccountMoneyByFuture;
  swig_callbackOnRtnOpenAccountByBank = callbackOnRtnOpenAccountByBank;
  swig_callbackOnRtnCancelAccountByBank = callbackOnRtnCancelAccountByBank;
  swig_callbackOnRtnChangeAccountByBank = callbackOnRtnChangeAccountByBank;
}

void SwigDirector_CThostFtdcTraderSpi::swig_init_callbacks() {
  swig_callbackOnFrontConnected = 0;
  swig_callbackOnFrontDisconnected = 0;
  swig_callbackOnHeartBeatWarning = 0;
  swig_callbackOnRspAuthenticate = 0;
  swig_callbackOnRspUserLogin = 0;
  swig_callbackOnRspUserLogout = 0;
  swig_callbackOnRspUserPasswordUpdate = 0;
  swig_callbackOnRspTradingAccountPasswordUpdate = 0;
  swig_callbackOnRspOrderInsert = 0;
  swig_callbackOnRspParkedOrderInsert = 0;
  swig_callbackOnRspParkedOrderAction = 0;
  swig_callbackOnRspOrderAction = 0;
  swig_callbackOnRspQueryMaxOrderVolume = 0;
  swig_callbackOnRspSettlementInfoConfirm = 0;
  swig_callbackOnRspRemoveParkedOrder = 0;
  swig_callbackOnRspRemoveParkedOrderAction = 0;
  swig_callbackOnRspExecOrderInsert = 0;
  swig_callbackOnRspExecOrderAction = 0;
  swig_callbackOnRspForQuoteInsert = 0;
  swig_callbackOnRspQuoteInsert = 0;
  swig_callbackOnRspQuoteAction = 0;
  swig_callbackOnRspCombActionInsert = 0;
  swig_callbackOnRspQryOrder = 0;
  swig_callbackOnRspQryTrade = 0;
  swig_callbackOnRspQryInvestorPosition = 0;
  swig_callbackOnRspQryTradingAccount = 0;
  swig_callbackOnRspQryInvestor = 0;
  swig_callbackOnRspQryTradingCode = 0;
  swig_callbackOnRspQryInstrumentMarginRate = 0;
  swig_callbackOnRspQryInstrumentCommissionRate = 0;
  swig_callbackOnRspQryExchange = 0;
  swig_callbackOnRspQryProduct = 0;
  swig_callbackOnRspQryInstrument = 0;
  swig_callbackOnRspQryDepthMarketData = 0;
  swig_callbackOnRspQrySettlementInfo = 0;
  swig_callbackOnRspQryTransferBank = 0;
  swig_callbackOnRspQryInvestorPositionDetail = 0;
  swig_callbackOnRspQryNotice = 0;
  swig_callbackOnRspQrySettlementInfoConfirm = 0;
  swig_callbackOnRspQryInvestorPositionCombineDetail = 0;
  swig_callbackOnRspQryCFMMCTradingAccountKey = 0;
  swig_callbackOnRspQryEWarrantOffset = 0;
  swig_callbackOnRspQryInvestorProductGroupMargin = 0;
  swig_callbackOnRspQryExchangeMarginRate = 0;
  swig_callbackOnRspQryExchangeMarginRateAdjust = 0;
  swig_callbackOnRspQryExchangeRate = 0;
  swig_callbackOnRspQrySecAgentACIDMap = 0;
  swig_callbackOnRspQryProductExchRate = 0;
  swig_callbackOnRspQryOptionInstrTradeCost = 0;
  swig_callbackOnRspQryOptionInstrCommRate = 0;
  swig_callbackOnRspQryExecOrder = 0;
  swig_callbackOnRspQryForQuote = 0;
  swig_callbackOnRspQryQuote = 0;
  swig_callbackOnRspQryCombInstrumentGuard = 0;
  swig_callbackOnRspQryCombAction = 0;
  swig_callbackOnRspQryTransferSerial = 0;
  swig_callbackOnRspQryAccountregister = 0;
  swig_callbackOnRspError = 0;
  swig_callbackOnRtnOrder = 0;
  swig_callbackOnRtnTrade = 0;
  swig_callbackOnErrRtnOrderInsert = 0;
  swig_callbackOnErrRtnOrderAction = 0;
  swig_callbackOnRtnInstrumentStatus = 0;
  swig_callbackOnRtnTradingNotice = 0;
  swig_callbackOnRtnErrorConditionalOrder = 0;
  swig_callbackOnRtnExecOrder = 0;
  swig_callbackOnErrRtnExecOrderInsert = 0;
  swig_callbackOnErrRtnExecOrderAction = 0;
  swig_callbackOnErrRtnForQuoteInsert = 0;
  swig_callbackOnRtnQuote = 0;
  swig_callbackOnErrRtnQuoteInsert = 0;
  swig_callbackOnErrRtnQuoteAction = 0;
  swig_callbackOnRtnForQuoteRsp = 0;
  swig_callbackOnRtnCFMMCTradingAccountToken = 0;
  swig_callbackOnRtnCombAction = 0;
  swig_callbackOnErrRtnCombActionInsert = 0;
  swig_callbackOnRspQryContractBank = 0;
  swig_callbackOnRspQryParkedOrder = 0;
  swig_callbackOnRspQryParkedOrderAction = 0;
  swig_callbackOnRspQryTradingNotice = 0;
  swig_callbackOnRspQryBrokerTradingParams = 0;
  swig_callbackOnRspQryBrokerTradingAlgos = 0;
  swig_callbackOnRspQueryCFMMCTradingAccountToken = 0;
  swig_callbackOnRtnFromBankToFutureByBank = 0;
  swig_callbackOnRtnFromFutureToBankByBank = 0;
  swig_callbackOnRtnRepealFromBankToFutureByBank = 0;
  swig_callbackOnRtnRepealFromFutureToBankByBank = 0;
  swig_callbackOnRtnFromBankToFutureByFuture = 0;
  swig_callbackOnRtnFromFutureToBankByFuture = 0;
  swig_callbackOnRtnRepealFromBankToFutureByFutureManual = 0;
  swig_callbackOnRtnRepealFromFutureToBankByFutureManual = 0;
  swig_callbackOnRtnQueryBankBalanceByFuture = 0;
  swig_callbackOnErrRtnBankToFutureByFuture = 0;
  swig_callbackOnErrRtnFutureToBankByFuture = 0;
  swig_callbackOnErrRtnRepealBankToFutureByFutureManual = 0;
  swig_callbackOnErrRtnRepealFutureToBankByFutureManual = 0;
  swig_callbackOnErrRtnQueryBankBalanceByFuture = 0;
  swig_callbackOnRtnRepealFromBankToFutureByFuture = 0;
  swig_callbackOnRtnRepealFromFutureToBankByFuture = 0;
  swig_callbackOnRspFromBankToFutureByFuture = 0;
  swig_callbackOnRspFromFutureToBankByFuture = 0;
  swig_callbackOnRspQueryBankAccountMoneyByFuture = 0;
  swig_callbackOnRtnOpenAccountByBank = 0;
  swig_callbackOnRtnCancelAccountByBank = 0;
  swig_callbackOnRtnChangeAccountByBank = 0;
}

SwigDirector_CThostFtdcTraderApi::SwigDirector_CThostFtdcTraderApi() : CThostFtdcTraderApi(), Swig::Director() {
  swig_init_callbacks();
}

void SwigDirector_CThostFtdcTraderApi::Release() {
  if (!swig_callbackRelease) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::Release");
  } else {
    swig_callbackRelease();
  }
}

void SwigDirector_CThostFtdcTraderApi::Init() {
  if (!swig_callbackInit) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::Init");
  } else {
    swig_callbackInit();
  }
}

int SwigDirector_CThostFtdcTraderApi::Join() {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  
  if (!swig_callbackJoin) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::Join");
  } else {
    jresult = (int) swig_callbackJoin();
    c_result = (int)jresult; 
  }
  return c_result;
}

char const *SwigDirector_CThostFtdcTraderApi::GetTradingDay() {
  char *c_result = 0 ;
  char * jresult = 0 ;
  
  if (!swig_callbackGetTradingDay) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::GetTradingDay");
  } else {
    jresult = (char *) swig_callbackGetTradingDay();
    c_result = (char *)jresult; 
  }
  return (char const *)c_result;
}

void SwigDirector_CThostFtdcTraderApi::RegisterFront(char *pszFrontAddress) {
  char * jpszFrontAddress = 0 ;
  
  if (!swig_callbackRegisterFront) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::RegisterFront");
  } else {
    jpszFrontAddress = SWIG_csharp_string_callback((const char *)pszFrontAddress); 
    swig_callbackRegisterFront(jpszFrontAddress);
  }
}

void SwigDirector_CThostFtdcTraderApi::RegisterNameServer(char *pszNsAddress) {
  char * jpszNsAddress = 0 ;
  
  if (!swig_callbackRegisterNameServer) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::RegisterNameServer");
  } else {
    jpszNsAddress = SWIG_csharp_string_callback((const char *)pszNsAddress); 
    swig_callbackRegisterNameServer(jpszNsAddress);
  }
}

void SwigDirector_CThostFtdcTraderApi::RegisterFensUserInfo(CThostFtdcFensUserInfoField *pFensUserInfo) {
  void * jpFensUserInfo = 0 ;
  
  if (!swig_callbackRegisterFensUserInfo) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::RegisterFensUserInfo");
  } else {
    jpFensUserInfo = (void *) pFensUserInfo; 
    swig_callbackRegisterFensUserInfo(jpFensUserInfo);
  }
}

void SwigDirector_CThostFtdcTraderApi::RegisterSpi(CThostFtdcTraderSpi *pSpi) {
  void * jpSpi = 0 ;
  
  if (!swig_callbackRegisterSpi) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::RegisterSpi");
  } else {
    jpSpi = (void *) pSpi; 
    swig_callbackRegisterSpi(jpSpi);
  }
}

void SwigDirector_CThostFtdcTraderApi::SubscribePrivateTopic(THOST_TE_RESUME_TYPE nResumeType) {
  int jnResumeType  ;
  
  if (!swig_callbackSubscribePrivateTopic) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::SubscribePrivateTopic");
  } else {
    jnResumeType = (int)nResumeType;
    swig_callbackSubscribePrivateTopic(jnResumeType);
  }
}

void SwigDirector_CThostFtdcTraderApi::SubscribePublicTopic(THOST_TE_RESUME_TYPE nResumeType) {
  int jnResumeType  ;
  
  if (!swig_callbackSubscribePublicTopic) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::SubscribePublicTopic");
  } else {
    jnResumeType = (int)nResumeType;
    swig_callbackSubscribePublicTopic(jnResumeType);
  }
}

int SwigDirector_CThostFtdcTraderApi::ReqAuthenticate(CThostFtdcReqAuthenticateField *pReqAuthenticateField, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpReqAuthenticateField = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqAuthenticate) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqAuthenticate");
  } else {
    jpReqAuthenticateField = (void *) pReqAuthenticateField; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqAuthenticate(jpReqAuthenticateField, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqUserLogin(CThostFtdcReqUserLoginField *pReqUserLoginField, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpReqUserLoginField = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqUserLogin) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqUserLogin");
  } else {
    jpReqUserLoginField = (void *) pReqUserLoginField; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqUserLogin(jpReqUserLoginField, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqUserLogout(CThostFtdcUserLogoutField *pUserLogout, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpUserLogout = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqUserLogout) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqUserLogout");
  } else {
    jpUserLogout = (void *) pUserLogout; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqUserLogout(jpUserLogout, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqUserPasswordUpdate(CThostFtdcUserPasswordUpdateField *pUserPasswordUpdate, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpUserPasswordUpdate = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqUserPasswordUpdate) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqUserPasswordUpdate");
  } else {
    jpUserPasswordUpdate = (void *) pUserPasswordUpdate; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqUserPasswordUpdate(jpUserPasswordUpdate, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqTradingAccountPasswordUpdate(CThostFtdcTradingAccountPasswordUpdateField *pTradingAccountPasswordUpdate, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpTradingAccountPasswordUpdate = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqTradingAccountPasswordUpdate) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqTradingAccountPasswordUpdate");
  } else {
    jpTradingAccountPasswordUpdate = (void *) pTradingAccountPasswordUpdate; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqTradingAccountPasswordUpdate(jpTradingAccountPasswordUpdate, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqOrderInsert(CThostFtdcInputOrderField *pInputOrder, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpInputOrder = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqOrderInsert) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqOrderInsert");
  } else {
    jpInputOrder = (void *) pInputOrder; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqOrderInsert(jpInputOrder, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqParkedOrderInsert(CThostFtdcParkedOrderField *pParkedOrder, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpParkedOrder = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqParkedOrderInsert) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqParkedOrderInsert");
  } else {
    jpParkedOrder = (void *) pParkedOrder; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqParkedOrderInsert(jpParkedOrder, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqParkedOrderAction(CThostFtdcParkedOrderActionField *pParkedOrderAction, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpParkedOrderAction = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqParkedOrderAction) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqParkedOrderAction");
  } else {
    jpParkedOrderAction = (void *) pParkedOrderAction; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqParkedOrderAction(jpParkedOrderAction, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqOrderAction(CThostFtdcInputOrderActionField *pInputOrderAction, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpInputOrderAction = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqOrderAction) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqOrderAction");
  } else {
    jpInputOrderAction = (void *) pInputOrderAction; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqOrderAction(jpInputOrderAction, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQueryMaxOrderVolume(CThostFtdcQueryMaxOrderVolumeField *pQueryMaxOrderVolume, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQueryMaxOrderVolume = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQueryMaxOrderVolume) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQueryMaxOrderVolume");
  } else {
    jpQueryMaxOrderVolume = (void *) pQueryMaxOrderVolume; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQueryMaxOrderVolume(jpQueryMaxOrderVolume, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqSettlementInfoConfirm(CThostFtdcSettlementInfoConfirmField *pSettlementInfoConfirm, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpSettlementInfoConfirm = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqSettlementInfoConfirm) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqSettlementInfoConfirm");
  } else {
    jpSettlementInfoConfirm = (void *) pSettlementInfoConfirm; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqSettlementInfoConfirm(jpSettlementInfoConfirm, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqRemoveParkedOrder(CThostFtdcRemoveParkedOrderField *pRemoveParkedOrder, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpRemoveParkedOrder = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqRemoveParkedOrder) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqRemoveParkedOrder");
  } else {
    jpRemoveParkedOrder = (void *) pRemoveParkedOrder; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqRemoveParkedOrder(jpRemoveParkedOrder, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqRemoveParkedOrderAction(CThostFtdcRemoveParkedOrderActionField *pRemoveParkedOrderAction, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpRemoveParkedOrderAction = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqRemoveParkedOrderAction) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqRemoveParkedOrderAction");
  } else {
    jpRemoveParkedOrderAction = (void *) pRemoveParkedOrderAction; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqRemoveParkedOrderAction(jpRemoveParkedOrderAction, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqExecOrderInsert(CThostFtdcInputExecOrderField *pInputExecOrder, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpInputExecOrder = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqExecOrderInsert) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqExecOrderInsert");
  } else {
    jpInputExecOrder = (void *) pInputExecOrder; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqExecOrderInsert(jpInputExecOrder, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqExecOrderAction(CThostFtdcInputExecOrderActionField *pInputExecOrderAction, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpInputExecOrderAction = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqExecOrderAction) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqExecOrderAction");
  } else {
    jpInputExecOrderAction = (void *) pInputExecOrderAction; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqExecOrderAction(jpInputExecOrderAction, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqForQuoteInsert(CThostFtdcInputForQuoteField *pInputForQuote, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpInputForQuote = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqForQuoteInsert) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqForQuoteInsert");
  } else {
    jpInputForQuote = (void *) pInputForQuote; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqForQuoteInsert(jpInputForQuote, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQuoteInsert(CThostFtdcInputQuoteField *pInputQuote, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpInputQuote = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQuoteInsert) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQuoteInsert");
  } else {
    jpInputQuote = (void *) pInputQuote; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQuoteInsert(jpInputQuote, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQuoteAction(CThostFtdcInputQuoteActionField *pInputQuoteAction, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpInputQuoteAction = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQuoteAction) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQuoteAction");
  } else {
    jpInputQuoteAction = (void *) pInputQuoteAction; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQuoteAction(jpInputQuoteAction, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqCombActionInsert(CThostFtdcInputCombActionField *pInputCombAction, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpInputCombAction = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqCombActionInsert) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqCombActionInsert");
  } else {
    jpInputCombAction = (void *) pInputCombAction; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqCombActionInsert(jpInputCombAction, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryOrder(CThostFtdcQryOrderField *pQryOrder, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryOrder = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryOrder) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryOrder");
  } else {
    jpQryOrder = (void *) pQryOrder; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryOrder(jpQryOrder, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryTrade(CThostFtdcQryTradeField *pQryTrade, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryTrade = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryTrade) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryTrade");
  } else {
    jpQryTrade = (void *) pQryTrade; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryTrade(jpQryTrade, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryInvestorPosition(CThostFtdcQryInvestorPositionField *pQryInvestorPosition, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryInvestorPosition = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryInvestorPosition) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryInvestorPosition");
  } else {
    jpQryInvestorPosition = (void *) pQryInvestorPosition; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryInvestorPosition(jpQryInvestorPosition, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryTradingAccount(CThostFtdcQryTradingAccountField *pQryTradingAccount, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryTradingAccount = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryTradingAccount) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryTradingAccount");
  } else {
    jpQryTradingAccount = (void *) pQryTradingAccount; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryTradingAccount(jpQryTradingAccount, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryInvestor(CThostFtdcQryInvestorField *pQryInvestor, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryInvestor = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryInvestor) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryInvestor");
  } else {
    jpQryInvestor = (void *) pQryInvestor; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryInvestor(jpQryInvestor, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryTradingCode(CThostFtdcQryTradingCodeField *pQryTradingCode, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryTradingCode = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryTradingCode) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryTradingCode");
  } else {
    jpQryTradingCode = (void *) pQryTradingCode; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryTradingCode(jpQryTradingCode, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryInstrumentMarginRate(CThostFtdcQryInstrumentMarginRateField *pQryInstrumentMarginRate, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryInstrumentMarginRate = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryInstrumentMarginRate) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryInstrumentMarginRate");
  } else {
    jpQryInstrumentMarginRate = (void *) pQryInstrumentMarginRate; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryInstrumentMarginRate(jpQryInstrumentMarginRate, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryInstrumentCommissionRate(CThostFtdcQryInstrumentCommissionRateField *pQryInstrumentCommissionRate, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryInstrumentCommissionRate = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryInstrumentCommissionRate) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryInstrumentCommissionRate");
  } else {
    jpQryInstrumentCommissionRate = (void *) pQryInstrumentCommissionRate; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryInstrumentCommissionRate(jpQryInstrumentCommissionRate, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryExchange(CThostFtdcQryExchangeField *pQryExchange, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryExchange = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryExchange) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryExchange");
  } else {
    jpQryExchange = (void *) pQryExchange; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryExchange(jpQryExchange, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryProduct(CThostFtdcQryProductField *pQryProduct, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryProduct = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryProduct) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryProduct");
  } else {
    jpQryProduct = (void *) pQryProduct; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryProduct(jpQryProduct, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryInstrument(CThostFtdcQryInstrumentField *pQryInstrument, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryInstrument = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryInstrument) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryInstrument");
  } else {
    jpQryInstrument = (void *) pQryInstrument; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryInstrument(jpQryInstrument, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryDepthMarketData(CThostFtdcQryDepthMarketDataField *pQryDepthMarketData, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryDepthMarketData = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryDepthMarketData) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryDepthMarketData");
  } else {
    jpQryDepthMarketData = (void *) pQryDepthMarketData; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryDepthMarketData(jpQryDepthMarketData, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQrySettlementInfo(CThostFtdcQrySettlementInfoField *pQrySettlementInfo, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQrySettlementInfo = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQrySettlementInfo) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQrySettlementInfo");
  } else {
    jpQrySettlementInfo = (void *) pQrySettlementInfo; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQrySettlementInfo(jpQrySettlementInfo, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryTransferBank(CThostFtdcQryTransferBankField *pQryTransferBank, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryTransferBank = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryTransferBank) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryTransferBank");
  } else {
    jpQryTransferBank = (void *) pQryTransferBank; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryTransferBank(jpQryTransferBank, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryInvestorPositionDetail(CThostFtdcQryInvestorPositionDetailField *pQryInvestorPositionDetail, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryInvestorPositionDetail = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryInvestorPositionDetail) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryInvestorPositionDetail");
  } else {
    jpQryInvestorPositionDetail = (void *) pQryInvestorPositionDetail; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryInvestorPositionDetail(jpQryInvestorPositionDetail, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryNotice(CThostFtdcQryNoticeField *pQryNotice, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryNotice = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryNotice) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryNotice");
  } else {
    jpQryNotice = (void *) pQryNotice; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryNotice(jpQryNotice, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQrySettlementInfoConfirm(CThostFtdcQrySettlementInfoConfirmField *pQrySettlementInfoConfirm, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQrySettlementInfoConfirm = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQrySettlementInfoConfirm) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQrySettlementInfoConfirm");
  } else {
    jpQrySettlementInfoConfirm = (void *) pQrySettlementInfoConfirm; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQrySettlementInfoConfirm(jpQrySettlementInfoConfirm, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryInvestorPositionCombineDetail(CThostFtdcQryInvestorPositionCombineDetailField *pQryInvestorPositionCombineDetail, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryInvestorPositionCombineDetail = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryInvestorPositionCombineDetail) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryInvestorPositionCombineDetail");
  } else {
    jpQryInvestorPositionCombineDetail = (void *) pQryInvestorPositionCombineDetail; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryInvestorPositionCombineDetail(jpQryInvestorPositionCombineDetail, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryCFMMCTradingAccountKey(CThostFtdcQryCFMMCTradingAccountKeyField *pQryCFMMCTradingAccountKey, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryCFMMCTradingAccountKey = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryCFMMCTradingAccountKey) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryCFMMCTradingAccountKey");
  } else {
    jpQryCFMMCTradingAccountKey = (void *) pQryCFMMCTradingAccountKey; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryCFMMCTradingAccountKey(jpQryCFMMCTradingAccountKey, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryEWarrantOffset(CThostFtdcQryEWarrantOffsetField *pQryEWarrantOffset, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryEWarrantOffset = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryEWarrantOffset) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryEWarrantOffset");
  } else {
    jpQryEWarrantOffset = (void *) pQryEWarrantOffset; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryEWarrantOffset(jpQryEWarrantOffset, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryInvestorProductGroupMargin(CThostFtdcQryInvestorProductGroupMarginField *pQryInvestorProductGroupMargin, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryInvestorProductGroupMargin = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryInvestorProductGroupMargin) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryInvestorProductGroupMargin");
  } else {
    jpQryInvestorProductGroupMargin = (void *) pQryInvestorProductGroupMargin; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryInvestorProductGroupMargin(jpQryInvestorProductGroupMargin, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryExchangeMarginRate(CThostFtdcQryExchangeMarginRateField *pQryExchangeMarginRate, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryExchangeMarginRate = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryExchangeMarginRate) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryExchangeMarginRate");
  } else {
    jpQryExchangeMarginRate = (void *) pQryExchangeMarginRate; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryExchangeMarginRate(jpQryExchangeMarginRate, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryExchangeMarginRateAdjust(CThostFtdcQryExchangeMarginRateAdjustField *pQryExchangeMarginRateAdjust, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryExchangeMarginRateAdjust = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryExchangeMarginRateAdjust) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryExchangeMarginRateAdjust");
  } else {
    jpQryExchangeMarginRateAdjust = (void *) pQryExchangeMarginRateAdjust; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryExchangeMarginRateAdjust(jpQryExchangeMarginRateAdjust, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryExchangeRate(CThostFtdcQryExchangeRateField *pQryExchangeRate, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryExchangeRate = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryExchangeRate) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryExchangeRate");
  } else {
    jpQryExchangeRate = (void *) pQryExchangeRate; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryExchangeRate(jpQryExchangeRate, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQrySecAgentACIDMap(CThostFtdcQrySecAgentACIDMapField *pQrySecAgentACIDMap, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQrySecAgentACIDMap = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQrySecAgentACIDMap) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQrySecAgentACIDMap");
  } else {
    jpQrySecAgentACIDMap = (void *) pQrySecAgentACIDMap; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQrySecAgentACIDMap(jpQrySecAgentACIDMap, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryProductExchRate(CThostFtdcQryProductExchRateField *pQryProductExchRate, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryProductExchRate = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryProductExchRate) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryProductExchRate");
  } else {
    jpQryProductExchRate = (void *) pQryProductExchRate; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryProductExchRate(jpQryProductExchRate, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryOptionInstrTradeCost(CThostFtdcQryOptionInstrTradeCostField *pQryOptionInstrTradeCost, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryOptionInstrTradeCost = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryOptionInstrTradeCost) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryOptionInstrTradeCost");
  } else {
    jpQryOptionInstrTradeCost = (void *) pQryOptionInstrTradeCost; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryOptionInstrTradeCost(jpQryOptionInstrTradeCost, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryOptionInstrCommRate(CThostFtdcQryOptionInstrCommRateField *pQryOptionInstrCommRate, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryOptionInstrCommRate = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryOptionInstrCommRate) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryOptionInstrCommRate");
  } else {
    jpQryOptionInstrCommRate = (void *) pQryOptionInstrCommRate; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryOptionInstrCommRate(jpQryOptionInstrCommRate, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryExecOrder(CThostFtdcQryExecOrderField *pQryExecOrder, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryExecOrder = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryExecOrder) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryExecOrder");
  } else {
    jpQryExecOrder = (void *) pQryExecOrder; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryExecOrder(jpQryExecOrder, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryForQuote(CThostFtdcQryForQuoteField *pQryForQuote, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryForQuote = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryForQuote) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryForQuote");
  } else {
    jpQryForQuote = (void *) pQryForQuote; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryForQuote(jpQryForQuote, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryQuote(CThostFtdcQryQuoteField *pQryQuote, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryQuote = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryQuote) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryQuote");
  } else {
    jpQryQuote = (void *) pQryQuote; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryQuote(jpQryQuote, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryCombInstrumentGuard(CThostFtdcQryCombInstrumentGuardField *pQryCombInstrumentGuard, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryCombInstrumentGuard = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryCombInstrumentGuard) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryCombInstrumentGuard");
  } else {
    jpQryCombInstrumentGuard = (void *) pQryCombInstrumentGuard; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryCombInstrumentGuard(jpQryCombInstrumentGuard, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryCombAction(CThostFtdcQryCombActionField *pQryCombAction, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryCombAction = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryCombAction) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryCombAction");
  } else {
    jpQryCombAction = (void *) pQryCombAction; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryCombAction(jpQryCombAction, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryTransferSerial(CThostFtdcQryTransferSerialField *pQryTransferSerial, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryTransferSerial = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryTransferSerial) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryTransferSerial");
  } else {
    jpQryTransferSerial = (void *) pQryTransferSerial; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryTransferSerial(jpQryTransferSerial, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryAccountregister(CThostFtdcQryAccountregisterField *pQryAccountregister, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryAccountregister = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryAccountregister) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryAccountregister");
  } else {
    jpQryAccountregister = (void *) pQryAccountregister; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryAccountregister(jpQryAccountregister, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryContractBank(CThostFtdcQryContractBankField *pQryContractBank, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryContractBank = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryContractBank) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryContractBank");
  } else {
    jpQryContractBank = (void *) pQryContractBank; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryContractBank(jpQryContractBank, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryParkedOrder(CThostFtdcQryParkedOrderField *pQryParkedOrder, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryParkedOrder = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryParkedOrder) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryParkedOrder");
  } else {
    jpQryParkedOrder = (void *) pQryParkedOrder; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryParkedOrder(jpQryParkedOrder, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryParkedOrderAction(CThostFtdcQryParkedOrderActionField *pQryParkedOrderAction, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryParkedOrderAction = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryParkedOrderAction) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryParkedOrderAction");
  } else {
    jpQryParkedOrderAction = (void *) pQryParkedOrderAction; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryParkedOrderAction(jpQryParkedOrderAction, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryTradingNotice(CThostFtdcQryTradingNoticeField *pQryTradingNotice, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryTradingNotice = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryTradingNotice) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryTradingNotice");
  } else {
    jpQryTradingNotice = (void *) pQryTradingNotice; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryTradingNotice(jpQryTradingNotice, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryBrokerTradingParams(CThostFtdcQryBrokerTradingParamsField *pQryBrokerTradingParams, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryBrokerTradingParams = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryBrokerTradingParams) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryBrokerTradingParams");
  } else {
    jpQryBrokerTradingParams = (void *) pQryBrokerTradingParams; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryBrokerTradingParams(jpQryBrokerTradingParams, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQryBrokerTradingAlgos(CThostFtdcQryBrokerTradingAlgosField *pQryBrokerTradingAlgos, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQryBrokerTradingAlgos = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQryBrokerTradingAlgos) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQryBrokerTradingAlgos");
  } else {
    jpQryBrokerTradingAlgos = (void *) pQryBrokerTradingAlgos; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQryBrokerTradingAlgos(jpQryBrokerTradingAlgos, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQueryCFMMCTradingAccountToken(CThostFtdcQueryCFMMCTradingAccountTokenField *pQueryCFMMCTradingAccountToken, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpQueryCFMMCTradingAccountToken = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQueryCFMMCTradingAccountToken) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQueryCFMMCTradingAccountToken");
  } else {
    jpQueryCFMMCTradingAccountToken = (void *) pQueryCFMMCTradingAccountToken; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQueryCFMMCTradingAccountToken(jpQueryCFMMCTradingAccountToken, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqFromBankToFutureByFuture(CThostFtdcReqTransferField *pReqTransfer, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpReqTransfer = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqFromBankToFutureByFuture) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqFromBankToFutureByFuture");
  } else {
    jpReqTransfer = (void *) pReqTransfer; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqFromBankToFutureByFuture(jpReqTransfer, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqFromFutureToBankByFuture(CThostFtdcReqTransferField *pReqTransfer, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpReqTransfer = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqFromFutureToBankByFuture) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqFromFutureToBankByFuture");
  } else {
    jpReqTransfer = (void *) pReqTransfer; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqFromFutureToBankByFuture(jpReqTransfer, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

int SwigDirector_CThostFtdcTraderApi::ReqQueryBankAccountMoneyByFuture(CThostFtdcReqQueryAccountField *pReqQueryAccount, int nRequestID) {
  int c_result = SwigValueInit< int >() ;
  int jresult = 0 ;
  void * jpReqQueryAccount = 0 ;
  int jnRequestID  ;
  
  if (!swig_callbackReqQueryBankAccountMoneyByFuture) {
    throw Swig::DirectorPureVirtualException("CThostFtdcTraderApi::ReqQueryBankAccountMoneyByFuture");
  } else {
    jpReqQueryAccount = (void *) pReqQueryAccount; 
    jnRequestID = nRequestID;
    jresult = (int) swig_callbackReqQueryBankAccountMoneyByFuture(jpReqQueryAccount, jnRequestID);
    c_result = (int)jresult; 
  }
  return c_result;
}

void SwigDirector_CThostFtdcTraderApi::swig_connect_director(SWIG_Callback0_t callbackRelease, SWIG_Callback1_t callbackInit, SWIG_Callback2_t callbackJoin, SWIG_Callback3_t callbackGetTradingDay, SWIG_Callback4_t callbackRegisterFront, SWIG_Callback5_t callbackRegisterNameServer, SWIG_Callback6_t callbackRegisterFensUserInfo, SWIG_Callback7_t callbackRegisterSpi, SWIG_Callback8_t callbackSubscribePrivateTopic, SWIG_Callback9_t callbackSubscribePublicTopic, SWIG_Callback10_t callbackReqAuthenticate, SWIG_Callback11_t callbackReqUserLogin, SWIG_Callback12_t callbackReqUserLogout, SWIG_Callback13_t callbackReqUserPasswordUpdate, SWIG_Callback14_t callbackReqTradingAccountPasswordUpdate, SWIG_Callback15_t callbackReqOrderInsert, SWIG_Callback16_t callbackReqParkedOrderInsert, SWIG_Callback17_t callbackReqParkedOrderAction, SWIG_Callback18_t callbackReqOrderAction, SWIG_Callback19_t callbackReqQueryMaxOrderVolume, SWIG_Callback20_t callbackReqSettlementInfoConfirm, SWIG_Callback21_t callbackReqRemoveParkedOrder, SWIG_Callback22_t callbackReqRemoveParkedOrderAction, SWIG_Callback23_t callbackReqExecOrderInsert, SWIG_Callback24_t callbackReqExecOrderAction, SWIG_Callback25_t callbackReqForQuoteInsert, SWIG_Callback26_t callbackReqQuoteInsert, SWIG_Callback27_t callbackReqQuoteAction, SWIG_Callback28_t callbackReqCombActionInsert, SWIG_Callback29_t callbackReqQryOrder, SWIG_Callback30_t callbackReqQryTrade, SWIG_Callback31_t callbackReqQryInvestorPosition, SWIG_Callback32_t callbackReqQryTradingAccount, SWIG_Callback33_t callbackReqQryInvestor, SWIG_Callback34_t callbackReqQryTradingCode, SWIG_Callback35_t callbackReqQryInstrumentMarginRate, SWIG_Callback36_t callbackReqQryInstrumentCommissionRate, SWIG_Callback37_t callbackReqQryExchange, SWIG_Callback38_t callbackReqQryProduct, SWIG_Callback39_t callbackReqQryInstrument, SWIG_Callback40_t callbackReqQryDepthMarketData, SWIG_Callback41_t callbackReqQrySettlementInfo, SWIG_Callback42_t callbackReqQryTransferBank, SWIG_Callback43_t callbackReqQryInvestorPositionDetail, SWIG_Callback44_t callbackReqQryNotice, SWIG_Callback45_t callbackReqQrySettlementInfoConfirm, SWIG_Callback46_t callbackReqQryInvestorPositionCombineDetail, SWIG_Callback47_t callbackReqQryCFMMCTradingAccountKey, SWIG_Callback48_t callbackReqQryEWarrantOffset, SWIG_Callback49_t callbackReqQryInvestorProductGroupMargin, SWIG_Callback50_t callbackReqQryExchangeMarginRate, SWIG_Callback51_t callbackReqQryExchangeMarginRateAdjust, SWIG_Callback52_t callbackReqQryExchangeRate, SWIG_Callback53_t callbackReqQrySecAgentACIDMap, SWIG_Callback54_t callbackReqQryProductExchRate, SWIG_Callback55_t callbackReqQryOptionInstrTradeCost, SWIG_Callback56_t callbackReqQryOptionInstrCommRate, SWIG_Callback57_t callbackReqQryExecOrder, SWIG_Callback58_t callbackReqQryForQuote, SWIG_Callback59_t callbackReqQryQuote, SWIG_Callback60_t callbackReqQryCombInstrumentGuard, SWIG_Callback61_t callbackReqQryCombAction, SWIG_Callback62_t callbackReqQryTransferSerial, SWIG_Callback63_t callbackReqQryAccountregister, SWIG_Callback64_t callbackReqQryContractBank, SWIG_Callback65_t callbackReqQryParkedOrder, SWIG_Callback66_t callbackReqQryParkedOrderAction, SWIG_Callback67_t callbackReqQryTradingNotice, SWIG_Callback68_t callbackReqQryBrokerTradingParams, SWIG_Callback69_t callbackReqQryBrokerTradingAlgos, SWIG_Callback70_t callbackReqQueryCFMMCTradingAccountToken, SWIG_Callback71_t callbackReqFromBankToFutureByFuture, SWIG_Callback72_t callbackReqFromFutureToBankByFuture, SWIG_Callback73_t callbackReqQueryBankAccountMoneyByFuture) {
  swig_callbackRelease = callbackRelease;
  swig_callbackInit = callbackInit;
  swig_callbackJoin = callbackJoin;
  swig_callbackGetTradingDay = callbackGetTradingDay;
  swig_callbackRegisterFront = callbackRegisterFront;
  swig_callbackRegisterNameServer = callbackRegisterNameServer;
  swig_callbackRegisterFensUserInfo = callbackRegisterFensUserInfo;
  swig_callbackRegisterSpi = callbackRegisterSpi;
  swig_callbackSubscribePrivateTopic = callbackSubscribePrivateTopic;
  swig_callbackSubscribePublicTopic = callbackSubscribePublicTopic;
  swig_callbackReqAuthenticate = callbackReqAuthenticate;
  swig_callbackReqUserLogin = callbackReqUserLogin;
  swig_callbackReqUserLogout = callbackReqUserLogout;
  swig_callbackReqUserPasswordUpdate = callbackReqUserPasswordUpdate;
  swig_callbackReqTradingAccountPasswordUpdate = callbackReqTradingAccountPasswordUpdate;
  swig_callbackReqOrderInsert = callbackReqOrderInsert;
  swig_callbackReqParkedOrderInsert = callbackReqParkedOrderInsert;
  swig_callbackReqParkedOrderAction = callbackReqParkedOrderAction;
  swig_callbackReqOrderAction = callbackReqOrderAction;
  swig_callbackReqQueryMaxOrderVolume = callbackReqQueryMaxOrderVolume;
  swig_callbackReqSettlementInfoConfirm = callbackReqSettlementInfoConfirm;
  swig_callbackReqRemoveParkedOrder = callbackReqRemoveParkedOrder;
  swig_callbackReqRemoveParkedOrderAction = callbackReqRemoveParkedOrderAction;
  swig_callbackReqExecOrderInsert = callbackReqExecOrderInsert;
  swig_callbackReqExecOrderAction = callbackReqExecOrderAction;
  swig_callbackReqForQuoteInsert = callbackReqForQuoteInsert;
  swig_callbackReqQuoteInsert = callbackReqQuoteInsert;
  swig_callbackReqQuoteAction = callbackReqQuoteAction;
  swig_callbackReqCombActionInsert = callbackReqCombActionInsert;
  swig_callbackReqQryOrder = callbackReqQryOrder;
  swig_callbackReqQryTrade = callbackReqQryTrade;
  swig_callbackReqQryInvestorPosition = callbackReqQryInvestorPosition;
  swig_callbackReqQryTradingAccount = callbackReqQryTradingAccount;
  swig_callbackReqQryInvestor = callbackReqQryInvestor;
  swig_callbackReqQryTradingCode = callbackReqQryTradingCode;
  swig_callbackReqQryInstrumentMarginRate = callbackReqQryInstrumentMarginRate;
  swig_callbackReqQryInstrumentCommissionRate = callbackReqQryInstrumentCommissionRate;
  swig_callbackReqQryExchange = callbackReqQryExchange;
  swig_callbackReqQryProduct = callbackReqQryProduct;
  swig_callbackReqQryInstrument = callbackReqQryInstrument;
  swig_callbackReqQryDepthMarketData = callbackReqQryDepthMarketData;
  swig_callbackReqQrySettlementInfo = callbackReqQrySettlementInfo;
  swig_callbackReqQryTransferBank = callbackReqQryTransferBank;
  swig_callbackReqQryInvestorPositionDetail = callbackReqQryInvestorPositionDetail;
  swig_callbackReqQryNotice = callbackReqQryNotice;
  swig_callbackReqQrySettlementInfoConfirm = callbackReqQrySettlementInfoConfirm;
  swig_callbackReqQryInvestorPositionCombineDetail = callbackReqQryInvestorPositionCombineDetail;
  swig_callbackReqQryCFMMCTradingAccountKey = callbackReqQryCFMMCTradingAccountKey;
  swig_callbackReqQryEWarrantOffset = callbackReqQryEWarrantOffset;
  swig_callbackReqQryInvestorProductGroupMargin = callbackReqQryInvestorProductGroupMargin;
  swig_callbackReqQryExchangeMarginRate = callbackReqQryExchangeMarginRate;
  swig_callbackReqQryExchangeMarginRateAdjust = callbackReqQryExchangeMarginRateAdjust;
  swig_callbackReqQryExchangeRate = callbackReqQryExchangeRate;
  swig_callbackReqQrySecAgentACIDMap = callbackReqQrySecAgentACIDMap;
  swig_callbackReqQryProductExchRate = callbackReqQryProductExchRate;
  swig_callbackReqQryOptionInstrTradeCost = callbackReqQryOptionInstrTradeCost;
  swig_callbackReqQryOptionInstrCommRate = callbackReqQryOptionInstrCommRate;
  swig_callbackReqQryExecOrder = callbackReqQryExecOrder;
  swig_callbackReqQryForQuote = callbackReqQryForQuote;
  swig_callbackReqQryQuote = callbackReqQryQuote;
  swig_callbackReqQryCombInstrumentGuard = callbackReqQryCombInstrumentGuard;
  swig_callbackReqQryCombAction = callbackReqQryCombAction;
  swig_callbackReqQryTransferSerial = callbackReqQryTransferSerial;
  swig_callbackReqQryAccountregister = callbackReqQryAccountregister;
  swig_callbackReqQryContractBank = callbackReqQryContractBank;
  swig_callbackReqQryParkedOrder = callbackReqQryParkedOrder;
  swig_callbackReqQryParkedOrderAction = callbackReqQryParkedOrderAction;
  swig_callbackReqQryTradingNotice = callbackReqQryTradingNotice;
  swig_callbackReqQryBrokerTradingParams = callbackReqQryBrokerTradingParams;
  swig_callbackReqQryBrokerTradingAlgos = callbackReqQryBrokerTradingAlgos;
  swig_callbackReqQueryCFMMCTradingAccountToken = callbackReqQueryCFMMCTradingAccountToken;
  swig_callbackReqFromBankToFutureByFuture = callbackReqFromBankToFutureByFuture;
  swig_callbackReqFromFutureToBankByFuture = callbackReqFromFutureToBankByFuture;
  swig_callbackReqQueryBankAccountMoneyByFuture = callbackReqQueryBankAccountMoneyByFuture;
}

void SwigDirector_CThostFtdcTraderApi::swig_init_callbacks() {
  swig_callbackRelease = 0;
  swig_callbackInit = 0;
  swig_callbackJoin = 0;
  swig_callbackGetTradingDay = 0;
  swig_callbackRegisterFront = 0;
  swig_callbackRegisterNameServer = 0;
  swig_callbackRegisterFensUserInfo = 0;
  swig_callbackRegisterSpi = 0;
  swig_callbackSubscribePrivateTopic = 0;
  swig_callbackSubscribePublicTopic = 0;
  swig_callbackReqAuthenticate = 0;
  swig_callbackReqUserLogin = 0;
  swig_callbackReqUserLogout = 0;
  swig_callbackReqUserPasswordUpdate = 0;
  swig_callbackReqTradingAccountPasswordUpdate = 0;
  swig_callbackReqOrderInsert = 0;
  swig_callbackReqParkedOrderInsert = 0;
  swig_callbackReqParkedOrderAction = 0;
  swig_callbackReqOrderAction = 0;
  swig_callbackReqQueryMaxOrderVolume = 0;
  swig_callbackReqSettlementInfoConfirm = 0;
  swig_callbackReqRemoveParkedOrder = 0;
  swig_callbackReqRemoveParkedOrderAction = 0;
  swig_callbackReqExecOrderInsert = 0;
  swig_callbackReqExecOrderAction = 0;
  swig_callbackReqForQuoteInsert = 0;
  swig_callbackReqQuoteInsert = 0;
  swig_callbackReqQuoteAction = 0;
  swig_callbackReqCombActionInsert = 0;
  swig_callbackReqQryOrder = 0;
  swig_callbackReqQryTrade = 0;
  swig_callbackReqQryInvestorPosition = 0;
  swig_callbackReqQryTradingAccount = 0;
  swig_callbackReqQryInvestor = 0;
  swig_callbackReqQryTradingCode = 0;
  swig_callbackReqQryInstrumentMarginRate = 0;
  swig_callbackReqQryInstrumentCommissionRate = 0;
  swig_callbackReqQryExchange = 0;
  swig_callbackReqQryProduct = 0;
  swig_callbackReqQryInstrument = 0;
  swig_callbackReqQryDepthMarketData = 0;
  swig_callbackReqQrySettlementInfo = 0;
  swig_callbackReqQryTransferBank = 0;
  swig_callbackReqQryInvestorPositionDetail = 0;
  swig_callbackReqQryNotice = 0;
  swig_callbackReqQrySettlementInfoConfirm = 0;
  swig_callbackReqQryInvestorPositionCombineDetail = 0;
  swig_callbackReqQryCFMMCTradingAccountKey = 0;
  swig_callbackReqQryEWarrantOffset = 0;
  swig_callbackReqQryInvestorProductGroupMargin = 0;
  swig_callbackReqQryExchangeMarginRate = 0;
  swig_callbackReqQryExchangeMarginRateAdjust = 0;
  swig_callbackReqQryExchangeRate = 0;
  swig_callbackReqQrySecAgentACIDMap = 0;
  swig_callbackReqQryProductExchRate = 0;
  swig_callbackReqQryOptionInstrTradeCost = 0;
  swig_callbackReqQryOptionInstrCommRate = 0;
  swig_callbackReqQryExecOrder = 0;
  swig_callbackReqQryForQuote = 0;
  swig_callbackReqQryQuote = 0;
  swig_callbackReqQryCombInstrumentGuard = 0;
  swig_callbackReqQryCombAction = 0;
  swig_callbackReqQryTransferSerial = 0;
  swig_callbackReqQryAccountregister = 0;
  swig_callbackReqQryContractBank = 0;
  swig_callbackReqQryParkedOrder = 0;
  swig_callbackReqQryParkedOrderAction = 0;
  swig_callbackReqQryTradingNotice = 0;
  swig_callbackReqQryBrokerTradingParams = 0;
  swig_callbackReqQryBrokerTradingAlgos = 0;
  swig_callbackReqQueryCFMMCTradingAccountToken = 0;
  swig_callbackReqFromBankToFutureByFuture = 0;
  swig_callbackReqFromFutureToBankByFuture = 0;
  swig_callbackReqQueryBankAccountMoneyByFuture = 0;
}


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EXP_Normal_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EXP_GenOrderByTrade_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ICT_EID_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ICT_IDCard_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ICT_OfficerIDCard_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ICT_PoliceIDCard_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ICT_SoldierIDCard_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ICT_HouseholdRegister_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ICT_Passport_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ICT_TaiwanCompatriotIDCard_get___() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ICT_HomeComingCard_get___() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ICT_LicenseNo_get___() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ICT_TaxNo_get___() {
  char jresult ;
  char result;
  
  result = (char)('A');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ICT_HMMainlandTravelPermit_get___() {
  char jresult ;
  char result;
  
  result = (char)('B');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ICT_TwMainlandTravelPermit_get___() {
  char jresult ;
  char result;
  
  result = (char)('C');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ICT_DrivingLicense_get___() {
  char jresult ;
  char result;
  
  result = (char)('D');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ICT_SocialID_get___() {
  char jresult ;
  char result;
  
  result = (char)('F');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ICT_LocalID_get___() {
  char jresult ;
  char result;
  
  result = (char)('G');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ICT_BusinessRegistration_get___() {
  char jresult ;
  char result;
  
  result = (char)('H');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ICT_HKMCIDCard_get___() {
  char jresult ;
  char result;
  
  result = (char)('I');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ICT_AccountsPermits_get___() {
  char jresult ;
  char result;
  
  result = (char)('J');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ICT_OtherCard_get___() {
  char jresult ;
  char result;
  
  result = (char)('x');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_IR_All_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_IR_Group_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_IR_Single_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_DR_All_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_DR_Group_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_DR_Single_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_DS_Asynchronous_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_DS_Synchronizing_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_DS_Synchronized_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BDS_Synchronized_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BDS_Synchronizing_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ECS_NoConnection_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ECS_QryInstrumentSent_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ECS_GotInformation_get___() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TCS_NotConnected_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TCS_Connected_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TCS_QryInstrumentSent_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TCS_SubPrivateFlow_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FC_DataAsync_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FC_ForceUserLogout_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FC_UserPasswordUpdate_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FC_BrokerPasswordUpdate_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FC_InvestorPasswordUpdate_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FC_OrderInsert_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FC_OrderAction_get___() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FC_SyncSystemData_get___() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FC_SyncBrokerData_get___() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FC_BachSyncBrokerData_get___() {
  char jresult ;
  char result;
  
  result = (char)('A');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FC_SuperQuery_get___() {
  char jresult ;
  char result;
  
  result = (char)('B');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FC_ParkedOrderInsert_get___() {
  char jresult ;
  char result;
  
  result = (char)('C');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FC_ParkedOrderAction_get___() {
  char jresult ;
  char result;
  
  result = (char)('D');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FC_SyncOTP_get___() {
  char jresult ;
  char result;
  
  result = (char)('E');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FC_DeleteOrder_get___() {
  char jresult ;
  char result;
  
  result = (char)('F');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_ForceUserLogout_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_UserPasswordUpdate_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_SyncBrokerData_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_BachSyncBrokerData_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_OrderInsert_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_OrderAction_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_AllQuery_get___() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_log_get___() {
  char jresult ;
  char result;
  
  result = (char)('a');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_BaseQry_get___() {
  char jresult ;
  char result;
  
  result = (char)('b');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_TradeQry_get___() {
  char jresult ;
  char result;
  
  result = (char)('c');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_Trade_get___() {
  char jresult ;
  char result;
  
  result = (char)('d');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_Virement_get___() {
  char jresult ;
  char result;
  
  result = (char)('e');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_Risk_get___() {
  char jresult ;
  char result;
  
  result = (char)('f');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_Session_get___() {
  char jresult ;
  char result;
  
  result = (char)('g');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_RiskNoticeCtl_get___() {
  char jresult ;
  char result;
  
  result = (char)('h');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_RiskNotice_get___() {
  char jresult ;
  char result;
  
  result = (char)('i');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_BrokerDeposit_get___() {
  char jresult ;
  char result;
  
  result = (char)('j');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_QueryFund_get___() {
  char jresult ;
  char result;
  
  result = (char)('k');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_QueryOrder_get___() {
  char jresult ;
  char result;
  
  result = (char)('l');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_QueryTrade_get___() {
  char jresult ;
  char result;
  
  result = (char)('m');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_QueryPosition_get___() {
  char jresult ;
  char result;
  
  result = (char)('n');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_QueryMarketData_get___() {
  char jresult ;
  char result;
  
  result = (char)('o');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_QueryUserEvent_get___() {
  char jresult ;
  char result;
  
  result = (char)('p');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_QueryRiskNotify_get___() {
  char jresult ;
  char result;
  
  result = (char)('q');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_QueryFundChange_get___() {
  char jresult ;
  char result;
  
  result = (char)('r');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_QueryInvestor_get___() {
  char jresult ;
  char result;
  
  result = (char)('s');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_QueryTradingCode_get___() {
  char jresult ;
  char result;
  
  result = (char)('t');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_ForceClose_get___() {
  char jresult ;
  char result;
  
  result = (char)('u');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_PressTest_get___() {
  char jresult ;
  char result;
  
  result = (char)('v');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_RemainCalc_get___() {
  char jresult ;
  char result;
  
  result = (char)('w');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_NetPositionInd_get___() {
  char jresult ;
  char result;
  
  result = (char)('x');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_RiskPredict_get___() {
  char jresult ;
  char result;
  
  result = (char)('y');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_DataExport_get___() {
  char jresult ;
  char result;
  
  result = (char)('z');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_RiskTargetSetup_get___() {
  char jresult ;
  char result;
  
  result = (char)('A');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_MarketDataWarn_get___() {
  char jresult ;
  char result;
  
  result = (char)('B');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_QryBizNotice_get___() {
  char jresult ;
  char result;
  
  result = (char)('C');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_CfgBizNotice_get___() {
  char jresult ;
  char result;
  
  result = (char)('D');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_SyncOTP_get___() {
  char jresult ;
  char result;
  
  result = (char)('E');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_SendBizNotice_get___() {
  char jresult ;
  char result;
  
  result = (char)('F');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_CfgRiskLevelStd_get___() {
  char jresult ;
  char result;
  
  result = (char)('G');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_TbCommand_get___() {
  char jresult ;
  char result;
  
  result = (char)('H');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_DeleteOrder_get___() {
  char jresult ;
  char result;
  
  result = (char)('J');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_ParkedOrderInsert_get___() {
  char jresult ;
  char result;
  
  result = (char)('K');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BFC_ParkedOrderAction_get___() {
  char jresult ;
  char result;
  
  result = (char)('L');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OAS_Submitted_get___() {
  char jresult ;
  char result;
  
  result = (char)('a');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OAS_Accepted_get___() {
  char jresult ;
  char result;
  
  result = (char)('b');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OAS_Rejected_get___() {
  char jresult ;
  char result;
  
  result = (char)('c');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OST_AllTraded_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OST_PartTradedQueueing_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OST_PartTradedNotQueueing_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OST_NoTradeQueueing_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OST_NoTradeNotQueueing_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OST_Canceled_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OST_Unknown_get___() {
  char jresult ;
  char result;
  
  result = (char)('a');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OST_NotTouched_get___() {
  char jresult ;
  char result;
  
  result = (char)('b');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OST_Touched_get___() {
  char jresult ;
  char result;
  
  result = (char)('c');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OSS_InsertSubmitted_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OSS_CancelSubmitted_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OSS_ModifySubmitted_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OSS_Accepted_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OSS_InsertRejected_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OSS_CancelRejected_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OSS_ModifyRejected_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PSD_Today_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PSD_History_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PDT_UseHistory_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PDT_NoUseHistory_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ER_Broker_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ER_Host_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ER_Maker_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PC_Futures_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PC_Options_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PC_Combination_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PC_Spot_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PC_EFP_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PC_SpotOption_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_IP_NotStart_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_IP_Started_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_IP_Pause_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_IP_Expired_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_D_Buy_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_D_Sell_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PT_Net_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PT_Gross_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PD_Net_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PD_Long_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PD_Short_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SS_NonActive_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SS_Startup_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SS_Operating_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SS_Settlement_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SS_SettlementFinished_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RA_Trade_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RA_Settlement_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_HF_Speculation_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_HF_Arbitrage_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_HF_Hedge_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BHF_Speculation_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BHF_Arbitrage_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BHF_Hedge_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CIDT_Speculation_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CIDT_Arbitrage_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CIDT_Hedge_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OPT_AnyPrice_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OPT_LimitPrice_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OPT_BestPrice_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OPT_LastPrice_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OPT_LastPricePlusOneTicks_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OPT_LastPricePlusTwoTicks_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OPT_LastPricePlusThreeTicks_get___() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OPT_AskPrice1_get___() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OPT_AskPrice1PlusOneTicks_get___() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OPT_AskPrice1PlusTwoTicks_get___() {
  char jresult ;
  char result;
  
  result = (char)('A');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OPT_AskPrice1PlusThreeTicks_get___() {
  char jresult ;
  char result;
  
  result = (char)('B');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OPT_BidPrice1_get___() {
  char jresult ;
  char result;
  
  result = (char)('C');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OPT_BidPrice1PlusOneTicks_get___() {
  char jresult ;
  char result;
  
  result = (char)('D');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OPT_BidPrice1PlusTwoTicks_get___() {
  char jresult ;
  char result;
  
  result = (char)('E');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OPT_BidPrice1PlusThreeTicks_get___() {
  char jresult ;
  char result;
  
  result = (char)('F');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OPT_FiveLevelPrice_get___() {
  char jresult ;
  char result;
  
  result = (char)('G');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OF_Open_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OF_Close_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OF_ForceClose_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OF_CloseToday_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OF_CloseYesterday_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OF_ForceOff_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OF_LocalForceClose_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FCC_NotForceClose_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FCC_LackDeposit_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FCC_ClientOverPositionLimit_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FCC_MemberOverPositionLimit_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FCC_NotMultiple_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FCC_Violation_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FCC_Other_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FCC_PersonDeliv_get___() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ORDT_Normal_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ORDT_DeriveFromQuote_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ORDT_DeriveFromCombination_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ORDT_Combination_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ORDT_ConditionalOrder_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ORDT_Swap_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TC_IOC_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TC_GFS_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TC_GFD_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TC_GTD_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TC_GTC_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TC_GFA_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_VC_AV_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_VC_MV_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_VC_CV_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CC_Immediately_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CC_Touch_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CC_TouchProfit_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CC_ParkedOrder_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CC_LastPriceGreaterThanStopPrice_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CC_LastPriceGreaterEqualStopPrice_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CC_LastPriceLesserThanStopPrice_get___() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CC_LastPriceLesserEqualStopPrice_get___() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CC_AskPriceGreaterThanStopPrice_get___() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CC_AskPriceGreaterEqualStopPrice_get___() {
  char jresult ;
  char result;
  
  result = (char)('A');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CC_AskPriceLesserThanStopPrice_get___() {
  char jresult ;
  char result;
  
  result = (char)('B');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CC_AskPriceLesserEqualStopPrice_get___() {
  char jresult ;
  char result;
  
  result = (char)('C');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CC_BidPriceGreaterThanStopPrice_get___() {
  char jresult ;
  char result;
  
  result = (char)('D');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CC_BidPriceGreaterEqualStopPrice_get___() {
  char jresult ;
  char result;
  
  result = (char)('E');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CC_BidPriceLesserThanStopPrice_get___() {
  char jresult ;
  char result;
  
  result = (char)('F');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CC_BidPriceLesserEqualStopPrice_get___() {
  char jresult ;
  char result;
  
  result = (char)('H');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AF_Delete_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AF_Modify_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TR_Allow_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TR_CloseOnly_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TR_Forbidden_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OSRC_Participant_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OSRC_Administrator_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TRDT_SplitCombination_get___() {
  char jresult ;
  char result;
  
  result = (char)('#');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TRDT_Common_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TRDT_OptionsExecution_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TRDT_OTC_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TRDT_EFPDerived_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TRDT_CombinationDerived_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PSRC_LastPrice_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PSRC_Buy_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PSRC_Sell_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_IS_BeforeTrading_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_IS_NoTrading_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_IS_Continous_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_IS_AuctionOrdering_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_IS_AuctionBalance_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_IS_AuctionMatch_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_IS_Closed_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_IER_Automatic_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_IER_Manual_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_IER_Fuse_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BS_NoUpload_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BS_Uploaded_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BS_Failed_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RS_All_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RS_ByProduct_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RP_ByVolume_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RP_ByFeeOnHand_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RL_Level1_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RL_Level2_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RL_Level3_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RL_Level4_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RL_Level5_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RL_Level6_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RL_Level7_get___() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RL_Level8_get___() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RL_Level9_get___() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RSD_ByPeriod_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RSD_ByStandard_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_MT_Out_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_MT_In_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ISPI_MortgageRatio_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ISPI_MarginWay_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ISPI_BillDeposit_get___() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ESPI_MortgageRatio_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ESPI_OtherFundItem_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ESPI_OtherFundImport_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ESPI_CFFEXMinPrepa_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ESPI_CZCESettlementType_get___() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ESPI_ExchDelivFeeMode_get___() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ESPI_DelivFeeMode_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ESPI_CZCEComMarginType_get___() {
  char jresult ;
  char result;
  
  result = (char)('A');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ESPI_DceComMarginType_get___() {
  char jresult ;
  char result;
  
  result = (char)('B');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ESPI_OptOutDisCountRate_get___() {
  char jresult ;
  char result;
  
  result = (char)('a');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ESPI_OptMiniGuarantee_get___() {
  char jresult ;
  char result;
  
  result = (char)('b');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPI_InvestorIDMinLength_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPI_AccountIDMinLength_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPI_UserRightLogon_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPI_SettlementBillTrade_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPI_TradingCode_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPI_CheckFund_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPI_CommModelRight_get___() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPI_MarginModelRight_get___() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPI_IsStandardActive_get___() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPI_UploadSettlementFile_get___() {
  char jresult ;
  char result;
  
  result = (char)('U');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPI_DownloadCSRCFile_get___() {
  char jresult ;
  char result;
  
  result = (char)('D');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPI_SettlementBillFile_get___() {
  char jresult ;
  char result;
  
  result = (char)('S');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPI_CSRCOthersFile_get___() {
  char jresult ;
  char result;
  
  result = (char)('C');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPI_InvestorPhoto_get___() {
  char jresult ;
  char result;
  
  result = (char)('P');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPI_CSRCData_get___() {
  char jresult ;
  char result;
  
  result = (char)('R');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPI_InvestorPwdModel_get___() {
  char jresult ;
  char result;
  
  result = (char)('I');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPI_CFFEXInvestorSettleFile_get___() {
  char jresult ;
  char result;
  
  result = (char)('F');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPI_InvestorIDType_get___() {
  char jresult ;
  char result;
  
  result = (char)('a');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPI_FreezeMaxReMain_get___() {
  char jresult ;
  char result;
  
  result = (char)('r');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPI_IsSync_get___() {
  char jresult ;
  char result;
  
  result = (char)('A');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPI_RelieveOpenLimit_get___() {
  char jresult ;
  char result;
  
  result = (char)('O');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPI_IsStandardFreeze_get___() {
  char jresult ;
  char result;
  
  result = (char)('X');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPI_CZCENormalProductHedge_get___() {
  char jresult ;
  char result;
  
  result = (char)('B');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TPID_EncryptionStandard_get___() {
  char jresult ;
  char result;
  
  result = (char)('E');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TPID_RiskMode_get___() {
  char jresult ;
  char result;
  
  result = (char)('R');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TPID_RiskModeGlobal_get___() {
  char jresult ;
  char result;
  
  result = (char)('G');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TPID_modeEncode_get___() {
  char jresult ;
  char result;
  
  result = (char)('P');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TPID_tickMode_get___() {
  char jresult ;
  char result;
  
  result = (char)('T');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TPID_SingleUserSessionMaxNum_get___() {
  char jresult ;
  char result;
  
  result = (char)('S');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TPID_LoginFailMaxNum_get___() {
  char jresult ;
  char result;
  
  result = (char)('L');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TPID_IsAuthForce_get___() {
  char jresult ;
  char result;
  
  result = (char)('A');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FI_SettlementFund_get___() {
  char jresult ;
  char result;
  
  result = (char)('F');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FI_Trade_get___() {
  char jresult ;
  char result;
  
  result = (char)('T');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FI_InvestorPosition_get___() {
  char jresult ;
  char result;
  
  result = (char)('P');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FI_SubEntryFund_get___() {
  char jresult ;
  char result;
  
  result = (char)('O');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FI_CZCECombinationPos_get___() {
  char jresult ;
  char result;
  
  result = (char)('C');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FI_CSRCData_get___() {
  char jresult ;
  char result;
  
  result = (char)('R');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FI_CZCEClose_get___() {
  char jresult ;
  char result;
  
  result = (char)('L');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FI_CZCENoClose_get___() {
  char jresult ;
  char result;
  
  result = (char)('N');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FI_PositionDtl_get___() {
  char jresult ;
  char result;
  
  result = (char)('D');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FI_OptionStrike_get___() {
  char jresult ;
  char result;
  
  result = (char)('S');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FI_SettlementPriceComparison_get___() {
  char jresult ;
  char result;
  
  result = (char)('M');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FI_NonTradePosChange_get___() {
  char jresult ;
  char result;
  
  result = (char)('B');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FUT_Settlement_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FUT_Check_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FFT_Txt_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FFT_Zip_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FFT_DBF_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FUS_SucceedUpload_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FUS_FailedUpload_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FUS_SucceedLoad_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FUS_PartSucceedLoad_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FUS_FailedLoad_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TD_Out_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TD_In_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SC_NoSpecialRule_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SC_NoSpringFestival_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_IPT_LastSettlement_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_IPT_LaseClose_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PLP_Active_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PLP_NonActive_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PLP_Canceled_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_DM_CashDeliv_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_DM_CommodityDeliv_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FIOT_FundIO_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FIOT_Transfer_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FIOT_SwapCurrency_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FT_Deposite_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FT_ItemFund_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FT_Company_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FT_InnerTransfer_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FD_In_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FD_Out_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FS_Record_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FS_Check_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FS_Charge_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PS_None_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PS_Publishing_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PS_Published_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ES_NonActive_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ES_Startup_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ES_Initialize_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ES_Initialized_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ES_Close_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ES_Closed_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ES_Settlement_get___() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_STS_Initialize_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_STS_Settlementing_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_STS_Settlemented_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_STS_Finished_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CT_Person_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CT_Company_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CT_Fund_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CT_SpecialOrgan_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CT_Asset_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BT_Trade_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BT_TradeSettle_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FAS_Low_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FAS_Normal_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FAS_Focus_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FAS_Risk_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FAS_ByTrade_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FAS_ByDeliv_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FAS_None_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FAS_FixFee_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PWDT_Trade_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PWDT_Account_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AG_All_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AG_OnlyLost_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AG_OnlyGain_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AG_None_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ICP_Include_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ICP_NotInclude_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AWT_Enable_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AWT_Disable_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AWT_NoHoldEnable_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FPWD_UnCheck_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FPWD_Check_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TT_BankToFuture_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TT_FutureToBank_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TVF_Invalid_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TVF_Valid_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TVF_Reverse_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RN_CD_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RN_ZT_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RN_QT_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SEX_None_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SEX_Man_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SEX_Woman_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UT_Investor_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UT_Operator_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UT_SuperUser_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RATETYPE_MarginRate_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_NOTETYPE_TradeSettleBill_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_NOTETYPE_TradeSettleMonth_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_NOTETYPE_CallMarginNotes_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_NOTETYPE_ForceCloseNotes_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_NOTETYPE_TradeNotes_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_NOTETYPE_DelivNotes_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SBS_Day_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SBS_Volume_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ST_Day_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ST_Month_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_URT_Logon_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_URT_Transfer_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_URT_EMail_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_URT_Fax_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_URT_ConditionOrder_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_MPT_PreSettlementPrice_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_MPT_SettlementPrice_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_MPT_AveragePrice_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_MPT_OpenPrice_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BGS_None_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BGS_NoGenerated_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BGS_Generated_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AT_HandlePositionAlgo_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AT_FindMarginRateAlgo_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_HPA_Base_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_HPA_DCE_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_HPA_CZCE_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FMRA_Base_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FMRA_DCE_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FMRA_CZCE_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_HTAA_Base_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_HTAA_DCE_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_HTAA_CZCE_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PST_Order_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PST_Open_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PST_Fund_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PST_Settlement_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PST_Company_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PST_Corporation_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PST_LinkMan_get___() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PST_Ledger_get___() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PST_Trustee_get___() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PST_TrusteeCorporation_get___() {
  char jresult ;
  char result;
  
  result = (char)('A');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PST_TrusteeOpen_get___() {
  char jresult ;
  char result;
  
  result = (char)('B');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PST_TrusteeContact_get___() {
  char jresult ;
  char result;
  
  result = (char)('C');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PST_ForeignerRefer_get___() {
  char jresult ;
  char result;
  
  result = (char)('D');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PST_CorporationRefer_get___() {
  char jresult ;
  char result;
  
  result = (char)('E');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_QIR_All_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_QIR_Group_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_QIR_Single_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_IRS_Normal_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_IRS_Warn_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_IRS_Call_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_IRS_Force_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_IRS_Exception_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UET_Login_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UET_Logout_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UET_Trading_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UET_TradingError_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UET_UpdatePassword_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UET_Authenticate_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UET_Other_get___() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ICS_Close_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ICS_CloseToday_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SM_Non_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SM_Instrument_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SM_Product_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SM_Investor_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PAOS_NotSend_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PAOS_Send_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PAOS_Deleted_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_VDS_Dealing_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_VDS_DeaclSucceed_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ORGS_Standard_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ORGS_ESunny_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ORGS_KingStarV6_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_VTS_NaturalDeal_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_VTS_SucceedEnd_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_VTS_FailedEND_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_VTS_Exception_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_VTS_ManualDeal_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_VTS_MesException_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_VTS_SysException_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_VBAT_BankBook_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_VBAT_BankCard_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_VBAT_CreditCard_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_VMS_Natural_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_VMS_Canceled_get___() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_VAA_NoAvailAbility_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_VAA_AvailAbility_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_VAA_Repeal_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_VTC_BankBankToFuture_get___() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("102001");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_VTC_BankFutureToBank_get___() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("102002");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_VTC_FutureBankToFuture_get___() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("202001");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_VTC_FutureFutureToBank_get___() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("202002");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_GEN_Program_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_GEN_HandWork_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CFMMCKK_REQUEST_get___() {
  char jresult ;
  char result;
  
  result = (char)('R');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CFMMCKK_AUTO_get___() {
  char jresult ;
  char result;
  
  result = (char)('A');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CFMMCKK_MANUAL_get___() {
  char jresult ;
  char result;
  
  result = (char)('M');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CFT_IDCard_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CFT_Passport_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CFT_OfficerIDCard_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CFT_SoldierIDCard_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CFT_HomeComingCard_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CFT_HouseholdRegister_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CFT_LicenseNo_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CFT_InstitutionCodeCard_get___() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CFT_TempLicenseNo_get___() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CFT_NoEnterpriseLicenseNo_get___() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CFT_OtherCard_get___() {
  char jresult ;
  char result;
  
  result = (char)('x');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CFT_SuperDepAgree_get___() {
  char jresult ;
  char result;
  
  result = (char)('a');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBC_Others_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBC_TransferDetails_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBC_CustAccStatus_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBC_AccountTradeDetails_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBC_FutureAccountChangeInfoDetails_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBC_CustMoneyDetail_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBC_CustCancelAccountInfo_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBC_CustMoneyResult_get___() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBC_OthersExceptionResult_get___() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBC_CustInterestNetMoneyDetails_get___() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBC_CustMoneySendAndReceiveDetails_get___() {
  char jresult ;
  char result;
  
  result = (char)('a');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBC_CorporationMoneyTotal_get___() {
  char jresult ;
  char result;
  
  result = (char)('b');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBC_MainbodyMoneyTotal_get___() {
  char jresult ;
  char result;
  
  result = (char)('c');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBC_MainPartMonitorData_get___() {
  char jresult ;
  char result;
  
  result = (char)('d');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBC_PreparationMoney_get___() {
  char jresult ;
  char result;
  
  result = (char)('e');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBC_BankMoneyMonitorData_get___() {
  char jresult ;
  char result;
  
  result = (char)('f');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CEC_Exchange_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CEC_Cash_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_YNI_Yes_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_YNI_No_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BLT_CurrentMoney_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BLT_UsableMoney_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BLT_FetchableMoney_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BLT_FreezeMoney_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_GD_Unknown_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_GD_Male_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_GD_Female_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FPF_BEN_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FPF_OUR_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FPF_SHA_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PWKT_ExchangeKey_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PWKT_PassWordKey_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PWKT_MACKey_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PWKT_MessageKey_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PWT_Query_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PWT_Fetch_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PWT_Transfer_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PWT_Trade_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EM_NoEncry_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EM_DES_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EM_3DES_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BRF_BankNotNeedRepeal_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BRF_BankWaitingRepeal_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BRF_BankBeenRepealed_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BRORF_BrokerNotNeedRepeal_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BRORF_BrokerWaitingRepeal_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BRORF_BrokerBeenRepealed_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TS_Bank_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TS_Future_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TS_Store_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_LF_Yes_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_LF_No_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BAS_Normal_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BAS_Freeze_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BAS_ReportLoss_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_MAS_Normal_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_MAS_Cancel_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_MSS_Point_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_MSS_PrePoint_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_MSS_CancelPoint_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SYT_FutureBankTransfer_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SYT_StockBankTransfer_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SYT_TheThirdPartStore_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TEF_NormalProcessing_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TEF_Success_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TEF_Failed_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TEF_Abnormal_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TEF_ManualProcessedForException_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TEF_CommuFailedNeedManualProcess_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TEF_SysErrorNeedManualProcess_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PSS_NotProcess_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PSS_StartProcess_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PSS_Finished_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CUSTT_Person_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CUSTT_Institution_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBTTD_FromBankToFuture_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBTTD_FromFutureToBank_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OOD_Open_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OOD_Destroy_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AVAF_Invalid_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AVAF_Valid_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AVAF_Repeal_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OT_Bank_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OT_Future_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OT_PlateForm_get___() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OL_HeadQuarters_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OL_Branch_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PID_FutureProtocal_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PID_ICBCProtocal_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PID_ABCProtocal_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PID_CBCProtocal_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PID_CCBProtocal_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PID_BOCOMProtocal_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PID_FBTPlateFormProtocal_get___() {
  char jresult ;
  char result;
  
  result = (char)('X');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CM_ShortConnect_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CM_LongConnect_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SRM_ASync_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SRM_Sync_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BAT_BankBook_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BAT_SavingCard_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BAT_CreditCard_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FAT_BankBook_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FAT_SavingCard_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FAT_CreditCard_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OS_Ready_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OS_CheckIn_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OS_CheckOut_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OS_CheckFileArrived_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OS_CheckDetail_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OS_DayEndClean_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OS_Invalid_get___() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CCBFM_ByAmount_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CCBFM_ByMonth_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CAPIT_Client_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CAPIT_Server_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CAPIT_UserApi_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_LS_Connected_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_LS_Disconnected_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BPWDF_NoCheck_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BPWDF_BlankCheck_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BPWDF_EncryptCheck_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SAT_AccountID_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SAT_CardID_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SAT_SHStockholderID_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SAT_SZStockholderID_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TRFS_Normal_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TRFS_Repealed_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPTYPE_Broker_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPTYPE_Bank_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_REQRSP_Request_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_REQRSP_Response_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBTUET_SignIn_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBTUET_FromBankToFuture_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBTUET_FromFutureToBank_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBTUET_OpenAccount_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBTUET_CancelAccount_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBTUET_ChangeAccount_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBTUET_RepealFromBankToFuture_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBTUET_RepealFromFutureToBank_get___() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBTUET_QueryBankAccount_get___() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBTUET_QueryFutureAccount_get___() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBTUET_SignOut_get___() {
  char jresult ;
  char result;
  
  result = (char)('A');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBTUET_SyncKey_get___() {
  char jresult ;
  char result;
  
  result = (char)('B');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBTUET_Other_get___() {
  char jresult ;
  char result;
  
  result = (char)('Z');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_DBOP_Insert_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_DBOP_Update_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_DBOP_Delete_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SYNF_Yes_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SYNF_No_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SYNT_OneOffSync_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SYNT_TimerSync_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SYNT_TimerFullSync_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBEDIR_Settlement_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBEDIR_Sale_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBERES_Success_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBERES_InsufficientBalance_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBERES_UnknownTrading_get___() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBERES_Fail_get___() {
  char jresult ;
  char result;
  
  result = (char)('x');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBEES_Normal_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBEES_ReExchange_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBEFG_DataPackage_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBEFG_File_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBEAT_NotTrade_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBEAT_Trade_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBEUET_SignIn_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBEUET_Exchange_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBEUET_ReExchange_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBEUET_QueryBankAccount_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBEUET_QueryExchDetial_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBEUET_QueryExchSummary_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBEUET_QueryExchRate_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBEUET_CheckBankAccount_get___() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBEUET_SignOut_get___() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBEUET_Other_get___() {
  char jresult ;
  char result;
  
  result = (char)('Z');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBERF_UnProcessed_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBERF_WaitSend_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBERF_SendSuccess_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBERF_SendFailed_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FBERF_WaitReSend_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_NC_NOERROR_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_NC_Warn_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_NC_Call_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_NC_Force_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_NC_CHUANCANG_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_NC_Exception_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FCT_Manual_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FCT_Single_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FCT_Group_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RNM_System_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RNM_SMS_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RNM_EMail_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RNM_Manual_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RNS_NotGen_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RNS_Generated_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RNS_SendError_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RNS_SendOk_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RNS_Received_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RNS_Confirmed_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RUE_ExportData_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_COST_LastPriceAsc_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_COST_LastPriceDesc_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_COST_AskPriceAsc_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_COST_AskPriceDesc_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_COST_BidPriceAsc_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_COST_BidPriceDesc_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UOAST_NoSend_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UOAST_Sended_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UOAST_Generated_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UOAST_SendFail_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UOAST_Success_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UOAST_Fail_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UOAST_Cancel_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UOACS_NoApply_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UOACS_Submited_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UOACS_Sended_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UOACS_Success_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UOACS_Refuse_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UOACS_Cancel_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_QT_Radio_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_QT_Option_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_QT_Blank_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BT_Request_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BT_Response_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BT_Notice_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CRC_Success_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CRC_Working_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CRC_InfoFail_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CRC_IDCardFail_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CRC_OtherFail_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CfMMCCT_All_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CfMMCCT_Person_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CfMMCCT_Company_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CfMMCCT_Other_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CfMMCCT_SpecialOrgan_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CfMMCCT_Asset_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EIDT_SHFE_get___() {
  char jresult ;
  char result;
  
  result = (char)('S');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EIDT_CZCE_get___() {
  char jresult ;
  char result;
  
  result = (char)('Z');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EIDT_DCE_get___() {
  char jresult ;
  char result;
  
  result = (char)('D');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EIDT_CFFEX_get___() {
  char jresult ;
  char result;
  
  result = (char)('J');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EIDT_INE_get___() {
  char jresult ;
  char result;
  
  result = (char)('N');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ECIDT_Hedge_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ECIDT_Arbitrage_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ECIDT_Speculation_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UF_NoUpdate_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UF_Success_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UF_Fail_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UF_TCSuccess_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UF_TCFail_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UF_Cancel_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AOID_OpenInvestor_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AOID_ModifyIDCard_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AOID_ModifyNoIDCard_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AOID_ApplyTradingCode_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AOID_CancelTradingCode_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AOID_CancelInvestor_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AOID_FreezeAccount_get___() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AOID_ActiveFreezeAccount_get___() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ASID_NoComplete_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ASID_Submited_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ASID_Checked_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ASID_Refused_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ASID_Deleted_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UOASM_ByAPI_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UOASM_ByFile_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EvM_ADD_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EvM_UPDATE_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EvM_DELETE_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EvM_CHECK_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EvM_COPY_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EvM_CANCEL_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EvM_Reverse_get___() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UOAA_ASR_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UOAA_ASNR_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UOAA_NSAR_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UOAA_NSR_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EvM_InvestorGroupFlow_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EvM_InvestorRate_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EvM_InvestorCommRateModel_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CL_Zero_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CL_One_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CL_Two_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CHS_Init_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CHS_Checking_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CHS_Checked_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CHS_Refuse_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CHS_Cancel_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CHU_Unused_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CHU_Used_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CHU_Fail_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BAO_ByAccProperty_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BAO_ByFBTransfer_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_MBTS_ByInstrument_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_MBTS_ByDayInsPrc_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_MBTS_ByDayIns_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FTC_BankLaunchBankToBroker_get___() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("102001");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FTC_BrokerLaunchBankToBroker_get___() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("202001");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FTC_BankLaunchBrokerToBank_get___() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("102002");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FTC_BrokerLaunchBrokerToBank_get___() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)("202002");
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OTP_NONE_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OTP_TOTP_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OTPS_Unused_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OTPS_Used_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OTPS_Disuse_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BUT_Investor_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BUT_BrokerUser_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FUTT_Commodity_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FUTT_Financial_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FET_Restriction_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FET_TodayRestriction_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FET_Transfer_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FET_Credit_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FET_InvestorWithdrawAlm_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FET_BankRestriction_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FET_Accountregister_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FET_ExchangeFundIO_get___() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FET_InvestorFundIO_get___() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AST_FBTransfer_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AST_ManualEntry_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CST_UnifyAccount_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CST_ManualEntry_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UR_All_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UR_Single_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BG_Investor_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BG_Group_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TSSM_Instrument_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TSSM_Product_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TSSM_Exchange_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ESM_Relative_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ESM_Typical_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RIR_All_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RIR_Model_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RIR_Single_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SDS_Initialize_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SDS_Settlementing_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SDS_Settlemented_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TSRC_NORMAL_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TSRC_QUERY_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FSM_Product_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FSM_Exchange_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FSM_All_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BIR_Property_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BIR_All_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PIR_All_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PIR_Property_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PIR_Single_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FIS_NoCreate_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FIS_Created_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FIS_Failed_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FGS_FileTransmit_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FGS_FileGen_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SoM_Add_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SoM_Update_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SoM_Delete_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SoM_Copy_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SoM_AcTive_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SoM_CanCel_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SoM_ReSet_get___() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SoT_UpdatePassword_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SoT_UserDepartment_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SoT_RoleManager_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SoT_RoleFunction_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SoT_BaseParam_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SoT_SetUserID_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SoT_SetUserRole_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SoT_UserIpRestriction_get___() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SoT_DepartmentManager_get___() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SoT_DepartmentCopy_get___() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SoT_Tradingcode_get___() {
  char jresult ;
  char result;
  
  result = (char)('A');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SoT_InvestorStatus_get___() {
  char jresult ;
  char result;
  
  result = (char)('B');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SoT_InvestorAuthority_get___() {
  char jresult ;
  char result;
  
  result = (char)('C');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SoT_PropertySet_get___() {
  char jresult ;
  char result;
  
  result = (char)('D');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SoT_ReSetInvestorPasswd_get___() {
  char jresult ;
  char result;
  
  result = (char)('E');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SoT_InvestorPersonalityInfo_get___() {
  char jresult ;
  char result;
  
  result = (char)('F');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CSRCQ_Current_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CSRCQ_History_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FRS_Normal_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FRS_Freeze_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_STST_Standard_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_STST_NonStandard_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RPT_Freeze_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RPT_FreezeActive_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RPT_OpenLimit_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RPT_RelieveOpenLimit_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AMLDS_Normal_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AMLDS_Deleted_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AMLCHS_Init_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AMLCHS_Checking_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AMLCHS_Checked_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AMLCHS_RefuseReport_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AMLDT_DrawDay_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AMLDT_TouchDay_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AMLCL_CheckLevel0_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AMLCL_CheckLevel1_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AMLCL_CheckLevel2_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AMLCL_CheckLevel3_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EFT_CSV_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EFT_EXCEL_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EFT_DBF_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SMT_Before_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SMT_Settlement_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SMT_After_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SMT_Settlemented_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SML_Must_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SML_Alarm_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SML_Prompt_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SML_Ignore_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SMG_Exhcange_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SMG_ASP_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SMG_CSRC_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_LUT_Repeatable_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_LUT_Unrepeatable_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_DAR_Settle_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_DAR_Exchange_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_DAR_CSRC_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_MGT_ExchMarginRate_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_MGT_InstrMarginRate_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_MGT_InstrMarginRateTrade_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ACT_Intraday_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ACT_Long_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_MRT_Exchange_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_MRT_Investor_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_MRT_InvestorTrade_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BUS_UnBak_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BUS_BakUp_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BUS_BakUped_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BUS_BakFail_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SIS_UnInitialize_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SIS_Initialize_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SIS_Initialized_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SRS_NoCreate_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SRS_Create_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SRS_Created_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SRS_CreateFail_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SSS_UnSaveData_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SSS_SaveDatad_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SAS_UnArchived_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SAS_Archiving_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SAS_Archived_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SAS_ArchiveFail_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CTPT_Unkown_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CTPT_MainCenter_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CTPT_BackUp_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CDT_Normal_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CDT_SpecFirst_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_MFUR_None_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_MFUR_Margin_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_MFUR_All_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPT_CzceHedge_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPT_IneForeignCurrency_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SPT_DceOpenClose_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FMT_Mortgage_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FMT_Redemption_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ASPI_BaseMargin_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ASPI_LowestInterest_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FMD_In_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FMD_Out_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BT_Profit_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BT_Loss_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BT_Other_get___() {
  char jresult ;
  char result;
  
  result = (char)('Z');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SST_Manual_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SST_Automatic_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CED_Settlement_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CED_Sale_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CSS_Entry_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CSS_Approve_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CSS_Refuse_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CSS_Revoke_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CSS_Send_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CSS_Success_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CSS_Failure_get___() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_REQF_NoSend_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_REQF_SendSuccess_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_REQF_SendFailed_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_REQF_WaitReSend_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RESF_Success_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RESF_InsuffiCient_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_RESF_UnKnown_get___() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EXS_Before_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EXS_After_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CR_Domestic_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CR_GMT_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CR_Foreign_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_HB_No_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_HB_Yes_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SM_Normal_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SM_Emerge_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SM_Restore_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TPT_Full_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TPT_Increment_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_TPT_BackUp_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_LM_Trade_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_LM_Transfer_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CPT_Instrument_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CPT_Margin_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_HT_Yes_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_HT_No_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AMT_Bank_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AMT_Securities_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AMT_Fund_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AMT_Insurance_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AMT_Trust_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AMT_Other_get___() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CFIOT_FundIO_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CFIOT_SwapCurrency_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CAT_Futures_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CAT_AssetmgrFuture_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CAT_AssetmgrTrustee_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CAT_AssetmgrTransfer_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_LT_Chinese_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_LT_English_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AMCT_Person_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AMCT_Organ_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_AMCT_SpecialOrgan_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ASST_Futures_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ASST_SpecialOrgan_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CIT_HasExch_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CIT_HasATP_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CIT_HasDiff_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_DT_HandDeliv_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_DT_PersonDeliv_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_MMSA_NO_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_MMSA_YES_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CACT_Person_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CACT_Company_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CACT_Other_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UOAAT_Futures_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_UOAAT_SpecialOrgan_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_DEN_Buy_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_DEN_Sell_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OFEN_Open_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OFEN_Close_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OFEN_ForceClose_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OFEN_CloseToday_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OFEN_CloseYesterday_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OFEN_ForceOff_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OFEN_LocalForceClose_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_HFEN_Speculation_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_HFEN_Arbitrage_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_HFEN_Hedge_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FIOTEN_FundIO_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FIOTEN_Transfer_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FIOTEN_SwapCurrency_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FTEN_Deposite_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FTEN_ItemFund_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FTEN_Company_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FTEN_InnerTransfer_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FDEN_In_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FDEN_Out_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FMDEN_In_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FMDEN_Out_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CP_CallOptions_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CP_PutOptions_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_STM_Continental_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_STM_American_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_STM_Bermuda_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_STT_Hedge_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_STT_Match_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_APPT_NotStrikeNum_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_GUDS_Gen_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_GUDS_Hand_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OER_NoExec_get___() {
  char jresult ;
  char result;
  
  result = (char)('n');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OER_Canceled_get___() {
  char jresult ;
  char result;
  
  result = (char)('c');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OER_OK_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OER_NoPosition_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OER_NoDeposit_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OER_NoParticipant_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OER_NoClient_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OER_NoInstrument_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OER_NoRight_get___() {
  char jresult ;
  char result;
  
  result = (char)('7');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OER_InvalidVolume_get___() {
  char jresult ;
  char result;
  
  result = (char)('8');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OER_NoEnoughHistoryTrade_get___() {
  char jresult ;
  char result;
  
  result = (char)('9');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_OER_Unknown_get___() {
  char jresult ;
  char result;
  
  result = (char)('a');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_COMBT_Future_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_COMBT_BUL_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_COMBT_BER_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_COMBT_STD_get___() {
  char jresult ;
  char result;
  
  result = (char)('3');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_COMBT_STG_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_COMBT_PRT_get___() {
  char jresult ;
  char result;
  
  result = (char)('5');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_COMBT_CLD_get___() {
  char jresult ;
  char result;
  
  result = (char)('6');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ORPT_PreSettlementPrice_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ORPT_OpenPrice_get___() {
  char jresult ;
  char result;
  
  result = (char)('4');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BLAG_Default_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_BLAG_IncludeOptValLost_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ACTP_Exec_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_ACTP_Abandon_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FQST_Submitted_get___() {
  char jresult ;
  char result;
  
  result = (char)('a');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FQST_Accepted_get___() {
  char jresult ;
  char result;
  
  result = (char)('b');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_FQST_Rejected_get___() {
  char jresult ;
  char result;
  
  result = (char)('c');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_VM_Absolute_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_VM_Ratio_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EOPF_Reserve_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EOPF_UnReserve_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EOCF_AutoClose_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_EOCF_NotToClose_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PTE_Futures_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_PTE_Options_get___() {
  char jresult ;
  char result;
  
  result = (char)('2');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CUFN_CUFN_O_get___() {
  char jresult ;
  char result;
  
  result = (char)('O');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CUFN_CUFN_T_get___() {
  char jresult ;
  char result;
  
  result = (char)('T');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CUFN_CUFN_P_get___() {
  char jresult ;
  char result;
  
  result = (char)('P');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CUFN_CUFN_N_get___() {
  char jresult ;
  char result;
  
  result = (char)('N');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CUFN_CUFN_L_get___() {
  char jresult ;
  char result;
  
  result = (char)('L');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CUFN_CUFN_F_get___() {
  char jresult ;
  char result;
  
  result = (char)('F');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CUFN_CUFN_C_get___() {
  char jresult ;
  char result;
  
  result = (char)('C');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CUFN_CUFN_M_get___() {
  char jresult ;
  char result;
  
  result = (char)('M');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_DUFN_DUFN_O_get___() {
  char jresult ;
  char result;
  
  result = (char)('O');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_DUFN_DUFN_T_get___() {
  char jresult ;
  char result;
  
  result = (char)('T');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_DUFN_DUFN_P_get___() {
  char jresult ;
  char result;
  
  result = (char)('P');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_DUFN_DUFN_F_get___() {
  char jresult ;
  char result;
  
  result = (char)('F');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_DUFN_DUFN_C_get___() {
  char jresult ;
  char result;
  
  result = (char)('C');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_DUFN_DUFN_D_get___() {
  char jresult ;
  char result;
  
  result = (char)('D');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_DUFN_DUFN_M_get___() {
  char jresult ;
  char result;
  
  result = (char)('M');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_DUFN_DUFN_S_get___() {
  char jresult ;
  char result;
  
  result = (char)('S');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SUFN_SUFN_O_get___() {
  char jresult ;
  char result;
  
  result = (char)('O');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SUFN_SUFN_T_get___() {
  char jresult ;
  char result;
  
  result = (char)('T');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SUFN_SUFN_P_get___() {
  char jresult ;
  char result;
  
  result = (char)('P');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_SUFN_SUFN_F_get___() {
  char jresult ;
  char result;
  
  result = (char)('F');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CFUFN_SUFN_T_get___() {
  char jresult ;
  char result;
  
  result = (char)('T');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CFUFN_SUFN_P_get___() {
  char jresult ;
  char result;
  
  result = (char)('P');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CFUFN_SUFN_F_get___() {
  char jresult ;
  char result;
  
  result = (char)('F');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CFUFN_SUFN_S_get___() {
  char jresult ;
  char result;
  
  result = (char)('S');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CMDR_Comb_get___() {
  char jresult ;
  char result;
  
  result = (char)('0');
  jresult = result; 
  return jresult;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_THOST_FTDC_CMDR_UnComb_get___() {
  char jresult ;
  char result;
  
  result = (char)('1');
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDisseminationField_SequenceSeries_set___(void * jarg1, short jarg2) {
  CThostFtdcDisseminationField *arg1 = (CThostFtdcDisseminationField *) 0 ;
  TThostFtdcSequenceSeriesType arg2 ;
  
  arg1 = (CThostFtdcDisseminationField *)jarg1; 
  arg2 = (TThostFtdcSequenceSeriesType)jarg2; 
  if (arg1) (arg1)->SequenceSeries = arg2;
}


SWIGEXPORT short SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDisseminationField_SequenceSeries_get___(void * jarg1) {
  short jresult ;
  CThostFtdcDisseminationField *arg1 = (CThostFtdcDisseminationField *) 0 ;
  TThostFtdcSequenceSeriesType result;
  
  arg1 = (CThostFtdcDisseminationField *)jarg1; 
  result = (TThostFtdcSequenceSeriesType) ((arg1)->SequenceSeries);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDisseminationField_SequenceNo_set___(void * jarg1, int jarg2) {
  CThostFtdcDisseminationField *arg1 = (CThostFtdcDisseminationField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcDisseminationField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDisseminationField_SequenceNo_get___(void * jarg1) {
  int jresult ;
  CThostFtdcDisseminationField *arg1 = (CThostFtdcDisseminationField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcDisseminationField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcDisseminationField___() {
  void * jresult ;
  CThostFtdcDisseminationField *result = 0 ;
  
  result = (CThostFtdcDisseminationField *)new CThostFtdcDisseminationField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcDisseminationField___(void * jarg1) {
  CThostFtdcDisseminationField *arg1 = (CThostFtdcDisseminationField *) 0 ;
  
  arg1 = (CThostFtdcDisseminationField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqUserLoginField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqUserLoginField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqUserLoginField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqUserLoginField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqUserLoginField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqUserLoginField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqUserLoginField_Password_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqUserLoginField_Password_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqUserLoginField_UserProductInfo_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqUserLoginField_UserProductInfo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  result = (char *) ((arg1)->UserProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqUserLoginField_InterfaceProductInfo_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InterfaceProductInfo, (const char *)arg2, 11-1);
      arg1->InterfaceProductInfo[11-1] = 0;
    } else {
      arg1->InterfaceProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqUserLoginField_InterfaceProductInfo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  result = (char *) ((arg1)->InterfaceProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqUserLoginField_ProtocolInfo_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProtocolInfo, (const char *)arg2, 11-1);
      arg1->ProtocolInfo[11-1] = 0;
    } else {
      arg1->ProtocolInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqUserLoginField_ProtocolInfo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  result = (char *) ((arg1)->ProtocolInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqUserLoginField_MacAddress_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqUserLoginField_MacAddress_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqUserLoginField_OneTimePassword_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OneTimePassword, (const char *)arg2, 41-1);
      arg1->OneTimePassword[41-1] = 0;
    } else {
      arg1->OneTimePassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqUserLoginField_OneTimePassword_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  result = (char *) ((arg1)->OneTimePassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqUserLoginField_ClientIPAddress_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientIPAddress, (const char *)arg2, 16-1);
      arg1->ClientIPAddress[16-1] = 0;
    } else {
      arg1->ClientIPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqUserLoginField_ClientIPAddress_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  result = (char *) ((arg1)->ClientIPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcReqUserLoginField___() {
  void * jresult ;
  CThostFtdcReqUserLoginField *result = 0 ;
  
  result = (CThostFtdcReqUserLoginField *)new CThostFtdcReqUserLoginField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcReqUserLoginField___(void * jarg1) {
  CThostFtdcReqUserLoginField *arg1 = (CThostFtdcReqUserLoginField *) 0 ;
  
  arg1 = (CThostFtdcReqUserLoginField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspUserLoginField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspUserLoginField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspUserLoginField_LoginTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LoginTime, (const char *)arg2, 9-1);
      arg1->LoginTime[9-1] = 0;
    } else {
      arg1->LoginTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspUserLoginField_LoginTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  result = (char *) ((arg1)->LoginTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspUserLoginField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspUserLoginField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspUserLoginField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspUserLoginField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspUserLoginField_SystemName_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SystemName, (const char *)arg2, 41-1);
      arg1->SystemName[41-1] = 0;
    } else {
      arg1->SystemName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspUserLoginField_SystemName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  result = (char *) ((arg1)->SystemName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspUserLoginField_FrontID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspUserLoginField_FrontID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspUserLoginField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspUserLoginField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspUserLoginField_MaxOrderRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MaxOrderRef, (const char *)arg2, 13-1);
      arg1->MaxOrderRef[13-1] = 0;
    } else {
      arg1->MaxOrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspUserLoginField_MaxOrderRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  result = (char *) ((arg1)->MaxOrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspUserLoginField_SHFETime_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SHFETime, (const char *)arg2, 9-1);
      arg1->SHFETime[9-1] = 0;
    } else {
      arg1->SHFETime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspUserLoginField_SHFETime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  result = (char *) ((arg1)->SHFETime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspUserLoginField_DCETime_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DCETime, (const char *)arg2, 9-1);
      arg1->DCETime[9-1] = 0;
    } else {
      arg1->DCETime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspUserLoginField_DCETime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  result = (char *) ((arg1)->DCETime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspUserLoginField_CZCETime_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CZCETime, (const char *)arg2, 9-1);
      arg1->CZCETime[9-1] = 0;
    } else {
      arg1->CZCETime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspUserLoginField_CZCETime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  result = (char *) ((arg1)->CZCETime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspUserLoginField_FFEXTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FFEXTime, (const char *)arg2, 9-1);
      arg1->FFEXTime[9-1] = 0;
    } else {
      arg1->FFEXTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspUserLoginField_FFEXTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  result = (char *) ((arg1)->FFEXTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspUserLoginField_INETime_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->INETime, (const char *)arg2, 9-1);
      arg1->INETime[9-1] = 0;
    } else {
      arg1->INETime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspUserLoginField_INETime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  result = (char *) ((arg1)->INETime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcRspUserLoginField___() {
  void * jresult ;
  CThostFtdcRspUserLoginField *result = 0 ;
  
  result = (CThostFtdcRspUserLoginField *)new CThostFtdcRspUserLoginField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcRspUserLoginField___(void * jarg1) {
  CThostFtdcRspUserLoginField *arg1 = (CThostFtdcRspUserLoginField *) 0 ;
  
  arg1 = (CThostFtdcRspUserLoginField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserLogoutField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcUserLogoutField *arg1 = (CThostFtdcUserLogoutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserLogoutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserLogoutField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcUserLogoutField *arg1 = (CThostFtdcUserLogoutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserLogoutField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserLogoutField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcUserLogoutField *arg1 = (CThostFtdcUserLogoutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserLogoutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserLogoutField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcUserLogoutField *arg1 = (CThostFtdcUserLogoutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserLogoutField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcUserLogoutField___() {
  void * jresult ;
  CThostFtdcUserLogoutField *result = 0 ;
  
  result = (CThostFtdcUserLogoutField *)new CThostFtdcUserLogoutField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcUserLogoutField___(void * jarg1) {
  CThostFtdcUserLogoutField *arg1 = (CThostFtdcUserLogoutField *) 0 ;
  
  arg1 = (CThostFtdcUserLogoutField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForceUserLogoutField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcForceUserLogoutField *arg1 = (CThostFtdcForceUserLogoutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForceUserLogoutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForceUserLogoutField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcForceUserLogoutField *arg1 = (CThostFtdcForceUserLogoutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForceUserLogoutField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForceUserLogoutField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcForceUserLogoutField *arg1 = (CThostFtdcForceUserLogoutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForceUserLogoutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForceUserLogoutField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcForceUserLogoutField *arg1 = (CThostFtdcForceUserLogoutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForceUserLogoutField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcForceUserLogoutField___() {
  void * jresult ;
  CThostFtdcForceUserLogoutField *result = 0 ;
  
  result = (CThostFtdcForceUserLogoutField *)new CThostFtdcForceUserLogoutField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcForceUserLogoutField___(void * jarg1) {
  CThostFtdcForceUserLogoutField *arg1 = (CThostFtdcForceUserLogoutField *) 0 ;
  
  arg1 = (CThostFtdcForceUserLogoutField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqAuthenticateField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqAuthenticateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqAuthenticateField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqAuthenticateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqAuthenticateField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqAuthenticateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqAuthenticateField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqAuthenticateField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqAuthenticateField_UserProductInfo_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqAuthenticateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqAuthenticateField_UserProductInfo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqAuthenticateField *)jarg1; 
  result = (char *) ((arg1)->UserProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqAuthenticateField_AuthCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqAuthenticateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AuthCode, (const char *)arg2, 17-1);
      arg1->AuthCode[17-1] = 0;
    } else {
      arg1->AuthCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqAuthenticateField_AuthCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqAuthenticateField *)jarg1; 
  result = (char *) ((arg1)->AuthCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcReqAuthenticateField___() {
  void * jresult ;
  CThostFtdcReqAuthenticateField *result = 0 ;
  
  result = (CThostFtdcReqAuthenticateField *)new CThostFtdcReqAuthenticateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcReqAuthenticateField___(void * jarg1) {
  CThostFtdcReqAuthenticateField *arg1 = (CThostFtdcReqAuthenticateField *) 0 ;
  
  arg1 = (CThostFtdcReqAuthenticateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspAuthenticateField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspAuthenticateField *arg1 = (CThostFtdcRspAuthenticateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspAuthenticateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspAuthenticateField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspAuthenticateField *arg1 = (CThostFtdcRspAuthenticateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspAuthenticateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspAuthenticateField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspAuthenticateField *arg1 = (CThostFtdcRspAuthenticateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspAuthenticateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspAuthenticateField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspAuthenticateField *arg1 = (CThostFtdcRspAuthenticateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspAuthenticateField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspAuthenticateField_UserProductInfo_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspAuthenticateField *arg1 = (CThostFtdcRspAuthenticateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspAuthenticateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspAuthenticateField_UserProductInfo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspAuthenticateField *arg1 = (CThostFtdcRspAuthenticateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspAuthenticateField *)jarg1; 
  result = (char *) ((arg1)->UserProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcRspAuthenticateField___() {
  void * jresult ;
  CThostFtdcRspAuthenticateField *result = 0 ;
  
  result = (CThostFtdcRspAuthenticateField *)new CThostFtdcRspAuthenticateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcRspAuthenticateField___(void * jarg1) {
  CThostFtdcRspAuthenticateField *arg1 = (CThostFtdcRspAuthenticateField *) 0 ;
  
  arg1 = (CThostFtdcRspAuthenticateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAuthenticationInfoField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAuthenticationInfoField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAuthenticationInfoField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAuthenticationInfoField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAuthenticationInfoField_UserProductInfo_set___(void * jarg1, char * jarg2) {
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAuthenticationInfoField_UserProductInfo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  result = (char *) ((arg1)->UserProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAuthenticationInfoField_AuthInfo_set___(void * jarg1, char * jarg2) {
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AuthInfo, (const char *)arg2, 129-1);
      arg1->AuthInfo[129-1] = 0;
    } else {
      arg1->AuthInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAuthenticationInfoField_AuthInfo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  result = (char *) ((arg1)->AuthInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAuthenticationInfoField_IsResult_set___(void * jarg1, int jarg2) {
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsResult = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAuthenticationInfoField_IsResult_get___(void * jarg1) {
  int jresult ;
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsResult);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcAuthenticationInfoField___() {
  void * jresult ;
  CThostFtdcAuthenticationInfoField *result = 0 ;
  
  result = (CThostFtdcAuthenticationInfoField *)new CThostFtdcAuthenticationInfoField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcAuthenticationInfoField___(void * jarg1) {
  CThostFtdcAuthenticationInfoField *arg1 = (CThostFtdcAuthenticationInfoField *) 0 ;
  
  arg1 = (CThostFtdcAuthenticationInfoField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferHeaderField_Version_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Version, (const char *)arg2, 4-1);
      arg1->Version[4-1] = 0;
    } else {
      arg1->Version[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferHeaderField_Version_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  result = (char *) ((arg1)->Version);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferHeaderField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferHeaderField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferHeaderField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferHeaderField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferHeaderField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferHeaderField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferHeaderField_TradeSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeSerial, (const char *)arg2, 9-1);
      arg1->TradeSerial[9-1] = 0;
    } else {
      arg1->TradeSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferHeaderField_TradeSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  result = (char *) ((arg1)->TradeSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferHeaderField_FutureID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FutureID, (const char *)arg2, 11-1);
      arg1->FutureID[11-1] = 0;
    } else {
      arg1->FutureID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferHeaderField_FutureID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  result = (char *) ((arg1)->FutureID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferHeaderField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferHeaderField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferHeaderField_BankBrchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBrchID, (const char *)arg2, 5-1);
      arg1->BankBrchID[5-1] = 0;
    } else {
      arg1->BankBrchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferHeaderField_BankBrchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  result = (char *) ((arg1)->BankBrchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferHeaderField_OperNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferHeaderField_OperNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferHeaderField_DeviceID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferHeaderField_DeviceID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferHeaderField_RecordNum_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RecordNum, (const char *)arg2, 7-1);
      arg1->RecordNum[7-1] = 0;
    } else {
      arg1->RecordNum[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferHeaderField_RecordNum_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  result = (char *) ((arg1)->RecordNum);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferHeaderField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferHeaderField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferHeaderField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferHeaderField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcTransferHeaderField___() {
  void * jresult ;
  CThostFtdcTransferHeaderField *result = 0 ;
  
  result = (CThostFtdcTransferHeaderField *)new CThostFtdcTransferHeaderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcTransferHeaderField___(void * jarg1) {
  CThostFtdcTransferHeaderField *arg1 = (CThostFtdcTransferHeaderField *) 0 ;
  
  arg1 = (CThostFtdcTransferHeaderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankToFutureReqField_FutureAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferBankToFutureReqField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccount, (const char *)arg2, 13-1);
      arg1->FutureAccount[13-1] = 0;
    } else {
      arg1->FutureAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankToFutureReqField_FutureAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferBankToFutureReqField *)jarg1; 
  result = (char *) ((arg1)->FutureAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankToFutureReqField_FuturePwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  TThostFtdcFuturePwdFlagType arg2 ;
  
  arg1 = (CThostFtdcTransferBankToFutureReqField *)jarg1; 
  arg2 = (TThostFtdcFuturePwdFlagType)jarg2; 
  if (arg1) (arg1)->FuturePwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankToFutureReqField_FuturePwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  TThostFtdcFuturePwdFlagType result;
  
  arg1 = (CThostFtdcTransferBankToFutureReqField *)jarg1; 
  result = (TThostFtdcFuturePwdFlagType) ((arg1)->FuturePwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankToFutureReqField_FutureAccPwd_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferBankToFutureReqField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccPwd, (const char *)arg2, 17-1);
      arg1->FutureAccPwd[17-1] = 0;
    } else {
      arg1->FutureAccPwd[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankToFutureReqField_FutureAccPwd_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferBankToFutureReqField *)jarg1; 
  result = (char *) ((arg1)->FutureAccPwd);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankToFutureReqField_TradeAmt_set___(void * jarg1, double jarg2) {
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTransferBankToFutureReqField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->TradeAmt = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankToFutureReqField_TradeAmt_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTransferBankToFutureReqField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->TradeAmt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankToFutureReqField_CustFee_set___(void * jarg1, double jarg2) {
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTransferBankToFutureReqField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CustFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankToFutureReqField_CustFee_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTransferBankToFutureReqField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CustFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankToFutureReqField_CurrencyCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferBankToFutureReqField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyCode, (const char *)arg2, 4-1);
      arg1->CurrencyCode[4-1] = 0;
    } else {
      arg1->CurrencyCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankToFutureReqField_CurrencyCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferBankToFutureReqField *)jarg1; 
  result = (char *) ((arg1)->CurrencyCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcTransferBankToFutureReqField___() {
  void * jresult ;
  CThostFtdcTransferBankToFutureReqField *result = 0 ;
  
  result = (CThostFtdcTransferBankToFutureReqField *)new CThostFtdcTransferBankToFutureReqField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcTransferBankToFutureReqField___(void * jarg1) {
  CThostFtdcTransferBankToFutureReqField *arg1 = (CThostFtdcTransferBankToFutureReqField *) 0 ;
  
  arg1 = (CThostFtdcTransferBankToFutureReqField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankToFutureRspField_RetCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferBankToFutureRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RetCode, (const char *)arg2, 5-1);
      arg1->RetCode[5-1] = 0;
    } else {
      arg1->RetCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankToFutureRspField_RetCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferBankToFutureRspField *)jarg1; 
  result = (char *) ((arg1)->RetCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankToFutureRspField_RetInfo_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferBankToFutureRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RetInfo, (const char *)arg2, 129-1);
      arg1->RetInfo[129-1] = 0;
    } else {
      arg1->RetInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankToFutureRspField_RetInfo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferBankToFutureRspField *)jarg1; 
  result = (char *) ((arg1)->RetInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankToFutureRspField_FutureAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferBankToFutureRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccount, (const char *)arg2, 13-1);
      arg1->FutureAccount[13-1] = 0;
    } else {
      arg1->FutureAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankToFutureRspField_FutureAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferBankToFutureRspField *)jarg1; 
  result = (char *) ((arg1)->FutureAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankToFutureRspField_TradeAmt_set___(void * jarg1, double jarg2) {
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTransferBankToFutureRspField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->TradeAmt = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankToFutureRspField_TradeAmt_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTransferBankToFutureRspField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->TradeAmt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankToFutureRspField_CustFee_set___(void * jarg1, double jarg2) {
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTransferBankToFutureRspField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CustFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankToFutureRspField_CustFee_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTransferBankToFutureRspField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CustFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankToFutureRspField_CurrencyCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferBankToFutureRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyCode, (const char *)arg2, 4-1);
      arg1->CurrencyCode[4-1] = 0;
    } else {
      arg1->CurrencyCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankToFutureRspField_CurrencyCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferBankToFutureRspField *)jarg1; 
  result = (char *) ((arg1)->CurrencyCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcTransferBankToFutureRspField___() {
  void * jresult ;
  CThostFtdcTransferBankToFutureRspField *result = 0 ;
  
  result = (CThostFtdcTransferBankToFutureRspField *)new CThostFtdcTransferBankToFutureRspField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcTransferBankToFutureRspField___(void * jarg1) {
  CThostFtdcTransferBankToFutureRspField *arg1 = (CThostFtdcTransferBankToFutureRspField *) 0 ;
  
  arg1 = (CThostFtdcTransferBankToFutureRspField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferFutureToBankReqField_FutureAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferFutureToBankReqField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccount, (const char *)arg2, 13-1);
      arg1->FutureAccount[13-1] = 0;
    } else {
      arg1->FutureAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferFutureToBankReqField_FutureAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferFutureToBankReqField *)jarg1; 
  result = (char *) ((arg1)->FutureAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferFutureToBankReqField_FuturePwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  TThostFtdcFuturePwdFlagType arg2 ;
  
  arg1 = (CThostFtdcTransferFutureToBankReqField *)jarg1; 
  arg2 = (TThostFtdcFuturePwdFlagType)jarg2; 
  if (arg1) (arg1)->FuturePwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferFutureToBankReqField_FuturePwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  TThostFtdcFuturePwdFlagType result;
  
  arg1 = (CThostFtdcTransferFutureToBankReqField *)jarg1; 
  result = (TThostFtdcFuturePwdFlagType) ((arg1)->FuturePwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferFutureToBankReqField_FutureAccPwd_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferFutureToBankReqField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccPwd, (const char *)arg2, 17-1);
      arg1->FutureAccPwd[17-1] = 0;
    } else {
      arg1->FutureAccPwd[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferFutureToBankReqField_FutureAccPwd_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferFutureToBankReqField *)jarg1; 
  result = (char *) ((arg1)->FutureAccPwd);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferFutureToBankReqField_TradeAmt_set___(void * jarg1, double jarg2) {
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTransferFutureToBankReqField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->TradeAmt = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferFutureToBankReqField_TradeAmt_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTransferFutureToBankReqField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->TradeAmt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferFutureToBankReqField_CustFee_set___(void * jarg1, double jarg2) {
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTransferFutureToBankReqField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CustFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferFutureToBankReqField_CustFee_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTransferFutureToBankReqField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CustFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferFutureToBankReqField_CurrencyCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferFutureToBankReqField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyCode, (const char *)arg2, 4-1);
      arg1->CurrencyCode[4-1] = 0;
    } else {
      arg1->CurrencyCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferFutureToBankReqField_CurrencyCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferFutureToBankReqField *)jarg1; 
  result = (char *) ((arg1)->CurrencyCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcTransferFutureToBankReqField___() {
  void * jresult ;
  CThostFtdcTransferFutureToBankReqField *result = 0 ;
  
  result = (CThostFtdcTransferFutureToBankReqField *)new CThostFtdcTransferFutureToBankReqField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcTransferFutureToBankReqField___(void * jarg1) {
  CThostFtdcTransferFutureToBankReqField *arg1 = (CThostFtdcTransferFutureToBankReqField *) 0 ;
  
  arg1 = (CThostFtdcTransferFutureToBankReqField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferFutureToBankRspField_RetCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferFutureToBankRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RetCode, (const char *)arg2, 5-1);
      arg1->RetCode[5-1] = 0;
    } else {
      arg1->RetCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferFutureToBankRspField_RetCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferFutureToBankRspField *)jarg1; 
  result = (char *) ((arg1)->RetCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferFutureToBankRspField_RetInfo_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferFutureToBankRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RetInfo, (const char *)arg2, 129-1);
      arg1->RetInfo[129-1] = 0;
    } else {
      arg1->RetInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferFutureToBankRspField_RetInfo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferFutureToBankRspField *)jarg1; 
  result = (char *) ((arg1)->RetInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferFutureToBankRspField_FutureAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferFutureToBankRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccount, (const char *)arg2, 13-1);
      arg1->FutureAccount[13-1] = 0;
    } else {
      arg1->FutureAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferFutureToBankRspField_FutureAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferFutureToBankRspField *)jarg1; 
  result = (char *) ((arg1)->FutureAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferFutureToBankRspField_TradeAmt_set___(void * jarg1, double jarg2) {
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTransferFutureToBankRspField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->TradeAmt = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferFutureToBankRspField_TradeAmt_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTransferFutureToBankRspField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->TradeAmt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferFutureToBankRspField_CustFee_set___(void * jarg1, double jarg2) {
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTransferFutureToBankRspField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CustFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferFutureToBankRspField_CustFee_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTransferFutureToBankRspField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CustFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferFutureToBankRspField_CurrencyCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferFutureToBankRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyCode, (const char *)arg2, 4-1);
      arg1->CurrencyCode[4-1] = 0;
    } else {
      arg1->CurrencyCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferFutureToBankRspField_CurrencyCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferFutureToBankRspField *)jarg1; 
  result = (char *) ((arg1)->CurrencyCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcTransferFutureToBankRspField___() {
  void * jresult ;
  CThostFtdcTransferFutureToBankRspField *result = 0 ;
  
  result = (CThostFtdcTransferFutureToBankRspField *)new CThostFtdcTransferFutureToBankRspField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcTransferFutureToBankRspField___(void * jarg1) {
  CThostFtdcTransferFutureToBankRspField *arg1 = (CThostFtdcTransferFutureToBankRspField *) 0 ;
  
  arg1 = (CThostFtdcTransferFutureToBankRspField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryBankReqField_FutureAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryBankReqField *arg1 = (CThostFtdcTransferQryBankReqField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryBankReqField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccount, (const char *)arg2, 13-1);
      arg1->FutureAccount[13-1] = 0;
    } else {
      arg1->FutureAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryBankReqField_FutureAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryBankReqField *arg1 = (CThostFtdcTransferQryBankReqField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryBankReqField *)jarg1; 
  result = (char *) ((arg1)->FutureAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryBankReqField_FuturePwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcTransferQryBankReqField *arg1 = (CThostFtdcTransferQryBankReqField *) 0 ;
  TThostFtdcFuturePwdFlagType arg2 ;
  
  arg1 = (CThostFtdcTransferQryBankReqField *)jarg1; 
  arg2 = (TThostFtdcFuturePwdFlagType)jarg2; 
  if (arg1) (arg1)->FuturePwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryBankReqField_FuturePwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcTransferQryBankReqField *arg1 = (CThostFtdcTransferQryBankReqField *) 0 ;
  TThostFtdcFuturePwdFlagType result;
  
  arg1 = (CThostFtdcTransferQryBankReqField *)jarg1; 
  result = (TThostFtdcFuturePwdFlagType) ((arg1)->FuturePwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryBankReqField_FutureAccPwd_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryBankReqField *arg1 = (CThostFtdcTransferQryBankReqField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryBankReqField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccPwd, (const char *)arg2, 17-1);
      arg1->FutureAccPwd[17-1] = 0;
    } else {
      arg1->FutureAccPwd[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryBankReqField_FutureAccPwd_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryBankReqField *arg1 = (CThostFtdcTransferQryBankReqField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryBankReqField *)jarg1; 
  result = (char *) ((arg1)->FutureAccPwd);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryBankReqField_CurrencyCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryBankReqField *arg1 = (CThostFtdcTransferQryBankReqField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryBankReqField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyCode, (const char *)arg2, 4-1);
      arg1->CurrencyCode[4-1] = 0;
    } else {
      arg1->CurrencyCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryBankReqField_CurrencyCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryBankReqField *arg1 = (CThostFtdcTransferQryBankReqField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryBankReqField *)jarg1; 
  result = (char *) ((arg1)->CurrencyCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcTransferQryBankReqField___() {
  void * jresult ;
  CThostFtdcTransferQryBankReqField *result = 0 ;
  
  result = (CThostFtdcTransferQryBankReqField *)new CThostFtdcTransferQryBankReqField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcTransferQryBankReqField___(void * jarg1) {
  CThostFtdcTransferQryBankReqField *arg1 = (CThostFtdcTransferQryBankReqField *) 0 ;
  
  arg1 = (CThostFtdcTransferQryBankReqField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryBankRspField_RetCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RetCode, (const char *)arg2, 5-1);
      arg1->RetCode[5-1] = 0;
    } else {
      arg1->RetCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryBankRspField_RetCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  result = (char *) ((arg1)->RetCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryBankRspField_RetInfo_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RetInfo, (const char *)arg2, 129-1);
      arg1->RetInfo[129-1] = 0;
    } else {
      arg1->RetInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryBankRspField_RetInfo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  result = (char *) ((arg1)->RetInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryBankRspField_FutureAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccount, (const char *)arg2, 13-1);
      arg1->FutureAccount[13-1] = 0;
    } else {
      arg1->FutureAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryBankRspField_FutureAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  result = (char *) ((arg1)->FutureAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryBankRspField_TradeAmt_set___(void * jarg1, double jarg2) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->TradeAmt = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryBankRspField_TradeAmt_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->TradeAmt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryBankRspField_UseAmt_set___(void * jarg1, double jarg2) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->UseAmt = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryBankRspField_UseAmt_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->UseAmt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryBankRspField_FetchAmt_set___(void * jarg1, double jarg2) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FetchAmt = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryBankRspField_FetchAmt_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FetchAmt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryBankRspField_CurrencyCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyCode, (const char *)arg2, 4-1);
      arg1->CurrencyCode[4-1] = 0;
    } else {
      arg1->CurrencyCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryBankRspField_CurrencyCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  result = (char *) ((arg1)->CurrencyCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcTransferQryBankRspField___() {
  void * jresult ;
  CThostFtdcTransferQryBankRspField *result = 0 ;
  
  result = (CThostFtdcTransferQryBankRspField *)new CThostFtdcTransferQryBankRspField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcTransferQryBankRspField___(void * jarg1) {
  CThostFtdcTransferQryBankRspField *arg1 = (CThostFtdcTransferQryBankRspField *) 0 ;
  
  arg1 = (CThostFtdcTransferQryBankRspField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailReqField_FutureAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryDetailReqField *arg1 = (CThostFtdcTransferQryDetailReqField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailReqField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccount, (const char *)arg2, 13-1);
      arg1->FutureAccount[13-1] = 0;
    } else {
      arg1->FutureAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailReqField_FutureAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryDetailReqField *arg1 = (CThostFtdcTransferQryDetailReqField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryDetailReqField *)jarg1; 
  result = (char *) ((arg1)->FutureAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcTransferQryDetailReqField___() {
  void * jresult ;
  CThostFtdcTransferQryDetailReqField *result = 0 ;
  
  result = (CThostFtdcTransferQryDetailReqField *)new CThostFtdcTransferQryDetailReqField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcTransferQryDetailReqField___(void * jarg1) {
  CThostFtdcTransferQryDetailReqField *arg1 = (CThostFtdcTransferQryDetailReqField *) 0 ;
  
  arg1 = (CThostFtdcTransferQryDetailReqField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_FutureSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  TThostFtdcTradeSerialNoType arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (TThostFtdcTradeSerialNoType)jarg2; 
  if (arg1) (arg1)->FutureSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_FutureSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  TThostFtdcTradeSerialNoType result;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (TThostFtdcTradeSerialNoType) ((arg1)->FutureSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_FutureID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FutureID, (const char *)arg2, 11-1);
      arg1->FutureID[11-1] = 0;
    } else {
      arg1->FutureID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_FutureID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (char *) ((arg1)->FutureID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_FutureAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FutureAccount, (const char *)arg2, 22-1);
      arg1->FutureAccount[22-1] = 0;
    } else {
      arg1->FutureAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_FutureAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (char *) ((arg1)->FutureAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_BankSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  TThostFtdcTradeSerialNoType arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (TThostFtdcTradeSerialNoType)jarg2; 
  if (arg1) (arg1)->BankSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_BankSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  TThostFtdcTradeSerialNoType result;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (TThostFtdcTradeSerialNoType) ((arg1)->BankSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_BankBrchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBrchID, (const char *)arg2, 5-1);
      arg1->BankBrchID[5-1] = 0;
    } else {
      arg1->BankBrchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_BankBrchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (char *) ((arg1)->BankBrchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_BankAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_BankAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_CertCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CertCode, (const char *)arg2, 21-1);
      arg1->CertCode[21-1] = 0;
    } else {
      arg1->CertCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_CertCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (char *) ((arg1)->CertCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_CurrencyCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyCode, (const char *)arg2, 4-1);
      arg1->CurrencyCode[4-1] = 0;
    } else {
      arg1->CurrencyCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_CurrencyCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (char *) ((arg1)->CurrencyCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_TxAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->TxAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_TxAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->TxAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_Flag_set___(void * jarg1, char jarg2) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  TThostFtdcTransferValidFlagType arg2 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  arg2 = (TThostFtdcTransferValidFlagType)jarg2; 
  if (arg1) (arg1)->Flag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferQryDetailRspField_Flag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  TThostFtdcTransferValidFlagType result;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  result = (TThostFtdcTransferValidFlagType) ((arg1)->Flag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcTransferQryDetailRspField___() {
  void * jresult ;
  CThostFtdcTransferQryDetailRspField *result = 0 ;
  
  result = (CThostFtdcTransferQryDetailRspField *)new CThostFtdcTransferQryDetailRspField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcTransferQryDetailRspField___(void * jarg1) {
  CThostFtdcTransferQryDetailRspField *arg1 = (CThostFtdcTransferQryDetailRspField *) 0 ;
  
  arg1 = (CThostFtdcTransferQryDetailRspField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspInfoField_ErrorID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspInfoField *arg1 = (CThostFtdcRspInfoField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcRspInfoField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspInfoField_ErrorID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspInfoField *arg1 = (CThostFtdcRspInfoField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcRspInfoField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspInfoField_ErrorMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspInfoField *arg1 = (CThostFtdcRspInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspInfoField_ErrorMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspInfoField *arg1 = (CThostFtdcRspInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspInfoField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcRspInfoField___() {
  void * jresult ;
  CThostFtdcRspInfoField *result = 0 ;
  
  result = (CThostFtdcRspInfoField *)new CThostFtdcRspInfoField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcRspInfoField___(void * jarg1) {
  CThostFtdcRspInfoField *arg1 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcRspInfoField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeField *arg1 = (CThostFtdcExchangeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeField *arg1 = (CThostFtdcExchangeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeField_ExchangeName_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeField *arg1 = (CThostFtdcExchangeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeName, (const char *)arg2, 61-1);
      arg1->ExchangeName[61-1] = 0;
    } else {
      arg1->ExchangeName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeField_ExchangeName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeField *arg1 = (CThostFtdcExchangeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeField *)jarg1; 
  result = (char *) ((arg1)->ExchangeName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeField_ExchangeProperty_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeField *arg1 = (CThostFtdcExchangeField *) 0 ;
  TThostFtdcExchangePropertyType arg2 ;
  
  arg1 = (CThostFtdcExchangeField *)jarg1; 
  arg2 = (TThostFtdcExchangePropertyType)jarg2; 
  if (arg1) (arg1)->ExchangeProperty = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeField_ExchangeProperty_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeField *arg1 = (CThostFtdcExchangeField *) 0 ;
  TThostFtdcExchangePropertyType result;
  
  arg1 = (CThostFtdcExchangeField *)jarg1; 
  result = (TThostFtdcExchangePropertyType) ((arg1)->ExchangeProperty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcExchangeField___() {
  void * jresult ;
  CThostFtdcExchangeField *result = 0 ;
  
  result = (CThostFtdcExchangeField *)new CThostFtdcExchangeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcExchangeField___(void * jarg1) {
  CThostFtdcExchangeField *arg1 = (CThostFtdcExchangeField *) 0 ;
  
  arg1 = (CThostFtdcExchangeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_ProductID_set___(void * jarg1, char * jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProductID, (const char *)arg2, 31-1);
      arg1->ProductID[31-1] = 0;
    } else {
      arg1->ProductID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_ProductID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (char *) ((arg1)->ProductID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_ProductName_set___(void * jarg1, char * jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProductName, (const char *)arg2, 21-1);
      arg1->ProductName[21-1] = 0;
    } else {
      arg1->ProductName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_ProductName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (char *) ((arg1)->ProductName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_ProductClass_set___(void * jarg1, char jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcProductClassType arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (TThostFtdcProductClassType)jarg2; 
  if (arg1) (arg1)->ProductClass = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_ProductClass_get___(void * jarg1) {
  char jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcProductClassType result;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (TThostFtdcProductClassType) ((arg1)->ProductClass);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_VolumeMultiple_set___(void * jarg1, int jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeMultipleType arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (TThostFtdcVolumeMultipleType)jarg2; 
  if (arg1) (arg1)->VolumeMultiple = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_VolumeMultiple_get___(void * jarg1) {
  int jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeMultipleType result;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (TThostFtdcVolumeMultipleType) ((arg1)->VolumeMultiple);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_PriceTick_set___(void * jarg1, double jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->PriceTick = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_PriceTick_get___(void * jarg1) {
  double jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->PriceTick);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_MaxMarketOrderVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MaxMarketOrderVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_MaxMarketOrderVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MaxMarketOrderVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_MinMarketOrderVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MinMarketOrderVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_MinMarketOrderVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MinMarketOrderVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_MaxLimitOrderVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MaxLimitOrderVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_MaxLimitOrderVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MaxLimitOrderVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_MinLimitOrderVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MinLimitOrderVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_MinLimitOrderVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MinLimitOrderVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_PositionType_set___(void * jarg1, char jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcPositionTypeType arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (TThostFtdcPositionTypeType)jarg2; 
  if (arg1) (arg1)->PositionType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_PositionType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcPositionTypeType result;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (TThostFtdcPositionTypeType) ((arg1)->PositionType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_PositionDateType_set___(void * jarg1, char jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcPositionDateTypeType arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (TThostFtdcPositionDateTypeType)jarg2; 
  if (arg1) (arg1)->PositionDateType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_PositionDateType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcPositionDateTypeType result;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (TThostFtdcPositionDateTypeType) ((arg1)->PositionDateType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_CloseDealType_set___(void * jarg1, char jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcCloseDealTypeType arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (TThostFtdcCloseDealTypeType)jarg2; 
  if (arg1) (arg1)->CloseDealType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_CloseDealType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcCloseDealTypeType result;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (TThostFtdcCloseDealTypeType) ((arg1)->CloseDealType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_TradeCurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCurrencyID, (const char *)arg2, 4-1);
      arg1->TradeCurrencyID[4-1] = 0;
    } else {
      arg1->TradeCurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_TradeCurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (char *) ((arg1)->TradeCurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_MortgageFundUseRange_set___(void * jarg1, char jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcMortgageFundUseRangeType arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (TThostFtdcMortgageFundUseRangeType)jarg2; 
  if (arg1) (arg1)->MortgageFundUseRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_MortgageFundUseRange_get___(void * jarg1) {
  char jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcMortgageFundUseRangeType result;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (TThostFtdcMortgageFundUseRangeType) ((arg1)->MortgageFundUseRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_ExchangeProductID_set___(void * jarg1, char * jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeProductID, (const char *)arg2, 31-1);
      arg1->ExchangeProductID[31-1] = 0;
    } else {
      arg1->ExchangeProductID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_ExchangeProductID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (char *) ((arg1)->ExchangeProductID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_UnderlyingMultiple_set___(void * jarg1, double jarg2) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcUnderlyingMultipleType arg2 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  arg2 = (TThostFtdcUnderlyingMultipleType)jarg2; 
  if (arg1) (arg1)->UnderlyingMultiple = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductField_UnderlyingMultiple_get___(void * jarg1) {
  double jresult ;
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  TThostFtdcUnderlyingMultipleType result;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  result = (TThostFtdcUnderlyingMultipleType) ((arg1)->UnderlyingMultiple);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcProductField___() {
  void * jresult ;
  CThostFtdcProductField *result = 0 ;
  
  result = (CThostFtdcProductField *)new CThostFtdcProductField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcProductField___(void * jarg1) {
  CThostFtdcProductField *arg1 = (CThostFtdcProductField *) 0 ;
  
  arg1 = (CThostFtdcProductField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_InstrumentName_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentName, (const char *)arg2, 21-1);
      arg1->InstrumentName[21-1] = 0;
    } else {
      arg1->InstrumentName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_InstrumentName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (char *) ((arg1)->InstrumentName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_ExchangeInstID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_ExchangeInstID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_ProductID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProductID, (const char *)arg2, 31-1);
      arg1->ProductID[31-1] = 0;
    } else {
      arg1->ProductID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_ProductID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (char *) ((arg1)->ProductID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_ProductClass_set___(void * jarg1, char jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcProductClassType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcProductClassType)jarg2; 
  if (arg1) (arg1)->ProductClass = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_ProductClass_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcProductClassType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcProductClassType) ((arg1)->ProductClass);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_DeliveryYear_set___(void * jarg1, int jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcYearType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcYearType)jarg2; 
  if (arg1) (arg1)->DeliveryYear = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_DeliveryYear_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcYearType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcYearType) ((arg1)->DeliveryYear);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_DeliveryMonth_set___(void * jarg1, int jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcMonthType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcMonthType)jarg2; 
  if (arg1) (arg1)->DeliveryMonth = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_DeliveryMonth_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcMonthType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcMonthType) ((arg1)->DeliveryMonth);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_MaxMarketOrderVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MaxMarketOrderVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_MaxMarketOrderVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MaxMarketOrderVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_MinMarketOrderVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MinMarketOrderVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_MinMarketOrderVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MinMarketOrderVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_MaxLimitOrderVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MaxLimitOrderVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_MaxLimitOrderVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MaxLimitOrderVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_MinLimitOrderVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MinLimitOrderVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_MinLimitOrderVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MinLimitOrderVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_VolumeMultiple_set___(void * jarg1, int jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeMultipleType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcVolumeMultipleType)jarg2; 
  if (arg1) (arg1)->VolumeMultiple = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_VolumeMultiple_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcVolumeMultipleType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcVolumeMultipleType) ((arg1)->VolumeMultiple);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_PriceTick_set___(void * jarg1, double jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->PriceTick = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_PriceTick_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->PriceTick);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_CreateDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CreateDate, (const char *)arg2, 9-1);
      arg1->CreateDate[9-1] = 0;
    } else {
      arg1->CreateDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_CreateDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (char *) ((arg1)->CreateDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_OpenDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OpenDate, (const char *)arg2, 9-1);
      arg1->OpenDate[9-1] = 0;
    } else {
      arg1->OpenDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_OpenDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (char *) ((arg1)->OpenDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_ExpireDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExpireDate, (const char *)arg2, 9-1);
      arg1->ExpireDate[9-1] = 0;
    } else {
      arg1->ExpireDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_ExpireDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (char *) ((arg1)->ExpireDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_StartDelivDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StartDelivDate, (const char *)arg2, 9-1);
      arg1->StartDelivDate[9-1] = 0;
    } else {
      arg1->StartDelivDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_StartDelivDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (char *) ((arg1)->StartDelivDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_EndDelivDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->EndDelivDate, (const char *)arg2, 9-1);
      arg1->EndDelivDate[9-1] = 0;
    } else {
      arg1->EndDelivDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_EndDelivDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (char *) ((arg1)->EndDelivDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_InstLifePhase_set___(void * jarg1, char jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcInstLifePhaseType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcInstLifePhaseType)jarg2; 
  if (arg1) (arg1)->InstLifePhase = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_InstLifePhase_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcInstLifePhaseType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcInstLifePhaseType) ((arg1)->InstLifePhase);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_IsTrading_set___(void * jarg1, int jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsTrading = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_IsTrading_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsTrading);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_PositionType_set___(void * jarg1, char jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcPositionTypeType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcPositionTypeType)jarg2; 
  if (arg1) (arg1)->PositionType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_PositionType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcPositionTypeType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcPositionTypeType) ((arg1)->PositionType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_PositionDateType_set___(void * jarg1, char jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcPositionDateTypeType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcPositionDateTypeType)jarg2; 
  if (arg1) (arg1)->PositionDateType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_PositionDateType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcPositionDateTypeType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcPositionDateTypeType) ((arg1)->PositionDateType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_LongMarginRatio_set___(void * jarg1, double jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->LongMarginRatio = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_LongMarginRatio_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->LongMarginRatio);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_ShortMarginRatio_set___(void * jarg1, double jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->ShortMarginRatio = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_ShortMarginRatio_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->ShortMarginRatio);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_MaxMarginSideAlgorithm_set___(void * jarg1, char jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcMaxMarginSideAlgorithmType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcMaxMarginSideAlgorithmType)jarg2; 
  if (arg1) (arg1)->MaxMarginSideAlgorithm = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_MaxMarginSideAlgorithm_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcMaxMarginSideAlgorithmType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcMaxMarginSideAlgorithmType) ((arg1)->MaxMarginSideAlgorithm);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_UnderlyingInstrID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UnderlyingInstrID, (const char *)arg2, 31-1);
      arg1->UnderlyingInstrID[31-1] = 0;
    } else {
      arg1->UnderlyingInstrID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_UnderlyingInstrID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (char *) ((arg1)->UnderlyingInstrID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_StrikePrice_set___(void * jarg1, double jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->StrikePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_StrikePrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->StrikePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_OptionsType_set___(void * jarg1, char jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcOptionsTypeType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcOptionsTypeType)jarg2; 
  if (arg1) (arg1)->OptionsType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_OptionsType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcOptionsTypeType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcOptionsTypeType) ((arg1)->OptionsType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_UnderlyingMultiple_set___(void * jarg1, double jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcUnderlyingMultipleType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcUnderlyingMultipleType)jarg2; 
  if (arg1) (arg1)->UnderlyingMultiple = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_UnderlyingMultiple_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcUnderlyingMultipleType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcUnderlyingMultipleType) ((arg1)->UnderlyingMultiple);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_CombinationType_set___(void * jarg1, char jarg2) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcCombinationTypeType arg2 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  arg2 = (TThostFtdcCombinationTypeType)jarg2; 
  if (arg1) (arg1)->CombinationType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentField_CombinationType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  TThostFtdcCombinationTypeType result;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  result = (TThostFtdcCombinationTypeType) ((arg1)->CombinationType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcInstrumentField___() {
  void * jresult ;
  CThostFtdcInstrumentField *result = 0 ;
  
  result = (CThostFtdcInstrumentField *)new CThostFtdcInstrumentField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcInstrumentField___(void * jarg1) {
  CThostFtdcInstrumentField *arg1 = (CThostFtdcInstrumentField *) 0 ;
  
  arg1 = (CThostFtdcInstrumentField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerField *arg1 = (CThostFtdcBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerField *arg1 = (CThostFtdcBrokerField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerField_BrokerAbbr_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerField *arg1 = (CThostFtdcBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerAbbr, (const char *)arg2, 9-1);
      arg1->BrokerAbbr[9-1] = 0;
    } else {
      arg1->BrokerAbbr[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerField_BrokerAbbr_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerField *arg1 = (CThostFtdcBrokerField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerField *)jarg1; 
  result = (char *) ((arg1)->BrokerAbbr);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerField_BrokerName_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerField *arg1 = (CThostFtdcBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerName, (const char *)arg2, 81-1);
      arg1->BrokerName[81-1] = 0;
    } else {
      arg1->BrokerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerField_BrokerName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerField *arg1 = (CThostFtdcBrokerField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerField *)jarg1; 
  result = (char *) ((arg1)->BrokerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerField_IsActive_set___(void * jarg1, int jarg2) {
  CThostFtdcBrokerField *arg1 = (CThostFtdcBrokerField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcBrokerField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsActive = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerField_IsActive_get___(void * jarg1) {
  int jresult ;
  CThostFtdcBrokerField *arg1 = (CThostFtdcBrokerField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcBrokerField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcBrokerField___() {
  void * jresult ;
  CThostFtdcBrokerField *result = 0 ;
  
  result = (CThostFtdcBrokerField *)new CThostFtdcBrokerField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcBrokerField___(void * jarg1) {
  CThostFtdcBrokerField *arg1 = (CThostFtdcBrokerField *) 0 ;
  
  arg1 = (CThostFtdcBrokerField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderField_Password_set___(void * jarg1, char * jarg2) {
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderField_Password_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderField_InstallCount_set___(void * jarg1, int jarg2) {
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  TThostFtdcInstallCountType arg2 ;
  
  arg1 = (CThostFtdcTraderField *)jarg1; 
  arg2 = (TThostFtdcInstallCountType)jarg2; 
  if (arg1) (arg1)->InstallCount = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderField_InstallCount_get___(void * jarg1) {
  int jresult ;
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  TThostFtdcInstallCountType result;
  
  arg1 = (CThostFtdcTraderField *)jarg1; 
  result = (TThostFtdcInstallCountType) ((arg1)->InstallCount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcTraderField___() {
  void * jresult ;
  CThostFtdcTraderField *result = 0 ;
  
  result = (CThostFtdcTraderField *)new CThostFtdcTraderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcTraderField___(void * jarg1) {
  CThostFtdcTraderField *arg1 = (CThostFtdcTraderField *) 0 ;
  
  arg1 = (CThostFtdcTraderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorField_InvestorGroupID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorGroupID, (const char *)arg2, 13-1);
      arg1->InvestorGroupID[13-1] = 0;
    } else {
      arg1->InvestorGroupID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorField_InvestorGroupID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  result = (char *) ((arg1)->InvestorGroupID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorField_InvestorName_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorName, (const char *)arg2, 81-1);
      arg1->InvestorName[81-1] = 0;
    } else {
      arg1->InvestorName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorField_InvestorName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  result = (char *) ((arg1)->InvestorName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorField_IdentifiedCardType_set___(void * jarg1, char jarg2) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdentifiedCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorField_IdentifiedCardType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdentifiedCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorField_IdentifiedCardNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorField_IdentifiedCardNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorField_IsActive_set___(void * jarg1, int jarg2) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsActive = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorField_IsActive_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorField_Telephone_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorField_Telephone_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  result = (char *) ((arg1)->Telephone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorField_Address_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorField_Address_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  result = (char *) ((arg1)->Address);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorField_OpenDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OpenDate, (const char *)arg2, 9-1);
      arg1->OpenDate[9-1] = 0;
    } else {
      arg1->OpenDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorField_OpenDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  result = (char *) ((arg1)->OpenDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorField_Mobile_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Mobile, (const char *)arg2, 41-1);
      arg1->Mobile[41-1] = 0;
    } else {
      arg1->Mobile[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorField_Mobile_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  result = (char *) ((arg1)->Mobile);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorField_CommModelID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommModelID, (const char *)arg2, 13-1);
      arg1->CommModelID[13-1] = 0;
    } else {
      arg1->CommModelID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorField_CommModelID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  result = (char *) ((arg1)->CommModelID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorField_MarginModelID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MarginModelID, (const char *)arg2, 13-1);
      arg1->MarginModelID[13-1] = 0;
    } else {
      arg1->MarginModelID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorField_MarginModelID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  result = (char *) ((arg1)->MarginModelID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcInvestorField___() {
  void * jresult ;
  CThostFtdcInvestorField *result = 0 ;
  
  result = (CThostFtdcInvestorField *)new CThostFtdcInvestorField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcInvestorField___(void * jarg1) {
  CThostFtdcInvestorField *arg1 = (CThostFtdcInvestorField *) 0 ;
  
  arg1 = (CThostFtdcInvestorField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingCodeField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingCodeField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingCodeField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingCodeField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingCodeField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingCodeField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingCodeField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingCodeField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingCodeField_IsActive_set___(void * jarg1, int jarg2) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsActive = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingCodeField_IsActive_get___(void * jarg1) {
  int jresult ;
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingCodeField_ClientIDType_set___(void * jarg1, char jarg2) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  TThostFtdcClientIDTypeType arg2 ;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  arg2 = (TThostFtdcClientIDTypeType)jarg2; 
  if (arg1) (arg1)->ClientIDType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingCodeField_ClientIDType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  TThostFtdcClientIDTypeType result;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  result = (TThostFtdcClientIDTypeType) ((arg1)->ClientIDType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcTradingCodeField___() {
  void * jresult ;
  CThostFtdcTradingCodeField *result = 0 ;
  
  result = (CThostFtdcTradingCodeField *)new CThostFtdcTradingCodeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcTradingCodeField___(void * jarg1) {
  CThostFtdcTradingCodeField *arg1 = (CThostFtdcTradingCodeField *) 0 ;
  
  arg1 = (CThostFtdcTradingCodeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcPartBrokerField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcPartBrokerField *arg1 = (CThostFtdcPartBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcPartBrokerField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcPartBrokerField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcPartBrokerField *arg1 = (CThostFtdcPartBrokerField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcPartBrokerField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcPartBrokerField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcPartBrokerField *arg1 = (CThostFtdcPartBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcPartBrokerField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcPartBrokerField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcPartBrokerField *arg1 = (CThostFtdcPartBrokerField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcPartBrokerField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcPartBrokerField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcPartBrokerField *arg1 = (CThostFtdcPartBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcPartBrokerField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcPartBrokerField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcPartBrokerField *arg1 = (CThostFtdcPartBrokerField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcPartBrokerField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcPartBrokerField_IsActive_set___(void * jarg1, int jarg2) {
  CThostFtdcPartBrokerField *arg1 = (CThostFtdcPartBrokerField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcPartBrokerField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsActive = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcPartBrokerField_IsActive_get___(void * jarg1) {
  int jresult ;
  CThostFtdcPartBrokerField *arg1 = (CThostFtdcPartBrokerField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcPartBrokerField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcPartBrokerField___() {
  void * jresult ;
  CThostFtdcPartBrokerField *result = 0 ;
  
  result = (CThostFtdcPartBrokerField *)new CThostFtdcPartBrokerField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcPartBrokerField___(void * jarg1) {
  CThostFtdcPartBrokerField *arg1 = (CThostFtdcPartBrokerField *) 0 ;
  
  arg1 = (CThostFtdcPartBrokerField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSuperUserField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSuperUserField *arg1 = (CThostFtdcSuperUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSuperUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSuperUserField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSuperUserField *arg1 = (CThostFtdcSuperUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSuperUserField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSuperUserField_UserName_set___(void * jarg1, char * jarg2) {
  CThostFtdcSuperUserField *arg1 = (CThostFtdcSuperUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSuperUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserName, (const char *)arg2, 81-1);
      arg1->UserName[81-1] = 0;
    } else {
      arg1->UserName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSuperUserField_UserName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSuperUserField *arg1 = (CThostFtdcSuperUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSuperUserField *)jarg1; 
  result = (char *) ((arg1)->UserName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSuperUserField_Password_set___(void * jarg1, char * jarg2) {
  CThostFtdcSuperUserField *arg1 = (CThostFtdcSuperUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSuperUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSuperUserField_Password_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSuperUserField *arg1 = (CThostFtdcSuperUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSuperUserField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSuperUserField_IsActive_set___(void * jarg1, int jarg2) {
  CThostFtdcSuperUserField *arg1 = (CThostFtdcSuperUserField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcSuperUserField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsActive = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSuperUserField_IsActive_get___(void * jarg1) {
  int jresult ;
  CThostFtdcSuperUserField *arg1 = (CThostFtdcSuperUserField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcSuperUserField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcSuperUserField___() {
  void * jresult ;
  CThostFtdcSuperUserField *result = 0 ;
  
  result = (CThostFtdcSuperUserField *)new CThostFtdcSuperUserField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcSuperUserField___(void * jarg1) {
  CThostFtdcSuperUserField *arg1 = (CThostFtdcSuperUserField *) 0 ;
  
  arg1 = (CThostFtdcSuperUserField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSuperUserFunctionField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSuperUserFunctionField *arg1 = (CThostFtdcSuperUserFunctionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSuperUserFunctionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSuperUserFunctionField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSuperUserFunctionField *arg1 = (CThostFtdcSuperUserFunctionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSuperUserFunctionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSuperUserFunctionField_FunctionCode_set___(void * jarg1, char jarg2) {
  CThostFtdcSuperUserFunctionField *arg1 = (CThostFtdcSuperUserFunctionField *) 0 ;
  TThostFtdcFunctionCodeType arg2 ;
  
  arg1 = (CThostFtdcSuperUserFunctionField *)jarg1; 
  arg2 = (TThostFtdcFunctionCodeType)jarg2; 
  if (arg1) (arg1)->FunctionCode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSuperUserFunctionField_FunctionCode_get___(void * jarg1) {
  char jresult ;
  CThostFtdcSuperUserFunctionField *arg1 = (CThostFtdcSuperUserFunctionField *) 0 ;
  TThostFtdcFunctionCodeType result;
  
  arg1 = (CThostFtdcSuperUserFunctionField *)jarg1; 
  result = (TThostFtdcFunctionCodeType) ((arg1)->FunctionCode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcSuperUserFunctionField___() {
  void * jresult ;
  CThostFtdcSuperUserFunctionField *result = 0 ;
  
  result = (CThostFtdcSuperUserFunctionField *)new CThostFtdcSuperUserFunctionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcSuperUserFunctionField___(void * jarg1) {
  CThostFtdcSuperUserFunctionField *arg1 = (CThostFtdcSuperUserFunctionField *) 0 ;
  
  arg1 = (CThostFtdcSuperUserFunctionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorGroupField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorGroupField *arg1 = (CThostFtdcInvestorGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorGroupField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorGroupField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorGroupField *arg1 = (CThostFtdcInvestorGroupField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorGroupField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorGroupField_InvestorGroupID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorGroupField *arg1 = (CThostFtdcInvestorGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorGroupField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorGroupID, (const char *)arg2, 13-1);
      arg1->InvestorGroupID[13-1] = 0;
    } else {
      arg1->InvestorGroupID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorGroupField_InvestorGroupID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorGroupField *arg1 = (CThostFtdcInvestorGroupField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorGroupField *)jarg1; 
  result = (char *) ((arg1)->InvestorGroupID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorGroupField_InvestorGroupName_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorGroupField *arg1 = (CThostFtdcInvestorGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorGroupField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorGroupName, (const char *)arg2, 41-1);
      arg1->InvestorGroupName[41-1] = 0;
    } else {
      arg1->InvestorGroupName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorGroupField_InvestorGroupName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorGroupField *arg1 = (CThostFtdcInvestorGroupField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorGroupField *)jarg1; 
  result = (char *) ((arg1)->InvestorGroupName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcInvestorGroupField___() {
  void * jresult ;
  CThostFtdcInvestorGroupField *result = 0 ;
  
  result = (CThostFtdcInvestorGroupField *)new CThostFtdcInvestorGroupField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcInvestorGroupField___(void * jarg1) {
  CThostFtdcInvestorGroupField *arg1 = (CThostFtdcInvestorGroupField *) 0 ;
  
  arg1 = (CThostFtdcInvestorGroupField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_PreMortgage_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreMortgage = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_PreMortgage_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreMortgage);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_PreCredit_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreCredit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_PreCredit_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreCredit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_PreDeposit_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreDeposit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_PreDeposit_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreDeposit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_PreBalance_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreBalance = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_PreBalance_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreBalance);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_PreMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_PreMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_InterestBase_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->InterestBase = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_InterestBase_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->InterestBase);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_Interest_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Interest = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_Interest_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Interest);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_Deposit_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Deposit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_Deposit_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Deposit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_Withdraw_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Withdraw = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_Withdraw_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Withdraw);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_FrozenMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_FrozenMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_FrozenCash_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenCash = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_FrozenCash_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCash);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_FrozenCommission_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenCommission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_FrozenCommission_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCommission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_CurrMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CurrMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_CurrMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CurrMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_CashIn_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CashIn = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_CashIn_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CashIn);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_Commission_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Commission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_Commission_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Commission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_CloseProfit_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_CloseProfit_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_PositionProfit_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_PositionProfit_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_Balance_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Balance = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_Balance_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Balance);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_Available_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Available = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_Available_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Available);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_WithdrawQuota_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->WithdrawQuota = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_WithdrawQuota_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->WithdrawQuota);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_Reserve_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Reserve = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_Reserve_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Reserve);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_SettlementID_set___(void * jarg1, int jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_SettlementID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_Credit_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Credit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_Credit_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Credit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_Mortgage_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Mortgage = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_Mortgage_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Mortgage);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_ExchangeMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchangeMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_ExchangeMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchangeMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_DeliveryMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->DeliveryMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_DeliveryMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->DeliveryMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_ExchangeDeliveryMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchangeDeliveryMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_ExchangeDeliveryMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchangeDeliveryMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_ReserveBalance_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ReserveBalance = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_ReserveBalance_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ReserveBalance);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_PreFundMortgageIn_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreFundMortgageIn = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_PreFundMortgageIn_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreFundMortgageIn);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_PreFundMortgageOut_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreFundMortgageOut = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_PreFundMortgageOut_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreFundMortgageOut);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_FundMortgageIn_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FundMortgageIn = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_FundMortgageIn_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FundMortgageIn);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_FundMortgageOut_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FundMortgageOut = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_FundMortgageOut_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FundMortgageOut);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_FundMortgageAvailable_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FundMortgageAvailable = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_FundMortgageAvailable_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FundMortgageAvailable);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_MortgageableFund_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->MortgageableFund = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_MortgageableFund_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->MortgageableFund);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_SpecProductMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_SpecProductMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_SpecProductFrozenMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductFrozenMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_SpecProductFrozenMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductFrozenMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_SpecProductCommission_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductCommission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_SpecProductCommission_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductCommission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_SpecProductFrozenCommission_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductFrozenCommission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_SpecProductFrozenCommission_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductFrozenCommission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_SpecProductPositionProfit_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductPositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_SpecProductPositionProfit_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductPositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_SpecProductCloseProfit_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductCloseProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_SpecProductCloseProfit_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductCloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_SpecProductPositionProfitByAlg_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductPositionProfitByAlg = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_SpecProductPositionProfitByAlg_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductPositionProfitByAlg);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_SpecProductExchangeMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductExchangeMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountField_SpecProductExchangeMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductExchangeMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcTradingAccountField___() {
  void * jresult ;
  CThostFtdcTradingAccountField *result = 0 ;
  
  result = (CThostFtdcTradingAccountField *)new CThostFtdcTradingAccountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcTradingAccountField___(void * jarg1) {
  CThostFtdcTradingAccountField *arg1 = (CThostFtdcTradingAccountField *) 0 ;
  
  arg1 = (CThostFtdcTradingAccountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_PosiDirection_set___(void * jarg1, char jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcPosiDirectionType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcPosiDirectionType)jarg2; 
  if (arg1) (arg1)->PosiDirection = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_PosiDirection_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcPosiDirectionType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcPosiDirectionType) ((arg1)->PosiDirection);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_PositionDate_set___(void * jarg1, char jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcPositionDateType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcPositionDateType)jarg2; 
  if (arg1) (arg1)->PositionDate = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_PositionDate_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcPositionDateType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcPositionDateType) ((arg1)->PositionDate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_YdPosition_set___(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->YdPosition = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_YdPosition_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->YdPosition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_Position_set___(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Position = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_Position_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Position);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_LongFrozen_set___(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->LongFrozen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_LongFrozen_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->LongFrozen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_ShortFrozen_set___(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->ShortFrozen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_ShortFrozen_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->ShortFrozen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_LongFrozenAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->LongFrozenAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_LongFrozenAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->LongFrozenAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_ShortFrozenAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ShortFrozenAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_ShortFrozenAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ShortFrozenAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_OpenVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->OpenVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_OpenVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->OpenVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_CloseVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->CloseVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_CloseVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->CloseVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_OpenAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->OpenAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_OpenAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->OpenAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_CloseAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_CloseAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_PositionCost_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PositionCost = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_PositionCost_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PositionCost);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_PreMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_PreMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_UseMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->UseMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_UseMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->UseMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_FrozenMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_FrozenMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_FrozenCash_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenCash = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_FrozenCash_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCash);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_FrozenCommission_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenCommission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_FrozenCommission_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCommission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_CashIn_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CashIn = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_CashIn_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CashIn);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_Commission_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Commission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_Commission_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Commission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_CloseProfit_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_CloseProfit_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_PositionProfit_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_PositionProfit_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_PreSettlementPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->PreSettlementPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_PreSettlementPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->PreSettlementPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_SettlementPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->SettlementPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_SettlementPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->SettlementPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_SettlementID_set___(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_SettlementID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_OpenCost_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->OpenCost = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_OpenCost_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->OpenCost);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_ExchangeMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchangeMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_ExchangeMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchangeMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_CombPosition_set___(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->CombPosition = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_CombPosition_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->CombPosition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_CombLongFrozen_set___(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->CombLongFrozen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_CombLongFrozen_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->CombLongFrozen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_CombShortFrozen_set___(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->CombShortFrozen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_CombShortFrozen_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->CombShortFrozen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_CloseProfitByDate_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseProfitByDate = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_CloseProfitByDate_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfitByDate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_CloseProfitByTrade_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseProfitByTrade = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_CloseProfitByTrade_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfitByTrade);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_TodayPosition_set___(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->TodayPosition = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_TodayPosition_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->TodayPosition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_MarginRateByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->MarginRateByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_MarginRateByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->MarginRateByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_MarginRateByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->MarginRateByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_MarginRateByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->MarginRateByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_StrikeFrozen_set___(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->StrikeFrozen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_StrikeFrozen_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->StrikeFrozen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_StrikeFrozenAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->StrikeFrozenAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_StrikeFrozenAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->StrikeFrozenAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_AbandonFrozen_set___(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AbandonFrozen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionField_AbandonFrozen_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AbandonFrozen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcInvestorPositionField___() {
  void * jresult ;
  CThostFtdcInvestorPositionField *result = 0 ;
  
  result = (CThostFtdcInvestorPositionField *)new CThostFtdcInvestorPositionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcInvestorPositionField___(void * jarg1) {
  CThostFtdcInvestorPositionField *arg1 = (CThostFtdcInvestorPositionField *) 0 ;
  
  arg1 = (CThostFtdcInvestorPositionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateField_InvestorRange_set___(void * jarg1, char jarg2) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateField_InvestorRange_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateField_LongMarginRatioByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->LongMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateField_LongMarginRatioByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->LongMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateField_LongMarginRatioByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->LongMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateField_LongMarginRatioByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->LongMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateField_ShortMarginRatioByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->ShortMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateField_ShortMarginRatioByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->ShortMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateField_ShortMarginRatioByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ShortMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateField_ShortMarginRatioByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ShortMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateField_IsRelative_set___(void * jarg1, int jarg2) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsRelative = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateField_IsRelative_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsRelative);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcInstrumentMarginRateField___() {
  void * jresult ;
  CThostFtdcInstrumentMarginRateField *result = 0 ;
  
  result = (CThostFtdcInstrumentMarginRateField *)new CThostFtdcInstrumentMarginRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcInstrumentMarginRateField___(void * jarg1) {
  CThostFtdcInstrumentMarginRateField *arg1 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentCommissionRateField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentCommissionRateField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentCommissionRateField_InvestorRange_set___(void * jarg1, char jarg2) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentCommissionRateField_InvestorRange_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentCommissionRateField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentCommissionRateField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentCommissionRateField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentCommissionRateField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentCommissionRateField_OpenRatioByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->OpenRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentCommissionRateField_OpenRatioByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->OpenRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentCommissionRateField_OpenRatioByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->OpenRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentCommissionRateField_OpenRatioByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->OpenRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentCommissionRateField_CloseRatioByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentCommissionRateField_CloseRatioByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentCommissionRateField_CloseRatioByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentCommissionRateField_CloseRatioByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseTodayRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseTodayRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseTodayRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentCommissionRateField_CloseTodayRatioByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseTodayRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcInstrumentCommissionRateField___() {
  void * jresult ;
  CThostFtdcInstrumentCommissionRateField *result = 0 ;
  
  result = (CThostFtdcInstrumentCommissionRateField *)new CThostFtdcInstrumentCommissionRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcInstrumentCommissionRateField___(void * jarg1) {
  CThostFtdcInstrumentCommissionRateField *arg1 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  
  arg1 = (CThostFtdcInstrumentCommissionRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_ExchangeInstID_set___(void * jarg1, char * jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_ExchangeInstID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_LastPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LastPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_LastPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LastPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_PreSettlementPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->PreSettlementPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_PreSettlementPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->PreSettlementPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_PreClosePrice_set___(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->PreClosePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_PreClosePrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->PreClosePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_PreOpenInterest_set___(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcLargeVolumeType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcLargeVolumeType)jarg2; 
  if (arg1) (arg1)->PreOpenInterest = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_PreOpenInterest_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcLargeVolumeType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcLargeVolumeType) ((arg1)->PreOpenInterest);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_OpenPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->OpenPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_OpenPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->OpenPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_HighestPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->HighestPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_HighestPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->HighestPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_LowestPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LowestPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_LowestPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LowestPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_Volume_set___(void * jarg1, int jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_Volume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_Turnover_set___(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Turnover = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_Turnover_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Turnover);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_OpenInterest_set___(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcLargeVolumeType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcLargeVolumeType)jarg2; 
  if (arg1) (arg1)->OpenInterest = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_OpenInterest_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcLargeVolumeType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcLargeVolumeType) ((arg1)->OpenInterest);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_ClosePrice_set___(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->ClosePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_ClosePrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->ClosePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_SettlementPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->SettlementPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_SettlementPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->SettlementPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_UpperLimitPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->UpperLimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_UpperLimitPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->UpperLimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_LowerLimitPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LowerLimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_LowerLimitPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LowerLimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_PreDelta_set___(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->PreDelta = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_PreDelta_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->PreDelta);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_CurrDelta_set___(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CurrDelta = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_CurrDelta_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CurrDelta);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_UpdateTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpdateTime, (const char *)arg2, 9-1);
      arg1->UpdateTime[9-1] = 0;
    } else {
      arg1->UpdateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_UpdateTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (char *) ((arg1)->UpdateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_UpdateMillisec_set___(void * jarg1, int jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcMillisecType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcMillisecType)jarg2; 
  if (arg1) (arg1)->UpdateMillisec = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_UpdateMillisec_get___(void * jarg1) {
  int jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcMillisecType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcMillisecType) ((arg1)->UpdateMillisec);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_BidPrice1_set___(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->BidPrice1 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_BidPrice1_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->BidPrice1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_BidVolume1_set___(void * jarg1, int jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->BidVolume1 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_BidVolume1_get___(void * jarg1) {
  int jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_AskPrice1_set___(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AskPrice1 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_AskPrice1_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AskPrice1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_AskVolume1_set___(void * jarg1, int jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AskVolume1 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_AskVolume1_get___(void * jarg1) {
  int jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_BidPrice2_set___(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->BidPrice2 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_BidPrice2_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->BidPrice2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_BidVolume2_set___(void * jarg1, int jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->BidVolume2 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_BidVolume2_get___(void * jarg1) {
  int jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_AskPrice2_set___(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AskPrice2 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_AskPrice2_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AskPrice2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_AskVolume2_set___(void * jarg1, int jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AskVolume2 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_AskVolume2_get___(void * jarg1) {
  int jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_BidPrice3_set___(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->BidPrice3 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_BidPrice3_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->BidPrice3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_BidVolume3_set___(void * jarg1, int jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->BidVolume3 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_BidVolume3_get___(void * jarg1) {
  int jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_AskPrice3_set___(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AskPrice3 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_AskPrice3_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AskPrice3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_AskVolume3_set___(void * jarg1, int jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AskVolume3 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_AskVolume3_get___(void * jarg1) {
  int jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_BidPrice4_set___(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->BidPrice4 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_BidPrice4_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->BidPrice4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_BidVolume4_set___(void * jarg1, int jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->BidVolume4 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_BidVolume4_get___(void * jarg1) {
  int jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_AskPrice4_set___(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AskPrice4 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_AskPrice4_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AskPrice4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_AskVolume4_set___(void * jarg1, int jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AskVolume4 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_AskVolume4_get___(void * jarg1) {
  int jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_BidPrice5_set___(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->BidPrice5 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_BidPrice5_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->BidPrice5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_BidVolume5_set___(void * jarg1, int jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->BidVolume5 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_BidVolume5_get___(void * jarg1) {
  int jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_AskPrice5_set___(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AskPrice5 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_AskPrice5_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AskPrice5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_AskVolume5_set___(void * jarg1, int jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AskVolume5 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_AskVolume5_get___(void * jarg1) {
  int jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_AveragePrice_set___(void * jarg1, double jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AveragePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_AveragePrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AveragePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_ActionDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDay, (const char *)arg2, 9-1);
      arg1->ActionDay[9-1] = 0;
    } else {
      arg1->ActionDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepthMarketDataField_ActionDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  result = (char *) ((arg1)->ActionDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcDepthMarketDataField___() {
  void * jresult ;
  CThostFtdcDepthMarketDataField *result = 0 ;
  
  result = (CThostFtdcDepthMarketDataField *)new CThostFtdcDepthMarketDataField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcDepthMarketDataField___(void * jarg1) {
  CThostFtdcDepthMarketDataField *arg1 = (CThostFtdcDepthMarketDataField *) 0 ;
  
  arg1 = (CThostFtdcDepthMarketDataField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentTradingRightField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentTradingRightField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentTradingRightField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentTradingRightField_InvestorRange_set___(void * jarg1, char jarg2) {
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcInstrumentTradingRightField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentTradingRightField_InvestorRange_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcInstrumentTradingRightField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentTradingRightField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentTradingRightField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentTradingRightField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentTradingRightField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentTradingRightField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentTradingRightField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentTradingRightField_TradingRight_set___(void * jarg1, char jarg2) {
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  TThostFtdcTradingRightType arg2 ;
  
  arg1 = (CThostFtdcInstrumentTradingRightField *)jarg1; 
  arg2 = (TThostFtdcTradingRightType)jarg2; 
  if (arg1) (arg1)->TradingRight = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentTradingRightField_TradingRight_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  TThostFtdcTradingRightType result;
  
  arg1 = (CThostFtdcInstrumentTradingRightField *)jarg1; 
  result = (TThostFtdcTradingRightType) ((arg1)->TradingRight);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcInstrumentTradingRightField___() {
  void * jresult ;
  CThostFtdcInstrumentTradingRightField *result = 0 ;
  
  result = (CThostFtdcInstrumentTradingRightField *)new CThostFtdcInstrumentTradingRightField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcInstrumentTradingRightField___(void * jarg1) {
  CThostFtdcInstrumentTradingRightField *arg1 = (CThostFtdcInstrumentTradingRightField *) 0 ;
  
  arg1 = (CThostFtdcInstrumentTradingRightField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserField_UserName_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserName, (const char *)arg2, 81-1);
      arg1->UserName[81-1] = 0;
    } else {
      arg1->UserName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserField_UserName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  result = (char *) ((arg1)->UserName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserField_UserType_set___(void * jarg1, char jarg2) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  TThostFtdcUserTypeType arg2 ;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  arg2 = (TThostFtdcUserTypeType)jarg2; 
  if (arg1) (arg1)->UserType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserField_UserType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  TThostFtdcUserTypeType result;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  result = (TThostFtdcUserTypeType) ((arg1)->UserType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserField_IsActive_set___(void * jarg1, int jarg2) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsActive = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserField_IsActive_get___(void * jarg1) {
  int jresult ;
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserField_IsUsingOTP_set___(void * jarg1, int jarg2) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsUsingOTP = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserField_IsUsingOTP_get___(void * jarg1) {
  int jresult ;
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsUsingOTP);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcBrokerUserField___() {
  void * jresult ;
  CThostFtdcBrokerUserField *result = 0 ;
  
  result = (CThostFtdcBrokerUserField *)new CThostFtdcBrokerUserField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcBrokerUserField___(void * jarg1) {
  CThostFtdcBrokerUserField *arg1 = (CThostFtdcBrokerUserField *) 0 ;
  
  arg1 = (CThostFtdcBrokerUserField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserPasswordField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserPasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserPasswordField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserPasswordField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserPasswordField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserPasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserPasswordField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserPasswordField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserPasswordField_Password_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserPasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserPasswordField_Password_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserPasswordField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcBrokerUserPasswordField___() {
  void * jresult ;
  CThostFtdcBrokerUserPasswordField *result = 0 ;
  
  result = (CThostFtdcBrokerUserPasswordField *)new CThostFtdcBrokerUserPasswordField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcBrokerUserPasswordField___(void * jarg1) {
  CThostFtdcBrokerUserPasswordField *arg1 = (CThostFtdcBrokerUserPasswordField *) 0 ;
  
  arg1 = (CThostFtdcBrokerUserPasswordField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserFunctionField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserFunctionField *arg1 = (CThostFtdcBrokerUserFunctionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserFunctionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserFunctionField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserFunctionField *arg1 = (CThostFtdcBrokerUserFunctionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserFunctionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserFunctionField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserFunctionField *arg1 = (CThostFtdcBrokerUserFunctionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserFunctionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserFunctionField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserFunctionField *arg1 = (CThostFtdcBrokerUserFunctionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserFunctionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserFunctionField_BrokerFunctionCode_set___(void * jarg1, char jarg2) {
  CThostFtdcBrokerUserFunctionField *arg1 = (CThostFtdcBrokerUserFunctionField *) 0 ;
  TThostFtdcBrokerFunctionCodeType arg2 ;
  
  arg1 = (CThostFtdcBrokerUserFunctionField *)jarg1; 
  arg2 = (TThostFtdcBrokerFunctionCodeType)jarg2; 
  if (arg1) (arg1)->BrokerFunctionCode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserFunctionField_BrokerFunctionCode_get___(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerUserFunctionField *arg1 = (CThostFtdcBrokerUserFunctionField *) 0 ;
  TThostFtdcBrokerFunctionCodeType result;
  
  arg1 = (CThostFtdcBrokerUserFunctionField *)jarg1; 
  result = (TThostFtdcBrokerFunctionCodeType) ((arg1)->BrokerFunctionCode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcBrokerUserFunctionField___() {
  void * jresult ;
  CThostFtdcBrokerUserFunctionField *result = 0 ;
  
  result = (CThostFtdcBrokerUserFunctionField *)new CThostFtdcBrokerUserFunctionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcBrokerUserFunctionField___(void * jarg1) {
  CThostFtdcBrokerUserFunctionField *arg1 = (CThostFtdcBrokerUserFunctionField *) 0 ;
  
  arg1 = (CThostFtdcBrokerUserFunctionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_Password_set___(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_Password_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_OrderLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_OrderLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->OrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_TraderConnectStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  TThostFtdcTraderConnectStatusType arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (TThostFtdcTraderConnectStatusType)jarg2; 
  if (arg1) (arg1)->TraderConnectStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_TraderConnectStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  TThostFtdcTraderConnectStatusType result;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (TThostFtdcTraderConnectStatusType) ((arg1)->TraderConnectStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_ConnectRequestDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ConnectRequestDate, (const char *)arg2, 9-1);
      arg1->ConnectRequestDate[9-1] = 0;
    } else {
      arg1->ConnectRequestDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_ConnectRequestDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ConnectRequestDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_ConnectRequestTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ConnectRequestTime, (const char *)arg2, 9-1);
      arg1->ConnectRequestTime[9-1] = 0;
    } else {
      arg1->ConnectRequestTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_ConnectRequestTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ConnectRequestTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_LastReportDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastReportDate, (const char *)arg2, 9-1);
      arg1->LastReportDate[9-1] = 0;
    } else {
      arg1->LastReportDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_LastReportDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->LastReportDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_LastReportTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastReportTime, (const char *)arg2, 9-1);
      arg1->LastReportTime[9-1] = 0;
    } else {
      arg1->LastReportTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_LastReportTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->LastReportTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_ConnectDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ConnectDate, (const char *)arg2, 9-1);
      arg1->ConnectDate[9-1] = 0;
    } else {
      arg1->ConnectDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_ConnectDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ConnectDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_ConnectTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ConnectTime, (const char *)arg2, 9-1);
      arg1->ConnectTime[9-1] = 0;
    } else {
      arg1->ConnectTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_ConnectTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ConnectTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_StartDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StartDate, (const char *)arg2, 9-1);
      arg1->StartDate[9-1] = 0;
    } else {
      arg1->StartDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_StartDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->StartDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_StartTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StartTime, (const char *)arg2, 9-1);
      arg1->StartTime[9-1] = 0;
    } else {
      arg1->StartTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_StartTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->StartTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_MaxTradeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MaxTradeID, (const char *)arg2, 21-1);
      arg1->MaxTradeID[21-1] = 0;
    } else {
      arg1->MaxTradeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_MaxTradeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->MaxTradeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_MaxOrderMessageReference_set___(void * jarg1, char * jarg2) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MaxOrderMessageReference, (const char *)arg2, 7-1);
      arg1->MaxOrderMessageReference[7-1] = 0;
    } else {
      arg1->MaxOrderMessageReference[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderOfferField_MaxOrderMessageReference_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->MaxOrderMessageReference);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcTraderOfferField___() {
  void * jresult ;
  CThostFtdcTraderOfferField *result = 0 ;
  
  result = (CThostFtdcTraderOfferField *)new CThostFtdcTraderOfferField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcTraderOfferField___(void * jarg1) {
  CThostFtdcTraderOfferField *arg1 = (CThostFtdcTraderOfferField *) 0 ;
  
  arg1 = (CThostFtdcTraderOfferField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSettlementInfoField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSettlementInfoField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSettlementInfoField_SettlementID_set___(void * jarg1, int jarg2) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSettlementInfoField_SettlementID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSettlementInfoField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSettlementInfoField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSettlementInfoField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSettlementInfoField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSettlementInfoField_SequenceNo_set___(void * jarg1, int jarg2) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSettlementInfoField_SequenceNo_get___(void * jarg1) {
  int jresult ;
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSettlementInfoField_Content_set___(void * jarg1, char * jarg2) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Content, (const char *)arg2, 501-1);
      arg1->Content[501-1] = 0;
    } else {
      arg1->Content[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSettlementInfoField_Content_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  result = (char *) ((arg1)->Content);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcSettlementInfoField___() {
  void * jresult ;
  CThostFtdcSettlementInfoField *result = 0 ;
  
  result = (CThostFtdcSettlementInfoField *)new CThostFtdcSettlementInfoField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcSettlementInfoField___(void * jarg1) {
  CThostFtdcSettlementInfoField *arg1 = (CThostFtdcSettlementInfoField *) 0 ;
  
  arg1 = (CThostFtdcSettlementInfoField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateAdjustField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateAdjustField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateAdjustField_InvestorRange_set___(void * jarg1, char jarg2) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateAdjustField_InvestorRange_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateAdjustField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateAdjustField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateAdjustField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateAdjustField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateAdjustField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateAdjustField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->LongMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->LongMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->LongMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateAdjustField_LongMarginRatioByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->LongMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->ShortMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->ShortMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ShortMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateAdjustField_ShortMarginRatioByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ShortMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateAdjustField_IsRelative_set___(void * jarg1, int jarg2) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsRelative = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentMarginRateAdjustField_IsRelative_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsRelative);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcInstrumentMarginRateAdjustField___() {
  void * jresult ;
  CThostFtdcInstrumentMarginRateAdjustField *result = 0 ;
  
  result = (CThostFtdcInstrumentMarginRateAdjustField *)new CThostFtdcInstrumentMarginRateAdjustField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcInstrumentMarginRateAdjustField___(void * jarg1) {
  CThostFtdcInstrumentMarginRateAdjustField *arg1 = (CThostFtdcInstrumentMarginRateAdjustField *) 0 ;
  
  arg1 = (CThostFtdcInstrumentMarginRateAdjustField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateField_LongMarginRatioByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->LongMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateField_LongMarginRatioByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->LongMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateField_LongMarginRatioByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->LongMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateField_LongMarginRatioByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->LongMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateField_ShortMarginRatioByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->ShortMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateField_ShortMarginRatioByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->ShortMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateField_ShortMarginRatioByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ShortMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateField_ShortMarginRatioByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ShortMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcExchangeMarginRateField___() {
  void * jresult ;
  CThostFtdcExchangeMarginRateField *result = 0 ;
  
  result = (CThostFtdcExchangeMarginRateField *)new CThostFtdcExchangeMarginRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcExchangeMarginRateField___(void * jarg1) {
  CThostFtdcExchangeMarginRateField *arg1 = (CThostFtdcExchangeMarginRateField *) 0 ;
  
  arg1 = (CThostFtdcExchangeMarginRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->LongMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->LongMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->LongMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_LongMarginRatioByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->LongMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->ShortMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->ShortMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ShortMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_ShortMarginRatioByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ShortMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->ExchLongMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->ExchLongMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchLongMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_ExchLongMarginRatioByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchLongMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->ExchShortMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->ExchShortMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchShortMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_ExchShortMarginRatioByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchShortMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->NoLongMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->NoLongMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->NoLongMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_NoLongMarginRatioByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->NoLongMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->NoShortMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->NoShortMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->NoShortMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeMarginRateAdjustField_NoShortMarginRatioByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->NoShortMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcExchangeMarginRateAdjustField___() {
  void * jresult ;
  CThostFtdcExchangeMarginRateAdjustField *result = 0 ;
  
  result = (CThostFtdcExchangeMarginRateAdjustField *)new CThostFtdcExchangeMarginRateAdjustField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcExchangeMarginRateAdjustField___(void * jarg1) {
  CThostFtdcExchangeMarginRateAdjustField *arg1 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  
  arg1 = (CThostFtdcExchangeMarginRateAdjustField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeRateField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeRateField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeRateField_FromCurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FromCurrencyID, (const char *)arg2, 4-1);
      arg1->FromCurrencyID[4-1] = 0;
    } else {
      arg1->FromCurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeRateField_FromCurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeRateField *)jarg1; 
  result = (char *) ((arg1)->FromCurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeRateField_FromCurrencyUnit_set___(void * jarg1, double jarg2) {
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  TThostFtdcCurrencyUnitType arg2 ;
  
  arg1 = (CThostFtdcExchangeRateField *)jarg1; 
  arg2 = (TThostFtdcCurrencyUnitType)jarg2; 
  if (arg1) (arg1)->FromCurrencyUnit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeRateField_FromCurrencyUnit_get___(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  TThostFtdcCurrencyUnitType result;
  
  arg1 = (CThostFtdcExchangeRateField *)jarg1; 
  result = (TThostFtdcCurrencyUnitType) ((arg1)->FromCurrencyUnit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeRateField_ToCurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ToCurrencyID, (const char *)arg2, 4-1);
      arg1->ToCurrencyID[4-1] = 0;
    } else {
      arg1->ToCurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeRateField_ToCurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeRateField *)jarg1; 
  result = (char *) ((arg1)->ToCurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeRateField_ExchangeRate_set___(void * jarg1, double jarg2) {
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  TThostFtdcExchangeRateType arg2 ;
  
  arg1 = (CThostFtdcExchangeRateField *)jarg1; 
  arg2 = (TThostFtdcExchangeRateType)jarg2; 
  if (arg1) (arg1)->ExchangeRate = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeRateField_ExchangeRate_get___(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  TThostFtdcExchangeRateType result;
  
  arg1 = (CThostFtdcExchangeRateField *)jarg1; 
  result = (TThostFtdcExchangeRateType) ((arg1)->ExchangeRate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcExchangeRateField___() {
  void * jresult ;
  CThostFtdcExchangeRateField *result = 0 ;
  
  result = (CThostFtdcExchangeRateField *)new CThostFtdcExchangeRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcExchangeRateField___(void * jarg1) {
  CThostFtdcExchangeRateField *arg1 = (CThostFtdcExchangeRateField *) 0 ;
  
  arg1 = (CThostFtdcExchangeRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSettlementRefField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcSettlementRefField *arg1 = (CThostFtdcSettlementRefField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSettlementRefField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSettlementRefField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSettlementRefField *arg1 = (CThostFtdcSettlementRefField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSettlementRefField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSettlementRefField_SettlementID_set___(void * jarg1, int jarg2) {
  CThostFtdcSettlementRefField *arg1 = (CThostFtdcSettlementRefField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcSettlementRefField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSettlementRefField_SettlementID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcSettlementRefField *arg1 = (CThostFtdcSettlementRefField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcSettlementRefField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcSettlementRefField___() {
  void * jresult ;
  CThostFtdcSettlementRefField *result = 0 ;
  
  result = (CThostFtdcSettlementRefField *)new CThostFtdcSettlementRefField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcSettlementRefField___(void * jarg1) {
  CThostFtdcSettlementRefField *arg1 = (CThostFtdcSettlementRefField *) 0 ;
  
  arg1 = (CThostFtdcSettlementRefField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCurrentTimeField_CurrDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcCurrentTimeField *arg1 = (CThostFtdcCurrentTimeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCurrentTimeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrDate, (const char *)arg2, 9-1);
      arg1->CurrDate[9-1] = 0;
    } else {
      arg1->CurrDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCurrentTimeField_CurrDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCurrentTimeField *arg1 = (CThostFtdcCurrentTimeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCurrentTimeField *)jarg1; 
  result = (char *) ((arg1)->CurrDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCurrentTimeField_CurrTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcCurrentTimeField *arg1 = (CThostFtdcCurrentTimeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCurrentTimeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrTime, (const char *)arg2, 9-1);
      arg1->CurrTime[9-1] = 0;
    } else {
      arg1->CurrTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCurrentTimeField_CurrTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCurrentTimeField *arg1 = (CThostFtdcCurrentTimeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCurrentTimeField *)jarg1; 
  result = (char *) ((arg1)->CurrTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCurrentTimeField_CurrMillisec_set___(void * jarg1, int jarg2) {
  CThostFtdcCurrentTimeField *arg1 = (CThostFtdcCurrentTimeField *) 0 ;
  TThostFtdcMillisecType arg2 ;
  
  arg1 = (CThostFtdcCurrentTimeField *)jarg1; 
  arg2 = (TThostFtdcMillisecType)jarg2; 
  if (arg1) (arg1)->CurrMillisec = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCurrentTimeField_CurrMillisec_get___(void * jarg1) {
  int jresult ;
  CThostFtdcCurrentTimeField *arg1 = (CThostFtdcCurrentTimeField *) 0 ;
  TThostFtdcMillisecType result;
  
  arg1 = (CThostFtdcCurrentTimeField *)jarg1; 
  result = (TThostFtdcMillisecType) ((arg1)->CurrMillisec);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCurrentTimeField_ActionDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcCurrentTimeField *arg1 = (CThostFtdcCurrentTimeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCurrentTimeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDay, (const char *)arg2, 9-1);
      arg1->ActionDay[9-1] = 0;
    } else {
      arg1->ActionDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCurrentTimeField_ActionDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCurrentTimeField *arg1 = (CThostFtdcCurrentTimeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCurrentTimeField *)jarg1; 
  result = (char *) ((arg1)->ActionDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcCurrentTimeField___() {
  void * jresult ;
  CThostFtdcCurrentTimeField *result = 0 ;
  
  result = (CThostFtdcCurrentTimeField *)new CThostFtdcCurrentTimeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcCurrentTimeField___(void * jarg1) {
  CThostFtdcCurrentTimeField *arg1 = (CThostFtdcCurrentTimeField *) 0 ;
  
  arg1 = (CThostFtdcCurrentTimeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCommPhaseField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcCommPhaseField *arg1 = (CThostFtdcCommPhaseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCommPhaseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCommPhaseField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCommPhaseField *arg1 = (CThostFtdcCommPhaseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCommPhaseField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCommPhaseField_CommPhaseNo_set___(void * jarg1, short jarg2) {
  CThostFtdcCommPhaseField *arg1 = (CThostFtdcCommPhaseField *) 0 ;
  TThostFtdcCommPhaseNoType arg2 ;
  
  arg1 = (CThostFtdcCommPhaseField *)jarg1; 
  arg2 = (TThostFtdcCommPhaseNoType)jarg2; 
  if (arg1) (arg1)->CommPhaseNo = arg2;
}


SWIGEXPORT short SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCommPhaseField_CommPhaseNo_get___(void * jarg1) {
  short jresult ;
  CThostFtdcCommPhaseField *arg1 = (CThostFtdcCommPhaseField *) 0 ;
  TThostFtdcCommPhaseNoType result;
  
  arg1 = (CThostFtdcCommPhaseField *)jarg1; 
  result = (TThostFtdcCommPhaseNoType) ((arg1)->CommPhaseNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCommPhaseField_SystemID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCommPhaseField *arg1 = (CThostFtdcCommPhaseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCommPhaseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SystemID, (const char *)arg2, 21-1);
      arg1->SystemID[21-1] = 0;
    } else {
      arg1->SystemID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCommPhaseField_SystemID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCommPhaseField *arg1 = (CThostFtdcCommPhaseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCommPhaseField *)jarg1; 
  result = (char *) ((arg1)->SystemID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcCommPhaseField___() {
  void * jresult ;
  CThostFtdcCommPhaseField *result = 0 ;
  
  result = (CThostFtdcCommPhaseField *)new CThostFtdcCommPhaseField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcCommPhaseField___(void * jarg1) {
  CThostFtdcCommPhaseField *arg1 = (CThostFtdcCommPhaseField *) 0 ;
  
  arg1 = (CThostFtdcCommPhaseField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_FrontID_set___(void * jarg1, int jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_FrontID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_LoginDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LoginDate, (const char *)arg2, 9-1);
      arg1->LoginDate[9-1] = 0;
    } else {
      arg1->LoginDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_LoginDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->LoginDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_LoginTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LoginTime, (const char *)arg2, 9-1);
      arg1->LoginTime[9-1] = 0;
    } else {
      arg1->LoginTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_LoginTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->LoginTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_IPAddress_set___(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_IPAddress_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_UserProductInfo_set___(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_UserProductInfo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->UserProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_InterfaceProductInfo_set___(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InterfaceProductInfo, (const char *)arg2, 11-1);
      arg1->InterfaceProductInfo[11-1] = 0;
    } else {
      arg1->InterfaceProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_InterfaceProductInfo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->InterfaceProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_ProtocolInfo_set___(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProtocolInfo, (const char *)arg2, 11-1);
      arg1->ProtocolInfo[11-1] = 0;
    } else {
      arg1->ProtocolInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_ProtocolInfo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->ProtocolInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_SystemName_set___(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SystemName, (const char *)arg2, 41-1);
      arg1->SystemName[41-1] = 0;
    } else {
      arg1->SystemName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_SystemName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->SystemName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_Password_set___(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_Password_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_MaxOrderRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MaxOrderRef, (const char *)arg2, 13-1);
      arg1->MaxOrderRef[13-1] = 0;
    } else {
      arg1->MaxOrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_MaxOrderRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->MaxOrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_SHFETime_set___(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SHFETime, (const char *)arg2, 9-1);
      arg1->SHFETime[9-1] = 0;
    } else {
      arg1->SHFETime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_SHFETime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->SHFETime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_DCETime_set___(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DCETime, (const char *)arg2, 9-1);
      arg1->DCETime[9-1] = 0;
    } else {
      arg1->DCETime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_DCETime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->DCETime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_CZCETime_set___(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CZCETime, (const char *)arg2, 9-1);
      arg1->CZCETime[9-1] = 0;
    } else {
      arg1->CZCETime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_CZCETime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->CZCETime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_FFEXTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FFEXTime, (const char *)arg2, 9-1);
      arg1->FFEXTime[9-1] = 0;
    } else {
      arg1->FFEXTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_FFEXTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->FFEXTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_MacAddress_set___(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_MacAddress_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_OneTimePassword_set___(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OneTimePassword, (const char *)arg2, 41-1);
      arg1->OneTimePassword[41-1] = 0;
    } else {
      arg1->OneTimePassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_OneTimePassword_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->OneTimePassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_INETime_set___(void * jarg1, char * jarg2) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->INETime, (const char *)arg2, 9-1);
      arg1->INETime[9-1] = 0;
    } else {
      arg1->INETime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginInfoField_INETime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  result = (char *) ((arg1)->INETime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcLoginInfoField___() {
  void * jresult ;
  CThostFtdcLoginInfoField *result = 0 ;
  
  result = (CThostFtdcLoginInfoField *)new CThostFtdcLoginInfoField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcLoginInfoField___(void * jarg1) {
  CThostFtdcLoginInfoField *arg1 = (CThostFtdcLoginInfoField *) 0 ;
  
  arg1 = (CThostFtdcLoginInfoField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLogoutAllField_FrontID_set___(void * jarg1, int jarg2) {
  CThostFtdcLogoutAllField *arg1 = (CThostFtdcLogoutAllField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcLogoutAllField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLogoutAllField_FrontID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcLogoutAllField *arg1 = (CThostFtdcLogoutAllField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcLogoutAllField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLogoutAllField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcLogoutAllField *arg1 = (CThostFtdcLogoutAllField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcLogoutAllField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLogoutAllField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcLogoutAllField *arg1 = (CThostFtdcLogoutAllField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcLogoutAllField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLogoutAllField_SystemName_set___(void * jarg1, char * jarg2) {
  CThostFtdcLogoutAllField *arg1 = (CThostFtdcLogoutAllField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLogoutAllField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SystemName, (const char *)arg2, 41-1);
      arg1->SystemName[41-1] = 0;
    } else {
      arg1->SystemName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLogoutAllField_SystemName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLogoutAllField *arg1 = (CThostFtdcLogoutAllField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLogoutAllField *)jarg1; 
  result = (char *) ((arg1)->SystemName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcLogoutAllField___() {
  void * jresult ;
  CThostFtdcLogoutAllField *result = 0 ;
  
  result = (CThostFtdcLogoutAllField *)new CThostFtdcLogoutAllField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcLogoutAllField___(void * jarg1) {
  CThostFtdcLogoutAllField *arg1 = (CThostFtdcLogoutAllField *) 0 ;
  
  arg1 = (CThostFtdcLogoutAllField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFrontStatusField_FrontID_set___(void * jarg1, int jarg2) {
  CThostFtdcFrontStatusField *arg1 = (CThostFtdcFrontStatusField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcFrontStatusField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFrontStatusField_FrontID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcFrontStatusField *arg1 = (CThostFtdcFrontStatusField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcFrontStatusField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFrontStatusField_LastReportDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcFrontStatusField *arg1 = (CThostFtdcFrontStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFrontStatusField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastReportDate, (const char *)arg2, 9-1);
      arg1->LastReportDate[9-1] = 0;
    } else {
      arg1->LastReportDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFrontStatusField_LastReportDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcFrontStatusField *arg1 = (CThostFtdcFrontStatusField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFrontStatusField *)jarg1; 
  result = (char *) ((arg1)->LastReportDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFrontStatusField_LastReportTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcFrontStatusField *arg1 = (CThostFtdcFrontStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFrontStatusField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastReportTime, (const char *)arg2, 9-1);
      arg1->LastReportTime[9-1] = 0;
    } else {
      arg1->LastReportTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFrontStatusField_LastReportTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcFrontStatusField *arg1 = (CThostFtdcFrontStatusField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFrontStatusField *)jarg1; 
  result = (char *) ((arg1)->LastReportTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFrontStatusField_IsActive_set___(void * jarg1, int jarg2) {
  CThostFtdcFrontStatusField *arg1 = (CThostFtdcFrontStatusField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcFrontStatusField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsActive = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFrontStatusField_IsActive_get___(void * jarg1) {
  int jresult ;
  CThostFtdcFrontStatusField *arg1 = (CThostFtdcFrontStatusField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcFrontStatusField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcFrontStatusField___() {
  void * jresult ;
  CThostFtdcFrontStatusField *result = 0 ;
  
  result = (CThostFtdcFrontStatusField *)new CThostFtdcFrontStatusField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcFrontStatusField___(void * jarg1) {
  CThostFtdcFrontStatusField *arg1 = (CThostFtdcFrontStatusField *) 0 ;
  
  arg1 = (CThostFtdcFrontStatusField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserPasswordUpdateField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcUserPasswordUpdateField *arg1 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserPasswordUpdateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserPasswordUpdateField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcUserPasswordUpdateField *arg1 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserPasswordUpdateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserPasswordUpdateField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcUserPasswordUpdateField *arg1 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserPasswordUpdateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserPasswordUpdateField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcUserPasswordUpdateField *arg1 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserPasswordUpdateField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserPasswordUpdateField_OldPassword_set___(void * jarg1, char * jarg2) {
  CThostFtdcUserPasswordUpdateField *arg1 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserPasswordUpdateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OldPassword, (const char *)arg2, 41-1);
      arg1->OldPassword[41-1] = 0;
    } else {
      arg1->OldPassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserPasswordUpdateField_OldPassword_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcUserPasswordUpdateField *arg1 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserPasswordUpdateField *)jarg1; 
  result = (char *) ((arg1)->OldPassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserPasswordUpdateField_NewPassword_set___(void * jarg1, char * jarg2) {
  CThostFtdcUserPasswordUpdateField *arg1 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserPasswordUpdateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->NewPassword, (const char *)arg2, 41-1);
      arg1->NewPassword[41-1] = 0;
    } else {
      arg1->NewPassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserPasswordUpdateField_NewPassword_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcUserPasswordUpdateField *arg1 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserPasswordUpdateField *)jarg1; 
  result = (char *) ((arg1)->NewPassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcUserPasswordUpdateField___() {
  void * jresult ;
  CThostFtdcUserPasswordUpdateField *result = 0 ;
  
  result = (CThostFtdcUserPasswordUpdateField *)new CThostFtdcUserPasswordUpdateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcUserPasswordUpdateField___(void * jarg1) {
  CThostFtdcUserPasswordUpdateField *arg1 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  
  arg1 = (CThostFtdcUserPasswordUpdateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_OrderRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_OrderRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (char *) ((arg1)->OrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_OrderPriceType_set___(void * jarg1, char jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderPriceTypeType)jarg2; 
  if (arg1) (arg1)->OrderPriceType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_OrderPriceType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcOrderPriceTypeType) ((arg1)->OrderPriceType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_Direction_set___(void * jarg1, char jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_Direction_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_CombOffsetFlag_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombOffsetFlag, (const char *)arg2, 5-1);
      arg1->CombOffsetFlag[5-1] = 0;
    } else {
      arg1->CombOffsetFlag[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_CombOffsetFlag_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (char *) ((arg1)->CombOffsetFlag);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_CombHedgeFlag_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombHedgeFlag, (const char *)arg2, 5-1);
      arg1->CombHedgeFlag[5-1] = 0;
    } else {
      arg1->CombHedgeFlag[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_CombHedgeFlag_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (char *) ((arg1)->CombHedgeFlag);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_LimitPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_LimitPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_VolumeTotalOriginal_set___(void * jarg1, int jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeTotalOriginal = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_VolumeTotalOriginal_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTotalOriginal);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_TimeCondition_set___(void * jarg1, char jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcTimeConditionType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcTimeConditionType)jarg2; 
  if (arg1) (arg1)->TimeCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_TimeCondition_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcTimeConditionType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcTimeConditionType) ((arg1)->TimeCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_GTDDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->GTDDate, (const char *)arg2, 9-1);
      arg1->GTDDate[9-1] = 0;
    } else {
      arg1->GTDDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_GTDDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (char *) ((arg1)->GTDDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_VolumeCondition_set___(void * jarg1, char jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcVolumeConditionType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeConditionType)jarg2; 
  if (arg1) (arg1)->VolumeCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_VolumeCondition_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcVolumeConditionType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcVolumeConditionType) ((arg1)->VolumeCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_MinVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MinVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_MinVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MinVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_ContingentCondition_set___(void * jarg1, char jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcContingentConditionType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcContingentConditionType)jarg2; 
  if (arg1) (arg1)->ContingentCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_ContingentCondition_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcContingentConditionType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcContingentConditionType) ((arg1)->ContingentCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_StopPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->StopPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_StopPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->StopPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_ForceCloseReason_set___(void * jarg1, char jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcForceCloseReasonType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcForceCloseReasonType)jarg2; 
  if (arg1) (arg1)->ForceCloseReason = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_ForceCloseReason_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcForceCloseReasonType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcForceCloseReasonType) ((arg1)->ForceCloseReason);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_IsAutoSuspend_set___(void * jarg1, int jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsAutoSuspend = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_IsAutoSuspend_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsAutoSuspend);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_BusinessUnit_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_BusinessUnit_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_UserForceClose_set___(void * jarg1, int jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->UserForceClose = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_UserForceClose_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->UserForceClose);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_IsSwapOrder_set___(void * jarg1, int jarg2) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsSwapOrder = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderField_IsSwapOrder_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsSwapOrder);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcInputOrderField___() {
  void * jresult ;
  CThostFtdcInputOrderField *result = 0 ;
  
  result = (CThostFtdcInputOrderField *)new CThostFtdcInputOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcInputOrderField___(void * jarg1) {
  CThostFtdcInputOrderField *arg1 = (CThostFtdcInputOrderField *) 0 ;
  
  arg1 = (CThostFtdcInputOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_OrderRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_OrderRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->OrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_OrderPriceType_set___(void * jarg1, char jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderPriceTypeType)jarg2; 
  if (arg1) (arg1)->OrderPriceType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_OrderPriceType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcOrderPriceTypeType) ((arg1)->OrderPriceType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_Direction_set___(void * jarg1, char jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_Direction_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_CombOffsetFlag_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombOffsetFlag, (const char *)arg2, 5-1);
      arg1->CombOffsetFlag[5-1] = 0;
    } else {
      arg1->CombOffsetFlag[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_CombOffsetFlag_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->CombOffsetFlag);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_CombHedgeFlag_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombHedgeFlag, (const char *)arg2, 5-1);
      arg1->CombHedgeFlag[5-1] = 0;
    } else {
      arg1->CombHedgeFlag[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_CombHedgeFlag_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->CombHedgeFlag);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_LimitPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_LimitPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_VolumeTotalOriginal_set___(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeTotalOriginal = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_VolumeTotalOriginal_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTotalOriginal);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_TimeCondition_set___(void * jarg1, char jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcTimeConditionType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcTimeConditionType)jarg2; 
  if (arg1) (arg1)->TimeCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_TimeCondition_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcTimeConditionType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcTimeConditionType) ((arg1)->TimeCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_GTDDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->GTDDate, (const char *)arg2, 9-1);
      arg1->GTDDate[9-1] = 0;
    } else {
      arg1->GTDDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_GTDDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->GTDDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_VolumeCondition_set___(void * jarg1, char jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeConditionType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeConditionType)jarg2; 
  if (arg1) (arg1)->VolumeCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_VolumeCondition_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeConditionType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcVolumeConditionType) ((arg1)->VolumeCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_MinVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MinVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_MinVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MinVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_ContingentCondition_set___(void * jarg1, char jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcContingentConditionType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcContingentConditionType)jarg2; 
  if (arg1) (arg1)->ContingentCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_ContingentCondition_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcContingentConditionType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcContingentConditionType) ((arg1)->ContingentCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_StopPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->StopPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_StopPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->StopPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_ForceCloseReason_set___(void * jarg1, char jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcForceCloseReasonType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcForceCloseReasonType)jarg2; 
  if (arg1) (arg1)->ForceCloseReason = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_ForceCloseReason_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcForceCloseReasonType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcForceCloseReasonType) ((arg1)->ForceCloseReason);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_IsAutoSuspend_set___(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsAutoSuspend = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_IsAutoSuspend_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsAutoSuspend);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_BusinessUnit_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_BusinessUnit_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_OrderLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_OrderLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->OrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_ExchangeInstID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_ExchangeInstID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_OrderSubmitStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderSubmitStatusType)jarg2; 
  if (arg1) (arg1)->OrderSubmitStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_OrderSubmitStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcOrderSubmitStatusType) ((arg1)->OrderSubmitStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_NotifySequence_set___(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->NotifySequence = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_NotifySequence_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_SettlementID_set___(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_SettlementID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_OrderSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_OrderSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->OrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_OrderSource_set___(void * jarg1, char jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderSourceType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderSourceType)jarg2; 
  if (arg1) (arg1)->OrderSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_OrderSource_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderSourceType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcOrderSourceType) ((arg1)->OrderSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_OrderStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderStatusType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderStatusType)jarg2; 
  if (arg1) (arg1)->OrderStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_OrderStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderStatusType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcOrderStatusType) ((arg1)->OrderStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_OrderType_set___(void * jarg1, char jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderTypeType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderTypeType)jarg2; 
  if (arg1) (arg1)->OrderType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_OrderType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcOrderTypeType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcOrderTypeType) ((arg1)->OrderType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_VolumeTraded_set___(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeTraded = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_VolumeTraded_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTraded);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_VolumeTotal_set___(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeTotal = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_VolumeTotal_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTotal);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_InsertDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_InsertDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_InsertTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_InsertTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_ActiveTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveTime, (const char *)arg2, 9-1);
      arg1->ActiveTime[9-1] = 0;
    } else {
      arg1->ActiveTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_ActiveTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->ActiveTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_SuspendTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SuspendTime, (const char *)arg2, 9-1);
      arg1->SuspendTime[9-1] = 0;
    } else {
      arg1->SuspendTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_SuspendTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->SuspendTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_UpdateTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpdateTime, (const char *)arg2, 9-1);
      arg1->UpdateTime[9-1] = 0;
    } else {
      arg1->UpdateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_UpdateTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->UpdateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_CancelTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CancelTime, (const char *)arg2, 9-1);
      arg1->CancelTime[9-1] = 0;
    } else {
      arg1->CancelTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_CancelTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->CancelTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_ActiveTraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveTraderID, (const char *)arg2, 21-1);
      arg1->ActiveTraderID[21-1] = 0;
    } else {
      arg1->ActiveTraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_ActiveTraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->ActiveTraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_ClearingPartID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_ClearingPartID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->ClearingPartID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_SequenceNo_set___(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_SequenceNo_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_FrontID_set___(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_FrontID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_UserProductInfo_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_UserProductInfo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->UserProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_StatusMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_StatusMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->StatusMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_UserForceClose_set___(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->UserForceClose = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_UserForceClose_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->UserForceClose);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_ActiveUserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveUserID, (const char *)arg2, 16-1);
      arg1->ActiveUserID[16-1] = 0;
    } else {
      arg1->ActiveUserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_ActiveUserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->ActiveUserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_BrokerOrderSeq_set___(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->BrokerOrderSeq = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_BrokerOrderSeq_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->BrokerOrderSeq);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_RelativeOrderSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RelativeOrderSysID, (const char *)arg2, 21-1);
      arg1->RelativeOrderSysID[21-1] = 0;
    } else {
      arg1->RelativeOrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_RelativeOrderSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (char *) ((arg1)->RelativeOrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_ZCETotalTradedVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->ZCETotalTradedVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_ZCETotalTradedVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->ZCETotalTradedVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_IsSwapOrder_set___(void * jarg1, int jarg2) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsSwapOrder = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderField_IsSwapOrder_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsSwapOrder);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcOrderField___() {
  void * jresult ;
  CThostFtdcOrderField *result = 0 ;
  
  result = (CThostFtdcOrderField *)new CThostFtdcOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcOrderField___(void * jarg1) {
  CThostFtdcOrderField *arg1 = (CThostFtdcOrderField *) 0 ;
  
  arg1 = (CThostFtdcOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_OrderPriceType_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderPriceTypeType)jarg2; 
  if (arg1) (arg1)->OrderPriceType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_OrderPriceType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcOrderPriceTypeType) ((arg1)->OrderPriceType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_Direction_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_Direction_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_CombOffsetFlag_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombOffsetFlag, (const char *)arg2, 5-1);
      arg1->CombOffsetFlag[5-1] = 0;
    } else {
      arg1->CombOffsetFlag[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_CombOffsetFlag_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->CombOffsetFlag);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_CombHedgeFlag_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombHedgeFlag, (const char *)arg2, 5-1);
      arg1->CombHedgeFlag[5-1] = 0;
    } else {
      arg1->CombHedgeFlag[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_CombHedgeFlag_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->CombHedgeFlag);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_LimitPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_LimitPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_VolumeTotalOriginal_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeTotalOriginal = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_VolumeTotalOriginal_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTotalOriginal);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_TimeCondition_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcTimeConditionType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcTimeConditionType)jarg2; 
  if (arg1) (arg1)->TimeCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_TimeCondition_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcTimeConditionType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcTimeConditionType) ((arg1)->TimeCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_GTDDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->GTDDate, (const char *)arg2, 9-1);
      arg1->GTDDate[9-1] = 0;
    } else {
      arg1->GTDDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_GTDDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->GTDDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_VolumeCondition_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeConditionType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeConditionType)jarg2; 
  if (arg1) (arg1)->VolumeCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_VolumeCondition_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeConditionType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcVolumeConditionType) ((arg1)->VolumeCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_MinVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MinVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_MinVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MinVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_ContingentCondition_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcContingentConditionType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcContingentConditionType)jarg2; 
  if (arg1) (arg1)->ContingentCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_ContingentCondition_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcContingentConditionType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcContingentConditionType) ((arg1)->ContingentCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_StopPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->StopPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_StopPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->StopPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_ForceCloseReason_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcForceCloseReasonType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcForceCloseReasonType)jarg2; 
  if (arg1) (arg1)->ForceCloseReason = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_ForceCloseReason_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcForceCloseReasonType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcForceCloseReasonType) ((arg1)->ForceCloseReason);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_IsAutoSuspend_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsAutoSuspend = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_IsAutoSuspend_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsAutoSuspend);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_BusinessUnit_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_BusinessUnit_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_OrderLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_OrderLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->OrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_ExchangeInstID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_ExchangeInstID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_OrderSubmitStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderSubmitStatusType)jarg2; 
  if (arg1) (arg1)->OrderSubmitStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_OrderSubmitStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcOrderSubmitStatusType) ((arg1)->OrderSubmitStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_NotifySequence_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->NotifySequence = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_NotifySequence_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_SettlementID_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_SettlementID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_OrderSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_OrderSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->OrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_OrderSource_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderSourceType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderSourceType)jarg2; 
  if (arg1) (arg1)->OrderSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_OrderSource_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderSourceType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcOrderSourceType) ((arg1)->OrderSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_OrderStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderStatusType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderStatusType)jarg2; 
  if (arg1) (arg1)->OrderStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_OrderStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderStatusType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcOrderStatusType) ((arg1)->OrderStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_OrderType_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderTypeType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderTypeType)jarg2; 
  if (arg1) (arg1)->OrderType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_OrderType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcOrderTypeType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcOrderTypeType) ((arg1)->OrderType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_VolumeTraded_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeTraded = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_VolumeTraded_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTraded);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_VolumeTotal_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeTotal = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_VolumeTotal_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTotal);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_InsertDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_InsertDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_InsertTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_InsertTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_ActiveTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveTime, (const char *)arg2, 9-1);
      arg1->ActiveTime[9-1] = 0;
    } else {
      arg1->ActiveTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_ActiveTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->ActiveTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_SuspendTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SuspendTime, (const char *)arg2, 9-1);
      arg1->SuspendTime[9-1] = 0;
    } else {
      arg1->SuspendTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_SuspendTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->SuspendTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_UpdateTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpdateTime, (const char *)arg2, 9-1);
      arg1->UpdateTime[9-1] = 0;
    } else {
      arg1->UpdateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_UpdateTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->UpdateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_CancelTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CancelTime, (const char *)arg2, 9-1);
      arg1->CancelTime[9-1] = 0;
    } else {
      arg1->CancelTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_CancelTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->CancelTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_ActiveTraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveTraderID, (const char *)arg2, 21-1);
      arg1->ActiveTraderID[21-1] = 0;
    } else {
      arg1->ActiveTraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_ActiveTraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->ActiveTraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_ClearingPartID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_ClearingPartID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->ClearingPartID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_SequenceNo_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderField_SequenceNo_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcExchangeOrderField___() {
  void * jresult ;
  CThostFtdcExchangeOrderField *result = 0 ;
  
  result = (CThostFtdcExchangeOrderField *)new CThostFtdcExchangeOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcExchangeOrderField___(void * jarg1) {
  CThostFtdcExchangeOrderField *arg1 = (CThostFtdcExchangeOrderField *) 0 ;
  
  arg1 = (CThostFtdcExchangeOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderInsertErrorField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderInsertErrorField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderInsertErrorField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderInsertErrorField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderInsertErrorField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderInsertErrorField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderInsertErrorField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderInsertErrorField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderInsertErrorField_OrderLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderInsertErrorField_OrderLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  result = (char *) ((arg1)->OrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderInsertErrorField_ErrorID_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderInsertErrorField_ErrorID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderInsertErrorField_ErrorMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderInsertErrorField_ErrorMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcExchangeOrderInsertErrorField___() {
  void * jresult ;
  CThostFtdcExchangeOrderInsertErrorField *result = 0 ;
  
  result = (CThostFtdcExchangeOrderInsertErrorField *)new CThostFtdcExchangeOrderInsertErrorField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcExchangeOrderInsertErrorField___(void * jarg1) {
  CThostFtdcExchangeOrderInsertErrorField *arg1 = (CThostFtdcExchangeOrderInsertErrorField *) 0 ;
  
  arg1 = (CThostFtdcExchangeOrderInsertErrorField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_OrderActionRef_set___(void * jarg1, int jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionRefType)jarg2; 
  if (arg1) (arg1)->OrderActionRef = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_OrderActionRef_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionRefType) ((arg1)->OrderActionRef);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_OrderRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_OrderRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (char *) ((arg1)->OrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_FrontID_set___(void * jarg1, int jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_FrontID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_OrderSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_OrderSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (char *) ((arg1)->OrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_ActionFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (TThostFtdcActionFlagType)jarg2; 
  if (arg1) (arg1)->ActionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_ActionFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcActionFlagType result;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_LimitPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_LimitPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_VolumeChange_set___(void * jarg1, int jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeChange = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_VolumeChange_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeChange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputOrderActionField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcInputOrderActionField___() {
  void * jresult ;
  CThostFtdcInputOrderActionField *result = 0 ;
  
  result = (CThostFtdcInputOrderActionField *)new CThostFtdcInputOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcInputOrderActionField___(void * jarg1) {
  CThostFtdcInputOrderActionField *arg1 = (CThostFtdcInputOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcInputOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_OrderActionRef_set___(void * jarg1, int jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionRefType)jarg2; 
  if (arg1) (arg1)->OrderActionRef = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_OrderActionRef_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionRefType) ((arg1)->OrderActionRef);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_OrderRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_OrderRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->OrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_FrontID_set___(void * jarg1, int jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_FrontID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_OrderSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_OrderSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->OrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_ActionFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (TThostFtdcActionFlagType)jarg2; 
  if (arg1) (arg1)->ActionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_ActionFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcActionFlagType result;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_LimitPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_LimitPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_VolumeChange_set___(void * jarg1, int jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeChange = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_VolumeChange_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeChange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_ActionDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDate, (const char *)arg2, 9-1);
      arg1->ActionDate[9-1] = 0;
    } else {
      arg1->ActionDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_ActionDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_ActionTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionTime, (const char *)arg2, 9-1);
      arg1->ActionTime[9-1] = 0;
    } else {
      arg1->ActionTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_ActionTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_OrderLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_OrderLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->OrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_ActionLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_ActionLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_BusinessUnit_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_BusinessUnit_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_OrderActionStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionStatusType)jarg2; 
  if (arg1) (arg1)->OrderActionStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_OrderActionStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionStatusType) ((arg1)->OrderActionStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_StatusMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_StatusMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->StatusMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOrderActionField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcOrderActionField___() {
  void * jresult ;
  CThostFtdcOrderActionField *result = 0 ;
  
  result = (CThostFtdcOrderActionField *)new CThostFtdcOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcOrderActionField___(void * jarg1) {
  CThostFtdcOrderActionField *arg1 = (CThostFtdcOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_OrderSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_OrderSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->OrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_ActionFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (TThostFtdcActionFlagType)jarg2; 
  if (arg1) (arg1)->ActionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_ActionFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcActionFlagType result;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_LimitPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_LimitPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_VolumeChange_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeChange = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_VolumeChange_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeChange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_ActionDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDate, (const char *)arg2, 9-1);
      arg1->ActionDate[9-1] = 0;
    } else {
      arg1->ActionDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_ActionDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_ActionTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionTime, (const char *)arg2, 9-1);
      arg1->ActionTime[9-1] = 0;
    } else {
      arg1->ActionTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_ActionTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_OrderLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_OrderLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->OrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_ActionLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_ActionLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_BusinessUnit_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_BusinessUnit_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_OrderActionStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionStatusType)jarg2; 
  if (arg1) (arg1)->OrderActionStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_OrderActionStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionStatusType) ((arg1)->OrderActionStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcExchangeOrderActionField___() {
  void * jresult ;
  CThostFtdcExchangeOrderActionField *result = 0 ;
  
  result = (CThostFtdcExchangeOrderActionField *)new CThostFtdcExchangeOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcExchangeOrderActionField___(void * jarg1) {
  CThostFtdcExchangeOrderActionField *arg1 = (CThostFtdcExchangeOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionErrorField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionErrorField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionErrorField_OrderSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionErrorField_OrderSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  result = (char *) ((arg1)->OrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionErrorField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionErrorField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionErrorField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionErrorField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionErrorField_OrderLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionErrorField_OrderLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  result = (char *) ((arg1)->OrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionErrorField_ActionLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionErrorField_ActionLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  result = (char *) ((arg1)->ActionLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionErrorField_ErrorID_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionErrorField_ErrorID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionErrorField_ErrorMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeOrderActionErrorField_ErrorMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcExchangeOrderActionErrorField___() {
  void * jresult ;
  CThostFtdcExchangeOrderActionErrorField *result = 0 ;
  
  result = (CThostFtdcExchangeOrderActionErrorField *)new CThostFtdcExchangeOrderActionErrorField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcExchangeOrderActionErrorField___(void * jarg1) {
  CThostFtdcExchangeOrderActionErrorField *arg1 = (CThostFtdcExchangeOrderActionErrorField *) 0 ;
  
  arg1 = (CThostFtdcExchangeOrderActionErrorField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_TradeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeID, (const char *)arg2, 21-1);
      arg1->TradeID[21-1] = 0;
    } else {
      arg1->TradeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_TradeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (char *) ((arg1)->TradeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_Direction_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_Direction_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_OrderSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_OrderSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (char *) ((arg1)->OrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_TradingRole_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcTradingRoleType arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (TThostFtdcTradingRoleType)jarg2; 
  if (arg1) (arg1)->TradingRole = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_TradingRole_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcTradingRoleType result;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (TThostFtdcTradingRoleType) ((arg1)->TradingRole);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_ExchangeInstID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_ExchangeInstID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_OffsetFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->OffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_OffsetFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->OffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_Price_set___(void * jarg1, double jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->Price = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_Price_get___(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->Price);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_Volume_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_Volume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_TradeType_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcTradeTypeType arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (TThostFtdcTradeTypeType)jarg2; 
  if (arg1) (arg1)->TradeType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_TradeType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcTradeTypeType result;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (TThostFtdcTradeTypeType) ((arg1)->TradeType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_PriceSource_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcPriceSourceType arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (TThostFtdcPriceSourceType)jarg2; 
  if (arg1) (arg1)->PriceSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_PriceSource_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcPriceSourceType result;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (TThostFtdcPriceSourceType) ((arg1)->PriceSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_OrderLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_OrderLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (char *) ((arg1)->OrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_ClearingPartID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_ClearingPartID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (char *) ((arg1)->ClearingPartID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_BusinessUnit_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_BusinessUnit_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_SequenceNo_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_SequenceNo_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_TradeSource_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcTradeSourceType arg2 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  arg2 = (TThostFtdcTradeSourceType)jarg2; 
  if (arg1) (arg1)->TradeSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeTradeField_TradeSource_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  TThostFtdcTradeSourceType result;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  result = (TThostFtdcTradeSourceType) ((arg1)->TradeSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcExchangeTradeField___() {
  void * jresult ;
  CThostFtdcExchangeTradeField *result = 0 ;
  
  result = (CThostFtdcExchangeTradeField *)new CThostFtdcExchangeTradeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcExchangeTradeField___(void * jarg1) {
  CThostFtdcExchangeTradeField *arg1 = (CThostFtdcExchangeTradeField *) 0 ;
  
  arg1 = (CThostFtdcExchangeTradeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_OrderRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_OrderRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->OrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_TradeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeID, (const char *)arg2, 21-1);
      arg1->TradeID[21-1] = 0;
    } else {
      arg1->TradeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_TradeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->TradeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_Direction_set___(void * jarg1, char jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_Direction_get___(void * jarg1) {
  char jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_OrderSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_OrderSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->OrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_TradingRole_set___(void * jarg1, char jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcTradingRoleType arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (TThostFtdcTradingRoleType)jarg2; 
  if (arg1) (arg1)->TradingRole = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_TradingRole_get___(void * jarg1) {
  char jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcTradingRoleType result;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (TThostFtdcTradingRoleType) ((arg1)->TradingRole);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_ExchangeInstID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_ExchangeInstID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_OffsetFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->OffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_OffsetFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->OffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_Price_set___(void * jarg1, double jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->Price = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_Price_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->Price);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_Volume_set___(void * jarg1, int jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_Volume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_TradeType_set___(void * jarg1, char jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcTradeTypeType arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (TThostFtdcTradeTypeType)jarg2; 
  if (arg1) (arg1)->TradeType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_TradeType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcTradeTypeType result;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (TThostFtdcTradeTypeType) ((arg1)->TradeType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_PriceSource_set___(void * jarg1, char jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcPriceSourceType arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (TThostFtdcPriceSourceType)jarg2; 
  if (arg1) (arg1)->PriceSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_PriceSource_get___(void * jarg1) {
  char jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcPriceSourceType result;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (TThostFtdcPriceSourceType) ((arg1)->PriceSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_OrderLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_OrderLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->OrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_ClearingPartID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_ClearingPartID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->ClearingPartID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_BusinessUnit_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_BusinessUnit_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_SequenceNo_set___(void * jarg1, int jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_SequenceNo_get___(void * jarg1) {
  int jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_SettlementID_set___(void * jarg1, int jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_SettlementID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_BrokerOrderSeq_set___(void * jarg1, int jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->BrokerOrderSeq = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_BrokerOrderSeq_get___(void * jarg1) {
  int jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->BrokerOrderSeq);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_TradeSource_set___(void * jarg1, char jarg2) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcTradeSourceType arg2 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  arg2 = (TThostFtdcTradeSourceType)jarg2; 
  if (arg1) (arg1)->TradeSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradeField_TradeSource_get___(void * jarg1) {
  char jresult ;
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  TThostFtdcTradeSourceType result;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  result = (TThostFtdcTradeSourceType) ((arg1)->TradeSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcTradeField___() {
  void * jresult ;
  CThostFtdcTradeField *result = 0 ;
  
  result = (CThostFtdcTradeField *)new CThostFtdcTradeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcTradeField___(void * jarg1) {
  CThostFtdcTradeField *arg1 = (CThostFtdcTradeField *) 0 ;
  
  arg1 = (CThostFtdcTradeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserSessionField_FrontID_set___(void * jarg1, int jarg2) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserSessionField_FrontID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserSessionField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserSessionField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserSessionField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserSessionField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserSessionField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserSessionField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserSessionField_LoginDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LoginDate, (const char *)arg2, 9-1);
      arg1->LoginDate[9-1] = 0;
    } else {
      arg1->LoginDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserSessionField_LoginDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  result = (char *) ((arg1)->LoginDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserSessionField_LoginTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LoginTime, (const char *)arg2, 9-1);
      arg1->LoginTime[9-1] = 0;
    } else {
      arg1->LoginTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserSessionField_LoginTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  result = (char *) ((arg1)->LoginTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserSessionField_IPAddress_set___(void * jarg1, char * jarg2) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserSessionField_IPAddress_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserSessionField_UserProductInfo_set___(void * jarg1, char * jarg2) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserSessionField_UserProductInfo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  result = (char *) ((arg1)->UserProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserSessionField_InterfaceProductInfo_set___(void * jarg1, char * jarg2) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InterfaceProductInfo, (const char *)arg2, 11-1);
      arg1->InterfaceProductInfo[11-1] = 0;
    } else {
      arg1->InterfaceProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserSessionField_InterfaceProductInfo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  result = (char *) ((arg1)->InterfaceProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserSessionField_ProtocolInfo_set___(void * jarg1, char * jarg2) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProtocolInfo, (const char *)arg2, 11-1);
      arg1->ProtocolInfo[11-1] = 0;
    } else {
      arg1->ProtocolInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserSessionField_ProtocolInfo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  result = (char *) ((arg1)->ProtocolInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserSessionField_MacAddress_set___(void * jarg1, char * jarg2) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserSessionField_MacAddress_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcUserSessionField___() {
  void * jresult ;
  CThostFtdcUserSessionField *result = 0 ;
  
  result = (CThostFtdcUserSessionField *)new CThostFtdcUserSessionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcUserSessionField___(void * jarg1) {
  CThostFtdcUserSessionField *arg1 = (CThostFtdcUserSessionField *) 0 ;
  
  arg1 = (CThostFtdcUserSessionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeField_Direction_set___(void * jarg1, char jarg2) {
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeField_Direction_get___(void * jarg1) {
  char jresult ;
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeField_OffsetFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->OffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeField_OffsetFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->OffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeField_MaxVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MaxVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeField_MaxVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MaxVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQueryMaxOrderVolumeField___() {
  void * jresult ;
  CThostFtdcQueryMaxOrderVolumeField *result = 0 ;
  
  result = (CThostFtdcQueryMaxOrderVolumeField *)new CThostFtdcQueryMaxOrderVolumeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQueryMaxOrderVolumeField___(void * jarg1) {
  CThostFtdcQueryMaxOrderVolumeField *arg1 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSettlementInfoConfirmField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSettlementInfoConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSettlementInfoConfirmField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSettlementInfoConfirmField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSettlementInfoConfirmField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSettlementInfoConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSettlementInfoConfirmField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSettlementInfoConfirmField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSettlementInfoConfirmField_ConfirmDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSettlementInfoConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ConfirmDate, (const char *)arg2, 9-1);
      arg1->ConfirmDate[9-1] = 0;
    } else {
      arg1->ConfirmDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSettlementInfoConfirmField_ConfirmDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSettlementInfoConfirmField *)jarg1; 
  result = (char *) ((arg1)->ConfirmDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSettlementInfoConfirmField_ConfirmTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSettlementInfoConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ConfirmTime, (const char *)arg2, 9-1);
      arg1->ConfirmTime[9-1] = 0;
    } else {
      arg1->ConfirmTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSettlementInfoConfirmField_ConfirmTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSettlementInfoConfirmField *)jarg1; 
  result = (char *) ((arg1)->ConfirmTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcSettlementInfoConfirmField___() {
  void * jresult ;
  CThostFtdcSettlementInfoConfirmField *result = 0 ;
  
  result = (CThostFtdcSettlementInfoConfirmField *)new CThostFtdcSettlementInfoConfirmField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcSettlementInfoConfirmField___(void * jarg1) {
  CThostFtdcSettlementInfoConfirmField *arg1 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  
  arg1 = (CThostFtdcSettlementInfoConfirmField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncDepositField_DepositSeqNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncDepositField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DepositSeqNo, (const char *)arg2, 15-1);
      arg1->DepositSeqNo[15-1] = 0;
    } else {
      arg1->DepositSeqNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncDepositField_DepositSeqNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncDepositField *)jarg1; 
  result = (char *) ((arg1)->DepositSeqNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncDepositField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncDepositField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncDepositField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncDepositField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncDepositField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncDepositField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncDepositField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncDepositField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncDepositField_Deposit_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncDepositField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Deposit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncDepositField_Deposit_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncDepositField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Deposit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncDepositField_IsForce_set___(void * jarg1, int jarg2) {
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcSyncDepositField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsForce = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncDepositField_IsForce_get___(void * jarg1) {
  int jresult ;
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcSyncDepositField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsForce);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncDepositField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncDepositField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncDepositField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncDepositField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcSyncDepositField___() {
  void * jresult ;
  CThostFtdcSyncDepositField *result = 0 ;
  
  result = (CThostFtdcSyncDepositField *)new CThostFtdcSyncDepositField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcSyncDepositField___(void * jarg1) {
  CThostFtdcSyncDepositField *arg1 = (CThostFtdcSyncDepositField *) 0 ;
  
  arg1 = (CThostFtdcSyncDepositField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncFundMortgageField_MortgageSeqNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncFundMortgageField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MortgageSeqNo, (const char *)arg2, 15-1);
      arg1->MortgageSeqNo[15-1] = 0;
    } else {
      arg1->MortgageSeqNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncFundMortgageField_MortgageSeqNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncFundMortgageField *)jarg1; 
  result = (char *) ((arg1)->MortgageSeqNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncFundMortgageField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncFundMortgageField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncFundMortgageField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncFundMortgageField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncFundMortgageField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncFundMortgageField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncFundMortgageField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncFundMortgageField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncFundMortgageField_FromCurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncFundMortgageField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FromCurrencyID, (const char *)arg2, 4-1);
      arg1->FromCurrencyID[4-1] = 0;
    } else {
      arg1->FromCurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncFundMortgageField_FromCurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncFundMortgageField *)jarg1; 
  result = (char *) ((arg1)->FromCurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncFundMortgageField_MortgageAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncFundMortgageField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->MortgageAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncFundMortgageField_MortgageAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncFundMortgageField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->MortgageAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncFundMortgageField_ToCurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncFundMortgageField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ToCurrencyID, (const char *)arg2, 4-1);
      arg1->ToCurrencyID[4-1] = 0;
    } else {
      arg1->ToCurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncFundMortgageField_ToCurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncFundMortgageField *)jarg1; 
  result = (char *) ((arg1)->ToCurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcSyncFundMortgageField___() {
  void * jresult ;
  CThostFtdcSyncFundMortgageField *result = 0 ;
  
  result = (CThostFtdcSyncFundMortgageField *)new CThostFtdcSyncFundMortgageField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcSyncFundMortgageField___(void * jarg1) {
  CThostFtdcSyncFundMortgageField *arg1 = (CThostFtdcSyncFundMortgageField *) 0 ;
  
  arg1 = (CThostFtdcSyncFundMortgageField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerSyncField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerSyncField *arg1 = (CThostFtdcBrokerSyncField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerSyncField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerSyncField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerSyncField *arg1 = (CThostFtdcBrokerSyncField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerSyncField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcBrokerSyncField___() {
  void * jresult ;
  CThostFtdcBrokerSyncField *result = 0 ;
  
  result = (CThostFtdcBrokerSyncField *)new CThostFtdcBrokerSyncField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcBrokerSyncField___(void * jarg1) {
  CThostFtdcBrokerSyncField *arg1 = (CThostFtdcBrokerSyncField *) 0 ;
  
  arg1 = (CThostFtdcBrokerSyncField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorField_InvestorGroupID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorGroupID, (const char *)arg2, 13-1);
      arg1->InvestorGroupID[13-1] = 0;
    } else {
      arg1->InvestorGroupID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorField_InvestorGroupID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  result = (char *) ((arg1)->InvestorGroupID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorField_InvestorName_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorName, (const char *)arg2, 81-1);
      arg1->InvestorName[81-1] = 0;
    } else {
      arg1->InvestorName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorField_InvestorName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  result = (char *) ((arg1)->InvestorName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorField_IdentifiedCardType_set___(void * jarg1, char jarg2) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdentifiedCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorField_IdentifiedCardType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdentifiedCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorField_IdentifiedCardNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorField_IdentifiedCardNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorField_IsActive_set___(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsActive = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorField_IsActive_get___(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorField_Telephone_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorField_Telephone_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  result = (char *) ((arg1)->Telephone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorField_Address_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorField_Address_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  result = (char *) ((arg1)->Address);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorField_OpenDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OpenDate, (const char *)arg2, 9-1);
      arg1->OpenDate[9-1] = 0;
    } else {
      arg1->OpenDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorField_OpenDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  result = (char *) ((arg1)->OpenDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorField_Mobile_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Mobile, (const char *)arg2, 41-1);
      arg1->Mobile[41-1] = 0;
    } else {
      arg1->Mobile[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorField_Mobile_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  result = (char *) ((arg1)->Mobile);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorField_CommModelID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommModelID, (const char *)arg2, 13-1);
      arg1->CommModelID[13-1] = 0;
    } else {
      arg1->CommModelID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorField_CommModelID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  result = (char *) ((arg1)->CommModelID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorField_MarginModelID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MarginModelID, (const char *)arg2, 13-1);
      arg1->MarginModelID[13-1] = 0;
    } else {
      arg1->MarginModelID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorField_MarginModelID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  result = (char *) ((arg1)->MarginModelID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcSyncingInvestorField___() {
  void * jresult ;
  CThostFtdcSyncingInvestorField *result = 0 ;
  
  result = (CThostFtdcSyncingInvestorField *)new CThostFtdcSyncingInvestorField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcSyncingInvestorField___(void * jarg1) {
  CThostFtdcSyncingInvestorField *arg1 = (CThostFtdcSyncingInvestorField *) 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingCodeField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingCodeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingCodeField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingTradingCodeField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingCodeField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingCodeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingCodeField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingTradingCodeField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingCodeField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingCodeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingCodeField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingTradingCodeField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingCodeField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingCodeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingCodeField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingTradingCodeField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingCodeField_IsActive_set___(void * jarg1, int jarg2) {
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingCodeField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsActive = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingCodeField_IsActive_get___(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcSyncingTradingCodeField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingCodeField_ClientIDType_set___(void * jarg1, char jarg2) {
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  TThostFtdcClientIDTypeType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingCodeField *)jarg1; 
  arg2 = (TThostFtdcClientIDTypeType)jarg2; 
  if (arg1) (arg1)->ClientIDType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingCodeField_ClientIDType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  TThostFtdcClientIDTypeType result;
  
  arg1 = (CThostFtdcSyncingTradingCodeField *)jarg1; 
  result = (TThostFtdcClientIDTypeType) ((arg1)->ClientIDType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcSyncingTradingCodeField___() {
  void * jresult ;
  CThostFtdcSyncingTradingCodeField *result = 0 ;
  
  result = (CThostFtdcSyncingTradingCodeField *)new CThostFtdcSyncingTradingCodeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcSyncingTradingCodeField___(void * jarg1) {
  CThostFtdcSyncingTradingCodeField *arg1 = (CThostFtdcSyncingTradingCodeField *) 0 ;
  
  arg1 = (CThostFtdcSyncingTradingCodeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorGroupField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorGroupField *arg1 = (CThostFtdcSyncingInvestorGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorGroupField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorGroupField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorGroupField *arg1 = (CThostFtdcSyncingInvestorGroupField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorGroupField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorGroupField_InvestorGroupID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorGroupField *arg1 = (CThostFtdcSyncingInvestorGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorGroupField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorGroupID, (const char *)arg2, 13-1);
      arg1->InvestorGroupID[13-1] = 0;
    } else {
      arg1->InvestorGroupID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorGroupField_InvestorGroupID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorGroupField *arg1 = (CThostFtdcSyncingInvestorGroupField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorGroupField *)jarg1; 
  result = (char *) ((arg1)->InvestorGroupID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorGroupField_InvestorGroupName_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorGroupField *arg1 = (CThostFtdcSyncingInvestorGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorGroupField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorGroupName, (const char *)arg2, 41-1);
      arg1->InvestorGroupName[41-1] = 0;
    } else {
      arg1->InvestorGroupName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorGroupField_InvestorGroupName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorGroupField *arg1 = (CThostFtdcSyncingInvestorGroupField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorGroupField *)jarg1; 
  result = (char *) ((arg1)->InvestorGroupName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcSyncingInvestorGroupField___() {
  void * jresult ;
  CThostFtdcSyncingInvestorGroupField *result = 0 ;
  
  result = (CThostFtdcSyncingInvestorGroupField *)new CThostFtdcSyncingInvestorGroupField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcSyncingInvestorGroupField___(void * jarg1) {
  CThostFtdcSyncingInvestorGroupField *arg1 = (CThostFtdcSyncingInvestorGroupField *) 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorGroupField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_PreMortgage_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreMortgage = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_PreMortgage_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreMortgage);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_PreCredit_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreCredit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_PreCredit_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreCredit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_PreDeposit_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreDeposit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_PreDeposit_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreDeposit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_PreBalance_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreBalance = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_PreBalance_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreBalance);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_PreMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_PreMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_InterestBase_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->InterestBase = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_InterestBase_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->InterestBase);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_Interest_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Interest = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_Interest_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Interest);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_Deposit_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Deposit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_Deposit_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Deposit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_Withdraw_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Withdraw = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_Withdraw_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Withdraw);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_FrozenMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_FrozenMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_FrozenCash_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenCash = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_FrozenCash_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCash);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_FrozenCommission_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenCommission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_FrozenCommission_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCommission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_CurrMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CurrMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_CurrMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CurrMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_CashIn_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CashIn = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_CashIn_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CashIn);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_Commission_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Commission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_Commission_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Commission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_CloseProfit_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_CloseProfit_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_PositionProfit_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_PositionProfit_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_Balance_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Balance = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_Balance_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Balance);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_Available_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Available = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_Available_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Available);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_WithdrawQuota_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->WithdrawQuota = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_WithdrawQuota_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->WithdrawQuota);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_Reserve_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Reserve = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_Reserve_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Reserve);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_SettlementID_set___(void * jarg1, int jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_SettlementID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_Credit_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Credit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_Credit_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Credit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_Mortgage_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Mortgage = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_Mortgage_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Mortgage);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_ExchangeMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchangeMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_ExchangeMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchangeMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_DeliveryMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->DeliveryMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_DeliveryMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->DeliveryMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_ExchangeDeliveryMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchangeDeliveryMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_ExchangeDeliveryMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchangeDeliveryMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_ReserveBalance_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ReserveBalance = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_ReserveBalance_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ReserveBalance);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_PreFundMortgageIn_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreFundMortgageIn = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_PreFundMortgageIn_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreFundMortgageIn);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_PreFundMortgageOut_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreFundMortgageOut = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_PreFundMortgageOut_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreFundMortgageOut);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_FundMortgageIn_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FundMortgageIn = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_FundMortgageIn_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FundMortgageIn);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_FundMortgageOut_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FundMortgageOut = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_FundMortgageOut_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FundMortgageOut);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_FundMortgageAvailable_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FundMortgageAvailable = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_FundMortgageAvailable_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FundMortgageAvailable);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_MortgageableFund_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->MortgageableFund = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_MortgageableFund_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->MortgageableFund);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_SpecProductMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_SpecProductMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_SpecProductFrozenMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductFrozenMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_SpecProductFrozenMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductFrozenMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_SpecProductCommission_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductCommission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_SpecProductCommission_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductCommission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_SpecProductFrozenCommission_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductFrozenCommission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_SpecProductFrozenCommission_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductFrozenCommission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_SpecProductPositionProfit_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductPositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_SpecProductPositionProfit_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductPositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_SpecProductCloseProfit_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductCloseProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_SpecProductCloseProfit_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductCloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_SpecProductPositionProfitByAlg_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductPositionProfitByAlg = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_SpecProductPositionProfitByAlg_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductPositionProfitByAlg);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_SpecProductExchangeMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SpecProductExchangeMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingTradingAccountField_SpecProductExchangeMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SpecProductExchangeMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcSyncingTradingAccountField___() {
  void * jresult ;
  CThostFtdcSyncingTradingAccountField *result = 0 ;
  
  result = (CThostFtdcSyncingTradingAccountField *)new CThostFtdcSyncingTradingAccountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcSyncingTradingAccountField___(void * jarg1) {
  CThostFtdcSyncingTradingAccountField *arg1 = (CThostFtdcSyncingTradingAccountField *) 0 ;
  
  arg1 = (CThostFtdcSyncingTradingAccountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_PosiDirection_set___(void * jarg1, char jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcPosiDirectionType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcPosiDirectionType)jarg2; 
  if (arg1) (arg1)->PosiDirection = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_PosiDirection_get___(void * jarg1) {
  char jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcPosiDirectionType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcPosiDirectionType) ((arg1)->PosiDirection);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_PositionDate_set___(void * jarg1, char jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcPositionDateType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcPositionDateType)jarg2; 
  if (arg1) (arg1)->PositionDate = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_PositionDate_get___(void * jarg1) {
  char jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcPositionDateType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcPositionDateType) ((arg1)->PositionDate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_YdPosition_set___(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->YdPosition = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_YdPosition_get___(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->YdPosition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_Position_set___(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Position = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_Position_get___(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Position);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_LongFrozen_set___(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->LongFrozen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_LongFrozen_get___(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->LongFrozen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_ShortFrozen_set___(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->ShortFrozen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_ShortFrozen_get___(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->ShortFrozen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_LongFrozenAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->LongFrozenAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_LongFrozenAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->LongFrozenAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_ShortFrozenAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ShortFrozenAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_ShortFrozenAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ShortFrozenAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_OpenVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->OpenVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_OpenVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->OpenVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_CloseVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->CloseVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_CloseVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->CloseVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_OpenAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->OpenAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_OpenAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->OpenAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_CloseAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_CloseAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_PositionCost_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PositionCost = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_PositionCost_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PositionCost);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_PreMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_PreMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_UseMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->UseMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_UseMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->UseMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_FrozenMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_FrozenMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_FrozenCash_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenCash = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_FrozenCash_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCash);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_FrozenCommission_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenCommission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_FrozenCommission_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCommission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_CashIn_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CashIn = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_CashIn_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CashIn);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_Commission_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Commission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_Commission_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Commission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_CloseProfit_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_CloseProfit_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_PositionProfit_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_PositionProfit_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_PreSettlementPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->PreSettlementPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_PreSettlementPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->PreSettlementPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_SettlementPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->SettlementPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_SettlementPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->SettlementPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_SettlementID_set___(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_SettlementID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_OpenCost_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->OpenCost = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_OpenCost_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->OpenCost);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_ExchangeMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchangeMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_ExchangeMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchangeMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_CombPosition_set___(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->CombPosition = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_CombPosition_get___(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->CombPosition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_CombLongFrozen_set___(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->CombLongFrozen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_CombLongFrozen_get___(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->CombLongFrozen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_CombShortFrozen_set___(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->CombShortFrozen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_CombShortFrozen_get___(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->CombShortFrozen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_CloseProfitByDate_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseProfitByDate = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_CloseProfitByDate_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfitByDate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_CloseProfitByTrade_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseProfitByTrade = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_CloseProfitByTrade_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfitByTrade);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_TodayPosition_set___(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->TodayPosition = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_TodayPosition_get___(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->TodayPosition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_MarginRateByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->MarginRateByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_MarginRateByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->MarginRateByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_MarginRateByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->MarginRateByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_MarginRateByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->MarginRateByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_StrikeFrozen_set___(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->StrikeFrozen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_StrikeFrozen_get___(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->StrikeFrozen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_StrikeFrozenAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->StrikeFrozenAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_StrikeFrozenAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->StrikeFrozenAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_AbandonFrozen_set___(void * jarg1, int jarg2) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AbandonFrozen = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInvestorPositionField_AbandonFrozen_get___(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AbandonFrozen);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcSyncingInvestorPositionField___() {
  void * jresult ;
  CThostFtdcSyncingInvestorPositionField *result = 0 ;
  
  result = (CThostFtdcSyncingInvestorPositionField *)new CThostFtdcSyncingInvestorPositionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcSyncingInvestorPositionField___(void * jarg1) {
  CThostFtdcSyncingInvestorPositionField *arg1 = (CThostFtdcSyncingInvestorPositionField *) 0 ;
  
  arg1 = (CThostFtdcSyncingInvestorPositionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentMarginRateField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentMarginRateField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentMarginRateField_InvestorRange_set___(void * jarg1, char jarg2) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentMarginRateField_InvestorRange_get___(void * jarg1) {
  char jresult ;
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentMarginRateField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentMarginRateField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentMarginRateField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentMarginRateField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentMarginRateField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentMarginRateField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->LongMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->LongMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->LongMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentMarginRateField_LongMarginRatioByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->LongMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->ShortMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->ShortMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ShortMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentMarginRateField_ShortMarginRatioByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ShortMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentMarginRateField_IsRelative_set___(void * jarg1, int jarg2) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsRelative = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentMarginRateField_IsRelative_get___(void * jarg1) {
  int jresult ;
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsRelative);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcSyncingInstrumentMarginRateField___() {
  void * jresult ;
  CThostFtdcSyncingInstrumentMarginRateField *result = 0 ;
  
  result = (CThostFtdcSyncingInstrumentMarginRateField *)new CThostFtdcSyncingInstrumentMarginRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcSyncingInstrumentMarginRateField___(void * jarg1) {
  CThostFtdcSyncingInstrumentMarginRateField *arg1 = (CThostFtdcSyncingInstrumentMarginRateField *) 0 ;
  
  arg1 = (CThostFtdcSyncingInstrumentMarginRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentCommissionRateField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentCommissionRateField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentCommissionRateField_InvestorRange_set___(void * jarg1, char jarg2) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentCommissionRateField_InvestorRange_get___(void * jarg1) {
  char jresult ;
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentCommissionRateField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentCommissionRateField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentCommissionRateField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentCommissionRateField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->OpenRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->OpenRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->OpenRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentCommissionRateField_OpenRatioByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->OpenRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentCommissionRateField_CloseRatioByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseTodayRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseTodayRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseTodayRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentCommissionRateField_CloseTodayRatioByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseTodayRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcSyncingInstrumentCommissionRateField___() {
  void * jresult ;
  CThostFtdcSyncingInstrumentCommissionRateField *result = 0 ;
  
  result = (CThostFtdcSyncingInstrumentCommissionRateField *)new CThostFtdcSyncingInstrumentCommissionRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcSyncingInstrumentCommissionRateField___(void * jarg1) {
  CThostFtdcSyncingInstrumentCommissionRateField *arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *) 0 ;
  
  arg1 = (CThostFtdcSyncingInstrumentCommissionRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentTradingRightField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentTradingRightField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInstrumentTradingRightField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentTradingRightField_InvestorRange_set___(void * jarg1, char jarg2) {
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentTradingRightField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentTradingRightField_InvestorRange_get___(void * jarg1) {
  char jresult ;
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcSyncingInstrumentTradingRightField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentTradingRightField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentTradingRightField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInstrumentTradingRightField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentTradingRightField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentTradingRightField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncingInstrumentTradingRightField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentTradingRightField_TradingRight_set___(void * jarg1, char jarg2) {
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  TThostFtdcTradingRightType arg2 ;
  
  arg1 = (CThostFtdcSyncingInstrumentTradingRightField *)jarg1; 
  arg2 = (TThostFtdcTradingRightType)jarg2; 
  if (arg1) (arg1)->TradingRight = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncingInstrumentTradingRightField_TradingRight_get___(void * jarg1) {
  char jresult ;
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  TThostFtdcTradingRightType result;
  
  arg1 = (CThostFtdcSyncingInstrumentTradingRightField *)jarg1; 
  result = (TThostFtdcTradingRightType) ((arg1)->TradingRight);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcSyncingInstrumentTradingRightField___() {
  void * jresult ;
  CThostFtdcSyncingInstrumentTradingRightField *result = 0 ;
  
  result = (CThostFtdcSyncingInstrumentTradingRightField *)new CThostFtdcSyncingInstrumentTradingRightField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcSyncingInstrumentTradingRightField___(void * jarg1) {
  CThostFtdcSyncingInstrumentTradingRightField *arg1 = (CThostFtdcSyncingInstrumentTradingRightField *) 0 ;
  
  arg1 = (CThostFtdcSyncingInstrumentTradingRightField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOrderField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOrderField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOrderField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOrderField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOrderField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOrderField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOrderField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOrderField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOrderField_OrderSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOrderField_OrderSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  result = (char *) ((arg1)->OrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOrderField_InsertTimeStart_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeStart, (const char *)arg2, 9-1);
      arg1->InsertTimeStart[9-1] = 0;
    } else {
      arg1->InsertTimeStart[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOrderField_InsertTimeStart_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertTimeStart);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOrderField_InsertTimeEnd_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeEnd, (const char *)arg2, 9-1);
      arg1->InsertTimeEnd[9-1] = 0;
    } else {
      arg1->InsertTimeEnd[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOrderField_InsertTimeEnd_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertTimeEnd);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryOrderField___() {
  void * jresult ;
  CThostFtdcQryOrderField *result = 0 ;
  
  result = (CThostFtdcQryOrderField *)new CThostFtdcQryOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryOrderField___(void * jarg1) {
  CThostFtdcQryOrderField *arg1 = (CThostFtdcQryOrderField *) 0 ;
  
  arg1 = (CThostFtdcQryOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradeField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradeField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradeField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradeField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradeField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradeField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradeField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradeField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradeField_TradeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeID, (const char *)arg2, 21-1);
      arg1->TradeID[21-1] = 0;
    } else {
      arg1->TradeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradeField_TradeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  result = (char *) ((arg1)->TradeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradeField_TradeTimeStart_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTimeStart, (const char *)arg2, 9-1);
      arg1->TradeTimeStart[9-1] = 0;
    } else {
      arg1->TradeTimeStart[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradeField_TradeTimeStart_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  result = (char *) ((arg1)->TradeTimeStart);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradeField_TradeTimeEnd_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTimeEnd, (const char *)arg2, 9-1);
      arg1->TradeTimeEnd[9-1] = 0;
    } else {
      arg1->TradeTimeEnd[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradeField_TradeTimeEnd_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  result = (char *) ((arg1)->TradeTimeEnd);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryTradeField___() {
  void * jresult ;
  CThostFtdcQryTradeField *result = 0 ;
  
  result = (CThostFtdcQryTradeField *)new CThostFtdcQryTradeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryTradeField___(void * jarg1) {
  CThostFtdcQryTradeField *arg1 = (CThostFtdcQryTradeField *) 0 ;
  
  arg1 = (CThostFtdcQryTradeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorPositionField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorPositionField *arg1 = (CThostFtdcQryInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorPositionField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorPositionField *arg1 = (CThostFtdcQryInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorPositionField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorPositionField *arg1 = (CThostFtdcQryInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorPositionField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorPositionField *arg1 = (CThostFtdcQryInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorPositionField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorPositionField *arg1 = (CThostFtdcQryInvestorPositionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorPositionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorPositionField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorPositionField *arg1 = (CThostFtdcQryInvestorPositionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryInvestorPositionField___() {
  void * jresult ;
  CThostFtdcQryInvestorPositionField *result = 0 ;
  
  result = (CThostFtdcQryInvestorPositionField *)new CThostFtdcQryInvestorPositionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryInvestorPositionField___(void * jarg1) {
  CThostFtdcQryInvestorPositionField *arg1 = (CThostFtdcQryInvestorPositionField *) 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradingAccountField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTradingAccountField *arg1 = (CThostFtdcQryTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradingAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradingAccountField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradingAccountField *arg1 = (CThostFtdcQryTradingAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradingAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradingAccountField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTradingAccountField *arg1 = (CThostFtdcQryTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradingAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradingAccountField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradingAccountField *arg1 = (CThostFtdcQryTradingAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradingAccountField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradingAccountField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTradingAccountField *arg1 = (CThostFtdcQryTradingAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradingAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradingAccountField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradingAccountField *arg1 = (CThostFtdcQryTradingAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradingAccountField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryTradingAccountField___() {
  void * jresult ;
  CThostFtdcQryTradingAccountField *result = 0 ;
  
  result = (CThostFtdcQryTradingAccountField *)new CThostFtdcQryTradingAccountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryTradingAccountField___(void * jarg1) {
  CThostFtdcQryTradingAccountField *arg1 = (CThostFtdcQryTradingAccountField *) 0 ;
  
  arg1 = (CThostFtdcQryTradingAccountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorField *arg1 = (CThostFtdcQryInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorField *arg1 = (CThostFtdcQryInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorField *arg1 = (CThostFtdcQryInvestorField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorField *arg1 = (CThostFtdcQryInvestorField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryInvestorField___() {
  void * jresult ;
  CThostFtdcQryInvestorField *result = 0 ;
  
  result = (CThostFtdcQryInvestorField *)new CThostFtdcQryInvestorField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryInvestorField___(void * jarg1) {
  CThostFtdcQryInvestorField *arg1 = (CThostFtdcQryInvestorField *) 0 ;
  
  arg1 = (CThostFtdcQryInvestorField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradingCodeField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradingCodeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradingCodeField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradingCodeField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradingCodeField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradingCodeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradingCodeField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradingCodeField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradingCodeField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradingCodeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradingCodeField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradingCodeField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradingCodeField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradingCodeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradingCodeField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradingCodeField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradingCodeField_ClientIDType_set___(void * jarg1, char jarg2) {
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  TThostFtdcClientIDTypeType arg2 ;
  
  arg1 = (CThostFtdcQryTradingCodeField *)jarg1; 
  arg2 = (TThostFtdcClientIDTypeType)jarg2; 
  if (arg1) (arg1)->ClientIDType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradingCodeField_ClientIDType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  TThostFtdcClientIDTypeType result;
  
  arg1 = (CThostFtdcQryTradingCodeField *)jarg1; 
  result = (TThostFtdcClientIDTypeType) ((arg1)->ClientIDType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryTradingCodeField___() {
  void * jresult ;
  CThostFtdcQryTradingCodeField *result = 0 ;
  
  result = (CThostFtdcQryTradingCodeField *)new CThostFtdcQryTradingCodeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryTradingCodeField___(void * jarg1) {
  CThostFtdcQryTradingCodeField *arg1 = (CThostFtdcQryTradingCodeField *) 0 ;
  
  arg1 = (CThostFtdcQryTradingCodeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorGroupField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorGroupField *arg1 = (CThostFtdcQryInvestorGroupField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorGroupField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorGroupField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorGroupField *arg1 = (CThostFtdcQryInvestorGroupField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorGroupField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryInvestorGroupField___() {
  void * jresult ;
  CThostFtdcQryInvestorGroupField *result = 0 ;
  
  result = (CThostFtdcQryInvestorGroupField *)new CThostFtdcQryInvestorGroupField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryInvestorGroupField___(void * jarg1) {
  CThostFtdcQryInvestorGroupField *arg1 = (CThostFtdcQryInvestorGroupField *) 0 ;
  
  arg1 = (CThostFtdcQryInvestorGroupField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentMarginRateField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentMarginRateField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentMarginRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentMarginRateField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentMarginRateField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentMarginRateField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentMarginRateField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentMarginRateField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentMarginRateField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentMarginRateField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentMarginRateField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentMarginRateField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcQryInstrumentMarginRateField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryInstrumentMarginRateField___() {
  void * jresult ;
  CThostFtdcQryInstrumentMarginRateField *result = 0 ;
  
  result = (CThostFtdcQryInstrumentMarginRateField *)new CThostFtdcQryInstrumentMarginRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryInstrumentMarginRateField___(void * jarg1) {
  CThostFtdcQryInstrumentMarginRateField *arg1 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  
  arg1 = (CThostFtdcQryInstrumentMarginRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentCommissionRateField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentCommissionRateField *arg1 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentCommissionRateField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentCommissionRateField *arg1 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentCommissionRateField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentCommissionRateField *arg1 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentCommissionRateField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentCommissionRateField *arg1 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentCommissionRateField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentCommissionRateField *arg1 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentCommissionRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentCommissionRateField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentCommissionRateField *arg1 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentCommissionRateField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryInstrumentCommissionRateField___() {
  void * jresult ;
  CThostFtdcQryInstrumentCommissionRateField *result = 0 ;
  
  result = (CThostFtdcQryInstrumentCommissionRateField *)new CThostFtdcQryInstrumentCommissionRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryInstrumentCommissionRateField___(void * jarg1) {
  CThostFtdcQryInstrumentCommissionRateField *arg1 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  
  arg1 = (CThostFtdcQryInstrumentCommissionRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentTradingRightField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentTradingRightField *arg1 = (CThostFtdcQryInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentTradingRightField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentTradingRightField *arg1 = (CThostFtdcQryInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentTradingRightField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentTradingRightField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentTradingRightField *arg1 = (CThostFtdcQryInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentTradingRightField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentTradingRightField *arg1 = (CThostFtdcQryInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentTradingRightField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentTradingRightField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentTradingRightField *arg1 = (CThostFtdcQryInstrumentTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentTradingRightField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentTradingRightField *arg1 = (CThostFtdcQryInstrumentTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentTradingRightField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryInstrumentTradingRightField___() {
  void * jresult ;
  CThostFtdcQryInstrumentTradingRightField *result = 0 ;
  
  result = (CThostFtdcQryInstrumentTradingRightField *)new CThostFtdcQryInstrumentTradingRightField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryInstrumentTradingRightField___(void * jarg1) {
  CThostFtdcQryInstrumentTradingRightField *arg1 = (CThostFtdcQryInstrumentTradingRightField *) 0 ;
  
  arg1 = (CThostFtdcQryInstrumentTradingRightField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerField *arg1 = (CThostFtdcQryBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerField *arg1 = (CThostFtdcQryBrokerField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryBrokerField___() {
  void * jresult ;
  CThostFtdcQryBrokerField *result = 0 ;
  
  result = (CThostFtdcQryBrokerField *)new CThostFtdcQryBrokerField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryBrokerField___(void * jarg1) {
  CThostFtdcQryBrokerField *arg1 = (CThostFtdcQryBrokerField *) 0 ;
  
  arg1 = (CThostFtdcQryBrokerField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTraderField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTraderField *arg1 = (CThostFtdcQryTraderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTraderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTraderField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTraderField *arg1 = (CThostFtdcQryTraderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTraderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTraderField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTraderField *arg1 = (CThostFtdcQryTraderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTraderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTraderField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTraderField *arg1 = (CThostFtdcQryTraderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTraderField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTraderField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTraderField *arg1 = (CThostFtdcQryTraderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTraderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTraderField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTraderField *arg1 = (CThostFtdcQryTraderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTraderField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryTraderField___() {
  void * jresult ;
  CThostFtdcQryTraderField *result = 0 ;
  
  result = (CThostFtdcQryTraderField *)new CThostFtdcQryTraderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryTraderField___(void * jarg1) {
  CThostFtdcQryTraderField *arg1 = (CThostFtdcQryTraderField *) 0 ;
  
  arg1 = (CThostFtdcQryTraderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySuperUserFunctionField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQrySuperUserFunctionField *arg1 = (CThostFtdcQrySuperUserFunctionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySuperUserFunctionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySuperUserFunctionField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySuperUserFunctionField *arg1 = (CThostFtdcQrySuperUserFunctionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySuperUserFunctionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQrySuperUserFunctionField___() {
  void * jresult ;
  CThostFtdcQrySuperUserFunctionField *result = 0 ;
  
  result = (CThostFtdcQrySuperUserFunctionField *)new CThostFtdcQrySuperUserFunctionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQrySuperUserFunctionField___(void * jarg1) {
  CThostFtdcQrySuperUserFunctionField *arg1 = (CThostFtdcQrySuperUserFunctionField *) 0 ;
  
  arg1 = (CThostFtdcQrySuperUserFunctionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryUserSessionField_FrontID_set___(void * jarg1, int jarg2) {
  CThostFtdcQryUserSessionField *arg1 = (CThostFtdcQryUserSessionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcQryUserSessionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryUserSessionField_FrontID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcQryUserSessionField *arg1 = (CThostFtdcQryUserSessionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcQryUserSessionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryUserSessionField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcQryUserSessionField *arg1 = (CThostFtdcQryUserSessionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcQryUserSessionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryUserSessionField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcQryUserSessionField *arg1 = (CThostFtdcQryUserSessionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcQryUserSessionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryUserSessionField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryUserSessionField *arg1 = (CThostFtdcQryUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryUserSessionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryUserSessionField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryUserSessionField *arg1 = (CThostFtdcQryUserSessionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryUserSessionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryUserSessionField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryUserSessionField *arg1 = (CThostFtdcQryUserSessionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryUserSessionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryUserSessionField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryUserSessionField *arg1 = (CThostFtdcQryUserSessionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryUserSessionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryUserSessionField___() {
  void * jresult ;
  CThostFtdcQryUserSessionField *result = 0 ;
  
  result = (CThostFtdcQryUserSessionField *)new CThostFtdcQryUserSessionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryUserSessionField___(void * jarg1) {
  CThostFtdcQryUserSessionField *arg1 = (CThostFtdcQryUserSessionField *) 0 ;
  
  arg1 = (CThostFtdcQryUserSessionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryPartBrokerField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryPartBrokerField *arg1 = (CThostFtdcQryPartBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryPartBrokerField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryPartBrokerField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryPartBrokerField *arg1 = (CThostFtdcQryPartBrokerField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryPartBrokerField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryPartBrokerField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryPartBrokerField *arg1 = (CThostFtdcQryPartBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryPartBrokerField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryPartBrokerField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryPartBrokerField *arg1 = (CThostFtdcQryPartBrokerField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryPartBrokerField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryPartBrokerField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryPartBrokerField *arg1 = (CThostFtdcQryPartBrokerField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryPartBrokerField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryPartBrokerField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryPartBrokerField *arg1 = (CThostFtdcQryPartBrokerField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryPartBrokerField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryPartBrokerField___() {
  void * jresult ;
  CThostFtdcQryPartBrokerField *result = 0 ;
  
  result = (CThostFtdcQryPartBrokerField *)new CThostFtdcQryPartBrokerField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryPartBrokerField___(void * jarg1) {
  CThostFtdcQryPartBrokerField *arg1 = (CThostFtdcQryPartBrokerField *) 0 ;
  
  arg1 = (CThostFtdcQryPartBrokerField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryFrontStatusField_FrontID_set___(void * jarg1, int jarg2) {
  CThostFtdcQryFrontStatusField *arg1 = (CThostFtdcQryFrontStatusField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcQryFrontStatusField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryFrontStatusField_FrontID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcQryFrontStatusField *arg1 = (CThostFtdcQryFrontStatusField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcQryFrontStatusField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryFrontStatusField___() {
  void * jresult ;
  CThostFtdcQryFrontStatusField *result = 0 ;
  
  result = (CThostFtdcQryFrontStatusField *)new CThostFtdcQryFrontStatusField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryFrontStatusField___(void * jarg1) {
  CThostFtdcQryFrontStatusField *arg1 = (CThostFtdcQryFrontStatusField *) 0 ;
  
  arg1 = (CThostFtdcQryFrontStatusField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeOrderField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeOrderField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeOrderField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeOrderField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeOrderField_ExchangeInstID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeOrderField_ExchangeInstID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeOrderField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeOrderField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeOrderField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeOrderField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeOrderField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryExchangeOrderField___() {
  void * jresult ;
  CThostFtdcQryExchangeOrderField *result = 0 ;
  
  result = (CThostFtdcQryExchangeOrderField *)new CThostFtdcQryExchangeOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryExchangeOrderField___(void * jarg1) {
  CThostFtdcQryExchangeOrderField *arg1 = (CThostFtdcQryExchangeOrderField *) 0 ;
  
  arg1 = (CThostFtdcQryExchangeOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOrderActionField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryOrderActionField *arg1 = (CThostFtdcQryOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOrderActionField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOrderActionField *arg1 = (CThostFtdcQryOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOrderActionField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryOrderActionField *arg1 = (CThostFtdcQryOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOrderActionField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOrderActionField *arg1 = (CThostFtdcQryOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOrderActionField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryOrderActionField *arg1 = (CThostFtdcQryOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOrderActionField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOrderActionField *arg1 = (CThostFtdcQryOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryOrderActionField___() {
  void * jresult ;
  CThostFtdcQryOrderActionField *result = 0 ;
  
  result = (CThostFtdcQryOrderActionField *)new CThostFtdcQryOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryOrderActionField___(void * jarg1) {
  CThostFtdcQryOrderActionField *arg1 = (CThostFtdcQryOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcQryOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeOrderActionField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeOrderActionField *arg1 = (CThostFtdcQryExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeOrderActionField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeOrderActionField *arg1 = (CThostFtdcQryExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeOrderActionField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeOrderActionField *arg1 = (CThostFtdcQryExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeOrderActionField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeOrderActionField *arg1 = (CThostFtdcQryExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeOrderActionField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeOrderActionField *arg1 = (CThostFtdcQryExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeOrderActionField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeOrderActionField *arg1 = (CThostFtdcQryExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeOrderActionField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeOrderActionField *arg1 = (CThostFtdcQryExchangeOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeOrderActionField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeOrderActionField *arg1 = (CThostFtdcQryExchangeOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeOrderActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryExchangeOrderActionField___() {
  void * jresult ;
  CThostFtdcQryExchangeOrderActionField *result = 0 ;
  
  result = (CThostFtdcQryExchangeOrderActionField *)new CThostFtdcQryExchangeOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryExchangeOrderActionField___(void * jarg1) {
  CThostFtdcQryExchangeOrderActionField *arg1 = (CThostFtdcQryExchangeOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcQryExchangeOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySuperUserField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQrySuperUserField *arg1 = (CThostFtdcQrySuperUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySuperUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySuperUserField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySuperUserField *arg1 = (CThostFtdcQrySuperUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySuperUserField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQrySuperUserField___() {
  void * jresult ;
  CThostFtdcQrySuperUserField *result = 0 ;
  
  result = (CThostFtdcQrySuperUserField *)new CThostFtdcQrySuperUserField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQrySuperUserField___(void * jarg1) {
  CThostFtdcQrySuperUserField *arg1 = (CThostFtdcQrySuperUserField *) 0 ;
  
  arg1 = (CThostFtdcQrySuperUserField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeField *arg1 = (CThostFtdcQryExchangeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeField *arg1 = (CThostFtdcQryExchangeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryExchangeField___() {
  void * jresult ;
  CThostFtdcQryExchangeField *result = 0 ;
  
  result = (CThostFtdcQryExchangeField *)new CThostFtdcQryExchangeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryExchangeField___(void * jarg1) {
  CThostFtdcQryExchangeField *arg1 = (CThostFtdcQryExchangeField *) 0 ;
  
  arg1 = (CThostFtdcQryExchangeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryProductField_ProductID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryProductField *arg1 = (CThostFtdcQryProductField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryProductField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProductID, (const char *)arg2, 31-1);
      arg1->ProductID[31-1] = 0;
    } else {
      arg1->ProductID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryProductField_ProductID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryProductField *arg1 = (CThostFtdcQryProductField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryProductField *)jarg1; 
  result = (char *) ((arg1)->ProductID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryProductField_ProductClass_set___(void * jarg1, char jarg2) {
  CThostFtdcQryProductField *arg1 = (CThostFtdcQryProductField *) 0 ;
  TThostFtdcProductClassType arg2 ;
  
  arg1 = (CThostFtdcQryProductField *)jarg1; 
  arg2 = (TThostFtdcProductClassType)jarg2; 
  if (arg1) (arg1)->ProductClass = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryProductField_ProductClass_get___(void * jarg1) {
  char jresult ;
  CThostFtdcQryProductField *arg1 = (CThostFtdcQryProductField *) 0 ;
  TThostFtdcProductClassType result;
  
  arg1 = (CThostFtdcQryProductField *)jarg1; 
  result = (TThostFtdcProductClassType) ((arg1)->ProductClass);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryProductField___() {
  void * jresult ;
  CThostFtdcQryProductField *result = 0 ;
  
  result = (CThostFtdcQryProductField *)new CThostFtdcQryProductField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryProductField___(void * jarg1) {
  CThostFtdcQryProductField *arg1 = (CThostFtdcQryProductField *) 0 ;
  
  arg1 = (CThostFtdcQryProductField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentField_ExchangeInstID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentField_ExchangeInstID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentField_ProductID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProductID, (const char *)arg2, 31-1);
      arg1->ProductID[31-1] = 0;
    } else {
      arg1->ProductID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentField_ProductID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentField *)jarg1; 
  result = (char *) ((arg1)->ProductID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryInstrumentField___() {
  void * jresult ;
  CThostFtdcQryInstrumentField *result = 0 ;
  
  result = (CThostFtdcQryInstrumentField *)new CThostFtdcQryInstrumentField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryInstrumentField___(void * jarg1) {
  CThostFtdcQryInstrumentField *arg1 = (CThostFtdcQryInstrumentField *) 0 ;
  
  arg1 = (CThostFtdcQryInstrumentField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryDepthMarketDataField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryDepthMarketDataField *arg1 = (CThostFtdcQryDepthMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryDepthMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryDepthMarketDataField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryDepthMarketDataField *arg1 = (CThostFtdcQryDepthMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryDepthMarketDataField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryDepthMarketDataField___() {
  void * jresult ;
  CThostFtdcQryDepthMarketDataField *result = 0 ;
  
  result = (CThostFtdcQryDepthMarketDataField *)new CThostFtdcQryDepthMarketDataField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryDepthMarketDataField___(void * jarg1) {
  CThostFtdcQryDepthMarketDataField *arg1 = (CThostFtdcQryDepthMarketDataField *) 0 ;
  
  arg1 = (CThostFtdcQryDepthMarketDataField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerUserField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerUserField *arg1 = (CThostFtdcQryBrokerUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerUserField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerUserField *arg1 = (CThostFtdcQryBrokerUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerUserField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerUserField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerUserField *arg1 = (CThostFtdcQryBrokerUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerUserField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerUserField *arg1 = (CThostFtdcQryBrokerUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerUserField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryBrokerUserField___() {
  void * jresult ;
  CThostFtdcQryBrokerUserField *result = 0 ;
  
  result = (CThostFtdcQryBrokerUserField *)new CThostFtdcQryBrokerUserField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryBrokerUserField___(void * jarg1) {
  CThostFtdcQryBrokerUserField *arg1 = (CThostFtdcQryBrokerUserField *) 0 ;
  
  arg1 = (CThostFtdcQryBrokerUserField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerUserFunctionField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerUserFunctionField *arg1 = (CThostFtdcQryBrokerUserFunctionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerUserFunctionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerUserFunctionField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerUserFunctionField *arg1 = (CThostFtdcQryBrokerUserFunctionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerUserFunctionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerUserFunctionField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerUserFunctionField *arg1 = (CThostFtdcQryBrokerUserFunctionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerUserFunctionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerUserFunctionField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerUserFunctionField *arg1 = (CThostFtdcQryBrokerUserFunctionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerUserFunctionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryBrokerUserFunctionField___() {
  void * jresult ;
  CThostFtdcQryBrokerUserFunctionField *result = 0 ;
  
  result = (CThostFtdcQryBrokerUserFunctionField *)new CThostFtdcQryBrokerUserFunctionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryBrokerUserFunctionField___(void * jarg1) {
  CThostFtdcQryBrokerUserFunctionField *arg1 = (CThostFtdcQryBrokerUserFunctionField *) 0 ;
  
  arg1 = (CThostFtdcQryBrokerUserFunctionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTraderOfferField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTraderOfferField *arg1 = (CThostFtdcQryTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTraderOfferField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTraderOfferField *arg1 = (CThostFtdcQryTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTraderOfferField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTraderOfferField *arg1 = (CThostFtdcQryTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTraderOfferField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTraderOfferField *arg1 = (CThostFtdcQryTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTraderOfferField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTraderOfferField *arg1 = (CThostFtdcQryTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTraderOfferField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTraderOfferField *arg1 = (CThostFtdcQryTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryTraderOfferField___() {
  void * jresult ;
  CThostFtdcQryTraderOfferField *result = 0 ;
  
  result = (CThostFtdcQryTraderOfferField *)new CThostFtdcQryTraderOfferField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryTraderOfferField___(void * jarg1) {
  CThostFtdcQryTraderOfferField *arg1 = (CThostFtdcQryTraderOfferField *) 0 ;
  
  arg1 = (CThostFtdcQryTraderOfferField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySyncDepositField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQrySyncDepositField *arg1 = (CThostFtdcQrySyncDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySyncDepositField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySyncDepositField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySyncDepositField *arg1 = (CThostFtdcQrySyncDepositField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySyncDepositField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySyncDepositField_DepositSeqNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcQrySyncDepositField *arg1 = (CThostFtdcQrySyncDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySyncDepositField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DepositSeqNo, (const char *)arg2, 15-1);
      arg1->DepositSeqNo[15-1] = 0;
    } else {
      arg1->DepositSeqNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySyncDepositField_DepositSeqNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySyncDepositField *arg1 = (CThostFtdcQrySyncDepositField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySyncDepositField *)jarg1; 
  result = (char *) ((arg1)->DepositSeqNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQrySyncDepositField___() {
  void * jresult ;
  CThostFtdcQrySyncDepositField *result = 0 ;
  
  result = (CThostFtdcQrySyncDepositField *)new CThostFtdcQrySyncDepositField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQrySyncDepositField___(void * jarg1) {
  CThostFtdcQrySyncDepositField *arg1 = (CThostFtdcQrySyncDepositField *) 0 ;
  
  arg1 = (CThostFtdcQrySyncDepositField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySettlementInfoField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQrySettlementInfoField *arg1 = (CThostFtdcQrySettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySettlementInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySettlementInfoField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySettlementInfoField *arg1 = (CThostFtdcQrySettlementInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySettlementInfoField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySettlementInfoField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQrySettlementInfoField *arg1 = (CThostFtdcQrySettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySettlementInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySettlementInfoField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySettlementInfoField *arg1 = (CThostFtdcQrySettlementInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySettlementInfoField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySettlementInfoField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcQrySettlementInfoField *arg1 = (CThostFtdcQrySettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySettlementInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySettlementInfoField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySettlementInfoField *arg1 = (CThostFtdcQrySettlementInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySettlementInfoField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQrySettlementInfoField___() {
  void * jresult ;
  CThostFtdcQrySettlementInfoField *result = 0 ;
  
  result = (CThostFtdcQrySettlementInfoField *)new CThostFtdcQrySettlementInfoField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQrySettlementInfoField___(void * jarg1) {
  CThostFtdcQrySettlementInfoField *arg1 = (CThostFtdcQrySettlementInfoField *) 0 ;
  
  arg1 = (CThostFtdcQrySettlementInfoField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeMarginRateField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeMarginRateField *arg1 = (CThostFtdcQryExchangeMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeMarginRateField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeMarginRateField *arg1 = (CThostFtdcQryExchangeMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeMarginRateField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeMarginRateField *arg1 = (CThostFtdcQryExchangeMarginRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeMarginRateField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeMarginRateField *arg1 = (CThostFtdcQryExchangeMarginRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeMarginRateField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcQryExchangeMarginRateField *arg1 = (CThostFtdcQryExchangeMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeMarginRateField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcQryExchangeMarginRateField *arg1 = (CThostFtdcQryExchangeMarginRateField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcQryExchangeMarginRateField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryExchangeMarginRateField___() {
  void * jresult ;
  CThostFtdcQryExchangeMarginRateField *result = 0 ;
  
  result = (CThostFtdcQryExchangeMarginRateField *)new CThostFtdcQryExchangeMarginRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryExchangeMarginRateField___(void * jarg1) {
  CThostFtdcQryExchangeMarginRateField *arg1 = (CThostFtdcQryExchangeMarginRateField *) 0 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeMarginRateAdjustField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeMarginRateAdjustField *arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeMarginRateAdjustField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeMarginRateAdjustField *arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeMarginRateAdjustField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeMarginRateAdjustField *arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeMarginRateAdjustField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeMarginRateAdjustField *arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeMarginRateAdjustField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcQryExchangeMarginRateAdjustField *arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeMarginRateAdjustField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcQryExchangeMarginRateAdjustField *arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryExchangeMarginRateAdjustField___() {
  void * jresult ;
  CThostFtdcQryExchangeMarginRateAdjustField *result = 0 ;
  
  result = (CThostFtdcQryExchangeMarginRateAdjustField *)new CThostFtdcQryExchangeMarginRateAdjustField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryExchangeMarginRateAdjustField___(void * jarg1) {
  CThostFtdcQryExchangeMarginRateAdjustField *arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *) 0 ;
  
  arg1 = (CThostFtdcQryExchangeMarginRateAdjustField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeRateField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeRateField *arg1 = (CThostFtdcQryExchangeRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeRateField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeRateField *arg1 = (CThostFtdcQryExchangeRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeRateField_FromCurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeRateField *arg1 = (CThostFtdcQryExchangeRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FromCurrencyID, (const char *)arg2, 4-1);
      arg1->FromCurrencyID[4-1] = 0;
    } else {
      arg1->FromCurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeRateField_FromCurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeRateField *arg1 = (CThostFtdcQryExchangeRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeRateField *)jarg1; 
  result = (char *) ((arg1)->FromCurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeRateField_ToCurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeRateField *arg1 = (CThostFtdcQryExchangeRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ToCurrencyID, (const char *)arg2, 4-1);
      arg1->ToCurrencyID[4-1] = 0;
    } else {
      arg1->ToCurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeRateField_ToCurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeRateField *arg1 = (CThostFtdcQryExchangeRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeRateField *)jarg1; 
  result = (char *) ((arg1)->ToCurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryExchangeRateField___() {
  void * jresult ;
  CThostFtdcQryExchangeRateField *result = 0 ;
  
  result = (CThostFtdcQryExchangeRateField *)new CThostFtdcQryExchangeRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryExchangeRateField___(void * jarg1) {
  CThostFtdcQryExchangeRateField *arg1 = (CThostFtdcQryExchangeRateField *) 0 ;
  
  arg1 = (CThostFtdcQryExchangeRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySyncFundMortgageField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQrySyncFundMortgageField *arg1 = (CThostFtdcQrySyncFundMortgageField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySyncFundMortgageField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySyncFundMortgageField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySyncFundMortgageField *arg1 = (CThostFtdcQrySyncFundMortgageField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySyncFundMortgageField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySyncFundMortgageField_MortgageSeqNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcQrySyncFundMortgageField *arg1 = (CThostFtdcQrySyncFundMortgageField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySyncFundMortgageField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MortgageSeqNo, (const char *)arg2, 15-1);
      arg1->MortgageSeqNo[15-1] = 0;
    } else {
      arg1->MortgageSeqNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySyncFundMortgageField_MortgageSeqNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySyncFundMortgageField *arg1 = (CThostFtdcQrySyncFundMortgageField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySyncFundMortgageField *)jarg1; 
  result = (char *) ((arg1)->MortgageSeqNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQrySyncFundMortgageField___() {
  void * jresult ;
  CThostFtdcQrySyncFundMortgageField *result = 0 ;
  
  result = (CThostFtdcQrySyncFundMortgageField *)new CThostFtdcQrySyncFundMortgageField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQrySyncFundMortgageField___(void * jarg1) {
  CThostFtdcQrySyncFundMortgageField *arg1 = (CThostFtdcQrySyncFundMortgageField *) 0 ;
  
  arg1 = (CThostFtdcQrySyncFundMortgageField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryHisOrderField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryHisOrderField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryHisOrderField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryHisOrderField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryHisOrderField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryHisOrderField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryHisOrderField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryHisOrderField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryHisOrderField_OrderSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryHisOrderField_OrderSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  result = (char *) ((arg1)->OrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryHisOrderField_InsertTimeStart_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeStart, (const char *)arg2, 9-1);
      arg1->InsertTimeStart[9-1] = 0;
    } else {
      arg1->InsertTimeStart[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryHisOrderField_InsertTimeStart_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertTimeStart);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryHisOrderField_InsertTimeEnd_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeEnd, (const char *)arg2, 9-1);
      arg1->InsertTimeEnd[9-1] = 0;
    } else {
      arg1->InsertTimeEnd[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryHisOrderField_InsertTimeEnd_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertTimeEnd);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryHisOrderField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryHisOrderField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryHisOrderField_SettlementID_set___(void * jarg1, int jarg2) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryHisOrderField_SettlementID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryHisOrderField___() {
  void * jresult ;
  CThostFtdcQryHisOrderField *result = 0 ;
  
  result = (CThostFtdcQryHisOrderField *)new CThostFtdcQryHisOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryHisOrderField___(void * jarg1) {
  CThostFtdcQryHisOrderField *arg1 = (CThostFtdcQryHisOrderField *) 0 ;
  
  arg1 = (CThostFtdcQryHisOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMiniMarginField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMiniMarginField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMiniMarginField_InvestorRange_set___(void * jarg1, char jarg2) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMiniMarginField_InvestorRange_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMiniMarginField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMiniMarginField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMiniMarginField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMiniMarginField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMiniMarginField_MinMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->MinMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMiniMarginField_MinMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->MinMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMiniMarginField_ValueMethod_set___(void * jarg1, char jarg2) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  TThostFtdcValueMethodType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  arg2 = (TThostFtdcValueMethodType)jarg2; 
  if (arg1) (arg1)->ValueMethod = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMiniMarginField_ValueMethod_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  TThostFtdcValueMethodType result;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  result = (TThostFtdcValueMethodType) ((arg1)->ValueMethod);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMiniMarginField_IsRelative_set___(void * jarg1, int jarg2) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsRelative = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMiniMarginField_IsRelative_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsRelative);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcOptionInstrMiniMarginField___() {
  void * jresult ;
  CThostFtdcOptionInstrMiniMarginField *result = 0 ;
  
  result = (CThostFtdcOptionInstrMiniMarginField *)new CThostFtdcOptionInstrMiniMarginField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcOptionInstrMiniMarginField___(void * jarg1) {
  CThostFtdcOptionInstrMiniMarginField *arg1 = (CThostFtdcOptionInstrMiniMarginField *) 0 ;
  
  arg1 = (CThostFtdcOptionInstrMiniMarginField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMarginAdjustField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMarginAdjustField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMarginAdjustField_InvestorRange_set___(void * jarg1, char jarg2) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMarginAdjustField_InvestorRange_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMarginAdjustField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMarginAdjustField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMarginAdjustField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMarginAdjustField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->SShortMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->SShortMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->SShortMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMarginAdjustField_SShortMarginRatioByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->SShortMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->HShortMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->HShortMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->HShortMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMarginAdjustField_HShortMarginRatioByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->HShortMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->AShortMarginRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->AShortMarginRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->AShortMarginRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMarginAdjustField_AShortMarginRatioByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->AShortMarginRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMarginAdjustField_IsRelative_set___(void * jarg1, int jarg2) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsRelative = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrMarginAdjustField_IsRelative_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsRelative);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcOptionInstrMarginAdjustField___() {
  void * jresult ;
  CThostFtdcOptionInstrMarginAdjustField *result = 0 ;
  
  result = (CThostFtdcOptionInstrMarginAdjustField *)new CThostFtdcOptionInstrMarginAdjustField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcOptionInstrMarginAdjustField___(void * jarg1) {
  CThostFtdcOptionInstrMarginAdjustField *arg1 = (CThostFtdcOptionInstrMarginAdjustField *) 0 ;
  
  arg1 = (CThostFtdcOptionInstrMarginAdjustField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrCommRateField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrCommRateField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrCommRateField_InvestorRange_set___(void * jarg1, char jarg2) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrCommRateField_InvestorRange_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrCommRateField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrCommRateField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrCommRateField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrCommRateField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrCommRateField_OpenRatioByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->OpenRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrCommRateField_OpenRatioByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->OpenRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrCommRateField_OpenRatioByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->OpenRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrCommRateField_OpenRatioByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->OpenRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrCommRateField_CloseRatioByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrCommRateField_CloseRatioByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrCommRateField_CloseRatioByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrCommRateField_CloseRatioByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrCommRateField_CloseTodayRatioByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseTodayRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrCommRateField_CloseTodayRatioByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseTodayRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrCommRateField_CloseTodayRatioByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CloseTodayRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrCommRateField_CloseTodayRatioByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CloseTodayRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrCommRateField_StrikeRatioByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->StrikeRatioByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrCommRateField_StrikeRatioByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->StrikeRatioByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrCommRateField_StrikeRatioByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->StrikeRatioByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrCommRateField_StrikeRatioByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->StrikeRatioByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcOptionInstrCommRateField___() {
  void * jresult ;
  CThostFtdcOptionInstrCommRateField *result = 0 ;
  
  result = (CThostFtdcOptionInstrCommRateField *)new CThostFtdcOptionInstrCommRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcOptionInstrCommRateField___(void * jarg1) {
  CThostFtdcOptionInstrCommRateField *arg1 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  
  arg1 = (CThostFtdcOptionInstrCommRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradeCostField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradeCostField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradeCostField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradeCostField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradeCostField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradeCostField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradeCostField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradeCostField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradeCostField_FixedMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FixedMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradeCostField_FixedMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FixedMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradeCostField_MiniMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->MiniMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradeCostField_MiniMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->MiniMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradeCostField_Royalty_set___(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Royalty = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradeCostField_Royalty_get___(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Royalty);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradeCostField_ExchFixedMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchFixedMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradeCostField_ExchFixedMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchFixedMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradeCostField_ExchMiniMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchMiniMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradeCostField_ExchMiniMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchMiniMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcOptionInstrTradeCostField___() {
  void * jresult ;
  CThostFtdcOptionInstrTradeCostField *result = 0 ;
  
  result = (CThostFtdcOptionInstrTradeCostField *)new CThostFtdcOptionInstrTradeCostField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcOptionInstrTradeCostField___(void * jarg1) {
  CThostFtdcOptionInstrTradeCostField *arg1 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  
  arg1 = (CThostFtdcOptionInstrTradeCostField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOptionInstrTradeCostField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOptionInstrTradeCostField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOptionInstrTradeCostField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOptionInstrTradeCostField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOptionInstrTradeCostField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOptionInstrTradeCostField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOptionInstrTradeCostField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOptionInstrTradeCostField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOptionInstrTradeCostField_InputPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->InputPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOptionInstrTradeCostField_InputPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->InputPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOptionInstrTradeCostField_UnderlyingPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->UnderlyingPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOptionInstrTradeCostField_UnderlyingPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->UnderlyingPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryOptionInstrTradeCostField___() {
  void * jresult ;
  CThostFtdcQryOptionInstrTradeCostField *result = 0 ;
  
  result = (CThostFtdcQryOptionInstrTradeCostField *)new CThostFtdcQryOptionInstrTradeCostField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryOptionInstrTradeCostField___(void * jarg1) {
  CThostFtdcQryOptionInstrTradeCostField *arg1 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradeCostField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOptionInstrCommRateField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionInstrCommRateField *arg1 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOptionInstrCommRateField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionInstrCommRateField *arg1 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrCommRateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOptionInstrCommRateField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionInstrCommRateField *arg1 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOptionInstrCommRateField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionInstrCommRateField *arg1 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrCommRateField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOptionInstrCommRateField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionInstrCommRateField *arg1 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrCommRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOptionInstrCommRateField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionInstrCommRateField *arg1 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrCommRateField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryOptionInstrCommRateField___() {
  void * jresult ;
  CThostFtdcQryOptionInstrCommRateField *result = 0 ;
  
  result = (CThostFtdcQryOptionInstrCommRateField *)new CThostFtdcQryOptionInstrCommRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryOptionInstrCommRateField___(void * jarg1) {
  CThostFtdcQryOptionInstrCommRateField *arg1 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrCommRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcIndexPriceField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcIndexPriceField *arg1 = (CThostFtdcIndexPriceField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcIndexPriceField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcIndexPriceField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcIndexPriceField *arg1 = (CThostFtdcIndexPriceField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcIndexPriceField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcIndexPriceField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcIndexPriceField *arg1 = (CThostFtdcIndexPriceField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcIndexPriceField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcIndexPriceField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcIndexPriceField *arg1 = (CThostFtdcIndexPriceField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcIndexPriceField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcIndexPriceField_ClosePrice_set___(void * jarg1, double jarg2) {
  CThostFtdcIndexPriceField *arg1 = (CThostFtdcIndexPriceField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcIndexPriceField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->ClosePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcIndexPriceField_ClosePrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcIndexPriceField *arg1 = (CThostFtdcIndexPriceField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcIndexPriceField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->ClosePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcIndexPriceField___() {
  void * jresult ;
  CThostFtdcIndexPriceField *result = 0 ;
  
  result = (CThostFtdcIndexPriceField *)new CThostFtdcIndexPriceField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcIndexPriceField___(void * jarg1) {
  CThostFtdcIndexPriceField *arg1 = (CThostFtdcIndexPriceField *) 0 ;
  
  arg1 = (CThostFtdcIndexPriceField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_ExecOrderRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderRef, (const char *)arg2, 13-1);
      arg1->ExecOrderRef[13-1] = 0;
    } else {
      arg1->ExecOrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_ExecOrderRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_Volume_set___(void * jarg1, int jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_Volume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_BusinessUnit_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_BusinessUnit_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_OffsetFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->OffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_OffsetFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->OffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_ActionType_set___(void * jarg1, char jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcActionTypeType arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (TThostFtdcActionTypeType)jarg2; 
  if (arg1) (arg1)->ActionType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_ActionType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcActionTypeType result;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (TThostFtdcActionTypeType) ((arg1)->ActionType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_PosiDirection_set___(void * jarg1, char jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcPosiDirectionType arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (TThostFtdcPosiDirectionType)jarg2; 
  if (arg1) (arg1)->PosiDirection = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_PosiDirection_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcPosiDirectionType result;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (TThostFtdcPosiDirectionType) ((arg1)->PosiDirection);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_ReservePositionFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcExecOrderPositionFlagType arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (TThostFtdcExecOrderPositionFlagType)jarg2; 
  if (arg1) (arg1)->ReservePositionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_ReservePositionFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcExecOrderPositionFlagType result;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (TThostFtdcExecOrderPositionFlagType) ((arg1)->ReservePositionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_CloseFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcExecOrderCloseFlagType arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  arg2 = (TThostFtdcExecOrderCloseFlagType)jarg2; 
  if (arg1) (arg1)->CloseFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderField_CloseFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  TThostFtdcExecOrderCloseFlagType result;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  result = (TThostFtdcExecOrderCloseFlagType) ((arg1)->CloseFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcInputExecOrderField___() {
  void * jresult ;
  CThostFtdcInputExecOrderField *result = 0 ;
  
  result = (CThostFtdcInputExecOrderField *)new CThostFtdcInputExecOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcInputExecOrderField___(void * jarg1) {
  CThostFtdcInputExecOrderField *arg1 = (CThostFtdcInputExecOrderField *) 0 ;
  
  arg1 = (CThostFtdcInputExecOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderActionField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderActionField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderActionField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderActionField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderActionField_ExecOrderActionRef_set___(void * jarg1, int jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionRefType)jarg2; 
  if (arg1) (arg1)->ExecOrderActionRef = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderActionField_ExecOrderActionRef_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionRefType) ((arg1)->ExecOrderActionRef);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderActionField_ExecOrderRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderRef, (const char *)arg2, 13-1);
      arg1->ExecOrderRef[13-1] = 0;
    } else {
      arg1->ExecOrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderActionField_ExecOrderRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderActionField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderActionField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderActionField_FrontID_set___(void * jarg1, int jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderActionField_FrontID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderActionField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderActionField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderActionField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderActionField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderActionField_ExecOrderSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderSysID, (const char *)arg2, 21-1);
      arg1->ExecOrderSysID[21-1] = 0;
    } else {
      arg1->ExecOrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderActionField_ExecOrderSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderActionField_ActionFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcActionFlagType)jarg2; 
  if (arg1) (arg1)->ActionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderActionField_ActionFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  TThostFtdcActionFlagType result;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderActionField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderActionField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderActionField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputExecOrderActionField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcInputExecOrderActionField___() {
  void * jresult ;
  CThostFtdcInputExecOrderActionField *result = 0 ;
  
  result = (CThostFtdcInputExecOrderActionField *)new CThostFtdcInputExecOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcInputExecOrderActionField___(void * jarg1) {
  CThostFtdcInputExecOrderActionField *arg1 = (CThostFtdcInputExecOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcInputExecOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_ExecOrderRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderRef, (const char *)arg2, 13-1);
      arg1->ExecOrderRef[13-1] = 0;
    } else {
      arg1->ExecOrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_ExecOrderRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_Volume_set___(void * jarg1, int jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_Volume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_BusinessUnit_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_BusinessUnit_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_OffsetFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->OffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_OffsetFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->OffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_ActionType_set___(void * jarg1, char jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcActionTypeType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcActionTypeType)jarg2; 
  if (arg1) (arg1)->ActionType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_ActionType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcActionTypeType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcActionTypeType) ((arg1)->ActionType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_PosiDirection_set___(void * jarg1, char jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcPosiDirectionType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcPosiDirectionType)jarg2; 
  if (arg1) (arg1)->PosiDirection = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_PosiDirection_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcPosiDirectionType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcPosiDirectionType) ((arg1)->PosiDirection);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_ReservePositionFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcExecOrderPositionFlagType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcExecOrderPositionFlagType)jarg2; 
  if (arg1) (arg1)->ReservePositionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_ReservePositionFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcExecOrderPositionFlagType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcExecOrderPositionFlagType) ((arg1)->ReservePositionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_CloseFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcExecOrderCloseFlagType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcExecOrderCloseFlagType)jarg2; 
  if (arg1) (arg1)->CloseFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_CloseFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcExecOrderCloseFlagType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcExecOrderCloseFlagType) ((arg1)->CloseFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_ExecOrderLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderLocalID, (const char *)arg2, 13-1);
      arg1->ExecOrderLocalID[13-1] = 0;
    } else {
      arg1->ExecOrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_ExecOrderLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_ExchangeInstID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_ExchangeInstID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_OrderSubmitStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderSubmitStatusType)jarg2; 
  if (arg1) (arg1)->OrderSubmitStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_OrderSubmitStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcOrderSubmitStatusType) ((arg1)->OrderSubmitStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_NotifySequence_set___(void * jarg1, int jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->NotifySequence = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_NotifySequence_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_SettlementID_set___(void * jarg1, int jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_SettlementID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_ExecOrderSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderSysID, (const char *)arg2, 21-1);
      arg1->ExecOrderSysID[21-1] = 0;
    } else {
      arg1->ExecOrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_ExecOrderSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_InsertDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_InsertDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_InsertTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_InsertTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_CancelTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CancelTime, (const char *)arg2, 9-1);
      arg1->CancelTime[9-1] = 0;
    } else {
      arg1->CancelTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_CancelTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->CancelTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_ExecResult_set___(void * jarg1, char jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcExecResultType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcExecResultType)jarg2; 
  if (arg1) (arg1)->ExecResult = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_ExecResult_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcExecResultType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcExecResultType) ((arg1)->ExecResult);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_ClearingPartID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_ClearingPartID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ClearingPartID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_SequenceNo_set___(void * jarg1, int jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_SequenceNo_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_FrontID_set___(void * jarg1, int jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_FrontID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_UserProductInfo_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_UserProductInfo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->UserProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_StatusMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_StatusMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->StatusMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_ActiveUserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveUserID, (const char *)arg2, 16-1);
      arg1->ActiveUserID[16-1] = 0;
    } else {
      arg1->ActiveUserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_ActiveUserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ActiveUserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_BrokerExecOrderSeq_set___(void * jarg1, int jarg2) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->BrokerExecOrderSeq = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderField_BrokerExecOrderSeq_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->BrokerExecOrderSeq);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcExecOrderField___() {
  void * jresult ;
  CThostFtdcExecOrderField *result = 0 ;
  
  result = (CThostFtdcExecOrderField *)new CThostFtdcExecOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcExecOrderField___(void * jarg1) {
  CThostFtdcExecOrderField *arg1 = (CThostFtdcExecOrderField *) 0 ;
  
  arg1 = (CThostFtdcExecOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_ExecOrderActionRef_set___(void * jarg1, int jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionRefType)jarg2; 
  if (arg1) (arg1)->ExecOrderActionRef = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_ExecOrderActionRef_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionRefType) ((arg1)->ExecOrderActionRef);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_ExecOrderRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderRef, (const char *)arg2, 13-1);
      arg1->ExecOrderRef[13-1] = 0;
    } else {
      arg1->ExecOrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_ExecOrderRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_FrontID_set___(void * jarg1, int jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_FrontID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_ExecOrderSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderSysID, (const char *)arg2, 21-1);
      arg1->ExecOrderSysID[21-1] = 0;
    } else {
      arg1->ExecOrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_ExecOrderSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_ActionFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcActionFlagType)jarg2; 
  if (arg1) (arg1)->ActionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_ActionFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcActionFlagType result;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_ActionDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDate, (const char *)arg2, 9-1);
      arg1->ActionDate[9-1] = 0;
    } else {
      arg1->ActionDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_ActionDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_ActionTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionTime, (const char *)arg2, 9-1);
      arg1->ActionTime[9-1] = 0;
    } else {
      arg1->ActionTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_ActionTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_ExecOrderLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderLocalID, (const char *)arg2, 13-1);
      arg1->ExecOrderLocalID[13-1] = 0;
    } else {
      arg1->ExecOrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_ExecOrderLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_ActionLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_ActionLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_BusinessUnit_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_BusinessUnit_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_OrderActionStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionStatusType)jarg2; 
  if (arg1) (arg1)->OrderActionStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_OrderActionStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionStatusType) ((arg1)->OrderActionStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_ActionType_set___(void * jarg1, char jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcActionTypeType arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcActionTypeType)jarg2; 
  if (arg1) (arg1)->ActionType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_ActionType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  TThostFtdcActionTypeType result;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (TThostFtdcActionTypeType) ((arg1)->ActionType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_StatusMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_StatusMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->StatusMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExecOrderActionField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcExecOrderActionField___() {
  void * jresult ;
  CThostFtdcExecOrderActionField *result = 0 ;
  
  result = (CThostFtdcExecOrderActionField *)new CThostFtdcExecOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcExecOrderActionField___(void * jarg1) {
  CThostFtdcExecOrderActionField *arg1 = (CThostFtdcExecOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcExecOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExecOrderField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExecOrderField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExecOrderField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExecOrderField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExecOrderField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExecOrderField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExecOrderField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExecOrderField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExecOrderField_ExecOrderSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderSysID, (const char *)arg2, 21-1);
      arg1->ExecOrderSysID[21-1] = 0;
    } else {
      arg1->ExecOrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExecOrderField_ExecOrderSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExecOrderField_InsertTimeStart_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeStart, (const char *)arg2, 9-1);
      arg1->InsertTimeStart[9-1] = 0;
    } else {
      arg1->InsertTimeStart[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExecOrderField_InsertTimeStart_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertTimeStart);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExecOrderField_InsertTimeEnd_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeEnd, (const char *)arg2, 9-1);
      arg1->InsertTimeEnd[9-1] = 0;
    } else {
      arg1->InsertTimeEnd[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExecOrderField_InsertTimeEnd_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertTimeEnd);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryExecOrderField___() {
  void * jresult ;
  CThostFtdcQryExecOrderField *result = 0 ;
  
  result = (CThostFtdcQryExecOrderField *)new CThostFtdcQryExecOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryExecOrderField___(void * jarg1) {
  CThostFtdcQryExecOrderField *arg1 = (CThostFtdcQryExecOrderField *) 0 ;
  
  arg1 = (CThostFtdcQryExecOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_Volume_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_Volume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_BusinessUnit_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_BusinessUnit_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_OffsetFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->OffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_OffsetFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->OffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_ActionType_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcActionTypeType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcActionTypeType)jarg2; 
  if (arg1) (arg1)->ActionType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_ActionType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcActionTypeType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcActionTypeType) ((arg1)->ActionType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_PosiDirection_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcPosiDirectionType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcPosiDirectionType)jarg2; 
  if (arg1) (arg1)->PosiDirection = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_PosiDirection_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcPosiDirectionType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcPosiDirectionType) ((arg1)->PosiDirection);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_ReservePositionFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcExecOrderPositionFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcExecOrderPositionFlagType)jarg2; 
  if (arg1) (arg1)->ReservePositionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_ReservePositionFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcExecOrderPositionFlagType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcExecOrderPositionFlagType) ((arg1)->ReservePositionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_CloseFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcExecOrderCloseFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcExecOrderCloseFlagType)jarg2; 
  if (arg1) (arg1)->CloseFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_CloseFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcExecOrderCloseFlagType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcExecOrderCloseFlagType) ((arg1)->CloseFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_ExecOrderLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderLocalID, (const char *)arg2, 13-1);
      arg1->ExecOrderLocalID[13-1] = 0;
    } else {
      arg1->ExecOrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_ExecOrderLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_ExchangeInstID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_ExchangeInstID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_OrderSubmitStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderSubmitStatusType)jarg2; 
  if (arg1) (arg1)->OrderSubmitStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_OrderSubmitStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcOrderSubmitStatusType) ((arg1)->OrderSubmitStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_NotifySequence_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->NotifySequence = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_NotifySequence_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_SettlementID_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_SettlementID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_ExecOrderSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderSysID, (const char *)arg2, 21-1);
      arg1->ExecOrderSysID[21-1] = 0;
    } else {
      arg1->ExecOrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_ExecOrderSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_InsertDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_InsertDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_InsertTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_InsertTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_CancelTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CancelTime, (const char *)arg2, 9-1);
      arg1->CancelTime[9-1] = 0;
    } else {
      arg1->CancelTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_CancelTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->CancelTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_ExecResult_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcExecResultType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcExecResultType)jarg2; 
  if (arg1) (arg1)->ExecResult = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_ExecResult_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcExecResultType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcExecResultType) ((arg1)->ExecResult);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_ClearingPartID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_ClearingPartID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ClearingPartID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_SequenceNo_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderField_SequenceNo_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcExchangeExecOrderField___() {
  void * jresult ;
  CThostFtdcExchangeExecOrderField *result = 0 ;
  
  result = (CThostFtdcExchangeExecOrderField *)new CThostFtdcExchangeExecOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcExchangeExecOrderField___(void * jarg1) {
  CThostFtdcExchangeExecOrderField *arg1 = (CThostFtdcExchangeExecOrderField *) 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeExecOrderField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeExecOrderField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeExecOrderField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeExecOrderField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeExecOrderField_ExchangeInstID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeExecOrderField_ExchangeInstID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeExecOrderField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeExecOrderField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeExecOrderField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeExecOrderField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryExchangeExecOrderField___() {
  void * jresult ;
  CThostFtdcQryExchangeExecOrderField *result = 0 ;
  
  result = (CThostFtdcQryExchangeExecOrderField *)new CThostFtdcQryExchangeExecOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryExchangeExecOrderField___(void * jarg1) {
  CThostFtdcQryExchangeExecOrderField *arg1 = (CThostFtdcQryExchangeExecOrderField *) 0 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExecOrderActionField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExecOrderActionField *arg1 = (CThostFtdcQryExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExecOrderActionField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExecOrderActionField *arg1 = (CThostFtdcQryExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExecOrderActionField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExecOrderActionField *arg1 = (CThostFtdcQryExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExecOrderActionField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExecOrderActionField *arg1 = (CThostFtdcQryExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExecOrderActionField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExecOrderActionField *arg1 = (CThostFtdcQryExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExecOrderActionField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExecOrderActionField *arg1 = (CThostFtdcQryExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryExecOrderActionField___() {
  void * jresult ;
  CThostFtdcQryExecOrderActionField *result = 0 ;
  
  result = (CThostFtdcQryExecOrderActionField *)new CThostFtdcQryExecOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryExecOrderActionField___(void * jarg1) {
  CThostFtdcQryExecOrderActionField *arg1 = (CThostFtdcQryExecOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcQryExecOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_ExecOrderSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderSysID, (const char *)arg2, 21-1);
      arg1->ExecOrderSysID[21-1] = 0;
    } else {
      arg1->ExecOrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_ExecOrderSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_ActionFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcActionFlagType)jarg2; 
  if (arg1) (arg1)->ActionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_ActionFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  TThostFtdcActionFlagType result;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_ActionDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDate, (const char *)arg2, 9-1);
      arg1->ActionDate[9-1] = 0;
    } else {
      arg1->ActionDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_ActionDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_ActionTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionTime, (const char *)arg2, 9-1);
      arg1->ActionTime[9-1] = 0;
    } else {
      arg1->ActionTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_ActionTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_ExecOrderLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderLocalID, (const char *)arg2, 13-1);
      arg1->ExecOrderLocalID[13-1] = 0;
    } else {
      arg1->ExecOrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_ExecOrderLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_ActionLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_ActionLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_BusinessUnit_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_BusinessUnit_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_OrderActionStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionStatusType)jarg2; 
  if (arg1) (arg1)->OrderActionStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_OrderActionStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionStatusType) ((arg1)->OrderActionStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_ActionType_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  TThostFtdcActionTypeType arg2 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcActionTypeType)jarg2; 
  if (arg1) (arg1)->ActionType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeExecOrderActionField_ActionType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  TThostFtdcActionTypeType result;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  result = (TThostFtdcActionTypeType) ((arg1)->ActionType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcExchangeExecOrderActionField___() {
  void * jresult ;
  CThostFtdcExchangeExecOrderActionField *result = 0 ;
  
  result = (CThostFtdcExchangeExecOrderActionField *)new CThostFtdcExchangeExecOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcExchangeExecOrderActionField___(void * jarg1) {
  CThostFtdcExchangeExecOrderActionField *arg1 = (CThostFtdcExchangeExecOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcExchangeExecOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeExecOrderActionField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeExecOrderActionField *arg1 = (CThostFtdcQryExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeExecOrderActionField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeExecOrderActionField *arg1 = (CThostFtdcQryExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeExecOrderActionField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeExecOrderActionField *arg1 = (CThostFtdcQryExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeExecOrderActionField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeExecOrderActionField *arg1 = (CThostFtdcQryExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeExecOrderActionField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeExecOrderActionField *arg1 = (CThostFtdcQryExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeExecOrderActionField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeExecOrderActionField *arg1 = (CThostFtdcQryExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeExecOrderActionField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeExecOrderActionField *arg1 = (CThostFtdcQryExchangeExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeExecOrderActionField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeExecOrderActionField *arg1 = (CThostFtdcQryExchangeExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryExchangeExecOrderActionField___() {
  void * jresult ;
  CThostFtdcQryExchangeExecOrderActionField *result = 0 ;
  
  result = (CThostFtdcQryExchangeExecOrderActionField *)new CThostFtdcQryExchangeExecOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryExchangeExecOrderActionField___(void * jarg1) {
  CThostFtdcQryExchangeExecOrderActionField *arg1 = (CThostFtdcQryExchangeExecOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcQryExchangeExecOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_ExecOrderRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderRef, (const char *)arg2, 13-1);
      arg1->ExecOrderRef[13-1] = 0;
    } else {
      arg1->ExecOrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_ExecOrderRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_Volume_set___(void * jarg1, int jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_Volume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_BusinessUnit_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_BusinessUnit_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_OffsetFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->OffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_OffsetFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->OffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_ActionType_set___(void * jarg1, char jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcActionTypeType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (TThostFtdcActionTypeType)jarg2; 
  if (arg1) (arg1)->ActionType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_ActionType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcActionTypeType result;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (TThostFtdcActionTypeType) ((arg1)->ActionType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_PosiDirection_set___(void * jarg1, char jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcPosiDirectionType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (TThostFtdcPosiDirectionType)jarg2; 
  if (arg1) (arg1)->PosiDirection = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_PosiDirection_get___(void * jarg1) {
  char jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcPosiDirectionType result;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (TThostFtdcPosiDirectionType) ((arg1)->PosiDirection);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_ReservePositionFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcExecOrderPositionFlagType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (TThostFtdcExecOrderPositionFlagType)jarg2; 
  if (arg1) (arg1)->ReservePositionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_ReservePositionFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcExecOrderPositionFlagType result;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (TThostFtdcExecOrderPositionFlagType) ((arg1)->ReservePositionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_CloseFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcExecOrderCloseFlagType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (TThostFtdcExecOrderCloseFlagType)jarg2; 
  if (arg1) (arg1)->CloseFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_CloseFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcExecOrderCloseFlagType result;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (TThostFtdcExecOrderCloseFlagType) ((arg1)->CloseFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_ErrorID_set___(void * jarg1, int jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_ErrorID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_ErrorMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderField_ErrorMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcErrExecOrderField___() {
  void * jresult ;
  CThostFtdcErrExecOrderField *result = 0 ;
  
  result = (CThostFtdcErrExecOrderField *)new CThostFtdcErrExecOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcErrExecOrderField___(void * jarg1) {
  CThostFtdcErrExecOrderField *arg1 = (CThostFtdcErrExecOrderField *) 0 ;
  
  arg1 = (CThostFtdcErrExecOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryErrExecOrderField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryErrExecOrderField *arg1 = (CThostFtdcQryErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryErrExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryErrExecOrderField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryErrExecOrderField *arg1 = (CThostFtdcQryErrExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryErrExecOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryErrExecOrderField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryErrExecOrderField *arg1 = (CThostFtdcQryErrExecOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryErrExecOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryErrExecOrderField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryErrExecOrderField *arg1 = (CThostFtdcQryErrExecOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryErrExecOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryErrExecOrderField___() {
  void * jresult ;
  CThostFtdcQryErrExecOrderField *result = 0 ;
  
  result = (CThostFtdcQryErrExecOrderField *)new CThostFtdcQryErrExecOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryErrExecOrderField___(void * jarg1) {
  CThostFtdcQryErrExecOrderField *arg1 = (CThostFtdcQryErrExecOrderField *) 0 ;
  
  arg1 = (CThostFtdcQryErrExecOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_ExecOrderActionRef_set___(void * jarg1, int jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionRefType)jarg2; 
  if (arg1) (arg1)->ExecOrderActionRef = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_ExecOrderActionRef_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionRefType) ((arg1)->ExecOrderActionRef);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_ExecOrderRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderRef, (const char *)arg2, 13-1);
      arg1->ExecOrderRef[13-1] = 0;
    } else {
      arg1->ExecOrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_ExecOrderRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_FrontID_set___(void * jarg1, int jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_FrontID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_ExecOrderSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExecOrderSysID, (const char *)arg2, 21-1);
      arg1->ExecOrderSysID[21-1] = 0;
    } else {
      arg1->ExecOrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_ExecOrderSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExecOrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_ActionFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcActionFlagType)jarg2; 
  if (arg1) (arg1)->ActionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_ActionFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcActionFlagType result;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_ErrorID_set___(void * jarg1, int jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_ErrorID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_ErrorMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrExecOrderActionField_ErrorMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcErrExecOrderActionField___() {
  void * jresult ;
  CThostFtdcErrExecOrderActionField *result = 0 ;
  
  result = (CThostFtdcErrExecOrderActionField *)new CThostFtdcErrExecOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcErrExecOrderActionField___(void * jarg1) {
  CThostFtdcErrExecOrderActionField *arg1 = (CThostFtdcErrExecOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcErrExecOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryErrExecOrderActionField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryErrExecOrderActionField *arg1 = (CThostFtdcQryErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryErrExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryErrExecOrderActionField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryErrExecOrderActionField *arg1 = (CThostFtdcQryErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryErrExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryErrExecOrderActionField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryErrExecOrderActionField *arg1 = (CThostFtdcQryErrExecOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryErrExecOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryErrExecOrderActionField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryErrExecOrderActionField *arg1 = (CThostFtdcQryErrExecOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryErrExecOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryErrExecOrderActionField___() {
  void * jresult ;
  CThostFtdcQryErrExecOrderActionField *result = 0 ;
  
  result = (CThostFtdcQryErrExecOrderActionField *)new CThostFtdcQryErrExecOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryErrExecOrderActionField___(void * jarg1) {
  CThostFtdcQryErrExecOrderActionField *arg1 = (CThostFtdcQryErrExecOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcQryErrExecOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradingRightField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradingRightField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradingRightField_InvestorRange_set___(void * jarg1, char jarg2) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradingRightField_InvestorRange_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradingRightField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradingRightField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradingRightField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradingRightField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradingRightField_Direction_set___(void * jarg1, char jarg2) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradingRightField_Direction_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradingRightField_TradingRight_set___(void * jarg1, char jarg2) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  TThostFtdcTradingRightType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  arg2 = (TThostFtdcTradingRightType)jarg2; 
  if (arg1) (arg1)->TradingRight = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrTradingRightField_TradingRight_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  TThostFtdcTradingRightType result;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  result = (TThostFtdcTradingRightType) ((arg1)->TradingRight);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcOptionInstrTradingRightField___() {
  void * jresult ;
  CThostFtdcOptionInstrTradingRightField *result = 0 ;
  
  result = (CThostFtdcOptionInstrTradingRightField *)new CThostFtdcOptionInstrTradingRightField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcOptionInstrTradingRightField___(void * jarg1) {
  CThostFtdcOptionInstrTradingRightField *arg1 = (CThostFtdcOptionInstrTradingRightField *) 0 ;
  
  arg1 = (CThostFtdcOptionInstrTradingRightField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOptionInstrTradingRightField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOptionInstrTradingRightField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradingRightField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOptionInstrTradingRightField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOptionInstrTradingRightField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradingRightField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOptionInstrTradingRightField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradingRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOptionInstrTradingRightField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradingRightField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOptionInstrTradingRightField_Direction_set___(void * jarg1, char jarg2) {
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradingRightField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryOptionInstrTradingRightField_Direction_get___(void * jarg1) {
  char jresult ;
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcQryOptionInstrTradingRightField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryOptionInstrTradingRightField___() {
  void * jresult ;
  CThostFtdcQryOptionInstrTradingRightField *result = 0 ;
  
  result = (CThostFtdcQryOptionInstrTradingRightField *)new CThostFtdcQryOptionInstrTradingRightField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryOptionInstrTradingRightField___(void * jarg1) {
  CThostFtdcQryOptionInstrTradingRightField *arg1 = (CThostFtdcQryOptionInstrTradingRightField *) 0 ;
  
  arg1 = (CThostFtdcQryOptionInstrTradingRightField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputForQuoteField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputForQuoteField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputForQuoteField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputForQuoteField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputForQuoteField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputForQuoteField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputForQuoteField_ForQuoteRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ForQuoteRef, (const char *)arg2, 13-1);
      arg1->ForQuoteRef[13-1] = 0;
    } else {
      arg1->ForQuoteRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputForQuoteField_ForQuoteRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ForQuoteRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputForQuoteField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputForQuoteField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcInputForQuoteField___() {
  void * jresult ;
  CThostFtdcInputForQuoteField *result = 0 ;
  
  result = (CThostFtdcInputForQuoteField *)new CThostFtdcInputForQuoteField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcInputForQuoteField___(void * jarg1) {
  CThostFtdcInputForQuoteField *arg1 = (CThostFtdcInputForQuoteField *) 0 ;
  
  arg1 = (CThostFtdcInputForQuoteField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_ForQuoteRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ForQuoteRef, (const char *)arg2, 13-1);
      arg1->ForQuoteRef[13-1] = 0;
    } else {
      arg1->ForQuoteRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_ForQuoteRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ForQuoteRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_ForQuoteLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ForQuoteLocalID, (const char *)arg2, 13-1);
      arg1->ForQuoteLocalID[13-1] = 0;
    } else {
      arg1->ForQuoteLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_ForQuoteLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ForQuoteLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_ExchangeInstID_set___(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_ExchangeInstID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_InsertDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_InsertDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->InsertDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_InsertTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_InsertTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->InsertTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_ForQuoteStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcForQuoteStatusType arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (TThostFtdcForQuoteStatusType)jarg2; 
  if (arg1) (arg1)->ForQuoteStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_ForQuoteStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcForQuoteStatusType result;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (TThostFtdcForQuoteStatusType) ((arg1)->ForQuoteStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_FrontID_set___(void * jarg1, int jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_FrontID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_StatusMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_StatusMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->StatusMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_ActiveUserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveUserID, (const char *)arg2, 16-1);
      arg1->ActiveUserID[16-1] = 0;
    } else {
      arg1->ActiveUserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_ActiveUserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ActiveUserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_BrokerForQutoSeq_set___(void * jarg1, int jarg2) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->BrokerForQutoSeq = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteField_BrokerForQutoSeq_get___(void * jarg1) {
  int jresult ;
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->BrokerForQutoSeq);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcForQuoteField___() {
  void * jresult ;
  CThostFtdcForQuoteField *result = 0 ;
  
  result = (CThostFtdcForQuoteField *)new CThostFtdcForQuoteField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcForQuoteField___(void * jarg1) {
  CThostFtdcForQuoteField *arg1 = (CThostFtdcForQuoteField *) 0 ;
  
  arg1 = (CThostFtdcForQuoteField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryForQuoteField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryForQuoteField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryForQuoteField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryForQuoteField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryForQuoteField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryForQuoteField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryForQuoteField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryForQuoteField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryForQuoteField_InsertTimeStart_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeStart, (const char *)arg2, 9-1);
      arg1->InsertTimeStart[9-1] = 0;
    } else {
      arg1->InsertTimeStart[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryForQuoteField_InsertTimeStart_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  result = (char *) ((arg1)->InsertTimeStart);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryForQuoteField_InsertTimeEnd_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeEnd, (const char *)arg2, 9-1);
      arg1->InsertTimeEnd[9-1] = 0;
    } else {
      arg1->InsertTimeEnd[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryForQuoteField_InsertTimeEnd_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  result = (char *) ((arg1)->InsertTimeEnd);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryForQuoteField___() {
  void * jresult ;
  CThostFtdcQryForQuoteField *result = 0 ;
  
  result = (CThostFtdcQryForQuoteField *)new CThostFtdcQryForQuoteField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryForQuoteField___(void * jarg1) {
  CThostFtdcQryForQuoteField *arg1 = (CThostFtdcQryForQuoteField *) 0 ;
  
  arg1 = (CThostFtdcQryForQuoteField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeForQuoteField_ForQuoteLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ForQuoteLocalID, (const char *)arg2, 13-1);
      arg1->ForQuoteLocalID[13-1] = 0;
    } else {
      arg1->ForQuoteLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeForQuoteField_ForQuoteLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ForQuoteLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeForQuoteField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeForQuoteField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeForQuoteField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeForQuoteField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeForQuoteField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeForQuoteField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeForQuoteField_ExchangeInstID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeForQuoteField_ExchangeInstID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeForQuoteField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeForQuoteField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeForQuoteField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeForQuoteField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeForQuoteField_InsertDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeForQuoteField_InsertDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->InsertDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeForQuoteField_InsertTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeForQuoteField_InsertTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->InsertTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeForQuoteField_ForQuoteStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  TThostFtdcForQuoteStatusType arg2 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  arg2 = (TThostFtdcForQuoteStatusType)jarg2; 
  if (arg1) (arg1)->ForQuoteStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeForQuoteField_ForQuoteStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  TThostFtdcForQuoteStatusType result;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  result = (TThostFtdcForQuoteStatusType) ((arg1)->ForQuoteStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcExchangeForQuoteField___() {
  void * jresult ;
  CThostFtdcExchangeForQuoteField *result = 0 ;
  
  result = (CThostFtdcExchangeForQuoteField *)new CThostFtdcExchangeForQuoteField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcExchangeForQuoteField___(void * jarg1) {
  CThostFtdcExchangeForQuoteField *arg1 = (CThostFtdcExchangeForQuoteField *) 0 ;
  
  arg1 = (CThostFtdcExchangeForQuoteField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeForQuoteField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeForQuoteField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeForQuoteField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeForQuoteField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeForQuoteField_ExchangeInstID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeForQuoteField_ExchangeInstID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeForQuoteField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeForQuoteField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeForQuoteField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeForQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeForQuoteField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeForQuoteField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryExchangeForQuoteField___() {
  void * jresult ;
  CThostFtdcQryExchangeForQuoteField *result = 0 ;
  
  result = (CThostFtdcQryExchangeForQuoteField *)new CThostFtdcQryExchangeForQuoteField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryExchangeForQuoteField___(void * jarg1) {
  CThostFtdcQryExchangeForQuoteField *arg1 = (CThostFtdcQryExchangeForQuoteField *) 0 ;
  
  arg1 = (CThostFtdcQryExchangeForQuoteField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_QuoteRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteRef, (const char *)arg2, 13-1);
      arg1->QuoteRef[13-1] = 0;
    } else {
      arg1->QuoteRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_QuoteRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (char *) ((arg1)->QuoteRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_AskPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AskPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_AskPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AskPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_BidPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->BidPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_BidPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->BidPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_AskVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AskVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_AskVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_BidVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->BidVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_BidVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_BusinessUnit_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_BusinessUnit_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_AskOffsetFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->AskOffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_AskOffsetFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->AskOffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_BidOffsetFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->BidOffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_BidOffsetFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->BidOffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_AskHedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->AskHedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_AskHedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->AskHedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_BidHedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->BidHedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_BidHedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->BidHedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_AskOrderRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AskOrderRef, (const char *)arg2, 13-1);
      arg1->AskOrderRef[13-1] = 0;
    } else {
      arg1->AskOrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_AskOrderRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (char *) ((arg1)->AskOrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_BidOrderRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BidOrderRef, (const char *)arg2, 13-1);
      arg1->BidOrderRef[13-1] = 0;
    } else {
      arg1->BidOrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_BidOrderRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (char *) ((arg1)->BidOrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_ForQuoteSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ForQuoteSysID, (const char *)arg2, 21-1);
      arg1->ForQuoteSysID[21-1] = 0;
    } else {
      arg1->ForQuoteSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteField_ForQuoteSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  result = (char *) ((arg1)->ForQuoteSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcInputQuoteField___() {
  void * jresult ;
  CThostFtdcInputQuoteField *result = 0 ;
  
  result = (CThostFtdcInputQuoteField *)new CThostFtdcInputQuoteField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcInputQuoteField___(void * jarg1) {
  CThostFtdcInputQuoteField *arg1 = (CThostFtdcInputQuoteField *) 0 ;
  
  arg1 = (CThostFtdcInputQuoteField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteActionField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteActionField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteActionField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteActionField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteActionField_QuoteActionRef_set___(void * jarg1, int jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionRefType)jarg2; 
  if (arg1) (arg1)->QuoteActionRef = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteActionField_QuoteActionRef_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (TThostFtdcOrderActionRefType) ((arg1)->QuoteActionRef);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteActionField_QuoteRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteRef, (const char *)arg2, 13-1);
      arg1->QuoteRef[13-1] = 0;
    } else {
      arg1->QuoteRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteActionField_QuoteRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->QuoteRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteActionField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteActionField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteActionField_FrontID_set___(void * jarg1, int jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteActionField_FrontID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteActionField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteActionField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteActionField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteActionField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteActionField_QuoteSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteSysID, (const char *)arg2, 21-1);
      arg1->QuoteSysID[21-1] = 0;
    } else {
      arg1->QuoteSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteActionField_QuoteSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->QuoteSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteActionField_ActionFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcActionFlagType)jarg2; 
  if (arg1) (arg1)->ActionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteActionField_ActionFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  TThostFtdcActionFlagType result;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteActionField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteActionField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteActionField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputQuoteActionField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcInputQuoteActionField___() {
  void * jresult ;
  CThostFtdcInputQuoteActionField *result = 0 ;
  
  result = (CThostFtdcInputQuoteActionField *)new CThostFtdcInputQuoteActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcInputQuoteActionField___(void * jarg1) {
  CThostFtdcInputQuoteActionField *arg1 = (CThostFtdcInputQuoteActionField *) 0 ;
  
  arg1 = (CThostFtdcInputQuoteActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_QuoteRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteRef, (const char *)arg2, 13-1);
      arg1->QuoteRef[13-1] = 0;
    } else {
      arg1->QuoteRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_QuoteRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->QuoteRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_AskPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AskPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_AskPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AskPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_BidPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->BidPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_BidPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->BidPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_AskVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AskVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_AskVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_BidVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->BidVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_BidVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_BusinessUnit_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_BusinessUnit_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_AskOffsetFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->AskOffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_AskOffsetFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->AskOffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_BidOffsetFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->BidOffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_BidOffsetFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->BidOffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_AskHedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->AskHedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_AskHedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->AskHedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_BidHedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->BidHedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_BidHedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->BidHedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_QuoteLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteLocalID, (const char *)arg2, 13-1);
      arg1->QuoteLocalID[13-1] = 0;
    } else {
      arg1->QuoteLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_QuoteLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->QuoteLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_ExchangeInstID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_ExchangeInstID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_NotifySequence_set___(void * jarg1, int jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->NotifySequence = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_NotifySequence_get___(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_OrderSubmitStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcOrderSubmitStatusType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcOrderSubmitStatusType)jarg2; 
  if (arg1) (arg1)->OrderSubmitStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_OrderSubmitStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcOrderSubmitStatusType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcOrderSubmitStatusType) ((arg1)->OrderSubmitStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_SettlementID_set___(void * jarg1, int jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_SettlementID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_QuoteSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteSysID, (const char *)arg2, 21-1);
      arg1->QuoteSysID[21-1] = 0;
    } else {
      arg1->QuoteSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_QuoteSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->QuoteSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_InsertDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_InsertDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->InsertDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_InsertTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_InsertTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->InsertTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_CancelTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CancelTime, (const char *)arg2, 9-1);
      arg1->CancelTime[9-1] = 0;
    } else {
      arg1->CancelTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_CancelTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->CancelTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_QuoteStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcOrderStatusType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcOrderStatusType)jarg2; 
  if (arg1) (arg1)->QuoteStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_QuoteStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcOrderStatusType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcOrderStatusType) ((arg1)->QuoteStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_ClearingPartID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_ClearingPartID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->ClearingPartID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_SequenceNo_set___(void * jarg1, int jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_SequenceNo_get___(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_AskOrderSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AskOrderSysID, (const char *)arg2, 21-1);
      arg1->AskOrderSysID[21-1] = 0;
    } else {
      arg1->AskOrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_AskOrderSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->AskOrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_BidOrderSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BidOrderSysID, (const char *)arg2, 21-1);
      arg1->BidOrderSysID[21-1] = 0;
    } else {
      arg1->BidOrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_BidOrderSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->BidOrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_FrontID_set___(void * jarg1, int jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_FrontID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_UserProductInfo_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_UserProductInfo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->UserProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_StatusMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_StatusMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->StatusMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_ActiveUserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveUserID, (const char *)arg2, 16-1);
      arg1->ActiveUserID[16-1] = 0;
    } else {
      arg1->ActiveUserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_ActiveUserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->ActiveUserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_BrokerQuoteSeq_set___(void * jarg1, int jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->BrokerQuoteSeq = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_BrokerQuoteSeq_get___(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->BrokerQuoteSeq);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_AskOrderRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AskOrderRef, (const char *)arg2, 13-1);
      arg1->AskOrderRef[13-1] = 0;
    } else {
      arg1->AskOrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_AskOrderRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->AskOrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_BidOrderRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BidOrderRef, (const char *)arg2, 13-1);
      arg1->BidOrderRef[13-1] = 0;
    } else {
      arg1->BidOrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_BidOrderRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->BidOrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_ForQuoteSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ForQuoteSysID, (const char *)arg2, 21-1);
      arg1->ForQuoteSysID[21-1] = 0;
    } else {
      arg1->ForQuoteSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteField_ForQuoteSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  result = (char *) ((arg1)->ForQuoteSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQuoteField___() {
  void * jresult ;
  CThostFtdcQuoteField *result = 0 ;
  
  result = (CThostFtdcQuoteField *)new CThostFtdcQuoteField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQuoteField___(void * jarg1) {
  CThostFtdcQuoteField *arg1 = (CThostFtdcQuoteField *) 0 ;
  
  arg1 = (CThostFtdcQuoteField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_QuoteActionRef_set___(void * jarg1, int jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionRefType)jarg2; 
  if (arg1) (arg1)->QuoteActionRef = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_QuoteActionRef_get___(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (TThostFtdcOrderActionRefType) ((arg1)->QuoteActionRef);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_QuoteRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteRef, (const char *)arg2, 13-1);
      arg1->QuoteRef[13-1] = 0;
    } else {
      arg1->QuoteRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_QuoteRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->QuoteRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_FrontID_set___(void * jarg1, int jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_FrontID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_QuoteSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteSysID, (const char *)arg2, 21-1);
      arg1->QuoteSysID[21-1] = 0;
    } else {
      arg1->QuoteSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_QuoteSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->QuoteSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_ActionFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcActionFlagType)jarg2; 
  if (arg1) (arg1)->ActionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_ActionFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcActionFlagType result;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_ActionDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDate, (const char *)arg2, 9-1);
      arg1->ActionDate[9-1] = 0;
    } else {
      arg1->ActionDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_ActionDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ActionDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_ActionTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionTime, (const char *)arg2, 9-1);
      arg1->ActionTime[9-1] = 0;
    } else {
      arg1->ActionTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_ActionTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ActionTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_QuoteLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteLocalID, (const char *)arg2, 13-1);
      arg1->QuoteLocalID[13-1] = 0;
    } else {
      arg1->QuoteLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_QuoteLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->QuoteLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_ActionLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_ActionLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ActionLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_BusinessUnit_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_BusinessUnit_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_OrderActionStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionStatusType)jarg2; 
  if (arg1) (arg1)->OrderActionStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_OrderActionStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (TThostFtdcOrderActionStatusType) ((arg1)->OrderActionStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_StatusMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_StatusMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->StatusMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQuoteActionField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQuoteActionField___() {
  void * jresult ;
  CThostFtdcQuoteActionField *result = 0 ;
  
  result = (CThostFtdcQuoteActionField *)new CThostFtdcQuoteActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQuoteActionField___(void * jarg1) {
  CThostFtdcQuoteActionField *arg1 = (CThostFtdcQuoteActionField *) 0 ;
  
  arg1 = (CThostFtdcQuoteActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryQuoteField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryQuoteField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryQuoteField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryQuoteField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryQuoteField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryQuoteField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryQuoteField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryQuoteField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryQuoteField_QuoteSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteSysID, (const char *)arg2, 21-1);
      arg1->QuoteSysID[21-1] = 0;
    } else {
      arg1->QuoteSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryQuoteField_QuoteSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  result = (char *) ((arg1)->QuoteSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryQuoteField_InsertTimeStart_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeStart, (const char *)arg2, 9-1);
      arg1->InsertTimeStart[9-1] = 0;
    } else {
      arg1->InsertTimeStart[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryQuoteField_InsertTimeStart_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  result = (char *) ((arg1)->InsertTimeStart);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryQuoteField_InsertTimeEnd_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTimeEnd, (const char *)arg2, 9-1);
      arg1->InsertTimeEnd[9-1] = 0;
    } else {
      arg1->InsertTimeEnd[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryQuoteField_InsertTimeEnd_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  result = (char *) ((arg1)->InsertTimeEnd);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryQuoteField___() {
  void * jresult ;
  CThostFtdcQryQuoteField *result = 0 ;
  
  result = (CThostFtdcQryQuoteField *)new CThostFtdcQryQuoteField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryQuoteField___(void * jarg1) {
  CThostFtdcQryQuoteField *arg1 = (CThostFtdcQryQuoteField *) 0 ;
  
  arg1 = (CThostFtdcQryQuoteField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_AskPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AskPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_AskPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AskPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_BidPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->BidPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_BidPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->BidPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_AskVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AskVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_AskVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_BidVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->BidVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_BidVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_BusinessUnit_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_BusinessUnit_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_AskOffsetFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->AskOffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_AskOffsetFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->AskOffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_BidOffsetFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->BidOffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_BidOffsetFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->BidOffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_AskHedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->AskHedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_AskHedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->AskHedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_BidHedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->BidHedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_BidHedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->BidHedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_QuoteLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteLocalID, (const char *)arg2, 13-1);
      arg1->QuoteLocalID[13-1] = 0;
    } else {
      arg1->QuoteLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_QuoteLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->QuoteLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_ExchangeInstID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_ExchangeInstID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_NotifySequence_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->NotifySequence = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_NotifySequence_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_OrderSubmitStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcOrderSubmitStatusType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcOrderSubmitStatusType)jarg2; 
  if (arg1) (arg1)->OrderSubmitStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_OrderSubmitStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcOrderSubmitStatusType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcOrderSubmitStatusType) ((arg1)->OrderSubmitStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_SettlementID_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_SettlementID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_QuoteSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteSysID, (const char *)arg2, 21-1);
      arg1->QuoteSysID[21-1] = 0;
    } else {
      arg1->QuoteSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_QuoteSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->QuoteSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_InsertDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_InsertDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->InsertDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_InsertTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_InsertTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->InsertTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_CancelTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CancelTime, (const char *)arg2, 9-1);
      arg1->CancelTime[9-1] = 0;
    } else {
      arg1->CancelTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_CancelTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->CancelTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_QuoteStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcOrderStatusType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcOrderStatusType)jarg2; 
  if (arg1) (arg1)->QuoteStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_QuoteStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcOrderStatusType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcOrderStatusType) ((arg1)->QuoteStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_ClearingPartID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_ClearingPartID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->ClearingPartID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_SequenceNo_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_SequenceNo_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_AskOrderSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AskOrderSysID, (const char *)arg2, 21-1);
      arg1->AskOrderSysID[21-1] = 0;
    } else {
      arg1->AskOrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_AskOrderSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->AskOrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_BidOrderSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BidOrderSysID, (const char *)arg2, 21-1);
      arg1->BidOrderSysID[21-1] = 0;
    } else {
      arg1->BidOrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_BidOrderSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->BidOrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_ForQuoteSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ForQuoteSysID, (const char *)arg2, 21-1);
      arg1->ForQuoteSysID[21-1] = 0;
    } else {
      arg1->ForQuoteSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteField_ForQuoteSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->ForQuoteSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcExchangeQuoteField___() {
  void * jresult ;
  CThostFtdcExchangeQuoteField *result = 0 ;
  
  result = (CThostFtdcExchangeQuoteField *)new CThostFtdcExchangeQuoteField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcExchangeQuoteField___(void * jarg1) {
  CThostFtdcExchangeQuoteField *arg1 = (CThostFtdcExchangeQuoteField *) 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeQuoteField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeQuoteField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeQuoteField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeQuoteField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeQuoteField_ExchangeInstID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeQuoteField_ExchangeInstID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeQuoteField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeQuoteField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeQuoteField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeQuoteField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryExchangeQuoteField___() {
  void * jresult ;
  CThostFtdcQryExchangeQuoteField *result = 0 ;
  
  result = (CThostFtdcQryExchangeQuoteField *)new CThostFtdcQryExchangeQuoteField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryExchangeQuoteField___(void * jarg1) {
  CThostFtdcQryExchangeQuoteField *arg1 = (CThostFtdcQryExchangeQuoteField *) 0 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryQuoteActionField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryQuoteActionField *arg1 = (CThostFtdcQryQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryQuoteActionField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryQuoteActionField *arg1 = (CThostFtdcQryQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryQuoteActionField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryQuoteActionField *arg1 = (CThostFtdcQryQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryQuoteActionField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryQuoteActionField *arg1 = (CThostFtdcQryQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryQuoteActionField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryQuoteActionField *arg1 = (CThostFtdcQryQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryQuoteActionField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryQuoteActionField *arg1 = (CThostFtdcQryQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryQuoteActionField___() {
  void * jresult ;
  CThostFtdcQryQuoteActionField *result = 0 ;
  
  result = (CThostFtdcQryQuoteActionField *)new CThostFtdcQryQuoteActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryQuoteActionField___(void * jarg1) {
  CThostFtdcQryQuoteActionField *arg1 = (CThostFtdcQryQuoteActionField *) 0 ;
  
  arg1 = (CThostFtdcQryQuoteActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_QuoteSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteSysID, (const char *)arg2, 21-1);
      arg1->QuoteSysID[21-1] = 0;
    } else {
      arg1->QuoteSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_QuoteSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->QuoteSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_ActionFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcActionFlagType)jarg2; 
  if (arg1) (arg1)->ActionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_ActionFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  TThostFtdcActionFlagType result;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_ActionDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDate, (const char *)arg2, 9-1);
      arg1->ActionDate[9-1] = 0;
    } else {
      arg1->ActionDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_ActionDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ActionDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_ActionTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionTime, (const char *)arg2, 9-1);
      arg1->ActionTime[9-1] = 0;
    } else {
      arg1->ActionTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_ActionTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ActionTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_QuoteLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteLocalID, (const char *)arg2, 13-1);
      arg1->QuoteLocalID[13-1] = 0;
    } else {
      arg1->QuoteLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_QuoteLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->QuoteLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_ActionLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_ActionLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ActionLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_BusinessUnit_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_BusinessUnit_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_OrderActionStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionStatusType)jarg2; 
  if (arg1) (arg1)->OrderActionStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_OrderActionStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (TThostFtdcOrderActionStatusType) ((arg1)->OrderActionStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeQuoteActionField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcExchangeQuoteActionField___() {
  void * jresult ;
  CThostFtdcExchangeQuoteActionField *result = 0 ;
  
  result = (CThostFtdcExchangeQuoteActionField *)new CThostFtdcExchangeQuoteActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcExchangeQuoteActionField___(void * jarg1) {
  CThostFtdcExchangeQuoteActionField *arg1 = (CThostFtdcExchangeQuoteActionField *) 0 ;
  
  arg1 = (CThostFtdcExchangeQuoteActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeQuoteActionField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeQuoteActionField *arg1 = (CThostFtdcQryExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeQuoteActionField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeQuoteActionField *arg1 = (CThostFtdcQryExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeQuoteActionField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeQuoteActionField *arg1 = (CThostFtdcQryExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeQuoteActionField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeQuoteActionField *arg1 = (CThostFtdcQryExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeQuoteActionField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeQuoteActionField *arg1 = (CThostFtdcQryExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeQuoteActionField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeQuoteActionField *arg1 = (CThostFtdcQryExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeQuoteActionField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeQuoteActionField *arg1 = (CThostFtdcQryExchangeQuoteActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeQuoteActionField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeQuoteActionField *arg1 = (CThostFtdcQryExchangeQuoteActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryExchangeQuoteActionField___() {
  void * jresult ;
  CThostFtdcQryExchangeQuoteActionField *result = 0 ;
  
  result = (CThostFtdcQryExchangeQuoteActionField *)new CThostFtdcQryExchangeQuoteActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryExchangeQuoteActionField___(void * jarg1) {
  CThostFtdcQryExchangeQuoteActionField *arg1 = (CThostFtdcQryExchangeQuoteActionField *) 0 ;
  
  arg1 = (CThostFtdcQryExchangeQuoteActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrDeltaField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrDeltaField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrDeltaField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrDeltaField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrDeltaField_InvestorRange_set___(void * jarg1, char jarg2) {
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrDeltaField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrDeltaField_InvestorRange_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcOptionInstrDeltaField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrDeltaField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrDeltaField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrDeltaField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrDeltaField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrDeltaField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOptionInstrDeltaField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrDeltaField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOptionInstrDeltaField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrDeltaField_Delta_set___(void * jarg1, double jarg2) {
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcOptionInstrDeltaField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->Delta = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOptionInstrDeltaField_Delta_get___(void * jarg1) {
  double jresult ;
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcOptionInstrDeltaField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->Delta);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcOptionInstrDeltaField___() {
  void * jresult ;
  CThostFtdcOptionInstrDeltaField *result = 0 ;
  
  result = (CThostFtdcOptionInstrDeltaField *)new CThostFtdcOptionInstrDeltaField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcOptionInstrDeltaField___(void * jarg1) {
  CThostFtdcOptionInstrDeltaField *arg1 = (CThostFtdcOptionInstrDeltaField *) 0 ;
  
  arg1 = (CThostFtdcOptionInstrDeltaField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteRspField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteRspField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteRspField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteRspField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteRspField_ForQuoteSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ForQuoteSysID, (const char *)arg2, 21-1);
      arg1->ForQuoteSysID[21-1] = 0;
    } else {
      arg1->ForQuoteSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteRspField_ForQuoteSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  result = (char *) ((arg1)->ForQuoteSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteRspField_ForQuoteTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ForQuoteTime, (const char *)arg2, 9-1);
      arg1->ForQuoteTime[9-1] = 0;
    } else {
      arg1->ForQuoteTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteRspField_ForQuoteTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  result = (char *) ((arg1)->ForQuoteTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteRspField_ActionDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDay, (const char *)arg2, 9-1);
      arg1->ActionDay[9-1] = 0;
    } else {
      arg1->ActionDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteRspField_ActionDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  result = (char *) ((arg1)->ActionDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteRspField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcForQuoteRspField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcForQuoteRspField___() {
  void * jresult ;
  CThostFtdcForQuoteRspField *result = 0 ;
  
  result = (CThostFtdcForQuoteRspField *)new CThostFtdcForQuoteRspField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcForQuoteRspField___(void * jarg1) {
  CThostFtdcForQuoteRspField *arg1 = (CThostFtdcForQuoteRspField *) 0 ;
  
  arg1 = (CThostFtdcForQuoteRspField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcStrikeOffsetField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcStrikeOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcStrikeOffsetField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcStrikeOffsetField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcStrikeOffsetField_InvestorRange_set___(void * jarg1, char jarg2) {
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcStrikeOffsetField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcStrikeOffsetField_InvestorRange_get___(void * jarg1) {
  char jresult ;
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcStrikeOffsetField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcStrikeOffsetField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcStrikeOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcStrikeOffsetField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcStrikeOffsetField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcStrikeOffsetField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcStrikeOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcStrikeOffsetField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcStrikeOffsetField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcStrikeOffsetField_Offset_set___(void * jarg1, double jarg2) {
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcStrikeOffsetField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Offset = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcStrikeOffsetField_Offset_get___(void * jarg1) {
  double jresult ;
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcStrikeOffsetField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Offset);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcStrikeOffsetField___() {
  void * jresult ;
  CThostFtdcStrikeOffsetField *result = 0 ;
  
  result = (CThostFtdcStrikeOffsetField *)new CThostFtdcStrikeOffsetField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcStrikeOffsetField___(void * jarg1) {
  CThostFtdcStrikeOffsetField *arg1 = (CThostFtdcStrikeOffsetField *) 0 ;
  
  arg1 = (CThostFtdcStrikeOffsetField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryStrikeOffsetField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryStrikeOffsetField *arg1 = (CThostFtdcQryStrikeOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryStrikeOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryStrikeOffsetField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryStrikeOffsetField *arg1 = (CThostFtdcQryStrikeOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryStrikeOffsetField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryStrikeOffsetField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryStrikeOffsetField *arg1 = (CThostFtdcQryStrikeOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryStrikeOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryStrikeOffsetField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryStrikeOffsetField *arg1 = (CThostFtdcQryStrikeOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryStrikeOffsetField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryStrikeOffsetField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryStrikeOffsetField *arg1 = (CThostFtdcQryStrikeOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryStrikeOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryStrikeOffsetField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryStrikeOffsetField *arg1 = (CThostFtdcQryStrikeOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryStrikeOffsetField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryStrikeOffsetField___() {
  void * jresult ;
  CThostFtdcQryStrikeOffsetField *result = 0 ;
  
  result = (CThostFtdcQryStrikeOffsetField *)new CThostFtdcQryStrikeOffsetField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryStrikeOffsetField___(void * jarg1) {
  CThostFtdcQryStrikeOffsetField *arg1 = (CThostFtdcQryStrikeOffsetField *) 0 ;
  
  arg1 = (CThostFtdcQryStrikeOffsetField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombInstrumentGuardField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCombInstrumentGuardField *arg1 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombInstrumentGuardField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombInstrumentGuardField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCombInstrumentGuardField *arg1 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombInstrumentGuardField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombInstrumentGuardField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCombInstrumentGuardField *arg1 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombInstrumentGuardField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombInstrumentGuardField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCombInstrumentGuardField *arg1 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombInstrumentGuardField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombInstrumentGuardField_GuarantRatio_set___(void * jarg1, double jarg2) {
  CThostFtdcCombInstrumentGuardField *arg1 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcCombInstrumentGuardField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->GuarantRatio = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombInstrumentGuardField_GuarantRatio_get___(void * jarg1) {
  double jresult ;
  CThostFtdcCombInstrumentGuardField *arg1 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcCombInstrumentGuardField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->GuarantRatio);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcCombInstrumentGuardField___() {
  void * jresult ;
  CThostFtdcCombInstrumentGuardField *result = 0 ;
  
  result = (CThostFtdcCombInstrumentGuardField *)new CThostFtdcCombInstrumentGuardField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcCombInstrumentGuardField___(void * jarg1) {
  CThostFtdcCombInstrumentGuardField *arg1 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  
  arg1 = (CThostFtdcCombInstrumentGuardField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCombInstrumentGuardField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryCombInstrumentGuardField *arg1 = (CThostFtdcQryCombInstrumentGuardField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCombInstrumentGuardField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCombInstrumentGuardField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCombInstrumentGuardField *arg1 = (CThostFtdcQryCombInstrumentGuardField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCombInstrumentGuardField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCombInstrumentGuardField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryCombInstrumentGuardField *arg1 = (CThostFtdcQryCombInstrumentGuardField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCombInstrumentGuardField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCombInstrumentGuardField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCombInstrumentGuardField *arg1 = (CThostFtdcQryCombInstrumentGuardField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCombInstrumentGuardField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryCombInstrumentGuardField___() {
  void * jresult ;
  CThostFtdcQryCombInstrumentGuardField *result = 0 ;
  
  result = (CThostFtdcQryCombInstrumentGuardField *)new CThostFtdcQryCombInstrumentGuardField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryCombInstrumentGuardField___(void * jarg1) {
  CThostFtdcQryCombInstrumentGuardField *arg1 = (CThostFtdcQryCombInstrumentGuardField *) 0 ;
  
  arg1 = (CThostFtdcQryCombInstrumentGuardField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputCombActionField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputCombActionField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputCombActionField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputCombActionField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputCombActionField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputCombActionField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputCombActionField_CombActionRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombActionRef, (const char *)arg2, 13-1);
      arg1->CombActionRef[13-1] = 0;
    } else {
      arg1->CombActionRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputCombActionField_CombActionRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  result = (char *) ((arg1)->CombActionRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputCombActionField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputCombActionField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputCombActionField_Direction_set___(void * jarg1, char jarg2) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputCombActionField_Direction_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputCombActionField_Volume_set___(void * jarg1, int jarg2) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputCombActionField_Volume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputCombActionField_CombDirection_set___(void * jarg1, char jarg2) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcCombDirectionType arg2 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  arg2 = (TThostFtdcCombDirectionType)jarg2; 
  if (arg1) (arg1)->CombDirection = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputCombActionField_CombDirection_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcCombDirectionType result;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  result = (TThostFtdcCombDirectionType) ((arg1)->CombDirection);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputCombActionField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInputCombActionField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcInputCombActionField___() {
  void * jresult ;
  CThostFtdcInputCombActionField *result = 0 ;
  
  result = (CThostFtdcInputCombActionField *)new CThostFtdcInputCombActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcInputCombActionField___(void * jarg1) {
  CThostFtdcInputCombActionField *arg1 = (CThostFtdcInputCombActionField *) 0 ;
  
  arg1 = (CThostFtdcInputCombActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_CombActionRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombActionRef, (const char *)arg2, 13-1);
      arg1->CombActionRef[13-1] = 0;
    } else {
      arg1->CombActionRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_CombActionRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->CombActionRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_Direction_set___(void * jarg1, char jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_Direction_get___(void * jarg1) {
  char jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_Volume_set___(void * jarg1, int jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_Volume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_CombDirection_set___(void * jarg1, char jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcCombDirectionType arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (TThostFtdcCombDirectionType)jarg2; 
  if (arg1) (arg1)->CombDirection = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_CombDirection_get___(void * jarg1) {
  char jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcCombDirectionType result;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (TThostFtdcCombDirectionType) ((arg1)->CombDirection);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_ActionLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_ActionLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->ActionLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_ExchangeInstID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_ExchangeInstID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_ActionStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionStatusType)jarg2; 
  if (arg1) (arg1)->ActionStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_ActionStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (TThostFtdcOrderActionStatusType) ((arg1)->ActionStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_NotifySequence_set___(void * jarg1, int jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->NotifySequence = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_NotifySequence_get___(void * jarg1) {
  int jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_SettlementID_set___(void * jarg1, int jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_SettlementID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_SequenceNo_set___(void * jarg1, int jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_SequenceNo_get___(void * jarg1) {
  int jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_FrontID_set___(void * jarg1, int jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_FrontID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_UserProductInfo_set___(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_UserProductInfo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->UserProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_StatusMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombActionField_StatusMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  result = (char *) ((arg1)->StatusMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcCombActionField___() {
  void * jresult ;
  CThostFtdcCombActionField *result = 0 ;
  
  result = (CThostFtdcCombActionField *)new CThostFtdcCombActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcCombActionField___(void * jarg1) {
  CThostFtdcCombActionField *arg1 = (CThostFtdcCombActionField *) 0 ;
  
  arg1 = (CThostFtdcCombActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCombActionField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCombActionField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCombActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCombActionField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCombActionField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCombActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCombActionField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCombActionField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCombActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCombActionField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCombActionField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCombActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryCombActionField___() {
  void * jresult ;
  CThostFtdcQryCombActionField *result = 0 ;
  
  result = (CThostFtdcQryCombActionField *)new CThostFtdcQryCombActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryCombActionField___(void * jarg1) {
  CThostFtdcQryCombActionField *arg1 = (CThostFtdcQryCombActionField *) 0 ;
  
  arg1 = (CThostFtdcQryCombActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_Direction_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_Direction_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_Volume_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_Volume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_CombDirection_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcCombDirectionType arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (TThostFtdcCombDirectionType)jarg2; 
  if (arg1) (arg1)->CombDirection = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_CombDirection_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcCombDirectionType result;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (TThostFtdcCombDirectionType) ((arg1)->CombDirection);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_ActionLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_ActionLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->ActionLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_ExchangeInstID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_ExchangeInstID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_ActionStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionStatusType)jarg2; 
  if (arg1) (arg1)->ActionStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_ActionStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (TThostFtdcOrderActionStatusType) ((arg1)->ActionStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_NotifySequence_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->NotifySequence = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_NotifySequence_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_SettlementID_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_SettlementID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_SequenceNo_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeCombActionField_SequenceNo_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcExchangeCombActionField___() {
  void * jresult ;
  CThostFtdcExchangeCombActionField *result = 0 ;
  
  result = (CThostFtdcExchangeCombActionField *)new CThostFtdcExchangeCombActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcExchangeCombActionField___(void * jarg1) {
  CThostFtdcExchangeCombActionField *arg1 = (CThostFtdcExchangeCombActionField *) 0 ;
  
  arg1 = (CThostFtdcExchangeCombActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeCombActionField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeCombActionField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeCombActionField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeCombActionField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeCombActionField_ExchangeInstID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeCombActionField_ExchangeInstID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeCombActionField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeCombActionField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeCombActionField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeCombActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeCombActionField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeCombActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryExchangeCombActionField___() {
  void * jresult ;
  CThostFtdcQryExchangeCombActionField *result = 0 ;
  
  result = (CThostFtdcQryExchangeCombActionField *)new CThostFtdcQryExchangeCombActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryExchangeCombActionField___(void * jarg1) {
  CThostFtdcQryExchangeCombActionField *arg1 = (CThostFtdcQryExchangeCombActionField *) 0 ;
  
  arg1 = (CThostFtdcQryExchangeCombActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductExchRateField_ProductID_set___(void * jarg1, char * jarg2) {
  CThostFtdcProductExchRateField *arg1 = (CThostFtdcProductExchRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcProductExchRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProductID, (const char *)arg2, 31-1);
      arg1->ProductID[31-1] = 0;
    } else {
      arg1->ProductID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductExchRateField_ProductID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcProductExchRateField *arg1 = (CThostFtdcProductExchRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcProductExchRateField *)jarg1; 
  result = (char *) ((arg1)->ProductID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductExchRateField_QuoteCurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcProductExchRateField *arg1 = (CThostFtdcProductExchRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcProductExchRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->QuoteCurrencyID, (const char *)arg2, 4-1);
      arg1->QuoteCurrencyID[4-1] = 0;
    } else {
      arg1->QuoteCurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductExchRateField_QuoteCurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcProductExchRateField *arg1 = (CThostFtdcProductExchRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcProductExchRateField *)jarg1; 
  result = (char *) ((arg1)->QuoteCurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductExchRateField_ExchangeRate_set___(void * jarg1, double jarg2) {
  CThostFtdcProductExchRateField *arg1 = (CThostFtdcProductExchRateField *) 0 ;
  TThostFtdcExchangeRateType arg2 ;
  
  arg1 = (CThostFtdcProductExchRateField *)jarg1; 
  arg2 = (TThostFtdcExchangeRateType)jarg2; 
  if (arg1) (arg1)->ExchangeRate = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcProductExchRateField_ExchangeRate_get___(void * jarg1) {
  double jresult ;
  CThostFtdcProductExchRateField *arg1 = (CThostFtdcProductExchRateField *) 0 ;
  TThostFtdcExchangeRateType result;
  
  arg1 = (CThostFtdcProductExchRateField *)jarg1; 
  result = (TThostFtdcExchangeRateType) ((arg1)->ExchangeRate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcProductExchRateField___() {
  void * jresult ;
  CThostFtdcProductExchRateField *result = 0 ;
  
  result = (CThostFtdcProductExchRateField *)new CThostFtdcProductExchRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcProductExchRateField___(void * jarg1) {
  CThostFtdcProductExchRateField *arg1 = (CThostFtdcProductExchRateField *) 0 ;
  
  arg1 = (CThostFtdcProductExchRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryProductExchRateField_ProductID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryProductExchRateField *arg1 = (CThostFtdcQryProductExchRateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryProductExchRateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProductID, (const char *)arg2, 31-1);
      arg1->ProductID[31-1] = 0;
    } else {
      arg1->ProductID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryProductExchRateField_ProductID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryProductExchRateField *arg1 = (CThostFtdcQryProductExchRateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryProductExchRateField *)jarg1; 
  result = (char *) ((arg1)->ProductID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryProductExchRateField___() {
  void * jresult ;
  CThostFtdcQryProductExchRateField *result = 0 ;
  
  result = (CThostFtdcQryProductExchRateField *)new CThostFtdcQryProductExchRateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryProductExchRateField___(void * jarg1) {
  CThostFtdcQryProductExchRateField *arg1 = (CThostFtdcQryProductExchRateField *) 0 ;
  
  arg1 = (CThostFtdcQryProductExchRateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_ExchangeInstID_set___(void * jarg1, char * jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_ExchangeInstID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_LastPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LastPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_LastPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LastPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_PreSettlementPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->PreSettlementPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_PreSettlementPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->PreSettlementPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_PreClosePrice_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->PreClosePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_PreClosePrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->PreClosePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_PreOpenInterest_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcLargeVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcLargeVolumeType)jarg2; 
  if (arg1) (arg1)->PreOpenInterest = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_PreOpenInterest_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcLargeVolumeType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcLargeVolumeType) ((arg1)->PreOpenInterest);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_OpenPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->OpenPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_OpenPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->OpenPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_HighestPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->HighestPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_HighestPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->HighestPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_LowestPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LowestPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_LowestPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LowestPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_Volume_set___(void * jarg1, int jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_Volume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_Turnover_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Turnover = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_Turnover_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Turnover);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_OpenInterest_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcLargeVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcLargeVolumeType)jarg2; 
  if (arg1) (arg1)->OpenInterest = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_OpenInterest_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcLargeVolumeType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcLargeVolumeType) ((arg1)->OpenInterest);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_ClosePrice_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->ClosePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_ClosePrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->ClosePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_SettlementPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->SettlementPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_SettlementPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->SettlementPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_UpperLimitPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->UpperLimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_UpperLimitPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->UpperLimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_LowerLimitPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LowerLimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_LowerLimitPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LowerLimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_PreDelta_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->PreDelta = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_PreDelta_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->PreDelta);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_CurrDelta_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CurrDelta = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_CurrDelta_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CurrDelta);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_UpdateTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpdateTime, (const char *)arg2, 9-1);
      arg1->UpdateTime[9-1] = 0;
    } else {
      arg1->UpdateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_UpdateTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (char *) ((arg1)->UpdateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_UpdateMillisec_set___(void * jarg1, int jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcMillisecType arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (TThostFtdcMillisecType)jarg2; 
  if (arg1) (arg1)->UpdateMillisec = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_UpdateMillisec_get___(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  TThostFtdcMillisecType result;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (TThostFtdcMillisecType) ((arg1)->UpdateMillisec);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_ActionDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDay, (const char *)arg2, 9-1);
      arg1->ActionDay[9-1] = 0;
    } else {
      arg1->ActionDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataField_ActionDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  result = (char *) ((arg1)->ActionDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcMarketDataField___() {
  void * jresult ;
  CThostFtdcMarketDataField *result = 0 ;
  
  result = (CThostFtdcMarketDataField *)new CThostFtdcMarketDataField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcMarketDataField___(void * jarg1) {
  CThostFtdcMarketDataField *arg1 = (CThostFtdcMarketDataField *) 0 ;
  
  arg1 = (CThostFtdcMarketDataField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBaseField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarketDataBaseField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBaseField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarketDataBaseField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBaseField_PreSettlementPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBaseField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->PreSettlementPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBaseField_PreSettlementPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataBaseField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->PreSettlementPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBaseField_PreClosePrice_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBaseField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->PreClosePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBaseField_PreClosePrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataBaseField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->PreClosePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBaseField_PreOpenInterest_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  TThostFtdcLargeVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBaseField *)jarg1; 
  arg2 = (TThostFtdcLargeVolumeType)jarg2; 
  if (arg1) (arg1)->PreOpenInterest = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBaseField_PreOpenInterest_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  TThostFtdcLargeVolumeType result;
  
  arg1 = (CThostFtdcMarketDataBaseField *)jarg1; 
  result = (TThostFtdcLargeVolumeType) ((arg1)->PreOpenInterest);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBaseField_PreDelta_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBaseField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->PreDelta = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBaseField_PreDelta_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcMarketDataBaseField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->PreDelta);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcMarketDataBaseField___() {
  void * jresult ;
  CThostFtdcMarketDataBaseField *result = 0 ;
  
  result = (CThostFtdcMarketDataBaseField *)new CThostFtdcMarketDataBaseField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcMarketDataBaseField___(void * jarg1) {
  CThostFtdcMarketDataBaseField *arg1 = (CThostFtdcMarketDataBaseField *) 0 ;
  
  arg1 = (CThostFtdcMarketDataBaseField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataStaticField_OpenPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->OpenPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataStaticField_OpenPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->OpenPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataStaticField_HighestPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->HighestPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataStaticField_HighestPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->HighestPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataStaticField_LowestPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LowestPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataStaticField_LowestPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LowestPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataStaticField_ClosePrice_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->ClosePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataStaticField_ClosePrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->ClosePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataStaticField_UpperLimitPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->UpperLimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataStaticField_UpperLimitPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->UpperLimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataStaticField_LowerLimitPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LowerLimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataStaticField_LowerLimitPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LowerLimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataStaticField_SettlementPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->SettlementPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataStaticField_SettlementPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->SettlementPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataStaticField_CurrDelta_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->CurrDelta = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataStaticField_CurrDelta_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->CurrDelta);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcMarketDataStaticField___() {
  void * jresult ;
  CThostFtdcMarketDataStaticField *result = 0 ;
  
  result = (CThostFtdcMarketDataStaticField *)new CThostFtdcMarketDataStaticField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcMarketDataStaticField___(void * jarg1) {
  CThostFtdcMarketDataStaticField *arg1 = (CThostFtdcMarketDataStaticField *) 0 ;
  
  arg1 = (CThostFtdcMarketDataStaticField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataLastMatchField_LastPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataLastMatchField *arg1 = (CThostFtdcMarketDataLastMatchField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataLastMatchField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LastPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataLastMatchField_LastPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataLastMatchField *arg1 = (CThostFtdcMarketDataLastMatchField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataLastMatchField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LastPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataLastMatchField_Volume_set___(void * jarg1, int jarg2) {
  CThostFtdcMarketDataLastMatchField *arg1 = (CThostFtdcMarketDataLastMatchField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataLastMatchField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataLastMatchField_Volume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataLastMatchField *arg1 = (CThostFtdcMarketDataLastMatchField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcMarketDataLastMatchField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataLastMatchField_Turnover_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataLastMatchField *arg1 = (CThostFtdcMarketDataLastMatchField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcMarketDataLastMatchField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Turnover = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataLastMatchField_Turnover_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataLastMatchField *arg1 = (CThostFtdcMarketDataLastMatchField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcMarketDataLastMatchField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Turnover);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataLastMatchField_OpenInterest_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataLastMatchField *arg1 = (CThostFtdcMarketDataLastMatchField *) 0 ;
  TThostFtdcLargeVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataLastMatchField *)jarg1; 
  arg2 = (TThostFtdcLargeVolumeType)jarg2; 
  if (arg1) (arg1)->OpenInterest = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataLastMatchField_OpenInterest_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataLastMatchField *arg1 = (CThostFtdcMarketDataLastMatchField *) 0 ;
  TThostFtdcLargeVolumeType result;
  
  arg1 = (CThostFtdcMarketDataLastMatchField *)jarg1; 
  result = (TThostFtdcLargeVolumeType) ((arg1)->OpenInterest);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcMarketDataLastMatchField___() {
  void * jresult ;
  CThostFtdcMarketDataLastMatchField *result = 0 ;
  
  result = (CThostFtdcMarketDataLastMatchField *)new CThostFtdcMarketDataLastMatchField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcMarketDataLastMatchField___(void * jarg1) {
  CThostFtdcMarketDataLastMatchField *arg1 = (CThostFtdcMarketDataLastMatchField *) 0 ;
  
  arg1 = (CThostFtdcMarketDataLastMatchField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBestPriceField_BidPrice1_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataBestPriceField *arg1 = (CThostFtdcMarketDataBestPriceField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBestPriceField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->BidPrice1 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBestPriceField_BidPrice1_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataBestPriceField *arg1 = (CThostFtdcMarketDataBestPriceField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataBestPriceField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->BidPrice1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBestPriceField_BidVolume1_set___(void * jarg1, int jarg2) {
  CThostFtdcMarketDataBestPriceField *arg1 = (CThostFtdcMarketDataBestPriceField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBestPriceField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->BidVolume1 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBestPriceField_BidVolume1_get___(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataBestPriceField *arg1 = (CThostFtdcMarketDataBestPriceField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcMarketDataBestPriceField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBestPriceField_AskPrice1_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataBestPriceField *arg1 = (CThostFtdcMarketDataBestPriceField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBestPriceField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AskPrice1 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBestPriceField_AskPrice1_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataBestPriceField *arg1 = (CThostFtdcMarketDataBestPriceField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataBestPriceField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AskPrice1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBestPriceField_AskVolume1_set___(void * jarg1, int jarg2) {
  CThostFtdcMarketDataBestPriceField *arg1 = (CThostFtdcMarketDataBestPriceField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBestPriceField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AskVolume1 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBestPriceField_AskVolume1_get___(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataBestPriceField *arg1 = (CThostFtdcMarketDataBestPriceField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcMarketDataBestPriceField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume1);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcMarketDataBestPriceField___() {
  void * jresult ;
  CThostFtdcMarketDataBestPriceField *result = 0 ;
  
  result = (CThostFtdcMarketDataBestPriceField *)new CThostFtdcMarketDataBestPriceField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcMarketDataBestPriceField___(void * jarg1) {
  CThostFtdcMarketDataBestPriceField *arg1 = (CThostFtdcMarketDataBestPriceField *) 0 ;
  
  arg1 = (CThostFtdcMarketDataBestPriceField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBid23Field_BidPrice2_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataBid23Field *arg1 = (CThostFtdcMarketDataBid23Field *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBid23Field *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->BidPrice2 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBid23Field_BidPrice2_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataBid23Field *arg1 = (CThostFtdcMarketDataBid23Field *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataBid23Field *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->BidPrice2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBid23Field_BidVolume2_set___(void * jarg1, int jarg2) {
  CThostFtdcMarketDataBid23Field *arg1 = (CThostFtdcMarketDataBid23Field *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBid23Field *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->BidVolume2 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBid23Field_BidVolume2_get___(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataBid23Field *arg1 = (CThostFtdcMarketDataBid23Field *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcMarketDataBid23Field *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBid23Field_BidPrice3_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataBid23Field *arg1 = (CThostFtdcMarketDataBid23Field *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBid23Field *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->BidPrice3 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBid23Field_BidPrice3_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataBid23Field *arg1 = (CThostFtdcMarketDataBid23Field *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataBid23Field *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->BidPrice3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBid23Field_BidVolume3_set___(void * jarg1, int jarg2) {
  CThostFtdcMarketDataBid23Field *arg1 = (CThostFtdcMarketDataBid23Field *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBid23Field *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->BidVolume3 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBid23Field_BidVolume3_get___(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataBid23Field *arg1 = (CThostFtdcMarketDataBid23Field *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcMarketDataBid23Field *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcMarketDataBid23Field___() {
  void * jresult ;
  CThostFtdcMarketDataBid23Field *result = 0 ;
  
  result = (CThostFtdcMarketDataBid23Field *)new CThostFtdcMarketDataBid23Field();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcMarketDataBid23Field___(void * jarg1) {
  CThostFtdcMarketDataBid23Field *arg1 = (CThostFtdcMarketDataBid23Field *) 0 ;
  
  arg1 = (CThostFtdcMarketDataBid23Field *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataAsk23Field_AskPrice2_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataAsk23Field *arg1 = (CThostFtdcMarketDataAsk23Field *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataAsk23Field *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AskPrice2 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataAsk23Field_AskPrice2_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataAsk23Field *arg1 = (CThostFtdcMarketDataAsk23Field *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataAsk23Field *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AskPrice2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataAsk23Field_AskVolume2_set___(void * jarg1, int jarg2) {
  CThostFtdcMarketDataAsk23Field *arg1 = (CThostFtdcMarketDataAsk23Field *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataAsk23Field *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AskVolume2 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataAsk23Field_AskVolume2_get___(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataAsk23Field *arg1 = (CThostFtdcMarketDataAsk23Field *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcMarketDataAsk23Field *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume2);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataAsk23Field_AskPrice3_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataAsk23Field *arg1 = (CThostFtdcMarketDataAsk23Field *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataAsk23Field *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AskPrice3 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataAsk23Field_AskPrice3_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataAsk23Field *arg1 = (CThostFtdcMarketDataAsk23Field *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataAsk23Field *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AskPrice3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataAsk23Field_AskVolume3_set___(void * jarg1, int jarg2) {
  CThostFtdcMarketDataAsk23Field *arg1 = (CThostFtdcMarketDataAsk23Field *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataAsk23Field *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AskVolume3 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataAsk23Field_AskVolume3_get___(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataAsk23Field *arg1 = (CThostFtdcMarketDataAsk23Field *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcMarketDataAsk23Field *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcMarketDataAsk23Field___() {
  void * jresult ;
  CThostFtdcMarketDataAsk23Field *result = 0 ;
  
  result = (CThostFtdcMarketDataAsk23Field *)new CThostFtdcMarketDataAsk23Field();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcMarketDataAsk23Field___(void * jarg1) {
  CThostFtdcMarketDataAsk23Field *arg1 = (CThostFtdcMarketDataAsk23Field *) 0 ;
  
  arg1 = (CThostFtdcMarketDataAsk23Field *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBid45Field_BidPrice4_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataBid45Field *arg1 = (CThostFtdcMarketDataBid45Field *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBid45Field *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->BidPrice4 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBid45Field_BidPrice4_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataBid45Field *arg1 = (CThostFtdcMarketDataBid45Field *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataBid45Field *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->BidPrice4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBid45Field_BidVolume4_set___(void * jarg1, int jarg2) {
  CThostFtdcMarketDataBid45Field *arg1 = (CThostFtdcMarketDataBid45Field *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBid45Field *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->BidVolume4 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBid45Field_BidVolume4_get___(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataBid45Field *arg1 = (CThostFtdcMarketDataBid45Field *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcMarketDataBid45Field *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBid45Field_BidPrice5_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataBid45Field *arg1 = (CThostFtdcMarketDataBid45Field *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBid45Field *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->BidPrice5 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBid45Field_BidPrice5_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataBid45Field *arg1 = (CThostFtdcMarketDataBid45Field *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataBid45Field *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->BidPrice5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBid45Field_BidVolume5_set___(void * jarg1, int jarg2) {
  CThostFtdcMarketDataBid45Field *arg1 = (CThostFtdcMarketDataBid45Field *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataBid45Field *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->BidVolume5 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataBid45Field_BidVolume5_get___(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataBid45Field *arg1 = (CThostFtdcMarketDataBid45Field *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcMarketDataBid45Field *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->BidVolume5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcMarketDataBid45Field___() {
  void * jresult ;
  CThostFtdcMarketDataBid45Field *result = 0 ;
  
  result = (CThostFtdcMarketDataBid45Field *)new CThostFtdcMarketDataBid45Field();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcMarketDataBid45Field___(void * jarg1) {
  CThostFtdcMarketDataBid45Field *arg1 = (CThostFtdcMarketDataBid45Field *) 0 ;
  
  arg1 = (CThostFtdcMarketDataBid45Field *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataAsk45Field_AskPrice4_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataAsk45Field *arg1 = (CThostFtdcMarketDataAsk45Field *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataAsk45Field *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AskPrice4 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataAsk45Field_AskPrice4_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataAsk45Field *arg1 = (CThostFtdcMarketDataAsk45Field *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataAsk45Field *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AskPrice4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataAsk45Field_AskVolume4_set___(void * jarg1, int jarg2) {
  CThostFtdcMarketDataAsk45Field *arg1 = (CThostFtdcMarketDataAsk45Field *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataAsk45Field *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AskVolume4 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataAsk45Field_AskVolume4_get___(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataAsk45Field *arg1 = (CThostFtdcMarketDataAsk45Field *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcMarketDataAsk45Field *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume4);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataAsk45Field_AskPrice5_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataAsk45Field *arg1 = (CThostFtdcMarketDataAsk45Field *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataAsk45Field *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AskPrice5 = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataAsk45Field_AskPrice5_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataAsk45Field *arg1 = (CThostFtdcMarketDataAsk45Field *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataAsk45Field *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AskPrice5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataAsk45Field_AskVolume5_set___(void * jarg1, int jarg2) {
  CThostFtdcMarketDataAsk45Field *arg1 = (CThostFtdcMarketDataAsk45Field *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcMarketDataAsk45Field *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->AskVolume5 = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataAsk45Field_AskVolume5_get___(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataAsk45Field *arg1 = (CThostFtdcMarketDataAsk45Field *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcMarketDataAsk45Field *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->AskVolume5);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcMarketDataAsk45Field___() {
  void * jresult ;
  CThostFtdcMarketDataAsk45Field *result = 0 ;
  
  result = (CThostFtdcMarketDataAsk45Field *)new CThostFtdcMarketDataAsk45Field();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcMarketDataAsk45Field___(void * jarg1) {
  CThostFtdcMarketDataAsk45Field *arg1 = (CThostFtdcMarketDataAsk45Field *) 0 ;
  
  arg1 = (CThostFtdcMarketDataAsk45Field *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataUpdateTimeField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarketDataUpdateTimeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataUpdateTimeField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarketDataUpdateTimeField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataUpdateTimeField_UpdateTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarketDataUpdateTimeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpdateTime, (const char *)arg2, 9-1);
      arg1->UpdateTime[9-1] = 0;
    } else {
      arg1->UpdateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataUpdateTimeField_UpdateTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarketDataUpdateTimeField *)jarg1; 
  result = (char *) ((arg1)->UpdateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataUpdateTimeField_UpdateMillisec_set___(void * jarg1, int jarg2) {
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  TThostFtdcMillisecType arg2 ;
  
  arg1 = (CThostFtdcMarketDataUpdateTimeField *)jarg1; 
  arg2 = (TThostFtdcMillisecType)jarg2; 
  if (arg1) (arg1)->UpdateMillisec = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataUpdateTimeField_UpdateMillisec_get___(void * jarg1) {
  int jresult ;
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  TThostFtdcMillisecType result;
  
  arg1 = (CThostFtdcMarketDataUpdateTimeField *)jarg1; 
  result = (TThostFtdcMillisecType) ((arg1)->UpdateMillisec);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataUpdateTimeField_ActionDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarketDataUpdateTimeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDay, (const char *)arg2, 9-1);
      arg1->ActionDay[9-1] = 0;
    } else {
      arg1->ActionDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataUpdateTimeField_ActionDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarketDataUpdateTimeField *)jarg1; 
  result = (char *) ((arg1)->ActionDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcMarketDataUpdateTimeField___() {
  void * jresult ;
  CThostFtdcMarketDataUpdateTimeField *result = 0 ;
  
  result = (CThostFtdcMarketDataUpdateTimeField *)new CThostFtdcMarketDataUpdateTimeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcMarketDataUpdateTimeField___(void * jarg1) {
  CThostFtdcMarketDataUpdateTimeField *arg1 = (CThostFtdcMarketDataUpdateTimeField *) 0 ;
  
  arg1 = (CThostFtdcMarketDataUpdateTimeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataExchangeField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcMarketDataExchangeField *arg1 = (CThostFtdcMarketDataExchangeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarketDataExchangeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataExchangeField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMarketDataExchangeField *arg1 = (CThostFtdcMarketDataExchangeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarketDataExchangeField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcMarketDataExchangeField___() {
  void * jresult ;
  CThostFtdcMarketDataExchangeField *result = 0 ;
  
  result = (CThostFtdcMarketDataExchangeField *)new CThostFtdcMarketDataExchangeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcMarketDataExchangeField___(void * jarg1) {
  CThostFtdcMarketDataExchangeField *arg1 = (CThostFtdcMarketDataExchangeField *) 0 ;
  
  arg1 = (CThostFtdcMarketDataExchangeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSpecificInstrumentField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSpecificInstrumentField *arg1 = (CThostFtdcSpecificInstrumentField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSpecificInstrumentField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSpecificInstrumentField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSpecificInstrumentField *arg1 = (CThostFtdcSpecificInstrumentField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSpecificInstrumentField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcSpecificInstrumentField___() {
  void * jresult ;
  CThostFtdcSpecificInstrumentField *result = 0 ;
  
  result = (CThostFtdcSpecificInstrumentField *)new CThostFtdcSpecificInstrumentField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcSpecificInstrumentField___(void * jarg1) {
  CThostFtdcSpecificInstrumentField *arg1 = (CThostFtdcSpecificInstrumentField *) 0 ;
  
  arg1 = (CThostFtdcSpecificInstrumentField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentStatusField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentStatusField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentStatusField_ExchangeInstID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentStatusField_ExchangeInstID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentStatusField_SettlementGroupID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SettlementGroupID, (const char *)arg2, 9-1);
      arg1->SettlementGroupID[9-1] = 0;
    } else {
      arg1->SettlementGroupID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentStatusField_SettlementGroupID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  result = (char *) ((arg1)->SettlementGroupID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentStatusField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentStatusField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentStatusField_InstrumentStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  TThostFtdcInstrumentStatusType arg2 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  arg2 = (TThostFtdcInstrumentStatusType)jarg2; 
  if (arg1) (arg1)->InstrumentStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentStatusField_InstrumentStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  TThostFtdcInstrumentStatusType result;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  result = (TThostFtdcInstrumentStatusType) ((arg1)->InstrumentStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentStatusField_TradingSegmentSN_set___(void * jarg1, int jarg2) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  TThostFtdcTradingSegmentSNType arg2 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  arg2 = (TThostFtdcTradingSegmentSNType)jarg2; 
  if (arg1) (arg1)->TradingSegmentSN = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentStatusField_TradingSegmentSN_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  TThostFtdcTradingSegmentSNType result;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  result = (TThostFtdcTradingSegmentSNType) ((arg1)->TradingSegmentSN);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentStatusField_EnterTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->EnterTime, (const char *)arg2, 9-1);
      arg1->EnterTime[9-1] = 0;
    } else {
      arg1->EnterTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentStatusField_EnterTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  result = (char *) ((arg1)->EnterTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentStatusField_EnterReason_set___(void * jarg1, char jarg2) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  TThostFtdcInstStatusEnterReasonType arg2 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  arg2 = (TThostFtdcInstStatusEnterReasonType)jarg2; 
  if (arg1) (arg1)->EnterReason = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInstrumentStatusField_EnterReason_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  TThostFtdcInstStatusEnterReasonType result;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  result = (TThostFtdcInstStatusEnterReasonType) ((arg1)->EnterReason);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcInstrumentStatusField___() {
  void * jresult ;
  CThostFtdcInstrumentStatusField *result = 0 ;
  
  result = (CThostFtdcInstrumentStatusField *)new CThostFtdcInstrumentStatusField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcInstrumentStatusField___(void * jarg1) {
  CThostFtdcInstrumentStatusField *arg1 = (CThostFtdcInstrumentStatusField *) 0 ;
  
  arg1 = (CThostFtdcInstrumentStatusField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentStatusField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentStatusField *arg1 = (CThostFtdcQryInstrumentStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentStatusField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentStatusField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentStatusField *arg1 = (CThostFtdcQryInstrumentStatusField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentStatusField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentStatusField_ExchangeInstID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInstrumentStatusField *arg1 = (CThostFtdcQryInstrumentStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInstrumentStatusField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInstrumentStatusField_ExchangeInstID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInstrumentStatusField *arg1 = (CThostFtdcQryInstrumentStatusField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInstrumentStatusField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryInstrumentStatusField___() {
  void * jresult ;
  CThostFtdcQryInstrumentStatusField *result = 0 ;
  
  result = (CThostFtdcQryInstrumentStatusField *)new CThostFtdcQryInstrumentStatusField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryInstrumentStatusField___(void * jarg1) {
  CThostFtdcQryInstrumentStatusField *arg1 = (CThostFtdcQryInstrumentStatusField *) 0 ;
  
  arg1 = (CThostFtdcQryInstrumentStatusField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorAccountField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorAccountField *arg1 = (CThostFtdcInvestorAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorAccountField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorAccountField *arg1 = (CThostFtdcInvestorAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorAccountField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorAccountField *arg1 = (CThostFtdcInvestorAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorAccountField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorAccountField *arg1 = (CThostFtdcInvestorAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorAccountField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorAccountField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorAccountField *arg1 = (CThostFtdcInvestorAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorAccountField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorAccountField *arg1 = (CThostFtdcInvestorAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorAccountField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorAccountField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorAccountField *arg1 = (CThostFtdcInvestorAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorAccountField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorAccountField *arg1 = (CThostFtdcInvestorAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorAccountField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcInvestorAccountField___() {
  void * jresult ;
  CThostFtdcInvestorAccountField *result = 0 ;
  
  result = (CThostFtdcInvestorAccountField *)new CThostFtdcInvestorAccountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcInvestorAccountField___(void * jarg1) {
  CThostFtdcInvestorAccountField *arg1 = (CThostFtdcInvestorAccountField *) 0 ;
  
  arg1 = (CThostFtdcInvestorAccountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcPositionProfitAlgorithmField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcPositionProfitAlgorithmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcPositionProfitAlgorithmField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcPositionProfitAlgorithmField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcPositionProfitAlgorithmField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcPositionProfitAlgorithmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcPositionProfitAlgorithmField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcPositionProfitAlgorithmField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcPositionProfitAlgorithmField_Algorithm_set___(void * jarg1, char jarg2) {
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  TThostFtdcAlgorithmType arg2 ;
  
  arg1 = (CThostFtdcPositionProfitAlgorithmField *)jarg1; 
  arg2 = (TThostFtdcAlgorithmType)jarg2; 
  if (arg1) (arg1)->Algorithm = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcPositionProfitAlgorithmField_Algorithm_get___(void * jarg1) {
  char jresult ;
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  TThostFtdcAlgorithmType result;
  
  arg1 = (CThostFtdcPositionProfitAlgorithmField *)jarg1; 
  result = (TThostFtdcAlgorithmType) ((arg1)->Algorithm);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcPositionProfitAlgorithmField_Memo_set___(void * jarg1, char * jarg2) {
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcPositionProfitAlgorithmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Memo, (const char *)arg2, 161-1);
      arg1->Memo[161-1] = 0;
    } else {
      arg1->Memo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcPositionProfitAlgorithmField_Memo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcPositionProfitAlgorithmField *)jarg1; 
  result = (char *) ((arg1)->Memo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcPositionProfitAlgorithmField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcPositionProfitAlgorithmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcPositionProfitAlgorithmField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcPositionProfitAlgorithmField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcPositionProfitAlgorithmField___() {
  void * jresult ;
  CThostFtdcPositionProfitAlgorithmField *result = 0 ;
  
  result = (CThostFtdcPositionProfitAlgorithmField *)new CThostFtdcPositionProfitAlgorithmField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcPositionProfitAlgorithmField___(void * jarg1) {
  CThostFtdcPositionProfitAlgorithmField *arg1 = (CThostFtdcPositionProfitAlgorithmField *) 0 ;
  
  arg1 = (CThostFtdcPositionProfitAlgorithmField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDiscountField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcDiscountField *arg1 = (CThostFtdcDiscountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDiscountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDiscountField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcDiscountField *arg1 = (CThostFtdcDiscountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDiscountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDiscountField_InvestorRange_set___(void * jarg1, char jarg2) {
  CThostFtdcDiscountField *arg1 = (CThostFtdcDiscountField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcDiscountField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDiscountField_InvestorRange_get___(void * jarg1) {
  char jresult ;
  CThostFtdcDiscountField *arg1 = (CThostFtdcDiscountField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcDiscountField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDiscountField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcDiscountField *arg1 = (CThostFtdcDiscountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDiscountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDiscountField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcDiscountField *arg1 = (CThostFtdcDiscountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDiscountField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDiscountField_Discount_set___(void * jarg1, double jarg2) {
  CThostFtdcDiscountField *arg1 = (CThostFtdcDiscountField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcDiscountField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->Discount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDiscountField_Discount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDiscountField *arg1 = (CThostFtdcDiscountField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcDiscountField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->Discount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcDiscountField___() {
  void * jresult ;
  CThostFtdcDiscountField *result = 0 ;
  
  result = (CThostFtdcDiscountField *)new CThostFtdcDiscountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcDiscountField___(void * jarg1) {
  CThostFtdcDiscountField *arg1 = (CThostFtdcDiscountField *) 0 ;
  
  arg1 = (CThostFtdcDiscountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTransferBankField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTransferBankField *arg1 = (CThostFtdcQryTransferBankField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTransferBankField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTransferBankField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTransferBankField *arg1 = (CThostFtdcQryTransferBankField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTransferBankField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTransferBankField_BankBrchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTransferBankField *arg1 = (CThostFtdcQryTransferBankField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTransferBankField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBrchID, (const char *)arg2, 5-1);
      arg1->BankBrchID[5-1] = 0;
    } else {
      arg1->BankBrchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTransferBankField_BankBrchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTransferBankField *arg1 = (CThostFtdcQryTransferBankField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTransferBankField *)jarg1; 
  result = (char *) ((arg1)->BankBrchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryTransferBankField___() {
  void * jresult ;
  CThostFtdcQryTransferBankField *result = 0 ;
  
  result = (CThostFtdcQryTransferBankField *)new CThostFtdcQryTransferBankField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryTransferBankField___(void * jarg1) {
  CThostFtdcQryTransferBankField *arg1 = (CThostFtdcQryTransferBankField *) 0 ;
  
  arg1 = (CThostFtdcQryTransferBankField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferBankField *arg1 = (CThostFtdcTransferBankField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferBankField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferBankField *arg1 = (CThostFtdcTransferBankField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferBankField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankField_BankBrchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferBankField *arg1 = (CThostFtdcTransferBankField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferBankField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBrchID, (const char *)arg2, 5-1);
      arg1->BankBrchID[5-1] = 0;
    } else {
      arg1->BankBrchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankField_BankBrchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferBankField *arg1 = (CThostFtdcTransferBankField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferBankField *)jarg1; 
  result = (char *) ((arg1)->BankBrchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankField_BankName_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferBankField *arg1 = (CThostFtdcTransferBankField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferBankField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankName, (const char *)arg2, 101-1);
      arg1->BankName[101-1] = 0;
    } else {
      arg1->BankName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankField_BankName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferBankField *arg1 = (CThostFtdcTransferBankField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferBankField *)jarg1; 
  result = (char *) ((arg1)->BankName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankField_IsActive_set___(void * jarg1, int jarg2) {
  CThostFtdcTransferBankField *arg1 = (CThostFtdcTransferBankField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcTransferBankField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsActive = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferBankField_IsActive_get___(void * jarg1) {
  int jresult ;
  CThostFtdcTransferBankField *arg1 = (CThostFtdcTransferBankField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcTransferBankField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsActive);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcTransferBankField___() {
  void * jresult ;
  CThostFtdcTransferBankField *result = 0 ;
  
  result = (CThostFtdcTransferBankField *)new CThostFtdcTransferBankField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcTransferBankField___(void * jarg1) {
  CThostFtdcTransferBankField *arg1 = (CThostFtdcTransferBankField *) 0 ;
  
  arg1 = (CThostFtdcTransferBankField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorPositionDetailField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorPositionDetailField *arg1 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorPositionDetailField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorPositionDetailField *arg1 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorPositionDetailField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorPositionDetailField *arg1 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorPositionDetailField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorPositionDetailField *arg1 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorPositionDetailField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorPositionDetailField *arg1 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorPositionDetailField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorPositionDetailField *arg1 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryInvestorPositionDetailField___() {
  void * jresult ;
  CThostFtdcQryInvestorPositionDetailField *result = 0 ;
  
  result = (CThostFtdcQryInvestorPositionDetailField *)new CThostFtdcQryInvestorPositionDetailField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryInvestorPositionDetailField___(void * jarg1) {
  CThostFtdcQryInvestorPositionDetailField *arg1 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionDetailField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_Direction_set___(void * jarg1, char jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_Direction_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_OpenDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OpenDate, (const char *)arg2, 9-1);
      arg1->OpenDate[9-1] = 0;
    } else {
      arg1->OpenDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_OpenDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->OpenDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_TradeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeID, (const char *)arg2, 21-1);
      arg1->TradeID[21-1] = 0;
    } else {
      arg1->TradeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_TradeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->TradeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_Volume_set___(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_Volume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_OpenPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->OpenPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_OpenPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->OpenPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_SettlementID_set___(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_SettlementID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_TradeType_set___(void * jarg1, char jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcTradeTypeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcTradeTypeType)jarg2; 
  if (arg1) (arg1)->TradeType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_TradeType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcTradeTypeType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcTradeTypeType) ((arg1)->TradeType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_CombInstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombInstrumentID, (const char *)arg2, 31-1);
      arg1->CombInstrumentID[31-1] = 0;
    } else {
      arg1->CombInstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_CombInstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->CombInstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_CloseProfitByDate_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseProfitByDate = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_CloseProfitByDate_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfitByDate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_CloseProfitByTrade_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseProfitByTrade = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_CloseProfitByTrade_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfitByTrade);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_PositionProfitByDate_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PositionProfitByDate = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_PositionProfitByDate_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PositionProfitByDate);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_PositionProfitByTrade_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PositionProfitByTrade = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_PositionProfitByTrade_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PositionProfitByTrade);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_Margin_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Margin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_Margin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Margin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_ExchMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_ExchMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_MarginRateByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->MarginRateByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_MarginRateByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->MarginRateByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_MarginRateByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->MarginRateByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_MarginRateByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->MarginRateByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_LastSettlementPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LastSettlementPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_LastSettlementPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LastSettlementPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_SettlementPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->SettlementPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_SettlementPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->SettlementPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_CloseVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->CloseVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_CloseVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->CloseVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_CloseAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionDetailField_CloseAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcInvestorPositionDetailField___() {
  void * jresult ;
  CThostFtdcInvestorPositionDetailField *result = 0 ;
  
  result = (CThostFtdcInvestorPositionDetailField *)new CThostFtdcInvestorPositionDetailField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcInvestorPositionDetailField___(void * jarg1) {
  CThostFtdcInvestorPositionDetailField *arg1 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  
  arg1 = (CThostFtdcInvestorPositionDetailField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountPasswordField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountPasswordField *arg1 = (CThostFtdcTradingAccountPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountPasswordField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountPasswordField *arg1 = (CThostFtdcTradingAccountPasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountPasswordField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountPasswordField *arg1 = (CThostFtdcTradingAccountPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountPasswordField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountPasswordField *arg1 = (CThostFtdcTradingAccountPasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountPasswordField_Password_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountPasswordField *arg1 = (CThostFtdcTradingAccountPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountPasswordField_Password_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountPasswordField *arg1 = (CThostFtdcTradingAccountPasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountPasswordField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountPasswordField *arg1 = (CThostFtdcTradingAccountPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountPasswordField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountPasswordField *arg1 = (CThostFtdcTradingAccountPasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcTradingAccountPasswordField___() {
  void * jresult ;
  CThostFtdcTradingAccountPasswordField *result = 0 ;
  
  result = (CThostFtdcTradingAccountPasswordField *)new CThostFtdcTradingAccountPasswordField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcTradingAccountPasswordField___(void * jarg1) {
  CThostFtdcTradingAccountPasswordField *arg1 = (CThostFtdcTradingAccountPasswordField *) 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_Password_set___(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_Password_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_OrderLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_OrderLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->OrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_TraderConnectStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  TThostFtdcTraderConnectStatusType arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (TThostFtdcTraderConnectStatusType)jarg2; 
  if (arg1) (arg1)->TraderConnectStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_TraderConnectStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  TThostFtdcTraderConnectStatusType result;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (TThostFtdcTraderConnectStatusType) ((arg1)->TraderConnectStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_ConnectRequestDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ConnectRequestDate, (const char *)arg2, 9-1);
      arg1->ConnectRequestDate[9-1] = 0;
    } else {
      arg1->ConnectRequestDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_ConnectRequestDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ConnectRequestDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_ConnectRequestTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ConnectRequestTime, (const char *)arg2, 9-1);
      arg1->ConnectRequestTime[9-1] = 0;
    } else {
      arg1->ConnectRequestTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_ConnectRequestTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ConnectRequestTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_LastReportDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastReportDate, (const char *)arg2, 9-1);
      arg1->LastReportDate[9-1] = 0;
    } else {
      arg1->LastReportDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_LastReportDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->LastReportDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_LastReportTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LastReportTime, (const char *)arg2, 9-1);
      arg1->LastReportTime[9-1] = 0;
    } else {
      arg1->LastReportTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_LastReportTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->LastReportTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_ConnectDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ConnectDate, (const char *)arg2, 9-1);
      arg1->ConnectDate[9-1] = 0;
    } else {
      arg1->ConnectDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_ConnectDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ConnectDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_ConnectTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ConnectTime, (const char *)arg2, 9-1);
      arg1->ConnectTime[9-1] = 0;
    } else {
      arg1->ConnectTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_ConnectTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ConnectTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_StartDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StartDate, (const char *)arg2, 9-1);
      arg1->StartDate[9-1] = 0;
    } else {
      arg1->StartDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_StartDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->StartDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_StartTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StartTime, (const char *)arg2, 9-1);
      arg1->StartTime[9-1] = 0;
    } else {
      arg1->StartTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_StartTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->StartTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_MaxTradeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MaxTradeID, (const char *)arg2, 21-1);
      arg1->MaxTradeID[21-1] = 0;
    } else {
      arg1->MaxTradeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_MaxTradeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->MaxTradeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_MaxOrderMessageReference_set___(void * jarg1, char * jarg2) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MaxOrderMessageReference, (const char *)arg2, 7-1);
      arg1->MaxOrderMessageReference[7-1] = 0;
    } else {
      arg1->MaxOrderMessageReference[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMDTraderOfferField_MaxOrderMessageReference_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->MaxOrderMessageReference);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcMDTraderOfferField___() {
  void * jresult ;
  CThostFtdcMDTraderOfferField *result = 0 ;
  
  result = (CThostFtdcMDTraderOfferField *)new CThostFtdcMDTraderOfferField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcMDTraderOfferField___(void * jarg1) {
  CThostFtdcMDTraderOfferField *arg1 = (CThostFtdcMDTraderOfferField *) 0 ;
  
  arg1 = (CThostFtdcMDTraderOfferField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryMDTraderOfferField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryMDTraderOfferField *arg1 = (CThostFtdcQryMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryMDTraderOfferField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMDTraderOfferField *arg1 = (CThostFtdcQryMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryMDTraderOfferField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryMDTraderOfferField *arg1 = (CThostFtdcQryMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryMDTraderOfferField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMDTraderOfferField *arg1 = (CThostFtdcQryMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryMDTraderOfferField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryMDTraderOfferField *arg1 = (CThostFtdcQryMDTraderOfferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMDTraderOfferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryMDTraderOfferField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMDTraderOfferField *arg1 = (CThostFtdcQryMDTraderOfferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMDTraderOfferField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryMDTraderOfferField___() {
  void * jresult ;
  CThostFtdcQryMDTraderOfferField *result = 0 ;
  
  result = (CThostFtdcQryMDTraderOfferField *)new CThostFtdcQryMDTraderOfferField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryMDTraderOfferField___(void * jarg1) {
  CThostFtdcQryMDTraderOfferField *arg1 = (CThostFtdcQryMDTraderOfferField *) 0 ;
  
  arg1 = (CThostFtdcQryMDTraderOfferField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryNoticeField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryNoticeField *arg1 = (CThostFtdcQryNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryNoticeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryNoticeField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryNoticeField *arg1 = (CThostFtdcQryNoticeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryNoticeField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryNoticeField___() {
  void * jresult ;
  CThostFtdcQryNoticeField *result = 0 ;
  
  result = (CThostFtdcQryNoticeField *)new CThostFtdcQryNoticeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryNoticeField___(void * jarg1) {
  CThostFtdcQryNoticeField *arg1 = (CThostFtdcQryNoticeField *) 0 ;
  
  arg1 = (CThostFtdcQryNoticeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNoticeField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNoticeField *arg1 = (CThostFtdcNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNoticeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNoticeField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNoticeField *arg1 = (CThostFtdcNoticeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNoticeField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNoticeField_Content_set___(void * jarg1, char * jarg2) {
  CThostFtdcNoticeField *arg1 = (CThostFtdcNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNoticeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Content, (const char *)arg2, 501-1);
      arg1->Content[501-1] = 0;
    } else {
      arg1->Content[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNoticeField_Content_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNoticeField *arg1 = (CThostFtdcNoticeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNoticeField *)jarg1; 
  result = (char *) ((arg1)->Content);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNoticeField_SequenceLabel_set___(void * jarg1, char * jarg2) {
  CThostFtdcNoticeField *arg1 = (CThostFtdcNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNoticeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SequenceLabel, (const char *)arg2, 2-1);
      arg1->SequenceLabel[2-1] = 0;
    } else {
      arg1->SequenceLabel[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNoticeField_SequenceLabel_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNoticeField *arg1 = (CThostFtdcNoticeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNoticeField *)jarg1; 
  result = (char *) ((arg1)->SequenceLabel);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcNoticeField___() {
  void * jresult ;
  CThostFtdcNoticeField *result = 0 ;
  
  result = (CThostFtdcNoticeField *)new CThostFtdcNoticeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcNoticeField___(void * jarg1) {
  CThostFtdcNoticeField *arg1 = (CThostFtdcNoticeField *) 0 ;
  
  arg1 = (CThostFtdcNoticeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserRightField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcUserRightField *arg1 = (CThostFtdcUserRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserRightField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcUserRightField *arg1 = (CThostFtdcUserRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserRightField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserRightField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcUserRightField *arg1 = (CThostFtdcUserRightField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserRightField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserRightField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcUserRightField *arg1 = (CThostFtdcUserRightField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserRightField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserRightField_UserRightType_set___(void * jarg1, char jarg2) {
  CThostFtdcUserRightField *arg1 = (CThostFtdcUserRightField *) 0 ;
  TThostFtdcUserRightTypeType arg2 ;
  
  arg1 = (CThostFtdcUserRightField *)jarg1; 
  arg2 = (TThostFtdcUserRightTypeType)jarg2; 
  if (arg1) (arg1)->UserRightType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserRightField_UserRightType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcUserRightField *arg1 = (CThostFtdcUserRightField *) 0 ;
  TThostFtdcUserRightTypeType result;
  
  arg1 = (CThostFtdcUserRightField *)jarg1; 
  result = (TThostFtdcUserRightTypeType) ((arg1)->UserRightType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserRightField_IsForbidden_set___(void * jarg1, int jarg2) {
  CThostFtdcUserRightField *arg1 = (CThostFtdcUserRightField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcUserRightField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsForbidden = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserRightField_IsForbidden_get___(void * jarg1) {
  int jresult ;
  CThostFtdcUserRightField *arg1 = (CThostFtdcUserRightField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcUserRightField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsForbidden);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcUserRightField___() {
  void * jresult ;
  CThostFtdcUserRightField *result = 0 ;
  
  result = (CThostFtdcUserRightField *)new CThostFtdcUserRightField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcUserRightField___(void * jarg1) {
  CThostFtdcUserRightField *arg1 = (CThostFtdcUserRightField *) 0 ;
  
  arg1 = (CThostFtdcUserRightField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySettlementInfoConfirmField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQrySettlementInfoConfirmField *arg1 = (CThostFtdcQrySettlementInfoConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySettlementInfoConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySettlementInfoConfirmField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySettlementInfoConfirmField *arg1 = (CThostFtdcQrySettlementInfoConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySettlementInfoConfirmField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySettlementInfoConfirmField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQrySettlementInfoConfirmField *arg1 = (CThostFtdcQrySettlementInfoConfirmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySettlementInfoConfirmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySettlementInfoConfirmField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySettlementInfoConfirmField *arg1 = (CThostFtdcQrySettlementInfoConfirmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySettlementInfoConfirmField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQrySettlementInfoConfirmField___() {
  void * jresult ;
  CThostFtdcQrySettlementInfoConfirmField *result = 0 ;
  
  result = (CThostFtdcQrySettlementInfoConfirmField *)new CThostFtdcQrySettlementInfoConfirmField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQrySettlementInfoConfirmField___(void * jarg1) {
  CThostFtdcQrySettlementInfoConfirmField *arg1 = (CThostFtdcQrySettlementInfoConfirmField *) 0 ;
  
  arg1 = (CThostFtdcQrySettlementInfoConfirmField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoadSettlementInfoField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcLoadSettlementInfoField *arg1 = (CThostFtdcLoadSettlementInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoadSettlementInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoadSettlementInfoField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLoadSettlementInfoField *arg1 = (CThostFtdcLoadSettlementInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoadSettlementInfoField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcLoadSettlementInfoField___() {
  void * jresult ;
  CThostFtdcLoadSettlementInfoField *result = 0 ;
  
  result = (CThostFtdcLoadSettlementInfoField *)new CThostFtdcLoadSettlementInfoField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcLoadSettlementInfoField___(void * jarg1) {
  CThostFtdcLoadSettlementInfoField *arg1 = (CThostFtdcLoadSettlementInfoField *) 0 ;
  
  arg1 = (CThostFtdcLoadSettlementInfoField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerWithdrawAlgorithmField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerWithdrawAlgorithmField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerWithdrawAlgorithmField_WithdrawAlgorithm_set___(void * jarg1, char jarg2) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcAlgorithmType arg2 ;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  arg2 = (TThostFtdcAlgorithmType)jarg2; 
  if (arg1) (arg1)->WithdrawAlgorithm = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerWithdrawAlgorithmField_WithdrawAlgorithm_get___(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcAlgorithmType result;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  result = (TThostFtdcAlgorithmType) ((arg1)->WithdrawAlgorithm);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerWithdrawAlgorithmField_UsingRatio_set___(void * jarg1, double jarg2) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->UsingRatio = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerWithdrawAlgorithmField_UsingRatio_get___(void * jarg1) {
  double jresult ;
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->UsingRatio);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerWithdrawAlgorithmField_IncludeCloseProfit_set___(void * jarg1, char jarg2) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcIncludeCloseProfitType arg2 ;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  arg2 = (TThostFtdcIncludeCloseProfitType)jarg2; 
  if (arg1) (arg1)->IncludeCloseProfit = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerWithdrawAlgorithmField_IncludeCloseProfit_get___(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcIncludeCloseProfitType result;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  result = (TThostFtdcIncludeCloseProfitType) ((arg1)->IncludeCloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerWithdrawAlgorithmField_AllWithoutTrade_set___(void * jarg1, char jarg2) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcAllWithoutTradeType arg2 ;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  arg2 = (TThostFtdcAllWithoutTradeType)jarg2; 
  if (arg1) (arg1)->AllWithoutTrade = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerWithdrawAlgorithmField_AllWithoutTrade_get___(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcAllWithoutTradeType result;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  result = (TThostFtdcAllWithoutTradeType) ((arg1)->AllWithoutTrade);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerWithdrawAlgorithmField_AvailIncludeCloseProfit_set___(void * jarg1, char jarg2) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcIncludeCloseProfitType arg2 ;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  arg2 = (TThostFtdcIncludeCloseProfitType)jarg2; 
  if (arg1) (arg1)->AvailIncludeCloseProfit = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerWithdrawAlgorithmField_AvailIncludeCloseProfit_get___(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcIncludeCloseProfitType result;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  result = (TThostFtdcIncludeCloseProfitType) ((arg1)->AvailIncludeCloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerWithdrawAlgorithmField_IsBrokerUserEvent_set___(void * jarg1, int jarg2) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsBrokerUserEvent = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerWithdrawAlgorithmField_IsBrokerUserEvent_get___(void * jarg1) {
  int jresult ;
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsBrokerUserEvent);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerWithdrawAlgorithmField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerWithdrawAlgorithmField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerWithdrawAlgorithmField_FundMortgageRatio_set___(void * jarg1, double jarg2) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->FundMortgageRatio = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerWithdrawAlgorithmField_FundMortgageRatio_get___(void * jarg1) {
  double jresult ;
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->FundMortgageRatio);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerWithdrawAlgorithmField_BalanceAlgorithm_set___(void * jarg1, char jarg2) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcBalanceAlgorithmType arg2 ;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  arg2 = (TThostFtdcBalanceAlgorithmType)jarg2; 
  if (arg1) (arg1)->BalanceAlgorithm = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerWithdrawAlgorithmField_BalanceAlgorithm_get___(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  TThostFtdcBalanceAlgorithmType result;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  result = (TThostFtdcBalanceAlgorithmType) ((arg1)->BalanceAlgorithm);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcBrokerWithdrawAlgorithmField___() {
  void * jresult ;
  CThostFtdcBrokerWithdrawAlgorithmField *result = 0 ;
  
  result = (CThostFtdcBrokerWithdrawAlgorithmField *)new CThostFtdcBrokerWithdrawAlgorithmField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcBrokerWithdrawAlgorithmField___(void * jarg1) {
  CThostFtdcBrokerWithdrawAlgorithmField *arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *) 0 ;
  
  arg1 = (CThostFtdcBrokerWithdrawAlgorithmField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountPasswordUpdateV1Field_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountPasswordUpdateV1Field *arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountPasswordUpdateV1Field_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountPasswordUpdateV1Field *arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountPasswordUpdateV1Field_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountPasswordUpdateV1Field *arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountPasswordUpdateV1Field_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountPasswordUpdateV1Field *arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountPasswordUpdateV1Field_OldPassword_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountPasswordUpdateV1Field *arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OldPassword, (const char *)arg2, 41-1);
      arg1->OldPassword[41-1] = 0;
    } else {
      arg1->OldPassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountPasswordUpdateV1Field_OldPassword_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountPasswordUpdateV1Field *arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *)jarg1; 
  result = (char *) ((arg1)->OldPassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountPasswordUpdateV1Field_NewPassword_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountPasswordUpdateV1Field *arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->NewPassword, (const char *)arg2, 41-1);
      arg1->NewPassword[41-1] = 0;
    } else {
      arg1->NewPassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountPasswordUpdateV1Field_NewPassword_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountPasswordUpdateV1Field *arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *)jarg1; 
  result = (char *) ((arg1)->NewPassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcTradingAccountPasswordUpdateV1Field___() {
  void * jresult ;
  CThostFtdcTradingAccountPasswordUpdateV1Field *result = 0 ;
  
  result = (CThostFtdcTradingAccountPasswordUpdateV1Field *)new CThostFtdcTradingAccountPasswordUpdateV1Field();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcTradingAccountPasswordUpdateV1Field___(void * jarg1) {
  CThostFtdcTradingAccountPasswordUpdateV1Field *arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *) 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateV1Field *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountPasswordUpdateField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountPasswordUpdateField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountPasswordUpdateField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountPasswordUpdateField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountPasswordUpdateField_OldPassword_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OldPassword, (const char *)arg2, 41-1);
      arg1->OldPassword[41-1] = 0;
    } else {
      arg1->OldPassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountPasswordUpdateField_OldPassword_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateField *)jarg1; 
  result = (char *) ((arg1)->OldPassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountPasswordUpdateField_NewPassword_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->NewPassword, (const char *)arg2, 41-1);
      arg1->NewPassword[41-1] = 0;
    } else {
      arg1->NewPassword[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountPasswordUpdateField_NewPassword_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateField *)jarg1; 
  result = (char *) ((arg1)->NewPassword);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountPasswordUpdateField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountPasswordUpdateField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcTradingAccountPasswordUpdateField___() {
  void * jresult ;
  CThostFtdcTradingAccountPasswordUpdateField *result = 0 ;
  
  result = (CThostFtdcTradingAccountPasswordUpdateField *)new CThostFtdcTradingAccountPasswordUpdateField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcTradingAccountPasswordUpdateField___(void * jarg1) {
  CThostFtdcTradingAccountPasswordUpdateField *arg1 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  
  arg1 = (CThostFtdcTradingAccountPasswordUpdateField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCombinationLegField_CombInstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryCombinationLegField *arg1 = (CThostFtdcQryCombinationLegField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCombinationLegField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombInstrumentID, (const char *)arg2, 31-1);
      arg1->CombInstrumentID[31-1] = 0;
    } else {
      arg1->CombInstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCombinationLegField_CombInstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCombinationLegField *arg1 = (CThostFtdcQryCombinationLegField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCombinationLegField *)jarg1; 
  result = (char *) ((arg1)->CombInstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCombinationLegField_LegID_set___(void * jarg1, int jarg2) {
  CThostFtdcQryCombinationLegField *arg1 = (CThostFtdcQryCombinationLegField *) 0 ;
  TThostFtdcLegIDType arg2 ;
  
  arg1 = (CThostFtdcQryCombinationLegField *)jarg1; 
  arg2 = (TThostFtdcLegIDType)jarg2; 
  if (arg1) (arg1)->LegID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCombinationLegField_LegID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcQryCombinationLegField *arg1 = (CThostFtdcQryCombinationLegField *) 0 ;
  TThostFtdcLegIDType result;
  
  arg1 = (CThostFtdcQryCombinationLegField *)jarg1; 
  result = (TThostFtdcLegIDType) ((arg1)->LegID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCombinationLegField_LegInstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryCombinationLegField *arg1 = (CThostFtdcQryCombinationLegField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCombinationLegField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LegInstrumentID, (const char *)arg2, 31-1);
      arg1->LegInstrumentID[31-1] = 0;
    } else {
      arg1->LegInstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCombinationLegField_LegInstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCombinationLegField *arg1 = (CThostFtdcQryCombinationLegField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCombinationLegField *)jarg1; 
  result = (char *) ((arg1)->LegInstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryCombinationLegField___() {
  void * jresult ;
  CThostFtdcQryCombinationLegField *result = 0 ;
  
  result = (CThostFtdcQryCombinationLegField *)new CThostFtdcQryCombinationLegField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryCombinationLegField___(void * jarg1) {
  CThostFtdcQryCombinationLegField *arg1 = (CThostFtdcQryCombinationLegField *) 0 ;
  
  arg1 = (CThostFtdcQryCombinationLegField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySyncStatusField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcQrySyncStatusField *arg1 = (CThostFtdcQrySyncStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySyncStatusField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySyncStatusField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySyncStatusField *arg1 = (CThostFtdcQrySyncStatusField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySyncStatusField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQrySyncStatusField___() {
  void * jresult ;
  CThostFtdcQrySyncStatusField *result = 0 ;
  
  result = (CThostFtdcQrySyncStatusField *)new CThostFtdcQrySyncStatusField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQrySyncStatusField___(void * jarg1) {
  CThostFtdcQrySyncStatusField *arg1 = (CThostFtdcQrySyncStatusField *) 0 ;
  
  arg1 = (CThostFtdcQrySyncStatusField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombinationLegField_CombInstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombInstrumentID, (const char *)arg2, 31-1);
      arg1->CombInstrumentID[31-1] = 0;
    } else {
      arg1->CombInstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombinationLegField_CombInstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  result = (char *) ((arg1)->CombInstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombinationLegField_LegID_set___(void * jarg1, int jarg2) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  TThostFtdcLegIDType arg2 ;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  arg2 = (TThostFtdcLegIDType)jarg2; 
  if (arg1) (arg1)->LegID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombinationLegField_LegID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  TThostFtdcLegIDType result;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  result = (TThostFtdcLegIDType) ((arg1)->LegID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombinationLegField_LegInstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->LegInstrumentID, (const char *)arg2, 31-1);
      arg1->LegInstrumentID[31-1] = 0;
    } else {
      arg1->LegInstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombinationLegField_LegInstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  result = (char *) ((arg1)->LegInstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombinationLegField_Direction_set___(void * jarg1, char jarg2) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombinationLegField_Direction_get___(void * jarg1) {
  char jresult ;
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombinationLegField_LegMultiple_set___(void * jarg1, int jarg2) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  TThostFtdcLegMultipleType arg2 ;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  arg2 = (TThostFtdcLegMultipleType)jarg2; 
  if (arg1) (arg1)->LegMultiple = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombinationLegField_LegMultiple_get___(void * jarg1) {
  int jresult ;
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  TThostFtdcLegMultipleType result;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  result = (TThostFtdcLegMultipleType) ((arg1)->LegMultiple);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombinationLegField_ImplyLevel_set___(void * jarg1, int jarg2) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  TThostFtdcImplyLevelType arg2 ;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  arg2 = (TThostFtdcImplyLevelType)jarg2; 
  if (arg1) (arg1)->ImplyLevel = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCombinationLegField_ImplyLevel_get___(void * jarg1) {
  int jresult ;
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  TThostFtdcImplyLevelType result;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  result = (TThostFtdcImplyLevelType) ((arg1)->ImplyLevel);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcCombinationLegField___() {
  void * jresult ;
  CThostFtdcCombinationLegField *result = 0 ;
  
  result = (CThostFtdcCombinationLegField *)new CThostFtdcCombinationLegField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcCombinationLegField___(void * jarg1) {
  CThostFtdcCombinationLegField *arg1 = (CThostFtdcCombinationLegField *) 0 ;
  
  arg1 = (CThostFtdcCombinationLegField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncStatusField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcSyncStatusField *arg1 = (CThostFtdcSyncStatusField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSyncStatusField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncStatusField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSyncStatusField *arg1 = (CThostFtdcSyncStatusField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSyncStatusField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncStatusField_DataSyncStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcSyncStatusField *arg1 = (CThostFtdcSyncStatusField *) 0 ;
  TThostFtdcDataSyncStatusType arg2 ;
  
  arg1 = (CThostFtdcSyncStatusField *)jarg1; 
  arg2 = (TThostFtdcDataSyncStatusType)jarg2; 
  if (arg1) (arg1)->DataSyncStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSyncStatusField_DataSyncStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcSyncStatusField *arg1 = (CThostFtdcSyncStatusField *) 0 ;
  TThostFtdcDataSyncStatusType result;
  
  arg1 = (CThostFtdcSyncStatusField *)jarg1; 
  result = (TThostFtdcDataSyncStatusType) ((arg1)->DataSyncStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcSyncStatusField___() {
  void * jresult ;
  CThostFtdcSyncStatusField *result = 0 ;
  
  result = (CThostFtdcSyncStatusField *)new CThostFtdcSyncStatusField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcSyncStatusField___(void * jarg1) {
  CThostFtdcSyncStatusField *arg1 = (CThostFtdcSyncStatusField *) 0 ;
  
  arg1 = (CThostFtdcSyncStatusField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryLinkManField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryLinkManField *arg1 = (CThostFtdcQryLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryLinkManField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryLinkManField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryLinkManField *arg1 = (CThostFtdcQryLinkManField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryLinkManField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryLinkManField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryLinkManField *arg1 = (CThostFtdcQryLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryLinkManField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryLinkManField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryLinkManField *arg1 = (CThostFtdcQryLinkManField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryLinkManField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryLinkManField___() {
  void * jresult ;
  CThostFtdcQryLinkManField *result = 0 ;
  
  result = (CThostFtdcQryLinkManField *)new CThostFtdcQryLinkManField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryLinkManField___(void * jarg1) {
  CThostFtdcQryLinkManField *arg1 = (CThostFtdcQryLinkManField *) 0 ;
  
  arg1 = (CThostFtdcQryLinkManField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLinkManField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLinkManField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLinkManField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLinkManField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLinkManField_PersonType_set___(void * jarg1, char jarg2) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  TThostFtdcPersonTypeType arg2 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  arg2 = (TThostFtdcPersonTypeType)jarg2; 
  if (arg1) (arg1)->PersonType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLinkManField_PersonType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  TThostFtdcPersonTypeType result;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  result = (TThostFtdcPersonTypeType) ((arg1)->PersonType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLinkManField_IdentifiedCardType_set___(void * jarg1, char jarg2) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdentifiedCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLinkManField_IdentifiedCardType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdentifiedCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLinkManField_IdentifiedCardNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLinkManField_IdentifiedCardNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLinkManField_PersonName_set___(void * jarg1, char * jarg2) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->PersonName, (const char *)arg2, 81-1);
      arg1->PersonName[81-1] = 0;
    } else {
      arg1->PersonName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLinkManField_PersonName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  result = (char *) ((arg1)->PersonName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLinkManField_Telephone_set___(void * jarg1, char * jarg2) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLinkManField_Telephone_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  result = (char *) ((arg1)->Telephone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLinkManField_Address_set___(void * jarg1, char * jarg2) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLinkManField_Address_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  result = (char *) ((arg1)->Address);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLinkManField_ZipCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ZipCode, (const char *)arg2, 7-1);
      arg1->ZipCode[7-1] = 0;
    } else {
      arg1->ZipCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLinkManField_ZipCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  result = (char *) ((arg1)->ZipCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLinkManField_Priority_set___(void * jarg1, int jarg2) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  TThostFtdcPriorityType arg2 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  arg2 = (TThostFtdcPriorityType)jarg2; 
  if (arg1) (arg1)->Priority = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLinkManField_Priority_get___(void * jarg1) {
  int jresult ;
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  TThostFtdcPriorityType result;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  result = (TThostFtdcPriorityType) ((arg1)->Priority);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLinkManField_UOAZipCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UOAZipCode, (const char *)arg2, 11-1);
      arg1->UOAZipCode[11-1] = 0;
    } else {
      arg1->UOAZipCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLinkManField_UOAZipCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  result = (char *) ((arg1)->UOAZipCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLinkManField_PersonFullName_set___(void * jarg1, char * jarg2) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->PersonFullName, (const char *)arg2, 101-1);
      arg1->PersonFullName[101-1] = 0;
    } else {
      arg1->PersonFullName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLinkManField_PersonFullName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  result = (char *) ((arg1)->PersonFullName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcLinkManField___() {
  void * jresult ;
  CThostFtdcLinkManField *result = 0 ;
  
  result = (CThostFtdcLinkManField *)new CThostFtdcLinkManField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcLinkManField___(void * jarg1) {
  CThostFtdcLinkManField *arg1 = (CThostFtdcLinkManField *) 0 ;
  
  arg1 = (CThostFtdcLinkManField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerUserEventField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerUserEventField *arg1 = (CThostFtdcQryBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerUserEventField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerUserEventField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerUserEventField *arg1 = (CThostFtdcQryBrokerUserEventField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerUserEventField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerUserEventField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerUserEventField *arg1 = (CThostFtdcQryBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerUserEventField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerUserEventField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerUserEventField *arg1 = (CThostFtdcQryBrokerUserEventField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerUserEventField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerUserEventField_UserEventType_set___(void * jarg1, char jarg2) {
  CThostFtdcQryBrokerUserEventField *arg1 = (CThostFtdcQryBrokerUserEventField *) 0 ;
  TThostFtdcUserEventTypeType arg2 ;
  
  arg1 = (CThostFtdcQryBrokerUserEventField *)jarg1; 
  arg2 = (TThostFtdcUserEventTypeType)jarg2; 
  if (arg1) (arg1)->UserEventType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerUserEventField_UserEventType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcQryBrokerUserEventField *arg1 = (CThostFtdcQryBrokerUserEventField *) 0 ;
  TThostFtdcUserEventTypeType result;
  
  arg1 = (CThostFtdcQryBrokerUserEventField *)jarg1; 
  result = (TThostFtdcUserEventTypeType) ((arg1)->UserEventType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryBrokerUserEventField___() {
  void * jresult ;
  CThostFtdcQryBrokerUserEventField *result = 0 ;
  
  result = (CThostFtdcQryBrokerUserEventField *)new CThostFtdcQryBrokerUserEventField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryBrokerUserEventField___(void * jarg1) {
  CThostFtdcQryBrokerUserEventField *arg1 = (CThostFtdcQryBrokerUserEventField *) 0 ;
  
  arg1 = (CThostFtdcQryBrokerUserEventField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserEventField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserEventField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserEventField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserEventField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserEventField_UserEventType_set___(void * jarg1, char jarg2) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  TThostFtdcUserEventTypeType arg2 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  arg2 = (TThostFtdcUserEventTypeType)jarg2; 
  if (arg1) (arg1)->UserEventType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserEventField_UserEventType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  TThostFtdcUserEventTypeType result;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  result = (TThostFtdcUserEventTypeType) ((arg1)->UserEventType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserEventField_EventSequenceNo_set___(void * jarg1, int jarg2) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->EventSequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserEventField_EventSequenceNo_get___(void * jarg1) {
  int jresult ;
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->EventSequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserEventField_EventDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->EventDate, (const char *)arg2, 9-1);
      arg1->EventDate[9-1] = 0;
    } else {
      arg1->EventDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserEventField_EventDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  result = (char *) ((arg1)->EventDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserEventField_EventTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->EventTime, (const char *)arg2, 9-1);
      arg1->EventTime[9-1] = 0;
    } else {
      arg1->EventTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserEventField_EventTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  result = (char *) ((arg1)->EventTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserEventField_UserEventInfo_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserEventInfo, (const char *)arg2, 1025-1);
      arg1->UserEventInfo[1025-1] = 0;
    } else {
      arg1->UserEventInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserEventField_UserEventInfo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  result = (char *) ((arg1)->UserEventInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserEventField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserEventField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserEventField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserEventField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcBrokerUserEventField___() {
  void * jresult ;
  CThostFtdcBrokerUserEventField *result = 0 ;
  
  result = (CThostFtdcBrokerUserEventField *)new CThostFtdcBrokerUserEventField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcBrokerUserEventField___(void * jarg1) {
  CThostFtdcBrokerUserEventField *arg1 = (CThostFtdcBrokerUserEventField *) 0 ;
  
  arg1 = (CThostFtdcBrokerUserEventField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryContractBankField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryContractBankField *arg1 = (CThostFtdcQryContractBankField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryContractBankField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryContractBankField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryContractBankField *arg1 = (CThostFtdcQryContractBankField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryContractBankField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryContractBankField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryContractBankField *arg1 = (CThostFtdcQryContractBankField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryContractBankField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryContractBankField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryContractBankField *arg1 = (CThostFtdcQryContractBankField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryContractBankField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryContractBankField_BankBrchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryContractBankField *arg1 = (CThostFtdcQryContractBankField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryContractBankField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBrchID, (const char *)arg2, 5-1);
      arg1->BankBrchID[5-1] = 0;
    } else {
      arg1->BankBrchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryContractBankField_BankBrchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryContractBankField *arg1 = (CThostFtdcQryContractBankField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryContractBankField *)jarg1; 
  result = (char *) ((arg1)->BankBrchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryContractBankField___() {
  void * jresult ;
  CThostFtdcQryContractBankField *result = 0 ;
  
  result = (CThostFtdcQryContractBankField *)new CThostFtdcQryContractBankField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryContractBankField___(void * jarg1) {
  CThostFtdcQryContractBankField *arg1 = (CThostFtdcQryContractBankField *) 0 ;
  
  arg1 = (CThostFtdcQryContractBankField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcContractBankField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcContractBankField *arg1 = (CThostFtdcContractBankField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcContractBankField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcContractBankField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcContractBankField *arg1 = (CThostFtdcContractBankField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcContractBankField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcContractBankField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcContractBankField *arg1 = (CThostFtdcContractBankField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcContractBankField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcContractBankField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcContractBankField *arg1 = (CThostFtdcContractBankField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcContractBankField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcContractBankField_BankBrchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcContractBankField *arg1 = (CThostFtdcContractBankField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcContractBankField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBrchID, (const char *)arg2, 5-1);
      arg1->BankBrchID[5-1] = 0;
    } else {
      arg1->BankBrchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcContractBankField_BankBrchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcContractBankField *arg1 = (CThostFtdcContractBankField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcContractBankField *)jarg1; 
  result = (char *) ((arg1)->BankBrchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcContractBankField_BankName_set___(void * jarg1, char * jarg2) {
  CThostFtdcContractBankField *arg1 = (CThostFtdcContractBankField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcContractBankField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankName, (const char *)arg2, 101-1);
      arg1->BankName[101-1] = 0;
    } else {
      arg1->BankName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcContractBankField_BankName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcContractBankField *arg1 = (CThostFtdcContractBankField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcContractBankField *)jarg1; 
  result = (char *) ((arg1)->BankName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcContractBankField___() {
  void * jresult ;
  CThostFtdcContractBankField *result = 0 ;
  
  result = (CThostFtdcContractBankField *)new CThostFtdcContractBankField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcContractBankField___(void * jarg1) {
  CThostFtdcContractBankField *arg1 = (CThostFtdcContractBankField *) 0 ;
  
  arg1 = (CThostFtdcContractBankField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_OpenDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OpenDate, (const char *)arg2, 9-1);
      arg1->OpenDate[9-1] = 0;
    } else {
      arg1->OpenDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_OpenDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->OpenDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_SettlementID_set___(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_SettlementID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_ComTradeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ComTradeID, (const char *)arg2, 21-1);
      arg1->ComTradeID[21-1] = 0;
    } else {
      arg1->ComTradeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_ComTradeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->ComTradeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_TradeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeID, (const char *)arg2, 21-1);
      arg1->TradeID[21-1] = 0;
    } else {
      arg1->TradeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_TradeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->TradeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_Direction_set___(void * jarg1, char jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_Direction_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_TotalAmt_set___(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->TotalAmt = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_TotalAmt_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->TotalAmt);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_Margin_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Margin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_Margin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Margin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_ExchMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_ExchMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_MarginRateByMoney_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->MarginRateByMoney = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_MarginRateByMoney_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->MarginRateByMoney);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_MarginRateByVolume_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->MarginRateByVolume = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_MarginRateByVolume_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->MarginRateByVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_LegID_set___(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcLegIDType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (TThostFtdcLegIDType)jarg2; 
  if (arg1) (arg1)->LegID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_LegID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcLegIDType result;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (TThostFtdcLegIDType) ((arg1)->LegID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_LegMultiple_set___(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcLegMultipleType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (TThostFtdcLegMultipleType)jarg2; 
  if (arg1) (arg1)->LegMultiple = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_LegMultiple_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcLegMultipleType result;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (TThostFtdcLegMultipleType) ((arg1)->LegMultiple);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_CombInstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombInstrumentID, (const char *)arg2, 31-1);
      arg1->CombInstrumentID[31-1] = 0;
    } else {
      arg1->CombInstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_CombInstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->CombInstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_TradeGroupID_set___(void * jarg1, int jarg2) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcTradeGroupIDType arg2 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (TThostFtdcTradeGroupIDType)jarg2; 
  if (arg1) (arg1)->TradeGroupID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorPositionCombineDetailField_TradeGroupID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  TThostFtdcTradeGroupIDType result;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  result = (TThostFtdcTradeGroupIDType) ((arg1)->TradeGroupID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcInvestorPositionCombineDetailField___() {
  void * jresult ;
  CThostFtdcInvestorPositionCombineDetailField *result = 0 ;
  
  result = (CThostFtdcInvestorPositionCombineDetailField *)new CThostFtdcInvestorPositionCombineDetailField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcInvestorPositionCombineDetailField___(void * jarg1) {
  CThostFtdcInvestorPositionCombineDetailField *arg1 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  
  arg1 = (CThostFtdcInvestorPositionCombineDetailField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_OrderRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_OrderRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->OrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_OrderPriceType_set___(void * jarg1, char jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderPriceTypeType)jarg2; 
  if (arg1) (arg1)->OrderPriceType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_OrderPriceType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcOrderPriceTypeType) ((arg1)->OrderPriceType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_Direction_set___(void * jarg1, char jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_Direction_get___(void * jarg1) {
  char jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_CombOffsetFlag_set___(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombOffsetFlag, (const char *)arg2, 5-1);
      arg1->CombOffsetFlag[5-1] = 0;
    } else {
      arg1->CombOffsetFlag[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_CombOffsetFlag_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->CombOffsetFlag);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_CombHedgeFlag_set___(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombHedgeFlag, (const char *)arg2, 5-1);
      arg1->CombHedgeFlag[5-1] = 0;
    } else {
      arg1->CombHedgeFlag[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_CombHedgeFlag_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->CombHedgeFlag);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_LimitPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_LimitPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_VolumeTotalOriginal_set___(void * jarg1, int jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeTotalOriginal = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_VolumeTotalOriginal_get___(void * jarg1) {
  int jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTotalOriginal);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_TimeCondition_set___(void * jarg1, char jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcTimeConditionType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcTimeConditionType)jarg2; 
  if (arg1) (arg1)->TimeCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_TimeCondition_get___(void * jarg1) {
  char jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcTimeConditionType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcTimeConditionType) ((arg1)->TimeCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_GTDDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->GTDDate, (const char *)arg2, 9-1);
      arg1->GTDDate[9-1] = 0;
    } else {
      arg1->GTDDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_GTDDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->GTDDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_VolumeCondition_set___(void * jarg1, char jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcVolumeConditionType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeConditionType)jarg2; 
  if (arg1) (arg1)->VolumeCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_VolumeCondition_get___(void * jarg1) {
  char jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcVolumeConditionType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcVolumeConditionType) ((arg1)->VolumeCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_MinVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MinVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_MinVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MinVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_ContingentCondition_set___(void * jarg1, char jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcContingentConditionType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcContingentConditionType)jarg2; 
  if (arg1) (arg1)->ContingentCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_ContingentCondition_get___(void * jarg1) {
  char jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcContingentConditionType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcContingentConditionType) ((arg1)->ContingentCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_StopPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->StopPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_StopPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->StopPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_ForceCloseReason_set___(void * jarg1, char jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcForceCloseReasonType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcForceCloseReasonType)jarg2; 
  if (arg1) (arg1)->ForceCloseReason = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_ForceCloseReason_get___(void * jarg1) {
  char jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcForceCloseReasonType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcForceCloseReasonType) ((arg1)->ForceCloseReason);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_IsAutoSuspend_set___(void * jarg1, int jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsAutoSuspend = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_IsAutoSuspend_get___(void * jarg1) {
  int jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsAutoSuspend);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_BusinessUnit_set___(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_BusinessUnit_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_UserForceClose_set___(void * jarg1, int jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->UserForceClose = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_UserForceClose_get___(void * jarg1) {
  int jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->UserForceClose);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_ParkedOrderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParkedOrderID, (const char *)arg2, 13-1);
      arg1->ParkedOrderID[13-1] = 0;
    } else {
      arg1->ParkedOrderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_ParkedOrderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->ParkedOrderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_UserType_set___(void * jarg1, char jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcUserTypeType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcUserTypeType)jarg2; 
  if (arg1) (arg1)->UserType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_UserType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcUserTypeType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcUserTypeType) ((arg1)->UserType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_Status_set___(void * jarg1, char jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcParkedOrderStatusType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcParkedOrderStatusType)jarg2; 
  if (arg1) (arg1)->Status = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_Status_get___(void * jarg1) {
  char jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcParkedOrderStatusType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcParkedOrderStatusType) ((arg1)->Status);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_ErrorID_set___(void * jarg1, int jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_ErrorID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_ErrorMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_ErrorMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_IsSwapOrder_set___(void * jarg1, int jarg2) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsSwapOrder = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderField_IsSwapOrder_get___(void * jarg1) {
  int jresult ;
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsSwapOrder);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcParkedOrderField___() {
  void * jresult ;
  CThostFtdcParkedOrderField *result = 0 ;
  
  result = (CThostFtdcParkedOrderField *)new CThostFtdcParkedOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcParkedOrderField___(void * jarg1) {
  CThostFtdcParkedOrderField *arg1 = (CThostFtdcParkedOrderField *) 0 ;
  
  arg1 = (CThostFtdcParkedOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_OrderActionRef_set___(void * jarg1, int jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionRefType)jarg2; 
  if (arg1) (arg1)->OrderActionRef = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_OrderActionRef_get___(void * jarg1) {
  int jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionRefType) ((arg1)->OrderActionRef);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_OrderRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_OrderRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->OrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_FrontID_set___(void * jarg1, int jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_FrontID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_OrderSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_OrderSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->OrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_ActionFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (TThostFtdcActionFlagType)jarg2; 
  if (arg1) (arg1)->ActionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_ActionFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcActionFlagType result;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_LimitPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_LimitPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_VolumeChange_set___(void * jarg1, int jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeChange = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_VolumeChange_get___(void * jarg1) {
  int jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeChange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_ParkedOrderActionID_set___(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParkedOrderActionID, (const char *)arg2, 13-1);
      arg1->ParkedOrderActionID[13-1] = 0;
    } else {
      arg1->ParkedOrderActionID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_ParkedOrderActionID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ParkedOrderActionID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_UserType_set___(void * jarg1, char jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcUserTypeType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (TThostFtdcUserTypeType)jarg2; 
  if (arg1) (arg1)->UserType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_UserType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcUserTypeType result;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (TThostFtdcUserTypeType) ((arg1)->UserType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_Status_set___(void * jarg1, char jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcParkedOrderStatusType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (TThostFtdcParkedOrderStatusType)jarg2; 
  if (arg1) (arg1)->Status = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_Status_get___(void * jarg1) {
  char jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcParkedOrderStatusType result;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (TThostFtdcParkedOrderStatusType) ((arg1)->Status);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_ErrorID_set___(void * jarg1, int jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_ErrorID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_ErrorMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcParkedOrderActionField_ErrorMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcParkedOrderActionField___() {
  void * jresult ;
  CThostFtdcParkedOrderActionField *result = 0 ;
  
  result = (CThostFtdcParkedOrderActionField *)new CThostFtdcParkedOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcParkedOrderActionField___(void * jarg1) {
  CThostFtdcParkedOrderActionField *arg1 = (CThostFtdcParkedOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcParkedOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryParkedOrderField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryParkedOrderField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryParkedOrderField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryParkedOrderField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryParkedOrderField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryParkedOrderField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryParkedOrderField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryParkedOrderField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryParkedOrderField___() {
  void * jresult ;
  CThostFtdcQryParkedOrderField *result = 0 ;
  
  result = (CThostFtdcQryParkedOrderField *)new CThostFtdcQryParkedOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryParkedOrderField___(void * jarg1) {
  CThostFtdcQryParkedOrderField *arg1 = (CThostFtdcQryParkedOrderField *) 0 ;
  
  arg1 = (CThostFtdcQryParkedOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryParkedOrderActionField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryParkedOrderActionField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryParkedOrderActionField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryParkedOrderActionField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryParkedOrderActionField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryParkedOrderActionField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryParkedOrderActionField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryParkedOrderActionField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryParkedOrderActionField___() {
  void * jresult ;
  CThostFtdcQryParkedOrderActionField *result = 0 ;
  
  result = (CThostFtdcQryParkedOrderActionField *)new CThostFtdcQryParkedOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryParkedOrderActionField___(void * jarg1) {
  CThostFtdcQryParkedOrderActionField *arg1 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcQryParkedOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRemoveParkedOrderField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRemoveParkedOrderField *arg1 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRemoveParkedOrderField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRemoveParkedOrderField *arg1 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRemoveParkedOrderField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRemoveParkedOrderField *arg1 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRemoveParkedOrderField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRemoveParkedOrderField *arg1 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRemoveParkedOrderField_ParkedOrderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRemoveParkedOrderField *arg1 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParkedOrderID, (const char *)arg2, 13-1);
      arg1->ParkedOrderID[13-1] = 0;
    } else {
      arg1->ParkedOrderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRemoveParkedOrderField_ParkedOrderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRemoveParkedOrderField *arg1 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderField *)jarg1; 
  result = (char *) ((arg1)->ParkedOrderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcRemoveParkedOrderField___() {
  void * jresult ;
  CThostFtdcRemoveParkedOrderField *result = 0 ;
  
  result = (CThostFtdcRemoveParkedOrderField *)new CThostFtdcRemoveParkedOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcRemoveParkedOrderField___(void * jarg1) {
  CThostFtdcRemoveParkedOrderField *arg1 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRemoveParkedOrderActionField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRemoveParkedOrderActionField *arg1 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRemoveParkedOrderActionField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRemoveParkedOrderActionField *arg1 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRemoveParkedOrderActionField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRemoveParkedOrderActionField *arg1 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRemoveParkedOrderActionField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRemoveParkedOrderActionField *arg1 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRemoveParkedOrderActionField_ParkedOrderActionID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRemoveParkedOrderActionField *arg1 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParkedOrderActionID, (const char *)arg2, 13-1);
      arg1->ParkedOrderActionID[13-1] = 0;
    } else {
      arg1->ParkedOrderActionID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRemoveParkedOrderActionField_ParkedOrderActionID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRemoveParkedOrderActionField *arg1 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ParkedOrderActionID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcRemoveParkedOrderActionField___() {
  void * jresult ;
  CThostFtdcRemoveParkedOrderActionField *result = 0 ;
  
  result = (CThostFtdcRemoveParkedOrderActionField *)new CThostFtdcRemoveParkedOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcRemoveParkedOrderActionField___(void * jarg1) {
  CThostFtdcRemoveParkedOrderActionField *arg1 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcRemoveParkedOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorWithdrawAlgorithmField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorWithdrawAlgorithmField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorWithdrawAlgorithmField_InvestorRange_set___(void * jarg1, char jarg2) {
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorWithdrawAlgorithmField_InvestorRange_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorWithdrawAlgorithmField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorWithdrawAlgorithmField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorWithdrawAlgorithmField_UsingRatio_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->UsingRatio = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorWithdrawAlgorithmField_UsingRatio_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->UsingRatio);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorWithdrawAlgorithmField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorWithdrawAlgorithmField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorWithdrawAlgorithmField_FundMortgageRatio_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  TThostFtdcRatioType arg2 ;
  
  arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *)jarg1; 
  arg2 = (TThostFtdcRatioType)jarg2; 
  if (arg1) (arg1)->FundMortgageRatio = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorWithdrawAlgorithmField_FundMortgageRatio_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  TThostFtdcRatioType result;
  
  arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *)jarg1; 
  result = (TThostFtdcRatioType) ((arg1)->FundMortgageRatio);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcInvestorWithdrawAlgorithmField___() {
  void * jresult ;
  CThostFtdcInvestorWithdrawAlgorithmField *result = 0 ;
  
  result = (CThostFtdcInvestorWithdrawAlgorithmField *)new CThostFtdcInvestorWithdrawAlgorithmField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcInvestorWithdrawAlgorithmField___(void * jarg1) {
  CThostFtdcInvestorWithdrawAlgorithmField *arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *) 0 ;
  
  arg1 = (CThostFtdcInvestorWithdrawAlgorithmField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorPositionCombineDetailField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorPositionCombineDetailField *arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorPositionCombineDetailField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorPositionCombineDetailField *arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorPositionCombineDetailField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorPositionCombineDetailField *arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorPositionCombineDetailField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorPositionCombineDetailField *arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorPositionCombineDetailField_CombInstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorPositionCombineDetailField *arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombInstrumentID, (const char *)arg2, 31-1);
      arg1->CombInstrumentID[31-1] = 0;
    } else {
      arg1->CombInstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorPositionCombineDetailField_CombInstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorPositionCombineDetailField *arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *)jarg1; 
  result = (char *) ((arg1)->CombInstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryInvestorPositionCombineDetailField___() {
  void * jresult ;
  CThostFtdcQryInvestorPositionCombineDetailField *result = 0 ;
  
  result = (CThostFtdcQryInvestorPositionCombineDetailField *)new CThostFtdcQryInvestorPositionCombineDetailField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryInvestorPositionCombineDetailField___(void * jarg1) {
  CThostFtdcQryInvestorPositionCombineDetailField *arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  
  arg1 = (CThostFtdcQryInvestorPositionCombineDetailField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataAveragePriceField_AveragePrice_set___(void * jarg1, double jarg2) {
  CThostFtdcMarketDataAveragePriceField *arg1 = (CThostFtdcMarketDataAveragePriceField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcMarketDataAveragePriceField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->AveragePrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarketDataAveragePriceField_AveragePrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcMarketDataAveragePriceField *arg1 = (CThostFtdcMarketDataAveragePriceField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcMarketDataAveragePriceField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->AveragePrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcMarketDataAveragePriceField___() {
  void * jresult ;
  CThostFtdcMarketDataAveragePriceField *result = 0 ;
  
  result = (CThostFtdcMarketDataAveragePriceField *)new CThostFtdcMarketDataAveragePriceField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcMarketDataAveragePriceField___(void * jarg1) {
  CThostFtdcMarketDataAveragePriceField *arg1 = (CThostFtdcMarketDataAveragePriceField *) 0 ;
  
  arg1 = (CThostFtdcMarketDataAveragePriceField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyInvestorPasswordField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcVerifyInvestorPasswordField *arg1 = (CThostFtdcVerifyInvestorPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyInvestorPasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyInvestorPasswordField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyInvestorPasswordField *arg1 = (CThostFtdcVerifyInvestorPasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyInvestorPasswordField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyInvestorPasswordField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcVerifyInvestorPasswordField *arg1 = (CThostFtdcVerifyInvestorPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyInvestorPasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyInvestorPasswordField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyInvestorPasswordField *arg1 = (CThostFtdcVerifyInvestorPasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyInvestorPasswordField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyInvestorPasswordField_Password_set___(void * jarg1, char * jarg2) {
  CThostFtdcVerifyInvestorPasswordField *arg1 = (CThostFtdcVerifyInvestorPasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyInvestorPasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyInvestorPasswordField_Password_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyInvestorPasswordField *arg1 = (CThostFtdcVerifyInvestorPasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyInvestorPasswordField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcVerifyInvestorPasswordField___() {
  void * jresult ;
  CThostFtdcVerifyInvestorPasswordField *result = 0 ;
  
  result = (CThostFtdcVerifyInvestorPasswordField *)new CThostFtdcVerifyInvestorPasswordField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcVerifyInvestorPasswordField___(void * jarg1) {
  CThostFtdcVerifyInvestorPasswordField *arg1 = (CThostFtdcVerifyInvestorPasswordField *) 0 ;
  
  arg1 = (CThostFtdcVerifyInvestorPasswordField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserIPField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserIPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserIPField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserIPField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserIPField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserIPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserIPField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserIPField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserIPField_IPAddress_set___(void * jarg1, char * jarg2) {
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserIPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPAddress, (const char *)arg2, 16-1);
      arg1->IPAddress[16-1] = 0;
    } else {
      arg1->IPAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserIPField_IPAddress_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserIPField *)jarg1; 
  result = (char *) ((arg1)->IPAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserIPField_IPMask_set___(void * jarg1, char * jarg2) {
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserIPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IPMask, (const char *)arg2, 16-1);
      arg1->IPMask[16-1] = 0;
    } else {
      arg1->IPMask[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserIPField_IPMask_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserIPField *)jarg1; 
  result = (char *) ((arg1)->IPMask);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserIPField_MacAddress_set___(void * jarg1, char * jarg2) {
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserIPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacAddress, (const char *)arg2, 21-1);
      arg1->MacAddress[21-1] = 0;
    } else {
      arg1->MacAddress[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserIPField_MacAddress_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserIPField *)jarg1; 
  result = (char *) ((arg1)->MacAddress);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcUserIPField___() {
  void * jresult ;
  CThostFtdcUserIPField *result = 0 ;
  
  result = (CThostFtdcUserIPField *)new CThostFtdcUserIPField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcUserIPField___(void * jarg1) {
  CThostFtdcUserIPField *arg1 = (CThostFtdcUserIPField *) 0 ;
  
  arg1 = (CThostFtdcUserIPField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeInfoField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeInfoField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeInfoField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeInfoField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeInfoField_SendTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SendTime, (const char *)arg2, 9-1);
      arg1->SendTime[9-1] = 0;
    } else {
      arg1->SendTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeInfoField_SendTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  result = (char *) ((arg1)->SendTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeInfoField_FieldContent_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FieldContent, (const char *)arg2, 501-1);
      arg1->FieldContent[501-1] = 0;
    } else {
      arg1->FieldContent[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeInfoField_FieldContent_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  result = (char *) ((arg1)->FieldContent);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeInfoField_SequenceSeries_set___(void * jarg1, short jarg2) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  TThostFtdcSequenceSeriesType arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  arg2 = (TThostFtdcSequenceSeriesType)jarg2; 
  if (arg1) (arg1)->SequenceSeries = arg2;
}


SWIGEXPORT short SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeInfoField_SequenceSeries_get___(void * jarg1) {
  short jresult ;
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  TThostFtdcSequenceSeriesType result;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  result = (TThostFtdcSequenceSeriesType) ((arg1)->SequenceSeries);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeInfoField_SequenceNo_set___(void * jarg1, int jarg2) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeInfoField_SequenceNo_get___(void * jarg1) {
  int jresult ;
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcTradingNoticeInfoField___() {
  void * jresult ;
  CThostFtdcTradingNoticeInfoField *result = 0 ;
  
  result = (CThostFtdcTradingNoticeInfoField *)new CThostFtdcTradingNoticeInfoField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcTradingNoticeInfoField___(void * jarg1) {
  CThostFtdcTradingNoticeInfoField *arg1 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  
  arg1 = (CThostFtdcTradingNoticeInfoField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeField_InvestorRange_set___(void * jarg1, char jarg2) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  TThostFtdcInvestorRangeType arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  arg2 = (TThostFtdcInvestorRangeType)jarg2; 
  if (arg1) (arg1)->InvestorRange = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeField_InvestorRange_get___(void * jarg1) {
  char jresult ;
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  TThostFtdcInvestorRangeType result;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  result = (TThostFtdcInvestorRangeType) ((arg1)->InvestorRange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeField_SequenceSeries_set___(void * jarg1, short jarg2) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  TThostFtdcSequenceSeriesType arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  arg2 = (TThostFtdcSequenceSeriesType)jarg2; 
  if (arg1) (arg1)->SequenceSeries = arg2;
}


SWIGEXPORT short SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeField_SequenceSeries_get___(void * jarg1) {
  short jresult ;
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  TThostFtdcSequenceSeriesType result;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  result = (TThostFtdcSequenceSeriesType) ((arg1)->SequenceSeries);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeField_SendTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SendTime, (const char *)arg2, 9-1);
      arg1->SendTime[9-1] = 0;
    } else {
      arg1->SendTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeField_SendTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  result = (char *) ((arg1)->SendTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeField_SequenceNo_set___(void * jarg1, int jarg2) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeField_SequenceNo_get___(void * jarg1) {
  int jresult ;
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeField_FieldContent_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FieldContent, (const char *)arg2, 501-1);
      arg1->FieldContent[501-1] = 0;
    } else {
      arg1->FieldContent[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingNoticeField_FieldContent_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  result = (char *) ((arg1)->FieldContent);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcTradingNoticeField___() {
  void * jresult ;
  CThostFtdcTradingNoticeField *result = 0 ;
  
  result = (CThostFtdcTradingNoticeField *)new CThostFtdcTradingNoticeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcTradingNoticeField___(void * jarg1) {
  CThostFtdcTradingNoticeField *arg1 = (CThostFtdcTradingNoticeField *) 0 ;
  
  arg1 = (CThostFtdcTradingNoticeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradingNoticeField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTradingNoticeField *arg1 = (CThostFtdcQryTradingNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradingNoticeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradingNoticeField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradingNoticeField *arg1 = (CThostFtdcQryTradingNoticeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradingNoticeField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradingNoticeField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTradingNoticeField *arg1 = (CThostFtdcQryTradingNoticeField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTradingNoticeField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTradingNoticeField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTradingNoticeField *arg1 = (CThostFtdcQryTradingNoticeField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTradingNoticeField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryTradingNoticeField___() {
  void * jresult ;
  CThostFtdcQryTradingNoticeField *result = 0 ;
  
  result = (CThostFtdcQryTradingNoticeField *)new CThostFtdcQryTradingNoticeField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryTradingNoticeField___(void * jarg1) {
  CThostFtdcQryTradingNoticeField *arg1 = (CThostFtdcQryTradingNoticeField *) 0 ;
  
  arg1 = (CThostFtdcQryTradingNoticeField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryErrOrderField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryErrOrderField *arg1 = (CThostFtdcQryErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryErrOrderField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryErrOrderField *arg1 = (CThostFtdcQryErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryErrOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryErrOrderField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryErrOrderField *arg1 = (CThostFtdcQryErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryErrOrderField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryErrOrderField *arg1 = (CThostFtdcQryErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryErrOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryErrOrderField___() {
  void * jresult ;
  CThostFtdcQryErrOrderField *result = 0 ;
  
  result = (CThostFtdcQryErrOrderField *)new CThostFtdcQryErrOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryErrOrderField___(void * jarg1) {
  CThostFtdcQryErrOrderField *arg1 = (CThostFtdcQryErrOrderField *) 0 ;
  
  arg1 = (CThostFtdcQryErrOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_OrderRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_OrderRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->OrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_OrderPriceType_set___(void * jarg1, char jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderPriceTypeType)jarg2; 
  if (arg1) (arg1)->OrderPriceType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_OrderPriceType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcOrderPriceTypeType) ((arg1)->OrderPriceType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_Direction_set___(void * jarg1, char jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_Direction_get___(void * jarg1) {
  char jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_CombOffsetFlag_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombOffsetFlag, (const char *)arg2, 5-1);
      arg1->CombOffsetFlag[5-1] = 0;
    } else {
      arg1->CombOffsetFlag[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_CombOffsetFlag_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->CombOffsetFlag);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_CombHedgeFlag_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombHedgeFlag, (const char *)arg2, 5-1);
      arg1->CombHedgeFlag[5-1] = 0;
    } else {
      arg1->CombHedgeFlag[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_CombHedgeFlag_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->CombHedgeFlag);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_LimitPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_LimitPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_VolumeTotalOriginal_set___(void * jarg1, int jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeTotalOriginal = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_VolumeTotalOriginal_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTotalOriginal);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_TimeCondition_set___(void * jarg1, char jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcTimeConditionType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcTimeConditionType)jarg2; 
  if (arg1) (arg1)->TimeCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_TimeCondition_get___(void * jarg1) {
  char jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcTimeConditionType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcTimeConditionType) ((arg1)->TimeCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_GTDDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->GTDDate, (const char *)arg2, 9-1);
      arg1->GTDDate[9-1] = 0;
    } else {
      arg1->GTDDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_GTDDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->GTDDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_VolumeCondition_set___(void * jarg1, char jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcVolumeConditionType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeConditionType)jarg2; 
  if (arg1) (arg1)->VolumeCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_VolumeCondition_get___(void * jarg1) {
  char jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcVolumeConditionType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcVolumeConditionType) ((arg1)->VolumeCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_MinVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MinVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_MinVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MinVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_ContingentCondition_set___(void * jarg1, char jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcContingentConditionType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcContingentConditionType)jarg2; 
  if (arg1) (arg1)->ContingentCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_ContingentCondition_get___(void * jarg1) {
  char jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcContingentConditionType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcContingentConditionType) ((arg1)->ContingentCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_StopPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->StopPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_StopPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->StopPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_ForceCloseReason_set___(void * jarg1, char jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcForceCloseReasonType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcForceCloseReasonType)jarg2; 
  if (arg1) (arg1)->ForceCloseReason = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_ForceCloseReason_get___(void * jarg1) {
  char jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcForceCloseReasonType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcForceCloseReasonType) ((arg1)->ForceCloseReason);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_IsAutoSuspend_set___(void * jarg1, int jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsAutoSuspend = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_IsAutoSuspend_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsAutoSuspend);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_BusinessUnit_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_BusinessUnit_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_UserForceClose_set___(void * jarg1, int jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->UserForceClose = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_UserForceClose_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->UserForceClose);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_ErrorID_set___(void * jarg1, int jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_ErrorID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_ErrorMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_ErrorMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_IsSwapOrder_set___(void * jarg1, int jarg2) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsSwapOrder = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderField_IsSwapOrder_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsSwapOrder);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcErrOrderField___() {
  void * jresult ;
  CThostFtdcErrOrderField *result = 0 ;
  
  result = (CThostFtdcErrOrderField *)new CThostFtdcErrOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcErrOrderField___(void * jarg1) {
  CThostFtdcErrOrderField *arg1 = (CThostFtdcErrOrderField *) 0 ;
  
  arg1 = (CThostFtdcErrOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_OrderRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_OrderRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->OrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_OrderPriceType_set___(void * jarg1, char jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderPriceTypeType)jarg2; 
  if (arg1) (arg1)->OrderPriceType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_OrderPriceType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderPriceTypeType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcOrderPriceTypeType) ((arg1)->OrderPriceType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_Direction_set___(void * jarg1, char jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_Direction_get___(void * jarg1) {
  char jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_CombOffsetFlag_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombOffsetFlag, (const char *)arg2, 5-1);
      arg1->CombOffsetFlag[5-1] = 0;
    } else {
      arg1->CombOffsetFlag[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_CombOffsetFlag_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->CombOffsetFlag);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_CombHedgeFlag_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CombHedgeFlag, (const char *)arg2, 5-1);
      arg1->CombHedgeFlag[5-1] = 0;
    } else {
      arg1->CombHedgeFlag[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_CombHedgeFlag_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->CombHedgeFlag);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_LimitPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_LimitPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_VolumeTotalOriginal_set___(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeTotalOriginal = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_VolumeTotalOriginal_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTotalOriginal);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_TimeCondition_set___(void * jarg1, char jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcTimeConditionType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcTimeConditionType)jarg2; 
  if (arg1) (arg1)->TimeCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_TimeCondition_get___(void * jarg1) {
  char jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcTimeConditionType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcTimeConditionType) ((arg1)->TimeCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_GTDDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->GTDDate, (const char *)arg2, 9-1);
      arg1->GTDDate[9-1] = 0;
    } else {
      arg1->GTDDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_GTDDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->GTDDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_VolumeCondition_set___(void * jarg1, char jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeConditionType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeConditionType)jarg2; 
  if (arg1) (arg1)->VolumeCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_VolumeCondition_get___(void * jarg1) {
  char jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeConditionType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcVolumeConditionType) ((arg1)->VolumeCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_MinVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MinVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_MinVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MinVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_ContingentCondition_set___(void * jarg1, char jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcContingentConditionType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcContingentConditionType)jarg2; 
  if (arg1) (arg1)->ContingentCondition = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_ContingentCondition_get___(void * jarg1) {
  char jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcContingentConditionType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcContingentConditionType) ((arg1)->ContingentCondition);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_StopPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->StopPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_StopPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->StopPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_ForceCloseReason_set___(void * jarg1, char jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcForceCloseReasonType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcForceCloseReasonType)jarg2; 
  if (arg1) (arg1)->ForceCloseReason = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_ForceCloseReason_get___(void * jarg1) {
  char jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcForceCloseReasonType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcForceCloseReasonType) ((arg1)->ForceCloseReason);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_IsAutoSuspend_set___(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsAutoSuspend = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_IsAutoSuspend_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsAutoSuspend);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_BusinessUnit_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_BusinessUnit_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_OrderLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_OrderLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->OrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_ExchangeInstID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeInstID, (const char *)arg2, 31-1);
      arg1->ExchangeInstID[31-1] = 0;
    } else {
      arg1->ExchangeInstID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_ExchangeInstID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->ExchangeInstID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_OrderSubmitStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderSubmitStatusType)jarg2; 
  if (arg1) (arg1)->OrderSubmitStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_OrderSubmitStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderSubmitStatusType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcOrderSubmitStatusType) ((arg1)->OrderSubmitStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_NotifySequence_set___(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->NotifySequence = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_NotifySequence_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->NotifySequence);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_SettlementID_set___(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_SettlementID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_OrderSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_OrderSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->OrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_OrderSource_set___(void * jarg1, char jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderSourceType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderSourceType)jarg2; 
  if (arg1) (arg1)->OrderSource = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_OrderSource_get___(void * jarg1) {
  char jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderSourceType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcOrderSourceType) ((arg1)->OrderSource);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_OrderStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderStatusType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderStatusType)jarg2; 
  if (arg1) (arg1)->OrderStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_OrderStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderStatusType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcOrderStatusType) ((arg1)->OrderStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_OrderType_set___(void * jarg1, char jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderTypeType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcOrderTypeType)jarg2; 
  if (arg1) (arg1)->OrderType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_OrderType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcOrderTypeType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcOrderTypeType) ((arg1)->OrderType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_VolumeTraded_set___(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeTraded = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_VolumeTraded_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTraded);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_VolumeTotal_set___(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeTotal = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_VolumeTotal_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeTotal);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_InsertDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertDate, (const char *)arg2, 9-1);
      arg1->InsertDate[9-1] = 0;
    } else {
      arg1->InsertDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_InsertDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_InsertTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InsertTime, (const char *)arg2, 9-1);
      arg1->InsertTime[9-1] = 0;
    } else {
      arg1->InsertTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_InsertTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->InsertTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_ActiveTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveTime, (const char *)arg2, 9-1);
      arg1->ActiveTime[9-1] = 0;
    } else {
      arg1->ActiveTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_ActiveTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->ActiveTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_SuspendTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SuspendTime, (const char *)arg2, 9-1);
      arg1->SuspendTime[9-1] = 0;
    } else {
      arg1->SuspendTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_SuspendTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->SuspendTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_UpdateTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UpdateTime, (const char *)arg2, 9-1);
      arg1->UpdateTime[9-1] = 0;
    } else {
      arg1->UpdateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_UpdateTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->UpdateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_CancelTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CancelTime, (const char *)arg2, 9-1);
      arg1->CancelTime[9-1] = 0;
    } else {
      arg1->CancelTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_CancelTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->CancelTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_ActiveTraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveTraderID, (const char *)arg2, 21-1);
      arg1->ActiveTraderID[21-1] = 0;
    } else {
      arg1->ActiveTraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_ActiveTraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->ActiveTraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_ClearingPartID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClearingPartID, (const char *)arg2, 11-1);
      arg1->ClearingPartID[11-1] = 0;
    } else {
      arg1->ClearingPartID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_ClearingPartID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->ClearingPartID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_SequenceNo_set___(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_SequenceNo_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_FrontID_set___(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_FrontID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_UserProductInfo_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserProductInfo, (const char *)arg2, 11-1);
      arg1->UserProductInfo[11-1] = 0;
    } else {
      arg1->UserProductInfo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_UserProductInfo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->UserProductInfo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_StatusMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_StatusMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->StatusMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_UserForceClose_set___(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->UserForceClose = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_UserForceClose_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->UserForceClose);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_ActiveUserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActiveUserID, (const char *)arg2, 16-1);
      arg1->ActiveUserID[16-1] = 0;
    } else {
      arg1->ActiveUserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_ActiveUserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->ActiveUserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_BrokerOrderSeq_set___(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->BrokerOrderSeq = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_BrokerOrderSeq_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->BrokerOrderSeq);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_RelativeOrderSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RelativeOrderSysID, (const char *)arg2, 21-1);
      arg1->RelativeOrderSysID[21-1] = 0;
    } else {
      arg1->RelativeOrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_RelativeOrderSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->RelativeOrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_ZCETotalTradedVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->ZCETotalTradedVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_ZCETotalTradedVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->ZCETotalTradedVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_ErrorID_set___(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_ErrorID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_ErrorMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_ErrorMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_IsSwapOrder_set___(void * jarg1, int jarg2) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->IsSwapOrder = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrorConditionalOrderField_IsSwapOrder_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->IsSwapOrder);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcErrorConditionalOrderField___() {
  void * jresult ;
  CThostFtdcErrorConditionalOrderField *result = 0 ;
  
  result = (CThostFtdcErrorConditionalOrderField *)new CThostFtdcErrorConditionalOrderField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcErrorConditionalOrderField___(void * jarg1) {
  CThostFtdcErrorConditionalOrderField *arg1 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  
  arg1 = (CThostFtdcErrorConditionalOrderField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryErrOrderActionField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryErrOrderActionField *arg1 = (CThostFtdcQryErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryErrOrderActionField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryErrOrderActionField *arg1 = (CThostFtdcQryErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryErrOrderActionField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryErrOrderActionField *arg1 = (CThostFtdcQryErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryErrOrderActionField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryErrOrderActionField *arg1 = (CThostFtdcQryErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryErrOrderActionField___() {
  void * jresult ;
  CThostFtdcQryErrOrderActionField *result = 0 ;
  
  result = (CThostFtdcQryErrOrderActionField *)new CThostFtdcQryErrOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryErrOrderActionField___(void * jarg1) {
  CThostFtdcQryErrOrderActionField *arg1 = (CThostFtdcQryErrOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcQryErrOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_OrderActionRef_set___(void * jarg1, int jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionRefType)jarg2; 
  if (arg1) (arg1)->OrderActionRef = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_OrderActionRef_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcOrderActionRefType result;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionRefType) ((arg1)->OrderActionRef);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_OrderRef_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderRef, (const char *)arg2, 13-1);
      arg1->OrderRef[13-1] = 0;
    } else {
      arg1->OrderRef[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_OrderRef_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->OrderRef);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_FrontID_set___(void * jarg1, int jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcFrontIDType arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (TThostFtdcFrontIDType)jarg2; 
  if (arg1) (arg1)->FrontID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_FrontID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcFrontIDType result;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (TThostFtdcFrontIDType) ((arg1)->FrontID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_OrderSysID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderSysID, (const char *)arg2, 21-1);
      arg1->OrderSysID[21-1] = 0;
    } else {
      arg1->OrderSysID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_OrderSysID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->OrderSysID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_ActionFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcActionFlagType arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (TThostFtdcActionFlagType)jarg2; 
  if (arg1) (arg1)->ActionFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_ActionFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcActionFlagType result;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (TThostFtdcActionFlagType) ((arg1)->ActionFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_LimitPrice_set___(void * jarg1, double jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->LimitPrice = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_LimitPrice_get___(void * jarg1) {
  double jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->LimitPrice);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_VolumeChange_set___(void * jarg1, int jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->VolumeChange = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_VolumeChange_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->VolumeChange);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_ActionDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionDate, (const char *)arg2, 9-1);
      arg1->ActionDate[9-1] = 0;
    } else {
      arg1->ActionDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_ActionDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_ActionTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionTime, (const char *)arg2, 9-1);
      arg1->ActionTime[9-1] = 0;
    } else {
      arg1->ActionTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_ActionTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_TraderID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TraderID, (const char *)arg2, 21-1);
      arg1->TraderID[21-1] = 0;
    } else {
      arg1->TraderID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_TraderID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->TraderID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_OrderLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrderLocalID, (const char *)arg2, 13-1);
      arg1->OrderLocalID[13-1] = 0;
    } else {
      arg1->OrderLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_OrderLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->OrderLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_ActionLocalID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ActionLocalID, (const char *)arg2, 13-1);
      arg1->ActionLocalID[13-1] = 0;
    } else {
      arg1->ActionLocalID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_ActionLocalID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ActionLocalID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_ClientID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ClientID, (const char *)arg2, 11-1);
      arg1->ClientID[11-1] = 0;
    } else {
      arg1->ClientID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_ClientID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ClientID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_BusinessUnit_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BusinessUnit, (const char *)arg2, 21-1);
      arg1->BusinessUnit[21-1] = 0;
    } else {
      arg1->BusinessUnit[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_BusinessUnit_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->BusinessUnit);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_OrderActionStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (TThostFtdcOrderActionStatusType)jarg2; 
  if (arg1) (arg1)->OrderActionStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_OrderActionStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcOrderActionStatusType result;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (TThostFtdcOrderActionStatusType) ((arg1)->OrderActionStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_StatusMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->StatusMsg, (const char *)arg2, 81-1);
      arg1->StatusMsg[81-1] = 0;
    } else {
      arg1->StatusMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_StatusMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->StatusMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_ErrorID_set___(void * jarg1, int jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_ErrorID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_ErrorMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcErrOrderActionField_ErrorMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcErrOrderActionField___() {
  void * jresult ;
  CThostFtdcErrOrderActionField *result = 0 ;
  
  result = (CThostFtdcErrOrderActionField *)new CThostFtdcErrOrderActionField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcErrOrderActionField___(void * jarg1) {
  CThostFtdcErrOrderActionField *arg1 = (CThostFtdcErrOrderActionField *) 0 ;
  
  arg1 = (CThostFtdcErrOrderActionField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeSequenceField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryExchangeSequenceField *arg1 = (CThostFtdcQryExchangeSequenceField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryExchangeSequenceField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryExchangeSequenceField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryExchangeSequenceField *arg1 = (CThostFtdcQryExchangeSequenceField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryExchangeSequenceField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryExchangeSequenceField___() {
  void * jresult ;
  CThostFtdcQryExchangeSequenceField *result = 0 ;
  
  result = (CThostFtdcQryExchangeSequenceField *)new CThostFtdcQryExchangeSequenceField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryExchangeSequenceField___(void * jarg1) {
  CThostFtdcQryExchangeSequenceField *arg1 = (CThostFtdcQryExchangeSequenceField *) 0 ;
  
  arg1 = (CThostFtdcQryExchangeSequenceField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeSequenceField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcExchangeSequenceField *arg1 = (CThostFtdcExchangeSequenceField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcExchangeSequenceField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeSequenceField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcExchangeSequenceField *arg1 = (CThostFtdcExchangeSequenceField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcExchangeSequenceField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeSequenceField_SequenceNo_set___(void * jarg1, int jarg2) {
  CThostFtdcExchangeSequenceField *arg1 = (CThostFtdcExchangeSequenceField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcExchangeSequenceField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->SequenceNo = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeSequenceField_SequenceNo_get___(void * jarg1) {
  int jresult ;
  CThostFtdcExchangeSequenceField *arg1 = (CThostFtdcExchangeSequenceField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcExchangeSequenceField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->SequenceNo);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeSequenceField_MarketStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcExchangeSequenceField *arg1 = (CThostFtdcExchangeSequenceField *) 0 ;
  TThostFtdcInstrumentStatusType arg2 ;
  
  arg1 = (CThostFtdcExchangeSequenceField *)jarg1; 
  arg2 = (TThostFtdcInstrumentStatusType)jarg2; 
  if (arg1) (arg1)->MarketStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcExchangeSequenceField_MarketStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcExchangeSequenceField *arg1 = (CThostFtdcExchangeSequenceField *) 0 ;
  TThostFtdcInstrumentStatusType result;
  
  arg1 = (CThostFtdcExchangeSequenceField *)jarg1; 
  result = (TThostFtdcInstrumentStatusType) ((arg1)->MarketStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcExchangeSequenceField___() {
  void * jresult ;
  CThostFtdcExchangeSequenceField *result = 0 ;
  
  result = (CThostFtdcExchangeSequenceField *)new CThostFtdcExchangeSequenceField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcExchangeSequenceField___(void * jarg1) {
  CThostFtdcExchangeSequenceField *arg1 = (CThostFtdcExchangeSequenceField *) 0 ;
  
  arg1 = (CThostFtdcExchangeSequenceField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeWithPriceField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeWithPriceField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeWithPriceField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeWithPriceField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeWithPriceField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeWithPriceField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeWithPriceField_Direction_set___(void * jarg1, char jarg2) {
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeWithPriceField_Direction_get___(void * jarg1) {
  char jresult ;
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeWithPriceField_OffsetFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcOffsetFlagType arg2 ;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *)jarg1; 
  arg2 = (TThostFtdcOffsetFlagType)jarg2; 
  if (arg1) (arg1)->OffsetFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeWithPriceField_OffsetFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcOffsetFlagType result;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *)jarg1; 
  result = (TThostFtdcOffsetFlagType) ((arg1)->OffsetFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeWithPriceField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeWithPriceField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeWithPriceField_MaxVolume_set___(void * jarg1, int jarg2) {
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->MaxVolume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeWithPriceField_MaxVolume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->MaxVolume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeWithPriceField_Price_set___(void * jarg1, double jarg2) {
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcPriceType arg2 ;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *)jarg1; 
  arg2 = (TThostFtdcPriceType)jarg2; 
  if (arg1) (arg1)->Price = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryMaxOrderVolumeWithPriceField_Price_get___(void * jarg1) {
  double jresult ;
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  TThostFtdcPriceType result;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *)jarg1; 
  result = (TThostFtdcPriceType) ((arg1)->Price);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQueryMaxOrderVolumeWithPriceField___() {
  void * jresult ;
  CThostFtdcQueryMaxOrderVolumeWithPriceField *result = 0 ;
  
  result = (CThostFtdcQueryMaxOrderVolumeWithPriceField *)new CThostFtdcQueryMaxOrderVolumeWithPriceField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQueryMaxOrderVolumeWithPriceField___(void * jarg1) {
  CThostFtdcQueryMaxOrderVolumeWithPriceField *arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *) 0 ;
  
  arg1 = (CThostFtdcQueryMaxOrderVolumeWithPriceField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerTradingParamsField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerTradingParamsField *arg1 = (CThostFtdcQryBrokerTradingParamsField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerTradingParamsField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerTradingParamsField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerTradingParamsField *arg1 = (CThostFtdcQryBrokerTradingParamsField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerTradingParamsField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerTradingParamsField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerTradingParamsField *arg1 = (CThostFtdcQryBrokerTradingParamsField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerTradingParamsField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerTradingParamsField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerTradingParamsField *arg1 = (CThostFtdcQryBrokerTradingParamsField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerTradingParamsField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerTradingParamsField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerTradingParamsField *arg1 = (CThostFtdcQryBrokerTradingParamsField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerTradingParamsField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerTradingParamsField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerTradingParamsField *arg1 = (CThostFtdcQryBrokerTradingParamsField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerTradingParamsField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryBrokerTradingParamsField___() {
  void * jresult ;
  CThostFtdcQryBrokerTradingParamsField *result = 0 ;
  
  result = (CThostFtdcQryBrokerTradingParamsField *)new CThostFtdcQryBrokerTradingParamsField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryBrokerTradingParamsField___(void * jarg1) {
  CThostFtdcQryBrokerTradingParamsField *arg1 = (CThostFtdcQryBrokerTradingParamsField *) 0 ;
  
  arg1 = (CThostFtdcQryBrokerTradingParamsField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerTradingParamsField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerTradingParamsField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerTradingParamsField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerTradingParamsField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerTradingParamsField_MarginPriceType_set___(void * jarg1, char jarg2) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  TThostFtdcMarginPriceTypeType arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  arg2 = (TThostFtdcMarginPriceTypeType)jarg2; 
  if (arg1) (arg1)->MarginPriceType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerTradingParamsField_MarginPriceType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  TThostFtdcMarginPriceTypeType result;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  result = (TThostFtdcMarginPriceTypeType) ((arg1)->MarginPriceType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerTradingParamsField_Algorithm_set___(void * jarg1, char jarg2) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  TThostFtdcAlgorithmType arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  arg2 = (TThostFtdcAlgorithmType)jarg2; 
  if (arg1) (arg1)->Algorithm = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerTradingParamsField_Algorithm_get___(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  TThostFtdcAlgorithmType result;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  result = (TThostFtdcAlgorithmType) ((arg1)->Algorithm);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerTradingParamsField_AvailIncludeCloseProfit_set___(void * jarg1, char jarg2) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  TThostFtdcIncludeCloseProfitType arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  arg2 = (TThostFtdcIncludeCloseProfitType)jarg2; 
  if (arg1) (arg1)->AvailIncludeCloseProfit = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerTradingParamsField_AvailIncludeCloseProfit_get___(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  TThostFtdcIncludeCloseProfitType result;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  result = (TThostFtdcIncludeCloseProfitType) ((arg1)->AvailIncludeCloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerTradingParamsField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerTradingParamsField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerTradingParamsField_OptionRoyaltyPriceType_set___(void * jarg1, char jarg2) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  TThostFtdcOptionRoyaltyPriceTypeType arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  arg2 = (TThostFtdcOptionRoyaltyPriceTypeType)jarg2; 
  if (arg1) (arg1)->OptionRoyaltyPriceType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerTradingParamsField_OptionRoyaltyPriceType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  TThostFtdcOptionRoyaltyPriceTypeType result;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  result = (TThostFtdcOptionRoyaltyPriceTypeType) ((arg1)->OptionRoyaltyPriceType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcBrokerTradingParamsField___() {
  void * jresult ;
  CThostFtdcBrokerTradingParamsField *result = 0 ;
  
  result = (CThostFtdcBrokerTradingParamsField *)new CThostFtdcBrokerTradingParamsField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcBrokerTradingParamsField___(void * jarg1) {
  CThostFtdcBrokerTradingParamsField *arg1 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  
  arg1 = (CThostFtdcBrokerTradingParamsField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerTradingAlgosField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerTradingAlgosField *arg1 = (CThostFtdcQryBrokerTradingAlgosField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerTradingAlgosField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerTradingAlgosField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerTradingAlgosField *arg1 = (CThostFtdcQryBrokerTradingAlgosField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerTradingAlgosField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerTradingAlgosField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerTradingAlgosField *arg1 = (CThostFtdcQryBrokerTradingAlgosField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerTradingAlgosField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerTradingAlgosField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerTradingAlgosField *arg1 = (CThostFtdcQryBrokerTradingAlgosField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerTradingAlgosField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerTradingAlgosField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryBrokerTradingAlgosField *arg1 = (CThostFtdcQryBrokerTradingAlgosField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryBrokerTradingAlgosField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryBrokerTradingAlgosField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryBrokerTradingAlgosField *arg1 = (CThostFtdcQryBrokerTradingAlgosField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryBrokerTradingAlgosField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryBrokerTradingAlgosField___() {
  void * jresult ;
  CThostFtdcQryBrokerTradingAlgosField *result = 0 ;
  
  result = (CThostFtdcQryBrokerTradingAlgosField *)new CThostFtdcQryBrokerTradingAlgosField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryBrokerTradingAlgosField___(void * jarg1) {
  CThostFtdcQryBrokerTradingAlgosField *arg1 = (CThostFtdcQryBrokerTradingAlgosField *) 0 ;
  
  arg1 = (CThostFtdcQryBrokerTradingAlgosField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerTradingAlgosField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerTradingAlgosField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerTradingAlgosField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerTradingAlgosField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerTradingAlgosField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerTradingAlgosField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerTradingAlgosField_HandlePositionAlgoID_set___(void * jarg1, char jarg2) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  TThostFtdcHandlePositionAlgoIDType arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  arg2 = (TThostFtdcHandlePositionAlgoIDType)jarg2; 
  if (arg1) (arg1)->HandlePositionAlgoID = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerTradingAlgosField_HandlePositionAlgoID_get___(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  TThostFtdcHandlePositionAlgoIDType result;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  result = (TThostFtdcHandlePositionAlgoIDType) ((arg1)->HandlePositionAlgoID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerTradingAlgosField_FindMarginRateAlgoID_set___(void * jarg1, char jarg2) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  TThostFtdcFindMarginRateAlgoIDType arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  arg2 = (TThostFtdcFindMarginRateAlgoIDType)jarg2; 
  if (arg1) (arg1)->FindMarginRateAlgoID = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerTradingAlgosField_FindMarginRateAlgoID_get___(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  TThostFtdcFindMarginRateAlgoIDType result;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  result = (TThostFtdcFindMarginRateAlgoIDType) ((arg1)->FindMarginRateAlgoID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerTradingAlgosField_HandleTradingAccountAlgoID_set___(void * jarg1, char jarg2) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  TThostFtdcHandleTradingAccountAlgoIDType arg2 ;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  arg2 = (TThostFtdcHandleTradingAccountAlgoIDType)jarg2; 
  if (arg1) (arg1)->HandleTradingAccountAlgoID = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerTradingAlgosField_HandleTradingAccountAlgoID_get___(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  TThostFtdcHandleTradingAccountAlgoIDType result;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  result = (TThostFtdcHandleTradingAccountAlgoIDType) ((arg1)->HandleTradingAccountAlgoID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcBrokerTradingAlgosField___() {
  void * jresult ;
  CThostFtdcBrokerTradingAlgosField *result = 0 ;
  
  result = (CThostFtdcBrokerTradingAlgosField *)new CThostFtdcBrokerTradingAlgosField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcBrokerTradingAlgosField___(void * jarg1) {
  CThostFtdcBrokerTradingAlgosField *arg1 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  
  arg1 = (CThostFtdcBrokerTradingAlgosField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryBrokerDepositField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQueryBrokerDepositField *arg1 = (CThostFtdcQueryBrokerDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQueryBrokerDepositField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryBrokerDepositField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQueryBrokerDepositField *arg1 = (CThostFtdcQueryBrokerDepositField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQueryBrokerDepositField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryBrokerDepositField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQueryBrokerDepositField *arg1 = (CThostFtdcQueryBrokerDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQueryBrokerDepositField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryBrokerDepositField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQueryBrokerDepositField *arg1 = (CThostFtdcQueryBrokerDepositField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQueryBrokerDepositField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQueryBrokerDepositField___() {
  void * jresult ;
  CThostFtdcQueryBrokerDepositField *result = 0 ;
  
  result = (CThostFtdcQueryBrokerDepositField *)new CThostFtdcQueryBrokerDepositField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQueryBrokerDepositField___(void * jarg1) {
  CThostFtdcQueryBrokerDepositField *arg1 = (CThostFtdcQueryBrokerDepositField *) 0 ;
  
  arg1 = (CThostFtdcQueryBrokerDepositField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerDepositField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerDepositField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerDepositField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerDepositField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerDepositField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerDepositField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerDepositField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerDepositField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerDepositField_PreBalance_set___(void * jarg1, double jarg2) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PreBalance = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerDepositField_PreBalance_get___(void * jarg1) {
  double jresult ;
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PreBalance);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerDepositField_CurrMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CurrMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerDepositField_CurrMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CurrMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerDepositField_CloseProfit_set___(void * jarg1, double jarg2) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerDepositField_CloseProfit_get___(void * jarg1) {
  double jresult ;
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerDepositField_Balance_set___(void * jarg1, double jarg2) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Balance = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerDepositField_Balance_get___(void * jarg1) {
  double jresult ;
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Balance);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerDepositField_Deposit_set___(void * jarg1, double jarg2) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Deposit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerDepositField_Deposit_get___(void * jarg1) {
  double jresult ;
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Deposit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerDepositField_Withdraw_set___(void * jarg1, double jarg2) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Withdraw = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerDepositField_Withdraw_get___(void * jarg1) {
  double jresult ;
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Withdraw);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerDepositField_Available_set___(void * jarg1, double jarg2) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Available = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerDepositField_Available_get___(void * jarg1) {
  double jresult ;
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Available);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerDepositField_Reserve_set___(void * jarg1, double jarg2) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Reserve = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerDepositField_Reserve_get___(void * jarg1) {
  double jresult ;
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Reserve);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerDepositField_FrozenMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerDepositField_FrozenMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcBrokerDepositField___() {
  void * jresult ;
  CThostFtdcBrokerDepositField *result = 0 ;
  
  result = (CThostFtdcBrokerDepositField *)new CThostFtdcBrokerDepositField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcBrokerDepositField___(void * jarg1) {
  CThostFtdcBrokerDepositField *arg1 = (CThostFtdcBrokerDepositField *) 0 ;
  
  arg1 = (CThostFtdcBrokerDepositField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCFMMCBrokerKeyField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryCFMMCBrokerKeyField *arg1 = (CThostFtdcQryCFMMCBrokerKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCFMMCBrokerKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCFMMCBrokerKeyField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCFMMCBrokerKeyField *arg1 = (CThostFtdcQryCFMMCBrokerKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCFMMCBrokerKeyField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryCFMMCBrokerKeyField___() {
  void * jresult ;
  CThostFtdcQryCFMMCBrokerKeyField *result = 0 ;
  
  result = (CThostFtdcQryCFMMCBrokerKeyField *)new CThostFtdcQryCFMMCBrokerKeyField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryCFMMCBrokerKeyField___(void * jarg1) {
  CThostFtdcQryCFMMCBrokerKeyField *arg1 = (CThostFtdcQryCFMMCBrokerKeyField *) 0 ;
  
  arg1 = (CThostFtdcQryCFMMCBrokerKeyField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCBrokerKeyField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCBrokerKeyField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCBrokerKeyField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCBrokerKeyField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCBrokerKeyField_CreateDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CreateDate, (const char *)arg2, 9-1);
      arg1->CreateDate[9-1] = 0;
    } else {
      arg1->CreateDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCBrokerKeyField_CreateDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  result = (char *) ((arg1)->CreateDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCBrokerKeyField_CreateTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CreateTime, (const char *)arg2, 9-1);
      arg1->CreateTime[9-1] = 0;
    } else {
      arg1->CreateTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCBrokerKeyField_CreateTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  result = (char *) ((arg1)->CreateTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCBrokerKeyField_KeyID_set___(void * jarg1, int jarg2) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->KeyID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCBrokerKeyField_KeyID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->KeyID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCBrokerKeyField_CurrentKey_set___(void * jarg1, char * jarg2) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrentKey, (const char *)arg2, 21-1);
      arg1->CurrentKey[21-1] = 0;
    } else {
      arg1->CurrentKey[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCBrokerKeyField_CurrentKey_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  result = (char *) ((arg1)->CurrentKey);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCBrokerKeyField_KeyKind_set___(void * jarg1, char jarg2) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  TThostFtdcCFMMCKeyKindType arg2 ;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  arg2 = (TThostFtdcCFMMCKeyKindType)jarg2; 
  if (arg1) (arg1)->KeyKind = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCBrokerKeyField_KeyKind_get___(void * jarg1) {
  char jresult ;
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  TThostFtdcCFMMCKeyKindType result;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  result = (TThostFtdcCFMMCKeyKindType) ((arg1)->KeyKind);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcCFMMCBrokerKeyField___() {
  void * jresult ;
  CThostFtdcCFMMCBrokerKeyField *result = 0 ;
  
  result = (CThostFtdcCFMMCBrokerKeyField *)new CThostFtdcCFMMCBrokerKeyField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcCFMMCBrokerKeyField___(void * jarg1) {
  CThostFtdcCFMMCBrokerKeyField *arg1 = (CThostFtdcCFMMCBrokerKeyField *) 0 ;
  
  arg1 = (CThostFtdcCFMMCBrokerKeyField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCTradingAccountKeyField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCTradingAccountKeyField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountKeyField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCTradingAccountKeyField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCTradingAccountKeyField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountKeyField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCTradingAccountKeyField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCTradingAccountKeyField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountKeyField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCTradingAccountKeyField_KeyID_set___(void * jarg1, int jarg2) {
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountKeyField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->KeyID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCTradingAccountKeyField_KeyID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcCFMMCTradingAccountKeyField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->KeyID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCTradingAccountKeyField_CurrentKey_set___(void * jarg1, char * jarg2) {
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrentKey, (const char *)arg2, 21-1);
      arg1->CurrentKey[21-1] = 0;
    } else {
      arg1->CurrentKey[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCTradingAccountKeyField_CurrentKey_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountKeyField *)jarg1; 
  result = (char *) ((arg1)->CurrentKey);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcCFMMCTradingAccountKeyField___() {
  void * jresult ;
  CThostFtdcCFMMCTradingAccountKeyField *result = 0 ;
  
  result = (CThostFtdcCFMMCTradingAccountKeyField *)new CThostFtdcCFMMCTradingAccountKeyField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcCFMMCTradingAccountKeyField___(void * jarg1) {
  CThostFtdcCFMMCTradingAccountKeyField *arg1 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountKeyField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCFMMCTradingAccountKeyField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryCFMMCTradingAccountKeyField *arg1 = (CThostFtdcQryCFMMCTradingAccountKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCFMMCTradingAccountKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCFMMCTradingAccountKeyField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCFMMCTradingAccountKeyField *arg1 = (CThostFtdcQryCFMMCTradingAccountKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCFMMCTradingAccountKeyField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCFMMCTradingAccountKeyField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryCFMMCTradingAccountKeyField *arg1 = (CThostFtdcQryCFMMCTradingAccountKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCFMMCTradingAccountKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCFMMCTradingAccountKeyField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCFMMCTradingAccountKeyField *arg1 = (CThostFtdcQryCFMMCTradingAccountKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCFMMCTradingAccountKeyField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryCFMMCTradingAccountKeyField___() {
  void * jresult ;
  CThostFtdcQryCFMMCTradingAccountKeyField *result = 0 ;
  
  result = (CThostFtdcQryCFMMCTradingAccountKeyField *)new CThostFtdcQryCFMMCTradingAccountKeyField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryCFMMCTradingAccountKeyField___(void * jarg1) {
  CThostFtdcQryCFMMCTradingAccountKeyField *arg1 = (CThostFtdcQryCFMMCTradingAccountKeyField *) 0 ;
  
  arg1 = (CThostFtdcQryCFMMCTradingAccountKeyField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserOTPParamField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserOTPParamField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserOTPParamField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserOTPParamField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserOTPParamField_OTPVendorsID_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OTPVendorsID, (const char *)arg2, 2-1);
      arg1->OTPVendorsID[2-1] = 0;
    } else {
      arg1->OTPVendorsID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserOTPParamField_OTPVendorsID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  result = (char *) ((arg1)->OTPVendorsID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserOTPParamField_SerialNumber_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SerialNumber, (const char *)arg2, 17-1);
      arg1->SerialNumber[17-1] = 0;
    } else {
      arg1->SerialNumber[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserOTPParamField_SerialNumber_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  result = (char *) ((arg1)->SerialNumber);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserOTPParamField_AuthKey_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AuthKey, (const char *)arg2, 41-1);
      arg1->AuthKey[41-1] = 0;
    } else {
      arg1->AuthKey[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserOTPParamField_AuthKey_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  result = (char *) ((arg1)->AuthKey);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserOTPParamField_LastDrift_set___(void * jarg1, int jarg2) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  TThostFtdcLastDriftType arg2 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  arg2 = (TThostFtdcLastDriftType)jarg2; 
  if (arg1) (arg1)->LastDrift = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserOTPParamField_LastDrift_get___(void * jarg1) {
  int jresult ;
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  TThostFtdcLastDriftType result;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  result = (TThostFtdcLastDriftType) ((arg1)->LastDrift);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserOTPParamField_LastSuccess_set___(void * jarg1, int jarg2) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  TThostFtdcLastSuccessType arg2 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  arg2 = (TThostFtdcLastSuccessType)jarg2; 
  if (arg1) (arg1)->LastSuccess = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserOTPParamField_LastSuccess_get___(void * jarg1) {
  int jresult ;
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  TThostFtdcLastSuccessType result;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  result = (TThostFtdcLastSuccessType) ((arg1)->LastSuccess);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserOTPParamField_OTPType_set___(void * jarg1, char jarg2) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  TThostFtdcOTPTypeType arg2 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  arg2 = (TThostFtdcOTPTypeType)jarg2; 
  if (arg1) (arg1)->OTPType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserOTPParamField_OTPType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  TThostFtdcOTPTypeType result;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  result = (TThostFtdcOTPTypeType) ((arg1)->OTPType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcBrokerUserOTPParamField___() {
  void * jresult ;
  CThostFtdcBrokerUserOTPParamField *result = 0 ;
  
  result = (CThostFtdcBrokerUserOTPParamField *)new CThostFtdcBrokerUserOTPParamField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcBrokerUserOTPParamField___(void * jarg1) {
  CThostFtdcBrokerUserOTPParamField *arg1 = (CThostFtdcBrokerUserOTPParamField *) 0 ;
  
  arg1 = (CThostFtdcBrokerUserOTPParamField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcManualSyncBrokerUserOTPField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcManualSyncBrokerUserOTPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcManualSyncBrokerUserOTPField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcManualSyncBrokerUserOTPField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcManualSyncBrokerUserOTPField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcManualSyncBrokerUserOTPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcManualSyncBrokerUserOTPField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcManualSyncBrokerUserOTPField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcManualSyncBrokerUserOTPField_OTPType_set___(void * jarg1, char jarg2) {
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  TThostFtdcOTPTypeType arg2 ;
  
  arg1 = (CThostFtdcManualSyncBrokerUserOTPField *)jarg1; 
  arg2 = (TThostFtdcOTPTypeType)jarg2; 
  if (arg1) (arg1)->OTPType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcManualSyncBrokerUserOTPField_OTPType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  TThostFtdcOTPTypeType result;
  
  arg1 = (CThostFtdcManualSyncBrokerUserOTPField *)jarg1; 
  result = (TThostFtdcOTPTypeType) ((arg1)->OTPType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcManualSyncBrokerUserOTPField_FirstOTP_set___(void * jarg1, char * jarg2) {
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcManualSyncBrokerUserOTPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->FirstOTP, (const char *)arg2, 41-1);
      arg1->FirstOTP[41-1] = 0;
    } else {
      arg1->FirstOTP[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcManualSyncBrokerUserOTPField_FirstOTP_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcManualSyncBrokerUserOTPField *)jarg1; 
  result = (char *) ((arg1)->FirstOTP);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcManualSyncBrokerUserOTPField_SecondOTP_set___(void * jarg1, char * jarg2) {
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcManualSyncBrokerUserOTPField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SecondOTP, (const char *)arg2, 41-1);
      arg1->SecondOTP[41-1] = 0;
    } else {
      arg1->SecondOTP[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcManualSyncBrokerUserOTPField_SecondOTP_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcManualSyncBrokerUserOTPField *)jarg1; 
  result = (char *) ((arg1)->SecondOTP);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcManualSyncBrokerUserOTPField___() {
  void * jresult ;
  CThostFtdcManualSyncBrokerUserOTPField *result = 0 ;
  
  result = (CThostFtdcManualSyncBrokerUserOTPField *)new CThostFtdcManualSyncBrokerUserOTPField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcManualSyncBrokerUserOTPField___(void * jarg1) {
  CThostFtdcManualSyncBrokerUserOTPField *arg1 = (CThostFtdcManualSyncBrokerUserOTPField *) 0 ;
  
  arg1 = (CThostFtdcManualSyncBrokerUserOTPField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCommRateModelField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCommRateModelField *arg1 = (CThostFtdcCommRateModelField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCommRateModelField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCommRateModelField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCommRateModelField *arg1 = (CThostFtdcCommRateModelField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCommRateModelField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCommRateModelField_CommModelID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCommRateModelField *arg1 = (CThostFtdcCommRateModelField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCommRateModelField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommModelID, (const char *)arg2, 13-1);
      arg1->CommModelID[13-1] = 0;
    } else {
      arg1->CommModelID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCommRateModelField_CommModelID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCommRateModelField *arg1 = (CThostFtdcCommRateModelField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCommRateModelField *)jarg1; 
  result = (char *) ((arg1)->CommModelID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCommRateModelField_CommModelName_set___(void * jarg1, char * jarg2) {
  CThostFtdcCommRateModelField *arg1 = (CThostFtdcCommRateModelField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCommRateModelField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommModelName, (const char *)arg2, 161-1);
      arg1->CommModelName[161-1] = 0;
    } else {
      arg1->CommModelName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCommRateModelField_CommModelName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCommRateModelField *arg1 = (CThostFtdcCommRateModelField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCommRateModelField *)jarg1; 
  result = (char *) ((arg1)->CommModelName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcCommRateModelField___() {
  void * jresult ;
  CThostFtdcCommRateModelField *result = 0 ;
  
  result = (CThostFtdcCommRateModelField *)new CThostFtdcCommRateModelField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcCommRateModelField___(void * jarg1) {
  CThostFtdcCommRateModelField *arg1 = (CThostFtdcCommRateModelField *) 0 ;
  
  arg1 = (CThostFtdcCommRateModelField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCommRateModelField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryCommRateModelField *arg1 = (CThostFtdcQryCommRateModelField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCommRateModelField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCommRateModelField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCommRateModelField *arg1 = (CThostFtdcQryCommRateModelField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCommRateModelField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCommRateModelField_CommModelID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryCommRateModelField *arg1 = (CThostFtdcQryCommRateModelField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryCommRateModelField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CommModelID, (const char *)arg2, 13-1);
      arg1->CommModelID[13-1] = 0;
    } else {
      arg1->CommModelID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryCommRateModelField_CommModelID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryCommRateModelField *arg1 = (CThostFtdcQryCommRateModelField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryCommRateModelField *)jarg1; 
  result = (char *) ((arg1)->CommModelID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryCommRateModelField___() {
  void * jresult ;
  CThostFtdcQryCommRateModelField *result = 0 ;
  
  result = (CThostFtdcQryCommRateModelField *)new CThostFtdcQryCommRateModelField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryCommRateModelField___(void * jarg1) {
  CThostFtdcQryCommRateModelField *arg1 = (CThostFtdcQryCommRateModelField *) 0 ;
  
  arg1 = (CThostFtdcQryCommRateModelField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarginModelField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcMarginModelField *arg1 = (CThostFtdcMarginModelField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarginModelField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarginModelField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMarginModelField *arg1 = (CThostFtdcMarginModelField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarginModelField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarginModelField_MarginModelID_set___(void * jarg1, char * jarg2) {
  CThostFtdcMarginModelField *arg1 = (CThostFtdcMarginModelField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarginModelField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MarginModelID, (const char *)arg2, 13-1);
      arg1->MarginModelID[13-1] = 0;
    } else {
      arg1->MarginModelID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarginModelField_MarginModelID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMarginModelField *arg1 = (CThostFtdcMarginModelField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarginModelField *)jarg1; 
  result = (char *) ((arg1)->MarginModelID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarginModelField_MarginModelName_set___(void * jarg1, char * jarg2) {
  CThostFtdcMarginModelField *arg1 = (CThostFtdcMarginModelField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMarginModelField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MarginModelName, (const char *)arg2, 161-1);
      arg1->MarginModelName[161-1] = 0;
    } else {
      arg1->MarginModelName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMarginModelField_MarginModelName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMarginModelField *arg1 = (CThostFtdcMarginModelField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMarginModelField *)jarg1; 
  result = (char *) ((arg1)->MarginModelName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcMarginModelField___() {
  void * jresult ;
  CThostFtdcMarginModelField *result = 0 ;
  
  result = (CThostFtdcMarginModelField *)new CThostFtdcMarginModelField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcMarginModelField___(void * jarg1) {
  CThostFtdcMarginModelField *arg1 = (CThostFtdcMarginModelField *) 0 ;
  
  arg1 = (CThostFtdcMarginModelField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryMarginModelField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryMarginModelField *arg1 = (CThostFtdcQryMarginModelField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMarginModelField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryMarginModelField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMarginModelField *arg1 = (CThostFtdcQryMarginModelField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMarginModelField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryMarginModelField_MarginModelID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryMarginModelField *arg1 = (CThostFtdcQryMarginModelField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryMarginModelField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MarginModelID, (const char *)arg2, 13-1);
      arg1->MarginModelID[13-1] = 0;
    } else {
      arg1->MarginModelID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryMarginModelField_MarginModelID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryMarginModelField *arg1 = (CThostFtdcQryMarginModelField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryMarginModelField *)jarg1; 
  result = (char *) ((arg1)->MarginModelID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryMarginModelField___() {
  void * jresult ;
  CThostFtdcQryMarginModelField *result = 0 ;
  
  result = (CThostFtdcQryMarginModelField *)new CThostFtdcQryMarginModelField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryMarginModelField___(void * jarg1) {
  CThostFtdcQryMarginModelField *arg1 = (CThostFtdcQryMarginModelField *) 0 ;
  
  arg1 = (CThostFtdcQryMarginModelField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcEWarrantOffsetField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcEWarrantOffsetField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcEWarrantOffsetField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcEWarrantOffsetField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcEWarrantOffsetField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcEWarrantOffsetField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcEWarrantOffsetField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcEWarrantOffsetField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcEWarrantOffsetField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcEWarrantOffsetField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcEWarrantOffsetField_Direction_set___(void * jarg1, char jarg2) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  TThostFtdcDirectionType arg2 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  arg2 = (TThostFtdcDirectionType)jarg2; 
  if (arg1) (arg1)->Direction = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcEWarrantOffsetField_Direction_get___(void * jarg1) {
  char jresult ;
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  TThostFtdcDirectionType result;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  result = (TThostFtdcDirectionType) ((arg1)->Direction);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcEWarrantOffsetField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcEWarrantOffsetField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcEWarrantOffsetField_Volume_set___(void * jarg1, int jarg2) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  TThostFtdcVolumeType arg2 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  arg2 = (TThostFtdcVolumeType)jarg2; 
  if (arg1) (arg1)->Volume = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcEWarrantOffsetField_Volume_get___(void * jarg1) {
  int jresult ;
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  TThostFtdcVolumeType result;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  result = (TThostFtdcVolumeType) ((arg1)->Volume);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcEWarrantOffsetField___() {
  void * jresult ;
  CThostFtdcEWarrantOffsetField *result = 0 ;
  
  result = (CThostFtdcEWarrantOffsetField *)new CThostFtdcEWarrantOffsetField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcEWarrantOffsetField___(void * jarg1) {
  CThostFtdcEWarrantOffsetField *arg1 = (CThostFtdcEWarrantOffsetField *) 0 ;
  
  arg1 = (CThostFtdcEWarrantOffsetField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryEWarrantOffsetField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryEWarrantOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryEWarrantOffsetField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryEWarrantOffsetField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryEWarrantOffsetField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryEWarrantOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryEWarrantOffsetField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryEWarrantOffsetField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryEWarrantOffsetField_ExchangeID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryEWarrantOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ExchangeID, (const char *)arg2, 9-1);
      arg1->ExchangeID[9-1] = 0;
    } else {
      arg1->ExchangeID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryEWarrantOffsetField_ExchangeID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryEWarrantOffsetField *)jarg1; 
  result = (char *) ((arg1)->ExchangeID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryEWarrantOffsetField_InstrumentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryEWarrantOffsetField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InstrumentID, (const char *)arg2, 31-1);
      arg1->InstrumentID[31-1] = 0;
    } else {
      arg1->InstrumentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryEWarrantOffsetField_InstrumentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryEWarrantOffsetField *)jarg1; 
  result = (char *) ((arg1)->InstrumentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryEWarrantOffsetField___() {
  void * jresult ;
  CThostFtdcQryEWarrantOffsetField *result = 0 ;
  
  result = (CThostFtdcQryEWarrantOffsetField *)new CThostFtdcQryEWarrantOffsetField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryEWarrantOffsetField___(void * jarg1) {
  CThostFtdcQryEWarrantOffsetField *arg1 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  
  arg1 = (CThostFtdcQryEWarrantOffsetField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorProductGroupMarginField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorProductGroupMarginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorProductGroupMarginField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorProductGroupMarginField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorProductGroupMarginField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorProductGroupMarginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorProductGroupMarginField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorProductGroupMarginField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorProductGroupMarginField_ProductGroupID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryInvestorProductGroupMarginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProductGroupID, (const char *)arg2, 31-1);
      arg1->ProductGroupID[31-1] = 0;
    } else {
      arg1->ProductGroupID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorProductGroupMarginField_ProductGroupID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryInvestorProductGroupMarginField *)jarg1; 
  result = (char *) ((arg1)->ProductGroupID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorProductGroupMarginField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcQryInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryInvestorProductGroupMarginField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcQryInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryInvestorProductGroupMarginField___() {
  void * jresult ;
  CThostFtdcQryInvestorProductGroupMarginField *result = 0 ;
  
  result = (CThostFtdcQryInvestorProductGroupMarginField *)new CThostFtdcQryInvestorProductGroupMarginField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryInvestorProductGroupMarginField___(void * jarg1) {
  CThostFtdcQryInvestorProductGroupMarginField *arg1 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  
  arg1 = (CThostFtdcQryInvestorProductGroupMarginField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_ProductGroupID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ProductGroupID, (const char *)arg2, 31-1);
      arg1->ProductGroupID[31-1] = 0;
    } else {
      arg1->ProductGroupID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_ProductGroupID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (char *) ((arg1)->ProductGroupID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_SettlementID_set___(void * jarg1, int jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcSettlementIDType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcSettlementIDType)jarg2; 
  if (arg1) (arg1)->SettlementID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_SettlementID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcSettlementIDType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcSettlementIDType) ((arg1)->SettlementID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_FrozenMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_FrozenMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_LongFrozenMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->LongFrozenMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_LongFrozenMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->LongFrozenMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_ShortFrozenMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ShortFrozenMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_ShortFrozenMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ShortFrozenMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_UseMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->UseMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_UseMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->UseMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_LongUseMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->LongUseMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_LongUseMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->LongUseMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_ShortUseMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ShortUseMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_ShortUseMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ShortUseMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_ExchMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_ExchMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_LongExchMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->LongExchMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_LongExchMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->LongExchMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_ShortExchMargin_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ShortExchMargin = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_ShortExchMargin_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ShortExchMargin);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_CloseProfit_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CloseProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_CloseProfit_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CloseProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_FrozenCommission_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenCommission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_FrozenCommission_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCommission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_Commission_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Commission = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_Commission_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Commission);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_FrozenCash_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->FrozenCash = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_FrozenCash_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->FrozenCash);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_CashIn_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->CashIn = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_CashIn_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->CashIn);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_PositionProfit_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->PositionProfit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_PositionProfit_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->PositionProfit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_OffsetAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->OffsetAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_OffsetAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->OffsetAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_LongOffsetAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->LongOffsetAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_LongOffsetAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->LongOffsetAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_ShortOffsetAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ShortOffsetAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_ShortOffsetAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ShortOffsetAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_ExchOffsetAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ExchOffsetAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_ExchOffsetAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ExchOffsetAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_LongExchOffsetAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->LongExchOffsetAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_LongExchOffsetAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->LongExchOffsetAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_ShortExchOffsetAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->ShortExchOffsetAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_ShortExchOffsetAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->ShortExchOffsetAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_HedgeFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcHedgeFlagType arg2 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  arg2 = (TThostFtdcHedgeFlagType)jarg2; 
  if (arg1) (arg1)->HedgeFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcInvestorProductGroupMarginField_HedgeFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  TThostFtdcHedgeFlagType result;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  result = (TThostFtdcHedgeFlagType) ((arg1)->HedgeFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcInvestorProductGroupMarginField___() {
  void * jresult ;
  CThostFtdcInvestorProductGroupMarginField *result = 0 ;
  
  result = (CThostFtdcInvestorProductGroupMarginField *)new CThostFtdcInvestorProductGroupMarginField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcInvestorProductGroupMarginField___(void * jarg1) {
  CThostFtdcInvestorProductGroupMarginField *arg1 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  
  arg1 = (CThostFtdcInvestorProductGroupMarginField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryCFMMCTradingAccountTokenField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQueryCFMMCTradingAccountTokenField *arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryCFMMCTradingAccountTokenField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQueryCFMMCTradingAccountTokenField *arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryCFMMCTradingAccountTokenField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQueryCFMMCTradingAccountTokenField *arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQueryCFMMCTradingAccountTokenField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQueryCFMMCTradingAccountTokenField *arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQueryCFMMCTradingAccountTokenField___() {
  void * jresult ;
  CThostFtdcQueryCFMMCTradingAccountTokenField *result = 0 ;
  
  result = (CThostFtdcQueryCFMMCTradingAccountTokenField *)new CThostFtdcQueryCFMMCTradingAccountTokenField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQueryCFMMCTradingAccountTokenField___(void * jarg1) {
  CThostFtdcQueryCFMMCTradingAccountTokenField *arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *) 0 ;
  
  arg1 = (CThostFtdcQueryCFMMCTradingAccountTokenField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCTradingAccountTokenField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountTokenField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCTradingAccountTokenField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountTokenField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCTradingAccountTokenField_ParticipantID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountTokenField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ParticipantID, (const char *)arg2, 11-1);
      arg1->ParticipantID[11-1] = 0;
    } else {
      arg1->ParticipantID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCTradingAccountTokenField_ParticipantID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountTokenField *)jarg1; 
  result = (char *) ((arg1)->ParticipantID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCTradingAccountTokenField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountTokenField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCTradingAccountTokenField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountTokenField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCTradingAccountTokenField_KeyID_set___(void * jarg1, int jarg2) {
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  TThostFtdcSequenceNoType arg2 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountTokenField *)jarg1; 
  arg2 = (TThostFtdcSequenceNoType)jarg2; 
  if (arg1) (arg1)->KeyID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCTradingAccountTokenField_KeyID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  TThostFtdcSequenceNoType result;
  
  arg1 = (CThostFtdcCFMMCTradingAccountTokenField *)jarg1; 
  result = (TThostFtdcSequenceNoType) ((arg1)->KeyID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCTradingAccountTokenField_Token_set___(void * jarg1, char * jarg2) {
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountTokenField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Token, (const char *)arg2, 21-1);
      arg1->Token[21-1] = 0;
    } else {
      arg1->Token[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCFMMCTradingAccountTokenField_Token_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountTokenField *)jarg1; 
  result = (char *) ((arg1)->Token);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcCFMMCTradingAccountTokenField___() {
  void * jresult ;
  CThostFtdcCFMMCTradingAccountTokenField *result = 0 ;
  
  result = (CThostFtdcCFMMCTradingAccountTokenField *)new CThostFtdcCFMMCTradingAccountTokenField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcCFMMCTradingAccountTokenField___(void * jarg1) {
  CThostFtdcCFMMCTradingAccountTokenField *arg1 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  
  arg1 = (CThostFtdcCFMMCTradingAccountTokenField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_BankSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_BankSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_PlateSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_PlateSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_LastFragment_set___(void * jarg1, char jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_LastFragment_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_CustomerName_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_CustomerName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_IdCardType_set___(void * jarg1, char jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_IdCardType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_IdentifiedCardNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_IdentifiedCardNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_Gender_set___(void * jarg1, char jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcGenderType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcGenderType)jarg2; 
  if (arg1) (arg1)->Gender = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_Gender_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcGenderType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcGenderType) ((arg1)->Gender);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_CountryCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CountryCode, (const char *)arg2, 21-1);
      arg1->CountryCode[21-1] = 0;
    } else {
      arg1->CountryCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_CountryCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->CountryCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_CustType_set___(void * jarg1, char jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_CustType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_Address_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_Address_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->Address);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_ZipCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ZipCode, (const char *)arg2, 7-1);
      arg1->ZipCode[7-1] = 0;
    } else {
      arg1->ZipCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_ZipCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->ZipCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_Telephone_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_Telephone_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->Telephone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_MobilePhone_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MobilePhone, (const char *)arg2, 21-1);
      arg1->MobilePhone[21-1] = 0;
    } else {
      arg1->MobilePhone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_MobilePhone_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->MobilePhone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_Fax_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Fax, (const char *)arg2, 41-1);
      arg1->Fax[41-1] = 0;
    } else {
      arg1->Fax[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_Fax_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->Fax);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_EMail_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->EMail, (const char *)arg2, 41-1);
      arg1->EMail[41-1] = 0;
    } else {
      arg1->EMail[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_EMail_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->EMail);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_MoneyAccountStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyAccountStatusType)jarg2; 
  if (arg1) (arg1)->MoneyAccountStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_MoneyAccountStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcMoneyAccountStatusType) ((arg1)->MoneyAccountStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_BankAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_BankAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_BankPassWord_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_BankPassWord_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_Password_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_Password_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_VerifyCertNoFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_VerifyCertNoFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_CashExchangeCode_set___(void * jarg1, char jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcCashExchangeCodeType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcCashExchangeCodeType)jarg2; 
  if (arg1) (arg1)->CashExchangeCode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_CashExchangeCode_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcCashExchangeCodeType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcCashExchangeCodeType) ((arg1)->CashExchangeCode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_Digest_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_Digest_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_BankAccType_set___(void * jarg1, char jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_BankAccType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_DeviceID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_DeviceID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_BankSecuAccType_set___(void * jarg1, char jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankSecuAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_BankSecuAccType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_BrokerIDByBank_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_BrokerIDByBank_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_BankSecuAcc_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_BankSecuAcc_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSecuAcc);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_BankPwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->BankPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_BankPwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_SecuPwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->SecuPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_SecuPwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_OperNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_OperNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_TID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_TID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqOpenAccountField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcReqOpenAccountField___() {
  void * jresult ;
  CThostFtdcReqOpenAccountField *result = 0 ;
  
  result = (CThostFtdcReqOpenAccountField *)new CThostFtdcReqOpenAccountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcReqOpenAccountField___(void * jarg1) {
  CThostFtdcReqOpenAccountField *arg1 = (CThostFtdcReqOpenAccountField *) 0 ;
  
  arg1 = (CThostFtdcReqOpenAccountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_BankSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_BankSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_PlateSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_PlateSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_LastFragment_set___(void * jarg1, char jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_LastFragment_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_CustomerName_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_CustomerName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_IdCardType_set___(void * jarg1, char jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_IdCardType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_IdentifiedCardNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_IdentifiedCardNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_Gender_set___(void * jarg1, char jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcGenderType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcGenderType)jarg2; 
  if (arg1) (arg1)->Gender = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_Gender_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcGenderType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcGenderType) ((arg1)->Gender);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_CountryCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CountryCode, (const char *)arg2, 21-1);
      arg1->CountryCode[21-1] = 0;
    } else {
      arg1->CountryCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_CountryCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->CountryCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_CustType_set___(void * jarg1, char jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_CustType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_Address_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_Address_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->Address);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_ZipCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ZipCode, (const char *)arg2, 7-1);
      arg1->ZipCode[7-1] = 0;
    } else {
      arg1->ZipCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_ZipCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->ZipCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_Telephone_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_Telephone_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->Telephone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_MobilePhone_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MobilePhone, (const char *)arg2, 21-1);
      arg1->MobilePhone[21-1] = 0;
    } else {
      arg1->MobilePhone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_MobilePhone_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->MobilePhone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_Fax_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Fax, (const char *)arg2, 41-1);
      arg1->Fax[41-1] = 0;
    } else {
      arg1->Fax[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_Fax_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->Fax);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_EMail_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->EMail, (const char *)arg2, 41-1);
      arg1->EMail[41-1] = 0;
    } else {
      arg1->EMail[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_EMail_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->EMail);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_MoneyAccountStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyAccountStatusType)jarg2; 
  if (arg1) (arg1)->MoneyAccountStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_MoneyAccountStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcMoneyAccountStatusType) ((arg1)->MoneyAccountStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_BankAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_BankAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_BankPassWord_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_BankPassWord_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_Password_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_Password_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_VerifyCertNoFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_VerifyCertNoFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_CashExchangeCode_set___(void * jarg1, char jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcCashExchangeCodeType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcCashExchangeCodeType)jarg2; 
  if (arg1) (arg1)->CashExchangeCode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_CashExchangeCode_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcCashExchangeCodeType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcCashExchangeCodeType) ((arg1)->CashExchangeCode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_Digest_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_Digest_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_BankAccType_set___(void * jarg1, char jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_BankAccType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_DeviceID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_DeviceID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_BankSecuAccType_set___(void * jarg1, char jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankSecuAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_BankSecuAccType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_BrokerIDByBank_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_BrokerIDByBank_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_BankSecuAcc_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_BankSecuAcc_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSecuAcc);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_BankPwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->BankPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_BankPwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_SecuPwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->SecuPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_SecuPwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_OperNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_OperNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_TID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_TID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqCancelAccountField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcReqCancelAccountField___() {
  void * jresult ;
  CThostFtdcReqCancelAccountField *result = 0 ;
  
  result = (CThostFtdcReqCancelAccountField *)new CThostFtdcReqCancelAccountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcReqCancelAccountField___(void * jarg1) {
  CThostFtdcReqCancelAccountField *arg1 = (CThostFtdcReqCancelAccountField *) 0 ;
  
  arg1 = (CThostFtdcReqCancelAccountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_BankSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_BankSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_PlateSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_PlateSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_LastFragment_set___(void * jarg1, char jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_LastFragment_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_CustomerName_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_CustomerName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_IdCardType_set___(void * jarg1, char jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_IdCardType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_IdentifiedCardNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_IdentifiedCardNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_Gender_set___(void * jarg1, char jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcGenderType arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcGenderType)jarg2; 
  if (arg1) (arg1)->Gender = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_Gender_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcGenderType result;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (TThostFtdcGenderType) ((arg1)->Gender);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_CountryCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CountryCode, (const char *)arg2, 21-1);
      arg1->CountryCode[21-1] = 0;
    } else {
      arg1->CountryCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_CountryCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->CountryCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_CustType_set___(void * jarg1, char jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_CustType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_Address_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_Address_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->Address);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_ZipCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ZipCode, (const char *)arg2, 7-1);
      arg1->ZipCode[7-1] = 0;
    } else {
      arg1->ZipCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_ZipCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->ZipCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_Telephone_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_Telephone_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->Telephone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_MobilePhone_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MobilePhone, (const char *)arg2, 21-1);
      arg1->MobilePhone[21-1] = 0;
    } else {
      arg1->MobilePhone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_MobilePhone_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->MobilePhone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_Fax_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Fax, (const char *)arg2, 41-1);
      arg1->Fax[41-1] = 0;
    } else {
      arg1->Fax[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_Fax_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->Fax);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_EMail_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->EMail, (const char *)arg2, 41-1);
      arg1->EMail[41-1] = 0;
    } else {
      arg1->EMail[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_EMail_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->EMail);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_MoneyAccountStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyAccountStatusType)jarg2; 
  if (arg1) (arg1)->MoneyAccountStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_MoneyAccountStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType result;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (TThostFtdcMoneyAccountStatusType) ((arg1)->MoneyAccountStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_BankAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_BankAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_BankPassWord_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_BankPassWord_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_NewBankAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->NewBankAccount, (const char *)arg2, 41-1);
      arg1->NewBankAccount[41-1] = 0;
    } else {
      arg1->NewBankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_NewBankAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->NewBankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_NewBankPassWord_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->NewBankPassWord, (const char *)arg2, 41-1);
      arg1->NewBankPassWord[41-1] = 0;
    } else {
      arg1->NewBankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_NewBankPassWord_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->NewBankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_Password_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_Password_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_BankAccType_set___(void * jarg1, char jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_BankAccType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_VerifyCertNoFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_VerifyCertNoFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_BrokerIDByBank_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_BrokerIDByBank_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_BankPwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->BankPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_BankPwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_SecuPwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->SecuPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_SecuPwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_TID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_TID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_Digest_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqChangeAccountField_Digest_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcReqChangeAccountField___() {
  void * jresult ;
  CThostFtdcReqChangeAccountField *result = 0 ;
  
  result = (CThostFtdcReqChangeAccountField *)new CThostFtdcReqChangeAccountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcReqChangeAccountField___(void * jarg1) {
  CThostFtdcReqChangeAccountField *arg1 = (CThostFtdcReqChangeAccountField *) 0 ;
  
  arg1 = (CThostFtdcReqChangeAccountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_BankSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_BankSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_PlateSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_PlateSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_LastFragment_set___(void * jarg1, char jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_LastFragment_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_CustomerName_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_CustomerName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_IdCardType_set___(void * jarg1, char jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_IdCardType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_IdentifiedCardNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_IdentifiedCardNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_CustType_set___(void * jarg1, char jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_CustType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_BankAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_BankAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_BankPassWord_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_BankPassWord_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_Password_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_Password_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_FutureSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcFutureSerialType)jarg2; 
  if (arg1) (arg1)->FutureSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_FutureSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcFutureSerialType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_VerifyCertNoFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_VerifyCertNoFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_TradeAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->TradeAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_TradeAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->TradeAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_FutureFetchAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->FutureFetchAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_FutureFetchAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->FutureFetchAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_FeePayFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcFeePayFlagType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcFeePayFlagType)jarg2; 
  if (arg1) (arg1)->FeePayFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_FeePayFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcFeePayFlagType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcFeePayFlagType) ((arg1)->FeePayFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_CustFee_set___(void * jarg1, double jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcCustFeeType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcCustFeeType)jarg2; 
  if (arg1) (arg1)->CustFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_CustFee_get___(void * jarg1) {
  double jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcCustFeeType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcCustFeeType) ((arg1)->CustFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_BrokerFee_set___(void * jarg1, double jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcFutureFeeType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcFutureFeeType)jarg2; 
  if (arg1) (arg1)->BrokerFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_BrokerFee_get___(void * jarg1) {
  double jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcFutureFeeType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcFutureFeeType) ((arg1)->BrokerFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_Message_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Message, (const char *)arg2, 129-1);
      arg1->Message[129-1] = 0;
    } else {
      arg1->Message[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_Message_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->Message);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_Digest_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_Digest_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_BankAccType_set___(void * jarg1, char jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_BankAccType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_DeviceID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_DeviceID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_BankSecuAccType_set___(void * jarg1, char jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankSecuAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_BankSecuAccType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_BrokerIDByBank_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_BrokerIDByBank_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_BankSecuAcc_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_BankSecuAcc_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->BankSecuAcc);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_BankPwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->BankPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_BankPwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_SecuPwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->SecuPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_SecuPwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_OperNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_OperNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_TID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_TID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_TransferStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcTransferStatusType arg2 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  arg2 = (TThostFtdcTransferStatusType)jarg2; 
  if (arg1) (arg1)->TransferStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqTransferField_TransferStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  TThostFtdcTransferStatusType result;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  result = (TThostFtdcTransferStatusType) ((arg1)->TransferStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcReqTransferField___() {
  void * jresult ;
  CThostFtdcReqTransferField *result = 0 ;
  
  result = (CThostFtdcReqTransferField *)new CThostFtdcReqTransferField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcReqTransferField___(void * jarg1) {
  CThostFtdcReqTransferField *arg1 = (CThostFtdcReqTransferField *) 0 ;
  
  arg1 = (CThostFtdcReqTransferField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_BankSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_BankSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_PlateSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_PlateSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_LastFragment_set___(void * jarg1, char jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_LastFragment_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_CustomerName_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_CustomerName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_IdCardType_set___(void * jarg1, char jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_IdCardType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_IdentifiedCardNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_IdentifiedCardNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_CustType_set___(void * jarg1, char jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_CustType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_BankAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_BankAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_BankPassWord_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_BankPassWord_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_Password_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_Password_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_FutureSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcFutureSerialType)jarg2; 
  if (arg1) (arg1)->FutureSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_FutureSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcFutureSerialType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_VerifyCertNoFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_VerifyCertNoFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_TradeAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->TradeAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_TradeAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->TradeAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_FutureFetchAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->FutureFetchAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_FutureFetchAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->FutureFetchAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_FeePayFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcFeePayFlagType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcFeePayFlagType)jarg2; 
  if (arg1) (arg1)->FeePayFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_FeePayFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcFeePayFlagType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcFeePayFlagType) ((arg1)->FeePayFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_CustFee_set___(void * jarg1, double jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcCustFeeType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcCustFeeType)jarg2; 
  if (arg1) (arg1)->CustFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_CustFee_get___(void * jarg1) {
  double jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcCustFeeType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcCustFeeType) ((arg1)->CustFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_BrokerFee_set___(void * jarg1, double jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcFutureFeeType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcFutureFeeType)jarg2; 
  if (arg1) (arg1)->BrokerFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_BrokerFee_get___(void * jarg1) {
  double jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcFutureFeeType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcFutureFeeType) ((arg1)->BrokerFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_Message_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Message, (const char *)arg2, 129-1);
      arg1->Message[129-1] = 0;
    } else {
      arg1->Message[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_Message_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->Message);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_Digest_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_Digest_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_BankAccType_set___(void * jarg1, char jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_BankAccType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_DeviceID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_DeviceID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_BankSecuAccType_set___(void * jarg1, char jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankSecuAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_BankSecuAccType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_BrokerIDByBank_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_BrokerIDByBank_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_BankSecuAcc_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_BankSecuAcc_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->BankSecuAcc);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_BankPwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->BankPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_BankPwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_SecuPwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->SecuPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_SecuPwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_OperNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_OperNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_TID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_TID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_TransferStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcTransferStatusType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcTransferStatusType)jarg2; 
  if (arg1) (arg1)->TransferStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_TransferStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcTransferStatusType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcTransferStatusType) ((arg1)->TransferStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_ErrorID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_ErrorID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_ErrorMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspTransferField_ErrorMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcRspTransferField___() {
  void * jresult ;
  CThostFtdcRspTransferField *result = 0 ;
  
  result = (CThostFtdcRspTransferField *)new CThostFtdcRspTransferField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcRspTransferField___(void * jarg1) {
  CThostFtdcRspTransferField *arg1 = (CThostFtdcRspTransferField *) 0 ;
  
  arg1 = (CThostFtdcRspTransferField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_RepealTimeInterval_set___(void * jarg1, int jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcRepealTimeIntervalType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcRepealTimeIntervalType)jarg2; 
  if (arg1) (arg1)->RepealTimeInterval = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_RepealTimeInterval_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcRepealTimeIntervalType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcRepealTimeIntervalType) ((arg1)->RepealTimeInterval);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_RepealedTimes_set___(void * jarg1, int jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcRepealedTimesType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcRepealedTimesType)jarg2; 
  if (arg1) (arg1)->RepealedTimes = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_RepealedTimes_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcRepealedTimesType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcRepealedTimesType) ((arg1)->RepealedTimes);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BankRepealFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcBankRepealFlagType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcBankRepealFlagType)jarg2; 
  if (arg1) (arg1)->BankRepealFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BankRepealFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcBankRepealFlagType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcBankRepealFlagType) ((arg1)->BankRepealFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BrokerRepealFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcBrokerRepealFlagType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcBrokerRepealFlagType)jarg2; 
  if (arg1) (arg1)->BrokerRepealFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BrokerRepealFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcBrokerRepealFlagType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcBrokerRepealFlagType) ((arg1)->BrokerRepealFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_PlateRepealSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcPlateSerialType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcPlateSerialType)jarg2; 
  if (arg1) (arg1)->PlateRepealSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_PlateRepealSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcPlateSerialType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcPlateSerialType) ((arg1)->PlateRepealSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BankRepealSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankRepealSerial, (const char *)arg2, 13-1);
      arg1->BankRepealSerial[13-1] = 0;
    } else {
      arg1->BankRepealSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BankRepealSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->BankRepealSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_FutureRepealSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcFutureSerialType)jarg2; 
  if (arg1) (arg1)->FutureRepealSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_FutureRepealSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcFutureSerialType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureRepealSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BankSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BankSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_PlateSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_PlateSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_LastFragment_set___(void * jarg1, char jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_LastFragment_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_CustomerName_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_CustomerName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_IdCardType_set___(void * jarg1, char jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_IdCardType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_IdentifiedCardNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_IdentifiedCardNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_CustType_set___(void * jarg1, char jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_CustType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BankAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BankAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BankPassWord_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BankPassWord_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_Password_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_Password_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_FutureSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcFutureSerialType)jarg2; 
  if (arg1) (arg1)->FutureSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_FutureSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcFutureSerialType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_VerifyCertNoFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_VerifyCertNoFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_TradeAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->TradeAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_TradeAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->TradeAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_FutureFetchAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->FutureFetchAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_FutureFetchAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->FutureFetchAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_FeePayFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcFeePayFlagType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcFeePayFlagType)jarg2; 
  if (arg1) (arg1)->FeePayFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_FeePayFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcFeePayFlagType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcFeePayFlagType) ((arg1)->FeePayFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_CustFee_set___(void * jarg1, double jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcCustFeeType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcCustFeeType)jarg2; 
  if (arg1) (arg1)->CustFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_CustFee_get___(void * jarg1) {
  double jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcCustFeeType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcCustFeeType) ((arg1)->CustFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BrokerFee_set___(void * jarg1, double jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcFutureFeeType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcFutureFeeType)jarg2; 
  if (arg1) (arg1)->BrokerFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BrokerFee_get___(void * jarg1) {
  double jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcFutureFeeType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcFutureFeeType) ((arg1)->BrokerFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_Message_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Message, (const char *)arg2, 129-1);
      arg1->Message[129-1] = 0;
    } else {
      arg1->Message[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_Message_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->Message);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_Digest_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_Digest_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BankAccType_set___(void * jarg1, char jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BankAccType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_DeviceID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_DeviceID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BankSecuAccType_set___(void * jarg1, char jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankSecuAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BankSecuAccType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BrokerIDByBank_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BrokerIDByBank_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BankSecuAcc_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BankSecuAcc_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->BankSecuAcc);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BankPwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->BankPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_BankPwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_SecuPwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->SecuPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_SecuPwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_OperNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_OperNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_TID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_TID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_TransferStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcTransferStatusType arg2 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  arg2 = (TThostFtdcTransferStatusType)jarg2; 
  if (arg1) (arg1)->TransferStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqRepealField_TransferStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  TThostFtdcTransferStatusType result;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  result = (TThostFtdcTransferStatusType) ((arg1)->TransferStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcReqRepealField___() {
  void * jresult ;
  CThostFtdcReqRepealField *result = 0 ;
  
  result = (CThostFtdcReqRepealField *)new CThostFtdcReqRepealField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcReqRepealField___(void * jarg1) {
  CThostFtdcReqRepealField *arg1 = (CThostFtdcReqRepealField *) 0 ;
  
  arg1 = (CThostFtdcReqRepealField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_RepealTimeInterval_set___(void * jarg1, int jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcRepealTimeIntervalType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcRepealTimeIntervalType)jarg2; 
  if (arg1) (arg1)->RepealTimeInterval = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_RepealTimeInterval_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcRepealTimeIntervalType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcRepealTimeIntervalType) ((arg1)->RepealTimeInterval);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_RepealedTimes_set___(void * jarg1, int jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcRepealedTimesType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcRepealedTimesType)jarg2; 
  if (arg1) (arg1)->RepealedTimes = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_RepealedTimes_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcRepealedTimesType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcRepealedTimesType) ((arg1)->RepealedTimes);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BankRepealFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcBankRepealFlagType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcBankRepealFlagType)jarg2; 
  if (arg1) (arg1)->BankRepealFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BankRepealFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcBankRepealFlagType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcBankRepealFlagType) ((arg1)->BankRepealFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BrokerRepealFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcBrokerRepealFlagType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcBrokerRepealFlagType)jarg2; 
  if (arg1) (arg1)->BrokerRepealFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BrokerRepealFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcBrokerRepealFlagType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcBrokerRepealFlagType) ((arg1)->BrokerRepealFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_PlateRepealSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcPlateSerialType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcPlateSerialType)jarg2; 
  if (arg1) (arg1)->PlateRepealSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_PlateRepealSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcPlateSerialType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcPlateSerialType) ((arg1)->PlateRepealSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BankRepealSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankRepealSerial, (const char *)arg2, 13-1);
      arg1->BankRepealSerial[13-1] = 0;
    } else {
      arg1->BankRepealSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BankRepealSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->BankRepealSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_FutureRepealSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcFutureSerialType)jarg2; 
  if (arg1) (arg1)->FutureRepealSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_FutureRepealSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcFutureSerialType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureRepealSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BankSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BankSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_PlateSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_PlateSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_LastFragment_set___(void * jarg1, char jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_LastFragment_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_CustomerName_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_CustomerName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_IdCardType_set___(void * jarg1, char jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_IdCardType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_IdentifiedCardNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_IdentifiedCardNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_CustType_set___(void * jarg1, char jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_CustType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BankAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BankAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BankPassWord_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BankPassWord_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_Password_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_Password_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_FutureSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcFutureSerialType)jarg2; 
  if (arg1) (arg1)->FutureSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_FutureSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcFutureSerialType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_VerifyCertNoFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_VerifyCertNoFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_TradeAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->TradeAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_TradeAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->TradeAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_FutureFetchAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->FutureFetchAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_FutureFetchAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->FutureFetchAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_FeePayFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcFeePayFlagType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcFeePayFlagType)jarg2; 
  if (arg1) (arg1)->FeePayFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_FeePayFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcFeePayFlagType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcFeePayFlagType) ((arg1)->FeePayFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_CustFee_set___(void * jarg1, double jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcCustFeeType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcCustFeeType)jarg2; 
  if (arg1) (arg1)->CustFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_CustFee_get___(void * jarg1) {
  double jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcCustFeeType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcCustFeeType) ((arg1)->CustFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BrokerFee_set___(void * jarg1, double jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcFutureFeeType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcFutureFeeType)jarg2; 
  if (arg1) (arg1)->BrokerFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BrokerFee_get___(void * jarg1) {
  double jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcFutureFeeType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcFutureFeeType) ((arg1)->BrokerFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_Message_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Message, (const char *)arg2, 129-1);
      arg1->Message[129-1] = 0;
    } else {
      arg1->Message[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_Message_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->Message);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_Digest_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_Digest_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BankAccType_set___(void * jarg1, char jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BankAccType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_DeviceID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_DeviceID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BankSecuAccType_set___(void * jarg1, char jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankSecuAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BankSecuAccType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BrokerIDByBank_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BrokerIDByBank_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BankSecuAcc_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BankSecuAcc_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->BankSecuAcc);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BankPwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->BankPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_BankPwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_SecuPwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->SecuPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_SecuPwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_OperNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_OperNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_TID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_TID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_TransferStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcTransferStatusType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcTransferStatusType)jarg2; 
  if (arg1) (arg1)->TransferStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_TransferStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcTransferStatusType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcTransferStatusType) ((arg1)->TransferStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_ErrorID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_ErrorID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_ErrorMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspRepealField_ErrorMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcRspRepealField___() {
  void * jresult ;
  CThostFtdcRspRepealField *result = 0 ;
  
  result = (CThostFtdcRspRepealField *)new CThostFtdcRspRepealField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcRspRepealField___(void * jarg1) {
  CThostFtdcRspRepealField *arg1 = (CThostFtdcRspRepealField *) 0 ;
  
  arg1 = (CThostFtdcRspRepealField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_BankSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_BankSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_PlateSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_PlateSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_LastFragment_set___(void * jarg1, char jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_LastFragment_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_CustomerName_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_CustomerName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_IdCardType_set___(void * jarg1, char jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_IdCardType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_IdentifiedCardNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_IdentifiedCardNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_CustType_set___(void * jarg1, char jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_CustType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_BankAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_BankAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_BankPassWord_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_BankPassWord_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_Password_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_Password_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_FutureSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcFutureSerialType)jarg2; 
  if (arg1) (arg1)->FutureSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_FutureSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcFutureSerialType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_VerifyCertNoFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_VerifyCertNoFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_Digest_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_Digest_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_BankAccType_set___(void * jarg1, char jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_BankAccType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_DeviceID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_DeviceID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_BankSecuAccType_set___(void * jarg1, char jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankSecuAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_BankSecuAccType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_BrokerIDByBank_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_BrokerIDByBank_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_BankSecuAcc_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_BankSecuAcc_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSecuAcc);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_BankPwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->BankPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_BankPwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_SecuPwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->SecuPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_SecuPwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_OperNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_OperNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_TID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryAccountField_TID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcReqQueryAccountField___() {
  void * jresult ;
  CThostFtdcReqQueryAccountField *result = 0 ;
  
  result = (CThostFtdcReqQueryAccountField *)new CThostFtdcReqQueryAccountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcReqQueryAccountField___(void * jarg1) {
  CThostFtdcReqQueryAccountField *arg1 = (CThostFtdcReqQueryAccountField *) 0 ;
  
  arg1 = (CThostFtdcReqQueryAccountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BankSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BankSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_PlateSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_PlateSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_LastFragment_set___(void * jarg1, char jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_LastFragment_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_CustomerName_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_CustomerName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_IdCardType_set___(void * jarg1, char jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_IdCardType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_IdentifiedCardNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_IdentifiedCardNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_CustType_set___(void * jarg1, char jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_CustType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BankAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BankAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BankPassWord_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BankPassWord_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_Password_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_Password_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_FutureSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcFutureSerialType)jarg2; 
  if (arg1) (arg1)->FutureSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_FutureSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcFutureSerialType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_VerifyCertNoFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_VerifyCertNoFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_Digest_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_Digest_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BankAccType_set___(void * jarg1, char jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BankAccType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_DeviceID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_DeviceID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BankSecuAccType_set___(void * jarg1, char jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankSecuAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BankSecuAccType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BrokerIDByBank_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BrokerIDByBank_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BankSecuAcc_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BankSecuAcc_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSecuAcc);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BankPwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->BankPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BankPwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_SecuPwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->SecuPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_SecuPwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_OperNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_OperNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_TID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_TID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BankUseAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->BankUseAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BankUseAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->BankUseAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BankFetchAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->BankFetchAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryAccountField_BankFetchAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->BankFetchAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcRspQueryAccountField___() {
  void * jresult ;
  CThostFtdcRspQueryAccountField *result = 0 ;
  
  result = (CThostFtdcRspQueryAccountField *)new CThostFtdcRspQueryAccountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcRspQueryAccountField___(void * jarg1) {
  CThostFtdcRspQueryAccountField *arg1 = (CThostFtdcRspQueryAccountField *) 0 ;
  
  arg1 = (CThostFtdcRspQueryAccountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_BankSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_BankSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_PlateSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_PlateSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_LastFragment_set___(void * jarg1, char jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_LastFragment_get___(void * jarg1) {
  char jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_Digest_set___(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_Digest_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_DeviceID_set___(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_DeviceID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_BrokerIDByBank_set___(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_BrokerIDByBank_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_OperNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_OperNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_TID_set___(void * jarg1, int jarg2) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFutureSignIOField_TID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcFutureSignIOField___() {
  void * jresult ;
  CThostFtdcFutureSignIOField *result = 0 ;
  
  result = (CThostFtdcFutureSignIOField *)new CThostFtdcFutureSignIOField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcFutureSignIOField___(void * jarg1) {
  CThostFtdcFutureSignIOField *arg1 = (CThostFtdcFutureSignIOField *) 0 ;
  
  arg1 = (CThostFtdcFutureSignIOField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_BankSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_BankSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_PlateSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_PlateSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_LastFragment_set___(void * jarg1, char jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_LastFragment_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_Digest_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_Digest_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_DeviceID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_DeviceID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_BrokerIDByBank_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_BrokerIDByBank_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_OperNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_OperNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_TID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_TID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_ErrorID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_ErrorID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_ErrorMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_ErrorMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_PinKey_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->PinKey, (const char *)arg2, 129-1);
      arg1->PinKey[129-1] = 0;
    } else {
      arg1->PinKey[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_PinKey_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->PinKey);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_MacKey_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacKey, (const char *)arg2, 129-1);
      arg1->MacKey[129-1] = 0;
    } else {
      arg1->MacKey[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignInField_MacKey_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->MacKey);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcRspFutureSignInField___() {
  void * jresult ;
  CThostFtdcRspFutureSignInField *result = 0 ;
  
  result = (CThostFtdcRspFutureSignInField *)new CThostFtdcRspFutureSignInField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcRspFutureSignInField___(void * jarg1) {
  CThostFtdcRspFutureSignInField *arg1 = (CThostFtdcRspFutureSignInField *) 0 ;
  
  arg1 = (CThostFtdcRspFutureSignInField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_BankSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_BankSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_PlateSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_PlateSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_LastFragment_set___(void * jarg1, char jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_LastFragment_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_Digest_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_Digest_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_DeviceID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_DeviceID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_BrokerIDByBank_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_BrokerIDByBank_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_OperNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_OperNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_TID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqFutureSignOutField_TID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcReqFutureSignOutField___() {
  void * jresult ;
  CThostFtdcReqFutureSignOutField *result = 0 ;
  
  result = (CThostFtdcReqFutureSignOutField *)new CThostFtdcReqFutureSignOutField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcReqFutureSignOutField___(void * jarg1) {
  CThostFtdcReqFutureSignOutField *arg1 = (CThostFtdcReqFutureSignOutField *) 0 ;
  
  arg1 = (CThostFtdcReqFutureSignOutField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_BankSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_BankSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_PlateSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_PlateSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_LastFragment_set___(void * jarg1, char jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_LastFragment_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_Digest_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_Digest_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_DeviceID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_DeviceID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_BrokerIDByBank_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_BrokerIDByBank_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_OperNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_OperNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_TID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_TID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_ErrorID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_ErrorID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_ErrorMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspFutureSignOutField_ErrorMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcRspFutureSignOutField___() {
  void * jresult ;
  CThostFtdcRspFutureSignOutField *result = 0 ;
  
  result = (CThostFtdcRspFutureSignOutField *)new CThostFtdcRspFutureSignOutField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcRspFutureSignOutField___(void * jarg1) {
  CThostFtdcRspFutureSignOutField *arg1 = (CThostFtdcRspFutureSignOutField *) 0 ;
  
  arg1 = (CThostFtdcRspFutureSignOutField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_BankSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_BankSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_PlateSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_PlateSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_LastFragment_set___(void * jarg1, char jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_LastFragment_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_Reference_set___(void * jarg1, int jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->Reference = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_Reference_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->Reference);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssureType_set___(void * jarg1, char jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcInstitutionTypeType arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcInstitutionTypeType)jarg2; 
  if (arg1) (arg1)->RefrenceIssureType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssureType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcInstitutionTypeType result;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcInstitutionTypeType) ((arg1)->RefrenceIssureType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssure_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RefrenceIssure, (const char *)arg2, 36-1);
      arg1->RefrenceIssure[36-1] = 0;
    } else {
      arg1->RefrenceIssure[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_RefrenceIssure_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->RefrenceIssure);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_CustomerName_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_CustomerName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_IdCardType_set___(void * jarg1, char jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_IdCardType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_IdentifiedCardNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_IdentifiedCardNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_CustType_set___(void * jarg1, char jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_CustType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_BankAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_BankAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_BankPassWord_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_BankPassWord_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_Password_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_Password_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_TradeAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->TradeAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_TradeAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->TradeAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_Digest_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqQueryTradeResultBySerialField_Digest_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcReqQueryTradeResultBySerialField___() {
  void * jresult ;
  CThostFtdcReqQueryTradeResultBySerialField *result = 0 ;
  
  result = (CThostFtdcReqQueryTradeResultBySerialField *)new CThostFtdcReqQueryTradeResultBySerialField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcReqQueryTradeResultBySerialField___(void * jarg1) {
  CThostFtdcReqQueryTradeResultBySerialField *arg1 = (CThostFtdcReqQueryTradeResultBySerialField *) 0 ;
  
  arg1 = (CThostFtdcReqQueryTradeResultBySerialField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_BankSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_BankSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_PlateSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_PlateSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_LastFragment_set___(void * jarg1, char jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_LastFragment_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_ErrorID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_ErrorID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_ErrorMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_ErrorMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_Reference_set___(void * jarg1, int jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->Reference = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_Reference_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->Reference);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssureType_set___(void * jarg1, char jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcInstitutionTypeType arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcInstitutionTypeType)jarg2; 
  if (arg1) (arg1)->RefrenceIssureType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssureType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcInstitutionTypeType result;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcInstitutionTypeType) ((arg1)->RefrenceIssureType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssure_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RefrenceIssure, (const char *)arg2, 36-1);
      arg1->RefrenceIssure[36-1] = 0;
    } else {
      arg1->RefrenceIssure[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_RefrenceIssure_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->RefrenceIssure);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_OriginReturnCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OriginReturnCode, (const char *)arg2, 7-1);
      arg1->OriginReturnCode[7-1] = 0;
    } else {
      arg1->OriginReturnCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_OriginReturnCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->OriginReturnCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_OriginDescrInfoForReturnCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OriginDescrInfoForReturnCode, (const char *)arg2, 129-1);
      arg1->OriginDescrInfoForReturnCode[129-1] = 0;
    } else {
      arg1->OriginDescrInfoForReturnCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_OriginDescrInfoForReturnCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->OriginDescrInfoForReturnCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_BankAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_BankAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_BankPassWord_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_BankPassWord_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_Password_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_Password_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_TradeAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->TradeAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_TradeAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->TradeAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_Digest_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspQueryTradeResultBySerialField_Digest_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcRspQueryTradeResultBySerialField___() {
  void * jresult ;
  CThostFtdcRspQueryTradeResultBySerialField *result = 0 ;
  
  result = (CThostFtdcRspQueryTradeResultBySerialField *)new CThostFtdcRspQueryTradeResultBySerialField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcRspQueryTradeResultBySerialField___(void * jarg1) {
  CThostFtdcRspQueryTradeResultBySerialField *arg1 = (CThostFtdcRspQueryTradeResultBySerialField *) 0 ;
  
  arg1 = (CThostFtdcRspQueryTradeResultBySerialField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_BankSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_BankSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_PlateSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_PlateSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_LastFragment_set___(void * jarg1, char jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_LastFragment_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_FileBusinessCode_set___(void * jarg1, char jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  TThostFtdcFileBusinessCodeType arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (TThostFtdcFileBusinessCodeType)jarg2; 
  if (arg1) (arg1)->FileBusinessCode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_FileBusinessCode_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  TThostFtdcFileBusinessCodeType result;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (TThostFtdcFileBusinessCodeType) ((arg1)->FileBusinessCode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_Digest_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqDayEndFileReadyField_Digest_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcReqDayEndFileReadyField___() {
  void * jresult ;
  CThostFtdcReqDayEndFileReadyField *result = 0 ;
  
  result = (CThostFtdcReqDayEndFileReadyField *)new CThostFtdcReqDayEndFileReadyField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcReqDayEndFileReadyField___(void * jarg1) {
  CThostFtdcReqDayEndFileReadyField *arg1 = (CThostFtdcReqDayEndFileReadyField *) 0 ;
  
  arg1 = (CThostFtdcReqDayEndFileReadyField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReturnResultField_ReturnCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcReturnResultField *arg1 = (CThostFtdcReturnResultField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReturnResultField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ReturnCode, (const char *)arg2, 7-1);
      arg1->ReturnCode[7-1] = 0;
    } else {
      arg1->ReturnCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReturnResultField_ReturnCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReturnResultField *arg1 = (CThostFtdcReturnResultField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReturnResultField *)jarg1; 
  result = (char *) ((arg1)->ReturnCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReturnResultField_DescrInfoForReturnCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcReturnResultField *arg1 = (CThostFtdcReturnResultField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReturnResultField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DescrInfoForReturnCode, (const char *)arg2, 129-1);
      arg1->DescrInfoForReturnCode[129-1] = 0;
    } else {
      arg1->DescrInfoForReturnCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReturnResultField_DescrInfoForReturnCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReturnResultField *arg1 = (CThostFtdcReturnResultField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReturnResultField *)jarg1; 
  result = (char *) ((arg1)->DescrInfoForReturnCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcReturnResultField___() {
  void * jresult ;
  CThostFtdcReturnResultField *result = 0 ;
  
  result = (CThostFtdcReturnResultField *)new CThostFtdcReturnResultField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcReturnResultField___(void * jarg1) {
  CThostFtdcReturnResultField *arg1 = (CThostFtdcReturnResultField *) 0 ;
  
  arg1 = (CThostFtdcReturnResultField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_BankSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_BankSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_PlateSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_PlateSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_LastFragment_set___(void * jarg1, char jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_LastFragment_get___(void * jarg1) {
  char jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_Password_set___(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_Password_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_BankAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_BankAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_BankPassWord_set___(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_BankPassWord_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_TID_set___(void * jarg1, int jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_TID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcVerifyFuturePasswordField___() {
  void * jresult ;
  CThostFtdcVerifyFuturePasswordField *result = 0 ;
  
  result = (CThostFtdcVerifyFuturePasswordField *)new CThostFtdcVerifyFuturePasswordField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcVerifyFuturePasswordField___(void * jarg1) {
  CThostFtdcVerifyFuturePasswordField *arg1 = (CThostFtdcVerifyFuturePasswordField *) 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyCustInfoField_CustomerName_set___(void * jarg1, char * jarg2) {
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyCustInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyCustInfoField_CustomerName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyCustInfoField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyCustInfoField_IdCardType_set___(void * jarg1, char jarg2) {
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcVerifyCustInfoField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyCustInfoField_IdCardType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcVerifyCustInfoField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyCustInfoField_IdentifiedCardNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyCustInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyCustInfoField_IdentifiedCardNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyCustInfoField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyCustInfoField_CustType_set___(void * jarg1, char jarg2) {
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcVerifyCustInfoField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyCustInfoField_CustType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcVerifyCustInfoField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcVerifyCustInfoField___() {
  void * jresult ;
  CThostFtdcVerifyCustInfoField *result = 0 ;
  
  result = (CThostFtdcVerifyCustInfoField *)new CThostFtdcVerifyCustInfoField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcVerifyCustInfoField___(void * jarg1) {
  CThostFtdcVerifyCustInfoField *arg1 = (CThostFtdcVerifyCustInfoField *) 0 ;
  
  arg1 = (CThostFtdcVerifyCustInfoField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordAndCustInfoField_CustomerName_set___(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordAndCustInfoField_CustomerName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordAndCustInfoField_IdCardType_set___(void * jarg1, char jarg2) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordAndCustInfoField_IdCardType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordAndCustInfoField_IdentifiedCardNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordAndCustInfoField_IdentifiedCardNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordAndCustInfoField_CustType_set___(void * jarg1, char jarg2) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordAndCustInfoField_CustType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordAndCustInfoField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordAndCustInfoField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordAndCustInfoField_Password_set___(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordAndCustInfoField_Password_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordAndCustInfoField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcVerifyFuturePasswordAndCustInfoField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcVerifyFuturePasswordAndCustInfoField___() {
  void * jresult ;
  CThostFtdcVerifyFuturePasswordAndCustInfoField *result = 0 ;
  
  result = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)new CThostFtdcVerifyFuturePasswordAndCustInfoField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcVerifyFuturePasswordAndCustInfoField___(void * jarg1) {
  CThostFtdcVerifyFuturePasswordAndCustInfoField *arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *) 0 ;
  
  arg1 = (CThostFtdcVerifyFuturePasswordAndCustInfoField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepositResultInformField_DepositSeqNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DepositSeqNo, (const char *)arg2, 15-1);
      arg1->DepositSeqNo[15-1] = 0;
    } else {
      arg1->DepositSeqNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepositResultInformField_DepositSeqNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  result = (char *) ((arg1)->DepositSeqNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepositResultInformField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepositResultInformField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepositResultInformField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepositResultInformField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepositResultInformField_Deposit_set___(void * jarg1, double jarg2) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Deposit = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepositResultInformField_Deposit_get___(void * jarg1) {
  double jresult ;
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Deposit);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepositResultInformField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepositResultInformField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepositResultInformField_ReturnCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ReturnCode, (const char *)arg2, 7-1);
      arg1->ReturnCode[7-1] = 0;
    } else {
      arg1->ReturnCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepositResultInformField_ReturnCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  result = (char *) ((arg1)->ReturnCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepositResultInformField_DescrInfoForReturnCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DescrInfoForReturnCode, (const char *)arg2, 129-1);
      arg1->DescrInfoForReturnCode[129-1] = 0;
    } else {
      arg1->DescrInfoForReturnCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDepositResultInformField_DescrInfoForReturnCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  result = (char *) ((arg1)->DescrInfoForReturnCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcDepositResultInformField___() {
  void * jresult ;
  CThostFtdcDepositResultInformField *result = 0 ;
  
  result = (CThostFtdcDepositResultInformField *)new CThostFtdcDepositResultInformField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcDepositResultInformField___(void * jarg1) {
  CThostFtdcDepositResultInformField *arg1 = (CThostFtdcDepositResultInformField *) 0 ;
  
  arg1 = (CThostFtdcDepositResultInformField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_BankSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_BankSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_PlateSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_PlateSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_LastFragment_set___(void * jarg1, char jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_LastFragment_get___(void * jarg1) {
  char jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_Message_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Message, (const char *)arg2, 129-1);
      arg1->Message[129-1] = 0;
    } else {
      arg1->Message[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_Message_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->Message);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_DeviceID_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_DeviceID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_BrokerIDByBank_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_BrokerIDByBank_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_OperNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_OperNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_TID_set___(void * jarg1, int jarg2) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcReqSyncKeyField_TID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcReqSyncKeyField___() {
  void * jresult ;
  CThostFtdcReqSyncKeyField *result = 0 ;
  
  result = (CThostFtdcReqSyncKeyField *)new CThostFtdcReqSyncKeyField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcReqSyncKeyField___(void * jarg1) {
  CThostFtdcReqSyncKeyField *arg1 = (CThostFtdcReqSyncKeyField *) 0 ;
  
  arg1 = (CThostFtdcReqSyncKeyField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_BankSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_BankSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_PlateSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_PlateSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_LastFragment_set___(void * jarg1, char jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_LastFragment_get___(void * jarg1) {
  char jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_Message_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Message, (const char *)arg2, 129-1);
      arg1->Message[129-1] = 0;
    } else {
      arg1->Message[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_Message_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->Message);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_DeviceID_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_DeviceID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_BrokerIDByBank_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_BrokerIDByBank_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_OperNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_OperNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_TID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_TID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_ErrorID_set___(void * jarg1, int jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_ErrorID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_ErrorMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcRspSyncKeyField_ErrorMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcRspSyncKeyField___() {
  void * jresult ;
  CThostFtdcRspSyncKeyField *result = 0 ;
  
  result = (CThostFtdcRspSyncKeyField *)new CThostFtdcRspSyncKeyField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcRspSyncKeyField___(void * jarg1) {
  CThostFtdcRspSyncKeyField *arg1 = (CThostFtdcRspSyncKeyField *) 0 ;
  
  arg1 = (CThostFtdcRspSyncKeyField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BankSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BankSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_PlateSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_PlateSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_LastFragment_set___(void * jarg1, char jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_LastFragment_get___(void * jarg1) {
  char jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_CustomerName_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_CustomerName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_IdCardType_set___(void * jarg1, char jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_IdCardType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_IdentifiedCardNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_IdentifiedCardNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_CustType_set___(void * jarg1, char jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_CustType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BankAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BankAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BankPassWord_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BankPassWord_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_Password_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_Password_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_FutureSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcFutureSerialType)jarg2; 
  if (arg1) (arg1)->FutureSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_FutureSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcFutureSerialType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_VerifyCertNoFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_VerifyCertNoFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_Digest_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_Digest_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BankAccType_set___(void * jarg1, char jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BankAccType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_DeviceID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_DeviceID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BankSecuAccType_set___(void * jarg1, char jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankSecuAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BankSecuAccType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BrokerIDByBank_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BrokerIDByBank_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BankSecuAcc_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BankSecuAcc_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSecuAcc);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BankPwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->BankPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BankPwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_SecuPwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->SecuPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_SecuPwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_OperNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_OperNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_TID_set___(void * jarg1, int jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_TID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BankUseAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->BankUseAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BankUseAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->BankUseAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BankFetchAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->BankFetchAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_BankFetchAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->BankFetchAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_ErrorID_set___(void * jarg1, int jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_ErrorID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_ErrorMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyQueryAccountField_ErrorMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcNotifyQueryAccountField___() {
  void * jresult ;
  CThostFtdcNotifyQueryAccountField *result = 0 ;
  
  result = (CThostFtdcNotifyQueryAccountField *)new CThostFtdcNotifyQueryAccountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcNotifyQueryAccountField___(void * jarg1) {
  CThostFtdcNotifyQueryAccountField *arg1 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  
  arg1 = (CThostFtdcNotifyQueryAccountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_PlateSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcPlateSerialType arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (TThostFtdcPlateSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_PlateSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcPlateSerialType result;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (TThostFtdcPlateSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_BankAccType_set___(void * jarg1, char jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_BankAccType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_BankAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_BankAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_BankSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_BankSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_FutureAccType_set___(void * jarg1, char jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcFutureAccTypeType arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (TThostFtdcFutureAccTypeType)jarg2; 
  if (arg1) (arg1)->FutureAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_FutureAccType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcFutureAccTypeType result;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (TThostFtdcFutureAccTypeType) ((arg1)->FutureAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_InvestorID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->InvestorID, (const char *)arg2, 13-1);
      arg1->InvestorID[13-1] = 0;
    } else {
      arg1->InvestorID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_InvestorID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->InvestorID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_FutureSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcFutureSerialType arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (TThostFtdcFutureSerialType)jarg2; 
  if (arg1) (arg1)->FutureSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_FutureSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcFutureSerialType result;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (TThostFtdcFutureSerialType) ((arg1)->FutureSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_IdCardType_set___(void * jarg1, char jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_IdCardType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_IdentifiedCardNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_IdentifiedCardNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_TradeAmount_set___(void * jarg1, double jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcTradeAmountType arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (TThostFtdcTradeAmountType)jarg2; 
  if (arg1) (arg1)->TradeAmount = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_TradeAmount_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcTradeAmountType result;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (TThostFtdcTradeAmountType) ((arg1)->TradeAmount);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_CustFee_set___(void * jarg1, double jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcCustFeeType arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (TThostFtdcCustFeeType)jarg2; 
  if (arg1) (arg1)->CustFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_CustFee_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcCustFeeType result;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (TThostFtdcCustFeeType) ((arg1)->CustFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_BrokerFee_set___(void * jarg1, double jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcFutureFeeType arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (TThostFtdcFutureFeeType)jarg2; 
  if (arg1) (arg1)->BrokerFee = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_BrokerFee_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcFutureFeeType result;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (TThostFtdcFutureFeeType) ((arg1)->BrokerFee);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_AvailabilityFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcAvailabilityFlagType arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (TThostFtdcAvailabilityFlagType)jarg2; 
  if (arg1) (arg1)->AvailabilityFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_AvailabilityFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcAvailabilityFlagType result;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (TThostFtdcAvailabilityFlagType) ((arg1)->AvailabilityFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_OperatorCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperatorCode, (const char *)arg2, 17-1);
      arg1->OperatorCode[17-1] = 0;
    } else {
      arg1->OperatorCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_OperatorCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->OperatorCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_BankNewAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankNewAccount, (const char *)arg2, 41-1);
      arg1->BankNewAccount[41-1] = 0;
    } else {
      arg1->BankNewAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_BankNewAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->BankNewAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_ErrorID_set___(void * jarg1, int jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_ErrorID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_ErrorMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTransferSerialField_ErrorMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcTransferSerialField___() {
  void * jresult ;
  CThostFtdcTransferSerialField *result = 0 ;
  
  result = (CThostFtdcTransferSerialField *)new CThostFtdcTransferSerialField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcTransferSerialField___(void * jarg1) {
  CThostFtdcTransferSerialField *arg1 = (CThostFtdcTransferSerialField *) 0 ;
  
  arg1 = (CThostFtdcTransferSerialField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTransferSerialField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTransferSerialField *arg1 = (CThostFtdcQryTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTransferSerialField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTransferSerialField *arg1 = (CThostFtdcQryTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTransferSerialField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTransferSerialField *arg1 = (CThostFtdcQryTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTransferSerialField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTransferSerialField *arg1 = (CThostFtdcQryTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTransferSerialField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTransferSerialField *arg1 = (CThostFtdcQryTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTransferSerialField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTransferSerialField *arg1 = (CThostFtdcQryTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTransferSerialField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryTransferSerialField *arg1 = (CThostFtdcQryTransferSerialField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryTransferSerialField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryTransferSerialField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryTransferSerialField *arg1 = (CThostFtdcQryTransferSerialField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryTransferSerialField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryTransferSerialField___() {
  void * jresult ;
  CThostFtdcQryTransferSerialField *result = 0 ;
  
  result = (CThostFtdcQryTransferSerialField *)new CThostFtdcQryTransferSerialField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryTransferSerialField___(void * jarg1) {
  CThostFtdcQryTransferSerialField *arg1 = (CThostFtdcQryTransferSerialField *) 0 ;
  
  arg1 = (CThostFtdcQryTransferSerialField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_BankSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_BankSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_PlateSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_PlateSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_LastFragment_set___(void * jarg1, char jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_LastFragment_get___(void * jarg1) {
  char jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_Digest_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_Digest_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_DeviceID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_DeviceID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_BrokerIDByBank_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_BrokerIDByBank_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_OperNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_OperNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_TID_set___(void * jarg1, int jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_TID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_ErrorID_set___(void * jarg1, int jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_ErrorID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_ErrorMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_ErrorMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_PinKey_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->PinKey, (const char *)arg2, 129-1);
      arg1->PinKey[129-1] = 0;
    } else {
      arg1->PinKey[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_PinKey_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->PinKey);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_MacKey_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MacKey, (const char *)arg2, 129-1);
      arg1->MacKey[129-1] = 0;
    } else {
      arg1->MacKey[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignInField_MacKey_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  result = (char *) ((arg1)->MacKey);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcNotifyFutureSignInField___() {
  void * jresult ;
  CThostFtdcNotifyFutureSignInField *result = 0 ;
  
  result = (CThostFtdcNotifyFutureSignInField *)new CThostFtdcNotifyFutureSignInField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcNotifyFutureSignInField___(void * jarg1) {
  CThostFtdcNotifyFutureSignInField *arg1 = (CThostFtdcNotifyFutureSignInField *) 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignInField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_BankSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_BankSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_PlateSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_PlateSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_LastFragment_set___(void * jarg1, char jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_LastFragment_get___(void * jarg1) {
  char jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_Digest_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_Digest_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_DeviceID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_DeviceID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_BrokerIDByBank_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_BrokerIDByBank_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_OperNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_OperNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_TID_set___(void * jarg1, int jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_TID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_ErrorID_set___(void * jarg1, int jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_ErrorID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_ErrorMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifyFutureSignOutField_ErrorMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcNotifyFutureSignOutField___() {
  void * jresult ;
  CThostFtdcNotifyFutureSignOutField *result = 0 ;
  
  result = (CThostFtdcNotifyFutureSignOutField *)new CThostFtdcNotifyFutureSignOutField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcNotifyFutureSignOutField___(void * jarg1) {
  CThostFtdcNotifyFutureSignOutField *arg1 = (CThostFtdcNotifyFutureSignOutField *) 0 ;
  
  arg1 = (CThostFtdcNotifyFutureSignOutField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_BankSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_BankSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_PlateSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_PlateSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_LastFragment_set___(void * jarg1, char jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_LastFragment_get___(void * jarg1) {
  char jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_Message_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Message, (const char *)arg2, 129-1);
      arg1->Message[129-1] = 0;
    } else {
      arg1->Message[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_Message_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->Message);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_DeviceID_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_DeviceID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_BrokerIDByBank_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_BrokerIDByBank_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_OperNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_OperNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_RequestID_set___(void * jarg1, int jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcRequestIDType arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (TThostFtdcRequestIDType)jarg2; 
  if (arg1) (arg1)->RequestID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_RequestID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcRequestIDType result;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (TThostFtdcRequestIDType) ((arg1)->RequestID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_TID_set___(void * jarg1, int jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_TID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_ErrorID_set___(void * jarg1, int jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_ErrorID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_ErrorMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcNotifySyncKeyField_ErrorMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcNotifySyncKeyField___() {
  void * jresult ;
  CThostFtdcNotifySyncKeyField *result = 0 ;
  
  result = (CThostFtdcNotifySyncKeyField *)new CThostFtdcNotifySyncKeyField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcNotifySyncKeyField___(void * jarg1) {
  CThostFtdcNotifySyncKeyField *arg1 = (CThostFtdcNotifySyncKeyField *) 0 ;
  
  arg1 = (CThostFtdcNotifySyncKeyField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryAccountregisterField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryAccountregisterField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryAccountregisterField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryAccountregisterField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryAccountregisterField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryAccountregisterField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryAccountregisterField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryAccountregisterField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryAccountregisterField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryAccountregisterField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryAccountregisterField___() {
  void * jresult ;
  CThostFtdcQryAccountregisterField *result = 0 ;
  
  result = (CThostFtdcQryAccountregisterField *)new CThostFtdcQryAccountregisterField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryAccountregisterField___(void * jarg1) {
  CThostFtdcQryAccountregisterField *arg1 = (CThostFtdcQryAccountregisterField *) 0 ;
  
  arg1 = (CThostFtdcQryAccountregisterField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_TradeDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDay, (const char *)arg2, 9-1);
      arg1->TradeDay[9-1] = 0;
    } else {
      arg1->TradeDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_TradeDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->TradeDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_BankAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_BankAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_IdCardType_set___(void * jarg1, char jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_IdCardType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_IdentifiedCardNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_IdentifiedCardNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_CustomerName_set___(void * jarg1, char * jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_CustomerName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_OpenOrDestroy_set___(void * jarg1, char jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcOpenOrDestroyType arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (TThostFtdcOpenOrDestroyType)jarg2; 
  if (arg1) (arg1)->OpenOrDestroy = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_OpenOrDestroy_get___(void * jarg1) {
  char jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcOpenOrDestroyType result;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (TThostFtdcOpenOrDestroyType) ((arg1)->OpenOrDestroy);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_RegDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->RegDate, (const char *)arg2, 9-1);
      arg1->RegDate[9-1] = 0;
    } else {
      arg1->RegDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_RegDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->RegDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_OutDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OutDate, (const char *)arg2, 9-1);
      arg1->OutDate[9-1] = 0;
    } else {
      arg1->OutDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_OutDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (char *) ((arg1)->OutDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_TID_set___(void * jarg1, int jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_TID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_CustType_set___(void * jarg1, char jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_CustType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_BankAccType_set___(void * jarg1, char jarg2) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcAccountregisterField_BankAccType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcAccountregisterField___() {
  void * jresult ;
  CThostFtdcAccountregisterField *result = 0 ;
  
  result = (CThostFtdcAccountregisterField *)new CThostFtdcAccountregisterField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcAccountregisterField___(void * jarg1) {
  CThostFtdcAccountregisterField *arg1 = (CThostFtdcAccountregisterField *) 0 ;
  
  arg1 = (CThostFtdcAccountregisterField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_BankSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_BankSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_PlateSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_PlateSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_LastFragment_set___(void * jarg1, char jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_LastFragment_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_CustomerName_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_CustomerName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_IdCardType_set___(void * jarg1, char jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_IdCardType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_IdentifiedCardNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_IdentifiedCardNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_Gender_set___(void * jarg1, char jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcGenderType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcGenderType)jarg2; 
  if (arg1) (arg1)->Gender = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_Gender_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcGenderType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcGenderType) ((arg1)->Gender);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_CountryCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CountryCode, (const char *)arg2, 21-1);
      arg1->CountryCode[21-1] = 0;
    } else {
      arg1->CountryCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_CountryCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->CountryCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_CustType_set___(void * jarg1, char jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_CustType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_Address_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_Address_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->Address);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_ZipCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ZipCode, (const char *)arg2, 7-1);
      arg1->ZipCode[7-1] = 0;
    } else {
      arg1->ZipCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_ZipCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->ZipCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_Telephone_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_Telephone_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->Telephone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_MobilePhone_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MobilePhone, (const char *)arg2, 21-1);
      arg1->MobilePhone[21-1] = 0;
    } else {
      arg1->MobilePhone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_MobilePhone_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->MobilePhone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_Fax_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Fax, (const char *)arg2, 41-1);
      arg1->Fax[41-1] = 0;
    } else {
      arg1->Fax[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_Fax_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->Fax);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_EMail_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->EMail, (const char *)arg2, 41-1);
      arg1->EMail[41-1] = 0;
    } else {
      arg1->EMail[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_EMail_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->EMail);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_MoneyAccountStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyAccountStatusType)jarg2; 
  if (arg1) (arg1)->MoneyAccountStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_MoneyAccountStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcMoneyAccountStatusType) ((arg1)->MoneyAccountStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_BankAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_BankAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_BankPassWord_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_BankPassWord_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_Password_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_Password_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_VerifyCertNoFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_VerifyCertNoFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_CashExchangeCode_set___(void * jarg1, char jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcCashExchangeCodeType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcCashExchangeCodeType)jarg2; 
  if (arg1) (arg1)->CashExchangeCode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_CashExchangeCode_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcCashExchangeCodeType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcCashExchangeCodeType) ((arg1)->CashExchangeCode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_Digest_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_Digest_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_BankAccType_set___(void * jarg1, char jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_BankAccType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_DeviceID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_DeviceID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_BankSecuAccType_set___(void * jarg1, char jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankSecuAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_BankSecuAccType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_BrokerIDByBank_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_BrokerIDByBank_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_BankSecuAcc_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_BankSecuAcc_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSecuAcc);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_BankPwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->BankPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_BankPwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_SecuPwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->SecuPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_SecuPwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_OperNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_OperNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_TID_set___(void * jarg1, int jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_TID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_ErrorID_set___(void * jarg1, int jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_ErrorID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_ErrorMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcOpenAccountField_ErrorMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcOpenAccountField___() {
  void * jresult ;
  CThostFtdcOpenAccountField *result = 0 ;
  
  result = (CThostFtdcOpenAccountField *)new CThostFtdcOpenAccountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcOpenAccountField___(void * jarg1) {
  CThostFtdcOpenAccountField *arg1 = (CThostFtdcOpenAccountField *) 0 ;
  
  arg1 = (CThostFtdcOpenAccountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_BankSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_BankSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_PlateSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_PlateSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_LastFragment_set___(void * jarg1, char jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_LastFragment_get___(void * jarg1) {
  char jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_CustomerName_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_CustomerName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_IdCardType_set___(void * jarg1, char jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_IdCardType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_IdentifiedCardNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_IdentifiedCardNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_Gender_set___(void * jarg1, char jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcGenderType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcGenderType)jarg2; 
  if (arg1) (arg1)->Gender = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_Gender_get___(void * jarg1) {
  char jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcGenderType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcGenderType) ((arg1)->Gender);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_CountryCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CountryCode, (const char *)arg2, 21-1);
      arg1->CountryCode[21-1] = 0;
    } else {
      arg1->CountryCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_CountryCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->CountryCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_CustType_set___(void * jarg1, char jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_CustType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_Address_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_Address_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->Address);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_ZipCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ZipCode, (const char *)arg2, 7-1);
      arg1->ZipCode[7-1] = 0;
    } else {
      arg1->ZipCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_ZipCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->ZipCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_Telephone_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_Telephone_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->Telephone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_MobilePhone_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MobilePhone, (const char *)arg2, 21-1);
      arg1->MobilePhone[21-1] = 0;
    } else {
      arg1->MobilePhone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_MobilePhone_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->MobilePhone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_Fax_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Fax, (const char *)arg2, 41-1);
      arg1->Fax[41-1] = 0;
    } else {
      arg1->Fax[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_Fax_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->Fax);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_EMail_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->EMail, (const char *)arg2, 41-1);
      arg1->EMail[41-1] = 0;
    } else {
      arg1->EMail[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_EMail_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->EMail);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_MoneyAccountStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyAccountStatusType)jarg2; 
  if (arg1) (arg1)->MoneyAccountStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_MoneyAccountStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcMoneyAccountStatusType) ((arg1)->MoneyAccountStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_BankAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_BankAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_BankPassWord_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_BankPassWord_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_Password_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_Password_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_VerifyCertNoFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_VerifyCertNoFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_CashExchangeCode_set___(void * jarg1, char jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcCashExchangeCodeType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcCashExchangeCodeType)jarg2; 
  if (arg1) (arg1)->CashExchangeCode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_CashExchangeCode_get___(void * jarg1) {
  char jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcCashExchangeCodeType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcCashExchangeCodeType) ((arg1)->CashExchangeCode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_Digest_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_Digest_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_BankAccType_set___(void * jarg1, char jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_BankAccType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_DeviceID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DeviceID, (const char *)arg2, 3-1);
      arg1->DeviceID[3-1] = 0;
    } else {
      arg1->DeviceID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_DeviceID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->DeviceID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_BankSecuAccType_set___(void * jarg1, char jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankSecuAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_BankSecuAccType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankSecuAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_BrokerIDByBank_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_BrokerIDByBank_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_BankSecuAcc_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSecuAcc, (const char *)arg2, 41-1);
      arg1->BankSecuAcc[41-1] = 0;
    } else {
      arg1->BankSecuAcc[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_BankSecuAcc_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSecuAcc);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_BankPwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->BankPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_BankPwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_SecuPwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->SecuPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_SecuPwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_OperNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OperNo, (const char *)arg2, 17-1);
      arg1->OperNo[17-1] = 0;
    } else {
      arg1->OperNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_OperNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->OperNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_TID_set___(void * jarg1, int jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_TID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_ErrorID_set___(void * jarg1, int jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_ErrorID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_ErrorMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCancelAccountField_ErrorMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcCancelAccountField___() {
  void * jresult ;
  CThostFtdcCancelAccountField *result = 0 ;
  
  result = (CThostFtdcCancelAccountField *)new CThostFtdcCancelAccountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcCancelAccountField___(void * jarg1) {
  CThostFtdcCancelAccountField *arg1 = (CThostFtdcCancelAccountField *) 0 ;
  
  arg1 = (CThostFtdcCancelAccountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_TradeCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeCode, (const char *)arg2, 7-1);
      arg1->TradeCode[7-1] = 0;
    } else {
      arg1->TradeCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_TradeCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_BankID_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankID, (const char *)arg2, 4-1);
      arg1->BankID[4-1] = 0;
    } else {
      arg1->BankID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_BankID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BankID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_BankBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankBranchID, (const char *)arg2, 5-1);
      arg1->BankBranchID[5-1] = 0;
    } else {
      arg1->BankBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_BankBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BankBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_BrokerBranchID_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerBranchID, (const char *)arg2, 31-1);
      arg1->BrokerBranchID[31-1] = 0;
    } else {
      arg1->BrokerBranchID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_BrokerBranchID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerBranchID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_TradeDate_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeDate, (const char *)arg2, 9-1);
      arg1->TradeDate[9-1] = 0;
    } else {
      arg1->TradeDate[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_TradeDate_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeDate);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_TradeTime_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradeTime, (const char *)arg2, 9-1);
      arg1->TradeTime[9-1] = 0;
    } else {
      arg1->TradeTime[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_TradeTime_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->TradeTime);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_BankSerial_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankSerial, (const char *)arg2, 13-1);
      arg1->BankSerial[13-1] = 0;
    } else {
      arg1->BankSerial[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_BankSerial_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BankSerial);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_TradingDay_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->TradingDay, (const char *)arg2, 9-1);
      arg1->TradingDay[9-1] = 0;
    } else {
      arg1->TradingDay[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_TradingDay_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->TradingDay);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_PlateSerial_set___(void * jarg1, int jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcSerialType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcSerialType)jarg2; 
  if (arg1) (arg1)->PlateSerial = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_PlateSerial_get___(void * jarg1) {
  int jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcSerialType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcSerialType) ((arg1)->PlateSerial);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_LastFragment_set___(void * jarg1, char jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcLastFragmentType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcLastFragmentType)jarg2; 
  if (arg1) (arg1)->LastFragment = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_LastFragment_get___(void * jarg1) {
  char jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcLastFragmentType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcLastFragmentType) ((arg1)->LastFragment);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_SessionID_set___(void * jarg1, int jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcSessionIDType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcSessionIDType)jarg2; 
  if (arg1) (arg1)->SessionID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_SessionID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcSessionIDType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcSessionIDType) ((arg1)->SessionID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_CustomerName_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CustomerName, (const char *)arg2, 51-1);
      arg1->CustomerName[51-1] = 0;
    } else {
      arg1->CustomerName[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_CustomerName_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->CustomerName);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_IdCardType_set___(void * jarg1, char jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcIdCardTypeType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcIdCardTypeType)jarg2; 
  if (arg1) (arg1)->IdCardType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_IdCardType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcIdCardTypeType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcIdCardTypeType) ((arg1)->IdCardType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_IdentifiedCardNo_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->IdentifiedCardNo, (const char *)arg2, 51-1);
      arg1->IdentifiedCardNo[51-1] = 0;
    } else {
      arg1->IdentifiedCardNo[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_IdentifiedCardNo_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->IdentifiedCardNo);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_Gender_set___(void * jarg1, char jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcGenderType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcGenderType)jarg2; 
  if (arg1) (arg1)->Gender = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_Gender_get___(void * jarg1) {
  char jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcGenderType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcGenderType) ((arg1)->Gender);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_CountryCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CountryCode, (const char *)arg2, 21-1);
      arg1->CountryCode[21-1] = 0;
    } else {
      arg1->CountryCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_CountryCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->CountryCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_CustType_set___(void * jarg1, char jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcCustTypeType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcCustTypeType)jarg2; 
  if (arg1) (arg1)->CustType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_CustType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcCustTypeType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcCustTypeType) ((arg1)->CustType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_Address_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Address, (const char *)arg2, 101-1);
      arg1->Address[101-1] = 0;
    } else {
      arg1->Address[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_Address_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->Address);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_ZipCode_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ZipCode, (const char *)arg2, 7-1);
      arg1->ZipCode[7-1] = 0;
    } else {
      arg1->ZipCode[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_ZipCode_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->ZipCode);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_Telephone_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Telephone, (const char *)arg2, 41-1);
      arg1->Telephone[41-1] = 0;
    } else {
      arg1->Telephone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_Telephone_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->Telephone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_MobilePhone_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->MobilePhone, (const char *)arg2, 21-1);
      arg1->MobilePhone[21-1] = 0;
    } else {
      arg1->MobilePhone[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_MobilePhone_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->MobilePhone);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_Fax_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Fax, (const char *)arg2, 41-1);
      arg1->Fax[41-1] = 0;
    } else {
      arg1->Fax[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_Fax_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->Fax);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_EMail_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->EMail, (const char *)arg2, 41-1);
      arg1->EMail[41-1] = 0;
    } else {
      arg1->EMail[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_EMail_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->EMail);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_MoneyAccountStatus_set___(void * jarg1, char jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcMoneyAccountStatusType)jarg2; 
  if (arg1) (arg1)->MoneyAccountStatus = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_MoneyAccountStatus_get___(void * jarg1) {
  char jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcMoneyAccountStatusType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcMoneyAccountStatusType) ((arg1)->MoneyAccountStatus);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_BankAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankAccount, (const char *)arg2, 41-1);
      arg1->BankAccount[41-1] = 0;
    } else {
      arg1->BankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_BankAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_BankPassWord_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BankPassWord, (const char *)arg2, 41-1);
      arg1->BankPassWord[41-1] = 0;
    } else {
      arg1->BankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_BankPassWord_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_NewBankAccount_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->NewBankAccount, (const char *)arg2, 41-1);
      arg1->NewBankAccount[41-1] = 0;
    } else {
      arg1->NewBankAccount[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_NewBankAccount_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->NewBankAccount);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_NewBankPassWord_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->NewBankPassWord, (const char *)arg2, 41-1);
      arg1->NewBankPassWord[41-1] = 0;
    } else {
      arg1->NewBankPassWord[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_NewBankPassWord_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->NewBankPassWord);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_Password_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Password, (const char *)arg2, 41-1);
      arg1->Password[41-1] = 0;
    } else {
      arg1->Password[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_Password_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->Password);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_BankAccType_set___(void * jarg1, char jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcBankAccTypeType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcBankAccTypeType)jarg2; 
  if (arg1) (arg1)->BankAccType = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_BankAccType_get___(void * jarg1) {
  char jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcBankAccTypeType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcBankAccTypeType) ((arg1)->BankAccType);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_InstallID_set___(void * jarg1, int jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcInstallIDType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcInstallIDType)jarg2; 
  if (arg1) (arg1)->InstallID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_InstallID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcInstallIDType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcInstallIDType) ((arg1)->InstallID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_VerifyCertNoFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcYesNoIndicatorType)jarg2; 
  if (arg1) (arg1)->VerifyCertNoFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_VerifyCertNoFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcYesNoIndicatorType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcYesNoIndicatorType) ((arg1)->VerifyCertNoFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_BrokerIDByBank_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerIDByBank, (const char *)arg2, 33-1);
      arg1->BrokerIDByBank[33-1] = 0;
    } else {
      arg1->BrokerIDByBank[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_BrokerIDByBank_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->BrokerIDByBank);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_BankPwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->BankPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_BankPwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->BankPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_SecuPwdFlag_set___(void * jarg1, char jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcPwdFlagType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcPwdFlagType)jarg2; 
  if (arg1) (arg1)->SecuPwdFlag = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_SecuPwdFlag_get___(void * jarg1) {
  char jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcPwdFlagType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcPwdFlagType) ((arg1)->SecuPwdFlag);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_TID_set___(void * jarg1, int jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcTIDType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcTIDType)jarg2; 
  if (arg1) (arg1)->TID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_TID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcTIDType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcTIDType) ((arg1)->TID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_Digest_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->Digest, (const char *)arg2, 36-1);
      arg1->Digest[36-1] = 0;
    } else {
      arg1->Digest[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_Digest_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->Digest);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_ErrorID_set___(void * jarg1, int jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcErrorIDType arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (TThostFtdcErrorIDType)jarg2; 
  if (arg1) (arg1)->ErrorID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_ErrorID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  TThostFtdcErrorIDType result;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (TThostFtdcErrorIDType) ((arg1)->ErrorID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_ErrorMsg_set___(void * jarg1, char * jarg2) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->ErrorMsg, (const char *)arg2, 81-1);
      arg1->ErrorMsg[81-1] = 0;
    } else {
      arg1->ErrorMsg[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcChangeAccountField_ErrorMsg_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  result = (char *) ((arg1)->ErrorMsg);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcChangeAccountField___() {
  void * jresult ;
  CThostFtdcChangeAccountField *result = 0 ;
  
  result = (CThostFtdcChangeAccountField *)new CThostFtdcChangeAccountField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcChangeAccountField___(void * jarg1) {
  CThostFtdcChangeAccountField *arg1 = (CThostFtdcChangeAccountField *) 0 ;
  
  arg1 = (CThostFtdcChangeAccountField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSecAgentACIDMapField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSecAgentACIDMapField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSecAgentACIDMapField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSecAgentACIDMapField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSecAgentACIDMapField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSecAgentACIDMapField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSecAgentACIDMapField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSecAgentACIDMapField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSecAgentACIDMapField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSecAgentACIDMapField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSecAgentACIDMapField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSecAgentACIDMapField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSecAgentACIDMapField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSecAgentACIDMapField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSecAgentACIDMapField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSecAgentACIDMapField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSecAgentACIDMapField_BrokerSecAgentID_set___(void * jarg1, char * jarg2) {
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcSecAgentACIDMapField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerSecAgentID, (const char *)arg2, 13-1);
      arg1->BrokerSecAgentID[13-1] = 0;
    } else {
      arg1->BrokerSecAgentID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcSecAgentACIDMapField_BrokerSecAgentID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcSecAgentACIDMapField *)jarg1; 
  result = (char *) ((arg1)->BrokerSecAgentID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcSecAgentACIDMapField___() {
  void * jresult ;
  CThostFtdcSecAgentACIDMapField *result = 0 ;
  
  result = (CThostFtdcSecAgentACIDMapField *)new CThostFtdcSecAgentACIDMapField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcSecAgentACIDMapField___(void * jarg1) {
  CThostFtdcSecAgentACIDMapField *arg1 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  
  arg1 = (CThostFtdcSecAgentACIDMapField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySecAgentACIDMapField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQrySecAgentACIDMapField *arg1 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySecAgentACIDMapField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySecAgentACIDMapField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySecAgentACIDMapField *arg1 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySecAgentACIDMapField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySecAgentACIDMapField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQrySecAgentACIDMapField *arg1 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySecAgentACIDMapField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySecAgentACIDMapField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySecAgentACIDMapField *arg1 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySecAgentACIDMapField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySecAgentACIDMapField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQrySecAgentACIDMapField *arg1 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySecAgentACIDMapField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySecAgentACIDMapField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySecAgentACIDMapField *arg1 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySecAgentACIDMapField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySecAgentACIDMapField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQrySecAgentACIDMapField *arg1 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQrySecAgentACIDMapField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQrySecAgentACIDMapField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQrySecAgentACIDMapField *arg1 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQrySecAgentACIDMapField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQrySecAgentACIDMapField___() {
  void * jresult ;
  CThostFtdcQrySecAgentACIDMapField *result = 0 ;
  
  result = (CThostFtdcQrySecAgentACIDMapField *)new CThostFtdcQrySecAgentACIDMapField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQrySecAgentACIDMapField___(void * jarg1) {
  CThostFtdcQrySecAgentACIDMapField *arg1 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  
  arg1 = (CThostFtdcQrySecAgentACIDMapField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserRightsAssignField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcUserRightsAssignField *arg1 = (CThostFtdcUserRightsAssignField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserRightsAssignField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserRightsAssignField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcUserRightsAssignField *arg1 = (CThostFtdcUserRightsAssignField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserRightsAssignField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserRightsAssignField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcUserRightsAssignField *arg1 = (CThostFtdcUserRightsAssignField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcUserRightsAssignField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserRightsAssignField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcUserRightsAssignField *arg1 = (CThostFtdcUserRightsAssignField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcUserRightsAssignField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserRightsAssignField_DRIdentityID_set___(void * jarg1, int jarg2) {
  CThostFtdcUserRightsAssignField *arg1 = (CThostFtdcUserRightsAssignField *) 0 ;
  TThostFtdcDRIdentityIDType arg2 ;
  
  arg1 = (CThostFtdcUserRightsAssignField *)jarg1; 
  arg2 = (TThostFtdcDRIdentityIDType)jarg2; 
  if (arg1) (arg1)->DRIdentityID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcUserRightsAssignField_DRIdentityID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcUserRightsAssignField *arg1 = (CThostFtdcUserRightsAssignField *) 0 ;
  TThostFtdcDRIdentityIDType result;
  
  arg1 = (CThostFtdcUserRightsAssignField *)jarg1; 
  result = (TThostFtdcDRIdentityIDType) ((arg1)->DRIdentityID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcUserRightsAssignField___() {
  void * jresult ;
  CThostFtdcUserRightsAssignField *result = 0 ;
  
  result = (CThostFtdcUserRightsAssignField *)new CThostFtdcUserRightsAssignField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcUserRightsAssignField___(void * jarg1) {
  CThostFtdcUserRightsAssignField *arg1 = (CThostFtdcUserRightsAssignField *) 0 ;
  
  arg1 = (CThostFtdcUserRightsAssignField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserRightAssignField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcBrokerUserRightAssignField *arg1 = (CThostFtdcBrokerUserRightAssignField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcBrokerUserRightAssignField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserRightAssignField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcBrokerUserRightAssignField *arg1 = (CThostFtdcBrokerUserRightAssignField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcBrokerUserRightAssignField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserRightAssignField_DRIdentityID_set___(void * jarg1, int jarg2) {
  CThostFtdcBrokerUserRightAssignField *arg1 = (CThostFtdcBrokerUserRightAssignField *) 0 ;
  TThostFtdcDRIdentityIDType arg2 ;
  
  arg1 = (CThostFtdcBrokerUserRightAssignField *)jarg1; 
  arg2 = (TThostFtdcDRIdentityIDType)jarg2; 
  if (arg1) (arg1)->DRIdentityID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserRightAssignField_DRIdentityID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcBrokerUserRightAssignField *arg1 = (CThostFtdcBrokerUserRightAssignField *) 0 ;
  TThostFtdcDRIdentityIDType result;
  
  arg1 = (CThostFtdcBrokerUserRightAssignField *)jarg1; 
  result = (TThostFtdcDRIdentityIDType) ((arg1)->DRIdentityID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserRightAssignField_Tradeable_set___(void * jarg1, int jarg2) {
  CThostFtdcBrokerUserRightAssignField *arg1 = (CThostFtdcBrokerUserRightAssignField *) 0 ;
  TThostFtdcBoolType arg2 ;
  
  arg1 = (CThostFtdcBrokerUserRightAssignField *)jarg1; 
  arg2 = (TThostFtdcBoolType)jarg2; 
  if (arg1) (arg1)->Tradeable = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcBrokerUserRightAssignField_Tradeable_get___(void * jarg1) {
  int jresult ;
  CThostFtdcBrokerUserRightAssignField *arg1 = (CThostFtdcBrokerUserRightAssignField *) 0 ;
  TThostFtdcBoolType result;
  
  arg1 = (CThostFtdcBrokerUserRightAssignField *)jarg1; 
  result = (TThostFtdcBoolType) ((arg1)->Tradeable);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcBrokerUserRightAssignField___() {
  void * jresult ;
  CThostFtdcBrokerUserRightAssignField *result = 0 ;
  
  result = (CThostFtdcBrokerUserRightAssignField *)new CThostFtdcBrokerUserRightAssignField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcBrokerUserRightAssignField___(void * jarg1) {
  CThostFtdcBrokerUserRightAssignField *arg1 = (CThostFtdcBrokerUserRightAssignField *) 0 ;
  
  arg1 = (CThostFtdcBrokerUserRightAssignField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDRTransferField_OrigDRIdentityID_set___(void * jarg1, int jarg2) {
  CThostFtdcDRTransferField *arg1 = (CThostFtdcDRTransferField *) 0 ;
  TThostFtdcDRIdentityIDType arg2 ;
  
  arg1 = (CThostFtdcDRTransferField *)jarg1; 
  arg2 = (TThostFtdcDRIdentityIDType)jarg2; 
  if (arg1) (arg1)->OrigDRIdentityID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDRTransferField_OrigDRIdentityID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcDRTransferField *arg1 = (CThostFtdcDRTransferField *) 0 ;
  TThostFtdcDRIdentityIDType result;
  
  arg1 = (CThostFtdcDRTransferField *)jarg1; 
  result = (TThostFtdcDRIdentityIDType) ((arg1)->OrigDRIdentityID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDRTransferField_DestDRIdentityID_set___(void * jarg1, int jarg2) {
  CThostFtdcDRTransferField *arg1 = (CThostFtdcDRTransferField *) 0 ;
  TThostFtdcDRIdentityIDType arg2 ;
  
  arg1 = (CThostFtdcDRTransferField *)jarg1; 
  arg2 = (TThostFtdcDRIdentityIDType)jarg2; 
  if (arg1) (arg1)->DestDRIdentityID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDRTransferField_DestDRIdentityID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcDRTransferField *arg1 = (CThostFtdcDRTransferField *) 0 ;
  TThostFtdcDRIdentityIDType result;
  
  arg1 = (CThostFtdcDRTransferField *)jarg1; 
  result = (TThostFtdcDRIdentityIDType) ((arg1)->DestDRIdentityID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDRTransferField_OrigBrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcDRTransferField *arg1 = (CThostFtdcDRTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDRTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->OrigBrokerID, (const char *)arg2, 11-1);
      arg1->OrigBrokerID[11-1] = 0;
    } else {
      arg1->OrigBrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDRTransferField_OrigBrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcDRTransferField *arg1 = (CThostFtdcDRTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDRTransferField *)jarg1; 
  result = (char *) ((arg1)->OrigBrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDRTransferField_DestBrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcDRTransferField *arg1 = (CThostFtdcDRTransferField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcDRTransferField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->DestBrokerID, (const char *)arg2, 11-1);
      arg1->DestBrokerID[11-1] = 0;
    } else {
      arg1->DestBrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcDRTransferField_DestBrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcDRTransferField *arg1 = (CThostFtdcDRTransferField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcDRTransferField *)jarg1; 
  result = (char *) ((arg1)->DestBrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcDRTransferField___() {
  void * jresult ;
  CThostFtdcDRTransferField *result = 0 ;
  
  result = (CThostFtdcDRTransferField *)new CThostFtdcDRTransferField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcDRTransferField___(void * jarg1) {
  CThostFtdcDRTransferField *arg1 = (CThostFtdcDRTransferField *) 0 ;
  
  arg1 = (CThostFtdcDRTransferField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFensUserInfoField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcFensUserInfoField *arg1 = (CThostFtdcFensUserInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFensUserInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFensUserInfoField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcFensUserInfoField *arg1 = (CThostFtdcFensUserInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFensUserInfoField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFensUserInfoField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcFensUserInfoField *arg1 = (CThostFtdcFensUserInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcFensUserInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFensUserInfoField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcFensUserInfoField *arg1 = (CThostFtdcFensUserInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcFensUserInfoField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFensUserInfoField_LoginMode_set___(void * jarg1, char jarg2) {
  CThostFtdcFensUserInfoField *arg1 = (CThostFtdcFensUserInfoField *) 0 ;
  TThostFtdcLoginModeType arg2 ;
  
  arg1 = (CThostFtdcFensUserInfoField *)jarg1; 
  arg2 = (TThostFtdcLoginModeType)jarg2; 
  if (arg1) (arg1)->LoginMode = arg2;
}


SWIGEXPORT char SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcFensUserInfoField_LoginMode_get___(void * jarg1) {
  char jresult ;
  CThostFtdcFensUserInfoField *arg1 = (CThostFtdcFensUserInfoField *) 0 ;
  TThostFtdcLoginModeType result;
  
  arg1 = (CThostFtdcFensUserInfoField *)jarg1; 
  result = (TThostFtdcLoginModeType) ((arg1)->LoginMode);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcFensUserInfoField___() {
  void * jresult ;
  CThostFtdcFensUserInfoField *result = 0 ;
  
  result = (CThostFtdcFensUserInfoField *)new CThostFtdcFensUserInfoField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcFensUserInfoField___(void * jarg1) {
  CThostFtdcFensUserInfoField *arg1 = (CThostFtdcFensUserInfoField *) 0 ;
  
  arg1 = (CThostFtdcFensUserInfoField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCurrTransferIdentityField_IdentityID_set___(void * jarg1, int jarg2) {
  CThostFtdcCurrTransferIdentityField *arg1 = (CThostFtdcCurrTransferIdentityField *) 0 ;
  TThostFtdcDRIdentityIDType arg2 ;
  
  arg1 = (CThostFtdcCurrTransferIdentityField *)jarg1; 
  arg2 = (TThostFtdcDRIdentityIDType)jarg2; 
  if (arg1) (arg1)->IdentityID = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcCurrTransferIdentityField_IdentityID_get___(void * jarg1) {
  int jresult ;
  CThostFtdcCurrTransferIdentityField *arg1 = (CThostFtdcCurrTransferIdentityField *) 0 ;
  TThostFtdcDRIdentityIDType result;
  
  arg1 = (CThostFtdcCurrTransferIdentityField *)jarg1; 
  result = (TThostFtdcDRIdentityIDType) ((arg1)->IdentityID);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcCurrTransferIdentityField___() {
  void * jresult ;
  CThostFtdcCurrTransferIdentityField *result = 0 ;
  
  result = (CThostFtdcCurrTransferIdentityField *)new CThostFtdcCurrTransferIdentityField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcCurrTransferIdentityField___(void * jarg1) {
  CThostFtdcCurrTransferIdentityField *arg1 = (CThostFtdcCurrTransferIdentityField *) 0 ;
  
  arg1 = (CThostFtdcCurrTransferIdentityField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginForbiddenUserField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcLoginForbiddenUserField *arg1 = (CThostFtdcLoginForbiddenUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginForbiddenUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginForbiddenUserField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginForbiddenUserField *arg1 = (CThostFtdcLoginForbiddenUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginForbiddenUserField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginForbiddenUserField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcLoginForbiddenUserField *arg1 = (CThostFtdcLoginForbiddenUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcLoginForbiddenUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcLoginForbiddenUserField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcLoginForbiddenUserField *arg1 = (CThostFtdcLoginForbiddenUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcLoginForbiddenUserField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcLoginForbiddenUserField___() {
  void * jresult ;
  CThostFtdcLoginForbiddenUserField *result = 0 ;
  
  result = (CThostFtdcLoginForbiddenUserField *)new CThostFtdcLoginForbiddenUserField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcLoginForbiddenUserField___(void * jarg1) {
  CThostFtdcLoginForbiddenUserField *arg1 = (CThostFtdcLoginForbiddenUserField *) 0 ;
  
  arg1 = (CThostFtdcLoginForbiddenUserField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryLoginForbiddenUserField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryLoginForbiddenUserField *arg1 = (CThostFtdcQryLoginForbiddenUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryLoginForbiddenUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryLoginForbiddenUserField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryLoginForbiddenUserField *arg1 = (CThostFtdcQryLoginForbiddenUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryLoginForbiddenUserField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryLoginForbiddenUserField_UserID_set___(void * jarg1, char * jarg2) {
  CThostFtdcQryLoginForbiddenUserField *arg1 = (CThostFtdcQryLoginForbiddenUserField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcQryLoginForbiddenUserField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->UserID, (const char *)arg2, 16-1);
      arg1->UserID[16-1] = 0;
    } else {
      arg1->UserID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcQryLoginForbiddenUserField_UserID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcQryLoginForbiddenUserField *arg1 = (CThostFtdcQryLoginForbiddenUserField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcQryLoginForbiddenUserField *)jarg1; 
  result = (char *) ((arg1)->UserID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcQryLoginForbiddenUserField___() {
  void * jresult ;
  CThostFtdcQryLoginForbiddenUserField *result = 0 ;
  
  result = (CThostFtdcQryLoginForbiddenUserField *)new CThostFtdcQryLoginForbiddenUserField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcQryLoginForbiddenUserField___(void * jarg1) {
  CThostFtdcQryLoginForbiddenUserField *arg1 = (CThostFtdcQryLoginForbiddenUserField *) 0 ;
  
  arg1 = (CThostFtdcQryLoginForbiddenUserField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMulticastGroupInfoField_GroupIP_set___(void * jarg1, char * jarg2) {
  CThostFtdcMulticastGroupInfoField *arg1 = (CThostFtdcMulticastGroupInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMulticastGroupInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->GroupIP, (const char *)arg2, 16-1);
      arg1->GroupIP[16-1] = 0;
    } else {
      arg1->GroupIP[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMulticastGroupInfoField_GroupIP_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMulticastGroupInfoField *arg1 = (CThostFtdcMulticastGroupInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMulticastGroupInfoField *)jarg1; 
  result = (char *) ((arg1)->GroupIP);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMulticastGroupInfoField_GroupPort_set___(void * jarg1, int jarg2) {
  CThostFtdcMulticastGroupInfoField *arg1 = (CThostFtdcMulticastGroupInfoField *) 0 ;
  TThostFtdcIPPortType arg2 ;
  
  arg1 = (CThostFtdcMulticastGroupInfoField *)jarg1; 
  arg2 = (TThostFtdcIPPortType)jarg2; 
  if (arg1) (arg1)->GroupPort = arg2;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMulticastGroupInfoField_GroupPort_get___(void * jarg1) {
  int jresult ;
  CThostFtdcMulticastGroupInfoField *arg1 = (CThostFtdcMulticastGroupInfoField *) 0 ;
  TThostFtdcIPPortType result;
  
  arg1 = (CThostFtdcMulticastGroupInfoField *)jarg1; 
  result = (TThostFtdcIPPortType) ((arg1)->GroupPort);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMulticastGroupInfoField_SourceIP_set___(void * jarg1, char * jarg2) {
  CThostFtdcMulticastGroupInfoField *arg1 = (CThostFtdcMulticastGroupInfoField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcMulticastGroupInfoField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->SourceIP, (const char *)arg2, 16-1);
      arg1->SourceIP[16-1] = 0;
    } else {
      arg1->SourceIP[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcMulticastGroupInfoField_SourceIP_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcMulticastGroupInfoField *arg1 = (CThostFtdcMulticastGroupInfoField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcMulticastGroupInfoField *)jarg1; 
  result = (char *) ((arg1)->SourceIP);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcMulticastGroupInfoField___() {
  void * jresult ;
  CThostFtdcMulticastGroupInfoField *result = 0 ;
  
  result = (CThostFtdcMulticastGroupInfoField *)new CThostFtdcMulticastGroupInfoField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcMulticastGroupInfoField___(void * jarg1) {
  CThostFtdcMulticastGroupInfoField *arg1 = (CThostFtdcMulticastGroupInfoField *) 0 ;
  
  arg1 = (CThostFtdcMulticastGroupInfoField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountReserveField_BrokerID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountReserveField *arg1 = (CThostFtdcTradingAccountReserveField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountReserveField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->BrokerID, (const char *)arg2, 11-1);
      arg1->BrokerID[11-1] = 0;
    } else {
      arg1->BrokerID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountReserveField_BrokerID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountReserveField *arg1 = (CThostFtdcTradingAccountReserveField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountReserveField *)jarg1; 
  result = (char *) ((arg1)->BrokerID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountReserveField_AccountID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountReserveField *arg1 = (CThostFtdcTradingAccountReserveField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountReserveField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->AccountID, (const char *)arg2, 13-1);
      arg1->AccountID[13-1] = 0;
    } else {
      arg1->AccountID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountReserveField_AccountID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountReserveField *arg1 = (CThostFtdcTradingAccountReserveField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountReserveField *)jarg1; 
  result = (char *) ((arg1)->AccountID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountReserveField_Reserve_set___(void * jarg1, double jarg2) {
  CThostFtdcTradingAccountReserveField *arg1 = (CThostFtdcTradingAccountReserveField *) 0 ;
  TThostFtdcMoneyType arg2 ;
  
  arg1 = (CThostFtdcTradingAccountReserveField *)jarg1; 
  arg2 = (TThostFtdcMoneyType)jarg2; 
  if (arg1) (arg1)->Reserve = arg2;
}


SWIGEXPORT double SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountReserveField_Reserve_get___(void * jarg1) {
  double jresult ;
  CThostFtdcTradingAccountReserveField *arg1 = (CThostFtdcTradingAccountReserveField *) 0 ;
  TThostFtdcMoneyType result;
  
  arg1 = (CThostFtdcTradingAccountReserveField *)jarg1; 
  result = (TThostFtdcMoneyType) ((arg1)->Reserve);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountReserveField_CurrencyID_set___(void * jarg1, char * jarg2) {
  CThostFtdcTradingAccountReserveField *arg1 = (CThostFtdcTradingAccountReserveField *) 0 ;
  char *arg2 ;
  
  arg1 = (CThostFtdcTradingAccountReserveField *)jarg1; 
  arg2 = (char *)jarg2; 
  {
    if(arg2) {
      strncpy((char*)arg1->CurrencyID, (const char *)arg2, 4-1);
      arg1->CurrencyID[4-1] = 0;
    } else {
      arg1->CurrencyID[0] = 0;
    }
  }
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTradingAccountReserveField_CurrencyID_get___(void * jarg1) {
  char * jresult ;
  CThostFtdcTradingAccountReserveField *arg1 = (CThostFtdcTradingAccountReserveField *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTradingAccountReserveField *)jarg1; 
  result = (char *) ((arg1)->CurrencyID);
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcTradingAccountReserveField___() {
  void * jresult ;
  CThostFtdcTradingAccountReserveField *result = 0 ;
  
  result = (CThostFtdcTradingAccountReserveField *)new CThostFtdcTradingAccountReserveField();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcTradingAccountReserveField___(void * jarg1) {
  CThostFtdcTradingAccountReserveField *arg1 = (CThostFtdcTradingAccountReserveField *) 0 ;
  
  arg1 = (CThostFtdcTradingAccountReserveField *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnFrontConnected___(void * jarg1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  (arg1)->OnFrontConnected();
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnFrontConnectedSwigExplicitCThostFtdcTraderSpi___(void * jarg1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  (arg1)->CThostFtdcTraderSpi::OnFrontConnected();
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnFrontDisconnected___(void * jarg1, int jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  int arg2 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (int)jarg2; 
  (arg1)->OnFrontDisconnected(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnFrontDisconnectedSwigExplicitCThostFtdcTraderSpi___(void * jarg1, int jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  int arg2 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (int)jarg2; 
  (arg1)->CThostFtdcTraderSpi::OnFrontDisconnected(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnHeartBeatWarning___(void * jarg1, int jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  int arg2 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (int)jarg2; 
  (arg1)->OnHeartBeatWarning(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnHeartBeatWarningSwigExplicitCThostFtdcTraderSpi___(void * jarg1, int jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  int arg2 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (int)jarg2; 
  (arg1)->CThostFtdcTraderSpi::OnHeartBeatWarning(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspAuthenticate___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspAuthenticateField *arg2 = (CThostFtdcRspAuthenticateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRspAuthenticateField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspAuthenticate(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspAuthenticateSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspAuthenticateField *arg2 = (CThostFtdcRspAuthenticateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRspAuthenticateField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspAuthenticate(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspUserLogin___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspUserLoginField *arg2 = (CThostFtdcRspUserLoginField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRspUserLoginField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspUserLogin(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspUserLoginSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspUserLoginField *arg2 = (CThostFtdcRspUserLoginField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRspUserLoginField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspUserLogin(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspUserLogout___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcUserLogoutField *arg2 = (CThostFtdcUserLogoutField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcUserLogoutField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspUserLogout(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspUserLogoutSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcUserLogoutField *arg2 = (CThostFtdcUserLogoutField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcUserLogoutField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspUserLogout(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspUserPasswordUpdate___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcUserPasswordUpdateField *arg2 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcUserPasswordUpdateField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspUserPasswordUpdate(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspUserPasswordUpdateSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcUserPasswordUpdateField *arg2 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcUserPasswordUpdateField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspUserPasswordUpdate(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspTradingAccountPasswordUpdate___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradingAccountPasswordUpdateField *arg2 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcTradingAccountPasswordUpdateField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspTradingAccountPasswordUpdate(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspTradingAccountPasswordUpdateSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradingAccountPasswordUpdateField *arg2 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcTradingAccountPasswordUpdateField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspTradingAccountPasswordUpdate(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspOrderInsert___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputOrderField *arg2 = (CThostFtdcInputOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInputOrderField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspOrderInsert(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspOrderInsertSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputOrderField *arg2 = (CThostFtdcInputOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInputOrderField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspOrderInsert(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspParkedOrderInsert___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcParkedOrderField *arg2 = (CThostFtdcParkedOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcParkedOrderField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspParkedOrderInsert(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspParkedOrderInsertSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcParkedOrderField *arg2 = (CThostFtdcParkedOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcParkedOrderField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspParkedOrderInsert(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspParkedOrderAction___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcParkedOrderActionField *arg2 = (CThostFtdcParkedOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcParkedOrderActionField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspParkedOrderAction(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspParkedOrderActionSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcParkedOrderActionField *arg2 = (CThostFtdcParkedOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcParkedOrderActionField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspParkedOrderAction(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspOrderAction___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputOrderActionField *arg2 = (CThostFtdcInputOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInputOrderActionField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspOrderAction(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspOrderActionSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputOrderActionField *arg2 = (CThostFtdcInputOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInputOrderActionField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspOrderAction(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQueryMaxOrderVolume___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcQueryMaxOrderVolumeField *arg2 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcQueryMaxOrderVolumeField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQueryMaxOrderVolume(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQueryMaxOrderVolumeSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcQueryMaxOrderVolumeField *arg2 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcQueryMaxOrderVolumeField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQueryMaxOrderVolume(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspSettlementInfoConfirm___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcSettlementInfoConfirmField *arg2 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcSettlementInfoConfirmField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspSettlementInfoConfirm(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspSettlementInfoConfirmSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcSettlementInfoConfirmField *arg2 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcSettlementInfoConfirmField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspSettlementInfoConfirm(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspRemoveParkedOrder___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRemoveParkedOrderField *arg2 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRemoveParkedOrderField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspRemoveParkedOrder(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspRemoveParkedOrderSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRemoveParkedOrderField *arg2 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRemoveParkedOrderField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspRemoveParkedOrder(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspRemoveParkedOrderAction___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRemoveParkedOrderActionField *arg2 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRemoveParkedOrderActionField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspRemoveParkedOrderAction(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspRemoveParkedOrderActionSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRemoveParkedOrderActionField *arg2 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRemoveParkedOrderActionField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspRemoveParkedOrderAction(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspExecOrderInsert___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputExecOrderField *arg2 = (CThostFtdcInputExecOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInputExecOrderField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspExecOrderInsert(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspExecOrderInsertSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputExecOrderField *arg2 = (CThostFtdcInputExecOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInputExecOrderField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspExecOrderInsert(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspExecOrderAction___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputExecOrderActionField *arg2 = (CThostFtdcInputExecOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInputExecOrderActionField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspExecOrderAction(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspExecOrderActionSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputExecOrderActionField *arg2 = (CThostFtdcInputExecOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInputExecOrderActionField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspExecOrderAction(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspForQuoteInsert___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputForQuoteField *arg2 = (CThostFtdcInputForQuoteField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInputForQuoteField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspForQuoteInsert(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspForQuoteInsertSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputForQuoteField *arg2 = (CThostFtdcInputForQuoteField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInputForQuoteField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspForQuoteInsert(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQuoteInsert___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputQuoteField *arg2 = (CThostFtdcInputQuoteField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInputQuoteField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQuoteInsert(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQuoteInsertSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputQuoteField *arg2 = (CThostFtdcInputQuoteField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInputQuoteField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQuoteInsert(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQuoteAction___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputQuoteActionField *arg2 = (CThostFtdcInputQuoteActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInputQuoteActionField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQuoteAction(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQuoteActionSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputQuoteActionField *arg2 = (CThostFtdcInputQuoteActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInputQuoteActionField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQuoteAction(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspCombActionInsert___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputCombActionField *arg2 = (CThostFtdcInputCombActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInputCombActionField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspCombActionInsert(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspCombActionInsertSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputCombActionField *arg2 = (CThostFtdcInputCombActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInputCombActionField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspCombActionInsert(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryOrder___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcOrderField *arg2 = (CThostFtdcOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcOrderField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryOrder(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryOrderSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcOrderField *arg2 = (CThostFtdcOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcOrderField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryOrder(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryTrade___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradeField *arg2 = (CThostFtdcTradeField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcTradeField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryTrade(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryTradeSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradeField *arg2 = (CThostFtdcTradeField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcTradeField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryTrade(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryInvestorPosition___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInvestorPositionField *arg2 = (CThostFtdcInvestorPositionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInvestorPositionField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryInvestorPosition(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryInvestorPositionSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInvestorPositionField *arg2 = (CThostFtdcInvestorPositionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInvestorPositionField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryInvestorPosition(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryTradingAccount___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradingAccountField *arg2 = (CThostFtdcTradingAccountField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcTradingAccountField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryTradingAccount(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryTradingAccountSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradingAccountField *arg2 = (CThostFtdcTradingAccountField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcTradingAccountField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryTradingAccount(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryInvestor___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInvestorField *arg2 = (CThostFtdcInvestorField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInvestorField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryInvestor(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryInvestorSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInvestorField *arg2 = (CThostFtdcInvestorField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInvestorField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryInvestor(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryTradingCode___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradingCodeField *arg2 = (CThostFtdcTradingCodeField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcTradingCodeField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryTradingCode(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryTradingCodeSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradingCodeField *arg2 = (CThostFtdcTradingCodeField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcTradingCodeField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryTradingCode(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryInstrumentMarginRate___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInstrumentMarginRateField *arg2 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInstrumentMarginRateField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryInstrumentMarginRate(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryInstrumentMarginRateSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInstrumentMarginRateField *arg2 = (CThostFtdcInstrumentMarginRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInstrumentMarginRateField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryInstrumentMarginRate(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryInstrumentCommissionRate___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInstrumentCommissionRateField *arg2 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInstrumentCommissionRateField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryInstrumentCommissionRate(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryInstrumentCommissionRateSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInstrumentCommissionRateField *arg2 = (CThostFtdcInstrumentCommissionRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInstrumentCommissionRateField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryInstrumentCommissionRate(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryExchange___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExchangeField *arg2 = (CThostFtdcExchangeField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcExchangeField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryExchange(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryExchangeSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExchangeField *arg2 = (CThostFtdcExchangeField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcExchangeField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryExchange(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryProduct___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcProductField *arg2 = (CThostFtdcProductField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcProductField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryProduct(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryProductSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcProductField *arg2 = (CThostFtdcProductField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcProductField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryProduct(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryInstrument___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInstrumentField *arg2 = (CThostFtdcInstrumentField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInstrumentField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryInstrument(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryInstrumentSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInstrumentField *arg2 = (CThostFtdcInstrumentField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInstrumentField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryInstrument(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryDepthMarketData___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcDepthMarketDataField *arg2 = (CThostFtdcDepthMarketDataField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcDepthMarketDataField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryDepthMarketData(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryDepthMarketDataSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcDepthMarketDataField *arg2 = (CThostFtdcDepthMarketDataField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcDepthMarketDataField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryDepthMarketData(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQrySettlementInfo___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcSettlementInfoField *arg2 = (CThostFtdcSettlementInfoField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcSettlementInfoField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQrySettlementInfo(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQrySettlementInfoSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcSettlementInfoField *arg2 = (CThostFtdcSettlementInfoField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcSettlementInfoField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQrySettlementInfo(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryTransferBank___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTransferBankField *arg2 = (CThostFtdcTransferBankField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcTransferBankField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryTransferBank(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryTransferBankSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTransferBankField *arg2 = (CThostFtdcTransferBankField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcTransferBankField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryTransferBank(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryInvestorPositionDetail___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInvestorPositionDetailField *arg2 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInvestorPositionDetailField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryInvestorPositionDetail(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryInvestorPositionDetailSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInvestorPositionDetailField *arg2 = (CThostFtdcInvestorPositionDetailField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInvestorPositionDetailField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryInvestorPositionDetail(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryNotice___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcNoticeField *arg2 = (CThostFtdcNoticeField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcNoticeField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryNotice(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryNoticeSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcNoticeField *arg2 = (CThostFtdcNoticeField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcNoticeField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryNotice(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQrySettlementInfoConfirm___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcSettlementInfoConfirmField *arg2 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcSettlementInfoConfirmField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQrySettlementInfoConfirm(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQrySettlementInfoConfirmSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcSettlementInfoConfirmField *arg2 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcSettlementInfoConfirmField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQrySettlementInfoConfirm(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryInvestorPositionCombineDetail___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInvestorPositionCombineDetailField *arg2 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInvestorPositionCombineDetailField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryInvestorPositionCombineDetail(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryInvestorPositionCombineDetailSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInvestorPositionCombineDetailField *arg2 = (CThostFtdcInvestorPositionCombineDetailField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInvestorPositionCombineDetailField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryInvestorPositionCombineDetail(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryCFMMCTradingAccountKey___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcCFMMCTradingAccountKeyField *arg2 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcCFMMCTradingAccountKeyField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryCFMMCTradingAccountKey(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryCFMMCTradingAccountKeySwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcCFMMCTradingAccountKeyField *arg2 = (CThostFtdcCFMMCTradingAccountKeyField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcCFMMCTradingAccountKeyField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryCFMMCTradingAccountKey(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryEWarrantOffset___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcEWarrantOffsetField *arg2 = (CThostFtdcEWarrantOffsetField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcEWarrantOffsetField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryEWarrantOffset(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryEWarrantOffsetSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcEWarrantOffsetField *arg2 = (CThostFtdcEWarrantOffsetField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcEWarrantOffsetField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryEWarrantOffset(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryInvestorProductGroupMargin___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInvestorProductGroupMarginField *arg2 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInvestorProductGroupMarginField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryInvestorProductGroupMargin(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryInvestorProductGroupMarginSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInvestorProductGroupMarginField *arg2 = (CThostFtdcInvestorProductGroupMarginField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInvestorProductGroupMarginField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryInvestorProductGroupMargin(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryExchangeMarginRate___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExchangeMarginRateField *arg2 = (CThostFtdcExchangeMarginRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcExchangeMarginRateField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryExchangeMarginRate(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryExchangeMarginRateSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExchangeMarginRateField *arg2 = (CThostFtdcExchangeMarginRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcExchangeMarginRateField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryExchangeMarginRate(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryExchangeMarginRateAdjust___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExchangeMarginRateAdjustField *arg2 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcExchangeMarginRateAdjustField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryExchangeMarginRateAdjust(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryExchangeMarginRateAdjustSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExchangeMarginRateAdjustField *arg2 = (CThostFtdcExchangeMarginRateAdjustField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcExchangeMarginRateAdjustField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryExchangeMarginRateAdjust(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryExchangeRate___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExchangeRateField *arg2 = (CThostFtdcExchangeRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcExchangeRateField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryExchangeRate(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryExchangeRateSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExchangeRateField *arg2 = (CThostFtdcExchangeRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcExchangeRateField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryExchangeRate(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQrySecAgentACIDMap___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcSecAgentACIDMapField *arg2 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcSecAgentACIDMapField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQrySecAgentACIDMap(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQrySecAgentACIDMapSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcSecAgentACIDMapField *arg2 = (CThostFtdcSecAgentACIDMapField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcSecAgentACIDMapField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQrySecAgentACIDMap(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryProductExchRate___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcProductExchRateField *arg2 = (CThostFtdcProductExchRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcProductExchRateField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryProductExchRate(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryProductExchRateSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcProductExchRateField *arg2 = (CThostFtdcProductExchRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcProductExchRateField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryProductExchRate(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryOptionInstrTradeCost___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcOptionInstrTradeCostField *arg2 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcOptionInstrTradeCostField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryOptionInstrTradeCost(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryOptionInstrTradeCostSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcOptionInstrTradeCostField *arg2 = (CThostFtdcOptionInstrTradeCostField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcOptionInstrTradeCostField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryOptionInstrTradeCost(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryOptionInstrCommRate___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcOptionInstrCommRateField *arg2 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcOptionInstrCommRateField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryOptionInstrCommRate(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryOptionInstrCommRateSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcOptionInstrCommRateField *arg2 = (CThostFtdcOptionInstrCommRateField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcOptionInstrCommRateField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryOptionInstrCommRate(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryExecOrder___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExecOrderField *arg2 = (CThostFtdcExecOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcExecOrderField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryExecOrder(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryExecOrderSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExecOrderField *arg2 = (CThostFtdcExecOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcExecOrderField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryExecOrder(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryForQuote___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcForQuoteField *arg2 = (CThostFtdcForQuoteField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcForQuoteField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryForQuote(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryForQuoteSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcForQuoteField *arg2 = (CThostFtdcForQuoteField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcForQuoteField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryForQuote(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryQuote___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcQuoteField *arg2 = (CThostFtdcQuoteField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcQuoteField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryQuote(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryQuoteSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcQuoteField *arg2 = (CThostFtdcQuoteField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcQuoteField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryQuote(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryCombInstrumentGuard___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcCombInstrumentGuardField *arg2 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcCombInstrumentGuardField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryCombInstrumentGuard(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryCombInstrumentGuardSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcCombInstrumentGuardField *arg2 = (CThostFtdcCombInstrumentGuardField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcCombInstrumentGuardField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryCombInstrumentGuard(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryCombAction___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcCombActionField *arg2 = (CThostFtdcCombActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcCombActionField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryCombAction(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryCombActionSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcCombActionField *arg2 = (CThostFtdcCombActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcCombActionField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryCombAction(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryTransferSerial___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTransferSerialField *arg2 = (CThostFtdcTransferSerialField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcTransferSerialField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryTransferSerial(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryTransferSerialSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTransferSerialField *arg2 = (CThostFtdcTransferSerialField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcTransferSerialField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryTransferSerial(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryAccountregister___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcAccountregisterField *arg2 = (CThostFtdcAccountregisterField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcAccountregisterField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryAccountregister(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryAccountregisterSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcAccountregisterField *arg2 = (CThostFtdcAccountregisterField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcAccountregisterField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryAccountregister(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspError___(void * jarg1, void * jarg2, int jarg3, unsigned int jarg4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspInfoField *arg2 = (CThostFtdcRspInfoField *) 0 ;
  int arg3 ;
  bool arg4 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRspInfoField *)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = jarg4 ? true : false; 
  (arg1)->OnRspError(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspErrorSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, int jarg3, unsigned int jarg4) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspInfoField *arg2 = (CThostFtdcRspInfoField *) 0 ;
  int arg3 ;
  bool arg4 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRspInfoField *)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = jarg4 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspError(arg2,arg3,arg4);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnOrder___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcOrderField *arg2 = (CThostFtdcOrderField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcOrderField *)jarg2; 
  (arg1)->OnRtnOrder(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnOrderSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcOrderField *arg2 = (CThostFtdcOrderField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcOrderField *)jarg2; 
  (arg1)->CThostFtdcTraderSpi::OnRtnOrder(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnTrade___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradeField *arg2 = (CThostFtdcTradeField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcTradeField *)jarg2; 
  (arg1)->OnRtnTrade(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnTradeSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradeField *arg2 = (CThostFtdcTradeField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcTradeField *)jarg2; 
  (arg1)->CThostFtdcTraderSpi::OnRtnTrade(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnErrRtnOrderInsert___(void * jarg1, void * jarg2, void * jarg3) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputOrderField *arg2 = (CThostFtdcInputOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInputOrderField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  (arg1)->OnErrRtnOrderInsert(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnErrRtnOrderInsertSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputOrderField *arg2 = (CThostFtdcInputOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInputOrderField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  (arg1)->CThostFtdcTraderSpi::OnErrRtnOrderInsert(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnErrRtnOrderAction___(void * jarg1, void * jarg2, void * jarg3) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcOrderActionField *arg2 = (CThostFtdcOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcOrderActionField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  (arg1)->OnErrRtnOrderAction(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnErrRtnOrderActionSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcOrderActionField *arg2 = (CThostFtdcOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcOrderActionField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  (arg1)->CThostFtdcTraderSpi::OnErrRtnOrderAction(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnInstrumentStatus___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInstrumentStatusField *arg2 = (CThostFtdcInstrumentStatusField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInstrumentStatusField *)jarg2; 
  (arg1)->OnRtnInstrumentStatus(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnInstrumentStatusSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInstrumentStatusField *arg2 = (CThostFtdcInstrumentStatusField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInstrumentStatusField *)jarg2; 
  (arg1)->CThostFtdcTraderSpi::OnRtnInstrumentStatus(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnTradingNotice___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradingNoticeInfoField *arg2 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcTradingNoticeInfoField *)jarg2; 
  (arg1)->OnRtnTradingNotice(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnTradingNoticeSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradingNoticeInfoField *arg2 = (CThostFtdcTradingNoticeInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcTradingNoticeInfoField *)jarg2; 
  (arg1)->CThostFtdcTraderSpi::OnRtnTradingNotice(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnErrorConditionalOrder___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcErrorConditionalOrderField *arg2 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcErrorConditionalOrderField *)jarg2; 
  (arg1)->OnRtnErrorConditionalOrder(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnErrorConditionalOrderSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcErrorConditionalOrderField *arg2 = (CThostFtdcErrorConditionalOrderField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcErrorConditionalOrderField *)jarg2; 
  (arg1)->CThostFtdcTraderSpi::OnRtnErrorConditionalOrder(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnExecOrder___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExecOrderField *arg2 = (CThostFtdcExecOrderField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcExecOrderField *)jarg2; 
  (arg1)->OnRtnExecOrder(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnExecOrderSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExecOrderField *arg2 = (CThostFtdcExecOrderField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcExecOrderField *)jarg2; 
  (arg1)->CThostFtdcTraderSpi::OnRtnExecOrder(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnErrRtnExecOrderInsert___(void * jarg1, void * jarg2, void * jarg3) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputExecOrderField *arg2 = (CThostFtdcInputExecOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInputExecOrderField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  (arg1)->OnErrRtnExecOrderInsert(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnErrRtnExecOrderInsertSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputExecOrderField *arg2 = (CThostFtdcInputExecOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInputExecOrderField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  (arg1)->CThostFtdcTraderSpi::OnErrRtnExecOrderInsert(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnErrRtnExecOrderAction___(void * jarg1, void * jarg2, void * jarg3) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExecOrderActionField *arg2 = (CThostFtdcExecOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcExecOrderActionField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  (arg1)->OnErrRtnExecOrderAction(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnErrRtnExecOrderActionSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcExecOrderActionField *arg2 = (CThostFtdcExecOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcExecOrderActionField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  (arg1)->CThostFtdcTraderSpi::OnErrRtnExecOrderAction(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnErrRtnForQuoteInsert___(void * jarg1, void * jarg2, void * jarg3) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputForQuoteField *arg2 = (CThostFtdcInputForQuoteField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInputForQuoteField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  (arg1)->OnErrRtnForQuoteInsert(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnErrRtnForQuoteInsertSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputForQuoteField *arg2 = (CThostFtdcInputForQuoteField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInputForQuoteField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  (arg1)->CThostFtdcTraderSpi::OnErrRtnForQuoteInsert(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnQuote___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcQuoteField *arg2 = (CThostFtdcQuoteField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcQuoteField *)jarg2; 
  (arg1)->OnRtnQuote(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnQuoteSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcQuoteField *arg2 = (CThostFtdcQuoteField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcQuoteField *)jarg2; 
  (arg1)->CThostFtdcTraderSpi::OnRtnQuote(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnErrRtnQuoteInsert___(void * jarg1, void * jarg2, void * jarg3) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputQuoteField *arg2 = (CThostFtdcInputQuoteField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInputQuoteField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  (arg1)->OnErrRtnQuoteInsert(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnErrRtnQuoteInsertSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputQuoteField *arg2 = (CThostFtdcInputQuoteField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInputQuoteField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  (arg1)->CThostFtdcTraderSpi::OnErrRtnQuoteInsert(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnErrRtnQuoteAction___(void * jarg1, void * jarg2, void * jarg3) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcQuoteActionField *arg2 = (CThostFtdcQuoteActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcQuoteActionField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  (arg1)->OnErrRtnQuoteAction(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnErrRtnQuoteActionSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcQuoteActionField *arg2 = (CThostFtdcQuoteActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcQuoteActionField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  (arg1)->CThostFtdcTraderSpi::OnErrRtnQuoteAction(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnForQuoteRsp___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcForQuoteRspField *arg2 = (CThostFtdcForQuoteRspField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcForQuoteRspField *)jarg2; 
  (arg1)->OnRtnForQuoteRsp(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnForQuoteRspSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcForQuoteRspField *arg2 = (CThostFtdcForQuoteRspField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcForQuoteRspField *)jarg2; 
  (arg1)->CThostFtdcTraderSpi::OnRtnForQuoteRsp(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnCFMMCTradingAccountToken___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcCFMMCTradingAccountTokenField *arg2 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcCFMMCTradingAccountTokenField *)jarg2; 
  (arg1)->OnRtnCFMMCTradingAccountToken(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnCFMMCTradingAccountTokenSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcCFMMCTradingAccountTokenField *arg2 = (CThostFtdcCFMMCTradingAccountTokenField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcCFMMCTradingAccountTokenField *)jarg2; 
  (arg1)->CThostFtdcTraderSpi::OnRtnCFMMCTradingAccountToken(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnCombAction___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcCombActionField *arg2 = (CThostFtdcCombActionField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcCombActionField *)jarg2; 
  (arg1)->OnRtnCombAction(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnCombActionSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcCombActionField *arg2 = (CThostFtdcCombActionField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcCombActionField *)jarg2; 
  (arg1)->CThostFtdcTraderSpi::OnRtnCombAction(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnErrRtnCombActionInsert___(void * jarg1, void * jarg2, void * jarg3) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputCombActionField *arg2 = (CThostFtdcInputCombActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInputCombActionField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  (arg1)->OnErrRtnCombActionInsert(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnErrRtnCombActionInsertSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcInputCombActionField *arg2 = (CThostFtdcInputCombActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcInputCombActionField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  (arg1)->CThostFtdcTraderSpi::OnErrRtnCombActionInsert(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryContractBank___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcContractBankField *arg2 = (CThostFtdcContractBankField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcContractBankField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryContractBank(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryContractBankSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcContractBankField *arg2 = (CThostFtdcContractBankField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcContractBankField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryContractBank(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryParkedOrder___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcParkedOrderField *arg2 = (CThostFtdcParkedOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcParkedOrderField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryParkedOrder(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryParkedOrderSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcParkedOrderField *arg2 = (CThostFtdcParkedOrderField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcParkedOrderField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryParkedOrder(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryParkedOrderAction___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcParkedOrderActionField *arg2 = (CThostFtdcParkedOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcParkedOrderActionField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryParkedOrderAction(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryParkedOrderActionSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcParkedOrderActionField *arg2 = (CThostFtdcParkedOrderActionField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcParkedOrderActionField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryParkedOrderAction(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryTradingNotice___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradingNoticeField *arg2 = (CThostFtdcTradingNoticeField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcTradingNoticeField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryTradingNotice(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryTradingNoticeSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcTradingNoticeField *arg2 = (CThostFtdcTradingNoticeField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcTradingNoticeField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryTradingNotice(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryBrokerTradingParams___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcBrokerTradingParamsField *arg2 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcBrokerTradingParamsField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryBrokerTradingParams(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryBrokerTradingParamsSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcBrokerTradingParamsField *arg2 = (CThostFtdcBrokerTradingParamsField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcBrokerTradingParamsField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryBrokerTradingParams(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryBrokerTradingAlgos___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcBrokerTradingAlgosField *arg2 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcBrokerTradingAlgosField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQryBrokerTradingAlgos(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQryBrokerTradingAlgosSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcBrokerTradingAlgosField *arg2 = (CThostFtdcBrokerTradingAlgosField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcBrokerTradingAlgosField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQryBrokerTradingAlgos(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQueryCFMMCTradingAccountToken___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcQueryCFMMCTradingAccountTokenField *arg2 = (CThostFtdcQueryCFMMCTradingAccountTokenField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcQueryCFMMCTradingAccountTokenField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQueryCFMMCTradingAccountToken(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQueryCFMMCTradingAccountTokenSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcQueryCFMMCTradingAccountTokenField *arg2 = (CThostFtdcQueryCFMMCTradingAccountTokenField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcQueryCFMMCTradingAccountTokenField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQueryCFMMCTradingAccountToken(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnFromBankToFutureByBank___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspTransferField *arg2 = (CThostFtdcRspTransferField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRspTransferField *)jarg2; 
  (arg1)->OnRtnFromBankToFutureByBank(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnFromBankToFutureByBankSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspTransferField *arg2 = (CThostFtdcRspTransferField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRspTransferField *)jarg2; 
  (arg1)->CThostFtdcTraderSpi::OnRtnFromBankToFutureByBank(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnFromFutureToBankByBank___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspTransferField *arg2 = (CThostFtdcRspTransferField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRspTransferField *)jarg2; 
  (arg1)->OnRtnFromFutureToBankByBank(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnFromFutureToBankByBankSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspTransferField *arg2 = (CThostFtdcRspTransferField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRspTransferField *)jarg2; 
  (arg1)->CThostFtdcTraderSpi::OnRtnFromFutureToBankByBank(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnRepealFromBankToFutureByBank___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspRepealField *arg2 = (CThostFtdcRspRepealField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRspRepealField *)jarg2; 
  (arg1)->OnRtnRepealFromBankToFutureByBank(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnRepealFromBankToFutureByBankSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspRepealField *arg2 = (CThostFtdcRspRepealField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRspRepealField *)jarg2; 
  (arg1)->CThostFtdcTraderSpi::OnRtnRepealFromBankToFutureByBank(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnRepealFromFutureToBankByBank___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspRepealField *arg2 = (CThostFtdcRspRepealField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRspRepealField *)jarg2; 
  (arg1)->OnRtnRepealFromFutureToBankByBank(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnRepealFromFutureToBankByBankSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspRepealField *arg2 = (CThostFtdcRspRepealField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRspRepealField *)jarg2; 
  (arg1)->CThostFtdcTraderSpi::OnRtnRepealFromFutureToBankByBank(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnFromBankToFutureByFuture___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspTransferField *arg2 = (CThostFtdcRspTransferField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRspTransferField *)jarg2; 
  (arg1)->OnRtnFromBankToFutureByFuture(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnFromBankToFutureByFutureSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspTransferField *arg2 = (CThostFtdcRspTransferField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRspTransferField *)jarg2; 
  (arg1)->CThostFtdcTraderSpi::OnRtnFromBankToFutureByFuture(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnFromFutureToBankByFuture___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspTransferField *arg2 = (CThostFtdcRspTransferField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRspTransferField *)jarg2; 
  (arg1)->OnRtnFromFutureToBankByFuture(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnFromFutureToBankByFutureSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspTransferField *arg2 = (CThostFtdcRspTransferField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRspTransferField *)jarg2; 
  (arg1)->CThostFtdcTraderSpi::OnRtnFromFutureToBankByFuture(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnRepealFromBankToFutureByFutureManual___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspRepealField *arg2 = (CThostFtdcRspRepealField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRspRepealField *)jarg2; 
  (arg1)->OnRtnRepealFromBankToFutureByFutureManual(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnRepealFromBankToFutureByFutureManualSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspRepealField *arg2 = (CThostFtdcRspRepealField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRspRepealField *)jarg2; 
  (arg1)->CThostFtdcTraderSpi::OnRtnRepealFromBankToFutureByFutureManual(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnRepealFromFutureToBankByFutureManual___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspRepealField *arg2 = (CThostFtdcRspRepealField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRspRepealField *)jarg2; 
  (arg1)->OnRtnRepealFromFutureToBankByFutureManual(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnRepealFromFutureToBankByFutureManualSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspRepealField *arg2 = (CThostFtdcRspRepealField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRspRepealField *)jarg2; 
  (arg1)->CThostFtdcTraderSpi::OnRtnRepealFromFutureToBankByFutureManual(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnQueryBankBalanceByFuture___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcNotifyQueryAccountField *arg2 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcNotifyQueryAccountField *)jarg2; 
  (arg1)->OnRtnQueryBankBalanceByFuture(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnQueryBankBalanceByFutureSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcNotifyQueryAccountField *arg2 = (CThostFtdcNotifyQueryAccountField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcNotifyQueryAccountField *)jarg2; 
  (arg1)->CThostFtdcTraderSpi::OnRtnQueryBankBalanceByFuture(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnErrRtnBankToFutureByFuture___(void * jarg1, void * jarg2, void * jarg3) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqTransferField *arg2 = (CThostFtdcReqTransferField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcReqTransferField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  (arg1)->OnErrRtnBankToFutureByFuture(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnErrRtnBankToFutureByFutureSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqTransferField *arg2 = (CThostFtdcReqTransferField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcReqTransferField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  (arg1)->CThostFtdcTraderSpi::OnErrRtnBankToFutureByFuture(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnErrRtnFutureToBankByFuture___(void * jarg1, void * jarg2, void * jarg3) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqTransferField *arg2 = (CThostFtdcReqTransferField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcReqTransferField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  (arg1)->OnErrRtnFutureToBankByFuture(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnErrRtnFutureToBankByFutureSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqTransferField *arg2 = (CThostFtdcReqTransferField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcReqTransferField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  (arg1)->CThostFtdcTraderSpi::OnErrRtnFutureToBankByFuture(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnErrRtnRepealBankToFutureByFutureManual___(void * jarg1, void * jarg2, void * jarg3) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqRepealField *arg2 = (CThostFtdcReqRepealField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcReqRepealField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  (arg1)->OnErrRtnRepealBankToFutureByFutureManual(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnErrRtnRepealBankToFutureByFutureManualSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqRepealField *arg2 = (CThostFtdcReqRepealField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcReqRepealField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  (arg1)->CThostFtdcTraderSpi::OnErrRtnRepealBankToFutureByFutureManual(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnErrRtnRepealFutureToBankByFutureManual___(void * jarg1, void * jarg2, void * jarg3) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqRepealField *arg2 = (CThostFtdcReqRepealField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcReqRepealField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  (arg1)->OnErrRtnRepealFutureToBankByFutureManual(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnErrRtnRepealFutureToBankByFutureManualSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqRepealField *arg2 = (CThostFtdcReqRepealField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcReqRepealField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  (arg1)->CThostFtdcTraderSpi::OnErrRtnRepealFutureToBankByFutureManual(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnErrRtnQueryBankBalanceByFuture___(void * jarg1, void * jarg2, void * jarg3) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqQueryAccountField *arg2 = (CThostFtdcReqQueryAccountField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcReqQueryAccountField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  (arg1)->OnErrRtnQueryBankBalanceByFuture(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnErrRtnQueryBankBalanceByFutureSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqQueryAccountField *arg2 = (CThostFtdcReqQueryAccountField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcReqQueryAccountField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  (arg1)->CThostFtdcTraderSpi::OnErrRtnQueryBankBalanceByFuture(arg2,arg3);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnRepealFromBankToFutureByFuture___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspRepealField *arg2 = (CThostFtdcRspRepealField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRspRepealField *)jarg2; 
  (arg1)->OnRtnRepealFromBankToFutureByFuture(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnRepealFromBankToFutureByFutureSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspRepealField *arg2 = (CThostFtdcRspRepealField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRspRepealField *)jarg2; 
  (arg1)->CThostFtdcTraderSpi::OnRtnRepealFromBankToFutureByFuture(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnRepealFromFutureToBankByFuture___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspRepealField *arg2 = (CThostFtdcRspRepealField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRspRepealField *)jarg2; 
  (arg1)->OnRtnRepealFromFutureToBankByFuture(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnRepealFromFutureToBankByFutureSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcRspRepealField *arg2 = (CThostFtdcRspRepealField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcRspRepealField *)jarg2; 
  (arg1)->CThostFtdcTraderSpi::OnRtnRepealFromFutureToBankByFuture(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspFromBankToFutureByFuture___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqTransferField *arg2 = (CThostFtdcReqTransferField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcReqTransferField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspFromBankToFutureByFuture(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspFromBankToFutureByFutureSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqTransferField *arg2 = (CThostFtdcReqTransferField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcReqTransferField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspFromBankToFutureByFuture(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspFromFutureToBankByFuture___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqTransferField *arg2 = (CThostFtdcReqTransferField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcReqTransferField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspFromFutureToBankByFuture(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspFromFutureToBankByFutureSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqTransferField *arg2 = (CThostFtdcReqTransferField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcReqTransferField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspFromFutureToBankByFuture(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQueryBankAccountMoneyByFuture___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqQueryAccountField *arg2 = (CThostFtdcReqQueryAccountField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcReqQueryAccountField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->OnRspQueryBankAccountMoneyByFuture(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRspQueryBankAccountMoneyByFutureSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2, void * jarg3, int jarg4, unsigned int jarg5) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcReqQueryAccountField *arg2 = (CThostFtdcReqQueryAccountField *) 0 ;
  CThostFtdcRspInfoField *arg3 = (CThostFtdcRspInfoField *) 0 ;
  int arg4 ;
  bool arg5 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcReqQueryAccountField *)jarg2; 
  arg3 = (CThostFtdcRspInfoField *)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = jarg5 ? true : false; 
  (arg1)->CThostFtdcTraderSpi::OnRspQueryBankAccountMoneyByFuture(arg2,arg3,arg4,arg5);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnOpenAccountByBank___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcOpenAccountField *arg2 = (CThostFtdcOpenAccountField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcOpenAccountField *)jarg2; 
  (arg1)->OnRtnOpenAccountByBank(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnOpenAccountByBankSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcOpenAccountField *arg2 = (CThostFtdcOpenAccountField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcOpenAccountField *)jarg2; 
  (arg1)->CThostFtdcTraderSpi::OnRtnOpenAccountByBank(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnCancelAccountByBank___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcCancelAccountField *arg2 = (CThostFtdcCancelAccountField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcCancelAccountField *)jarg2; 
  (arg1)->OnRtnCancelAccountByBank(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnCancelAccountByBankSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcCancelAccountField *arg2 = (CThostFtdcCancelAccountField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcCancelAccountField *)jarg2; 
  (arg1)->CThostFtdcTraderSpi::OnRtnCancelAccountByBank(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnChangeAccountByBank___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcChangeAccountField *arg2 = (CThostFtdcChangeAccountField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcChangeAccountField *)jarg2; 
  (arg1)->OnRtnChangeAccountByBank(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_OnRtnChangeAccountByBankSwigExplicitCThostFtdcTraderSpi___(void * jarg1, void * jarg2) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  CThostFtdcChangeAccountField *arg2 = (CThostFtdcChangeAccountField *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  arg2 = (CThostFtdcChangeAccountField *)jarg2; 
  (arg1)->CThostFtdcTraderSpi::OnRtnChangeAccountByBank(arg2);
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcTraderSpi___() {
  void * jresult ;
  CThostFtdcTraderSpi *result = 0 ;
  
  result = (CThostFtdcTraderSpi *)new SwigDirector_CThostFtdcTraderSpi();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_delete_CThostFtdcTraderSpi___(void * jarg1) {
  CThostFtdcTraderSpi *arg1 = (CThostFtdcTraderSpi *) 0 ;
  
  arg1 = (CThostFtdcTraderSpi *)jarg1; 
  delete arg1;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderSpi_director_connect___(void *objarg, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback0_t callback0, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback1_t callback1, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback2_t callback2, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback3_t callback3, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback4_t callback4, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback5_t callback5, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback6_t callback6, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback7_t callback7, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback8_t callback8, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback9_t callback9, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback10_t callback10, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback11_t callback11, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback12_t callback12, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback13_t callback13, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback14_t callback14, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback15_t callback15, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback16_t callback16, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback17_t callback17, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback18_t callback18, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback19_t callback19, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback20_t callback20, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback21_t callback21, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback22_t callback22, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback23_t callback23, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback24_t callback24, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback25_t callback25, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback26_t callback26, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback27_t callback27, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback28_t callback28, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback29_t callback29, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback30_t callback30, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback31_t callback31, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback32_t callback32, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback33_t callback33, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback34_t callback34, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback35_t callback35, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback36_t callback36, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback37_t callback37, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback38_t callback38, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback39_t callback39, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback40_t callback40, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback41_t callback41, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback42_t callback42, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback43_t callback43, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback44_t callback44, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback45_t callback45, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback46_t callback46, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback47_t callback47, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback48_t callback48, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback49_t callback49, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback50_t callback50, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback51_t callback51, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback52_t callback52, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback53_t callback53, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback54_t callback54, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback55_t callback55, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback56_t callback56, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback57_t callback57, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback58_t callback58, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback59_t callback59, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback60_t callback60, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback61_t callback61, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback62_t callback62, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback63_t callback63, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback64_t callback64, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback65_t callback65, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback66_t callback66, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback67_t callback67, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback68_t callback68, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback69_t callback69, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback70_t callback70, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback71_t callback71, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback72_t callback72, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback73_t callback73, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback74_t callback74, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback75_t callback75, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback76_t callback76, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback77_t callback77, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback78_t callback78, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback79_t callback79, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback80_t callback80, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback81_t callback81, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback82_t callback82, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback83_t callback83, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback84_t callback84, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback85_t callback85, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback86_t callback86, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback87_t callback87, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback88_t callback88, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback89_t callback89, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback90_t callback90, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback91_t callback91, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback92_t callback92, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback93_t callback93, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback94_t callback94, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback95_t callback95, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback96_t callback96, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback97_t callback97, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback98_t callback98, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback99_t callback99, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback100_t callback100, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback101_t callback101, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback102_t callback102, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback103_t callback103, SwigDirector_CThostFtdcTraderSpi::SWIG_Callback104_t callback104) {
  CThostFtdcTraderSpi *obj = (CThostFtdcTraderSpi *)objarg;
  SwigDirector_CThostFtdcTraderSpi *director = dynamic_cast<SwigDirector_CThostFtdcTraderSpi *>(obj);
  if (director) {
    director->swig_connect_director(callback0, callback1, callback2, callback3, callback4, callback5, callback6, callback7, callback8, callback9, callback10, callback11, callback12, callback13, callback14, callback15, callback16, callback17, callback18, callback19, callback20, callback21, callback22, callback23, callback24, callback25, callback26, callback27, callback28, callback29, callback30, callback31, callback32, callback33, callback34, callback35, callback36, callback37, callback38, callback39, callback40, callback41, callback42, callback43, callback44, callback45, callback46, callback47, callback48, callback49, callback50, callback51, callback52, callback53, callback54, callback55, callback56, callback57, callback58, callback59, callback60, callback61, callback62, callback63, callback64, callback65, callback66, callback67, callback68, callback69, callback70, callback71, callback72, callback73, callback74, callback75, callback76, callback77, callback78, callback79, callback80, callback81, callback82, callback83, callback84, callback85, callback86, callback87, callback88, callback89, callback90, callback91, callback92, callback93, callback94, callback95, callback96, callback97, callback98, callback99, callback100, callback101, callback102, callback103, callback104);
  }
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_CreateFtdcTraderApi__SWIG_0___(char * jarg1) {
  void * jresult ;
  char *arg1 = (char *) 0 ;
  CThostFtdcTraderApi *result = 0 ;
  
  arg1 = (char *)jarg1; 
  result = (CThostFtdcTraderApi *)CThostFtdcTraderApi::CreateFtdcTraderApi((char const *)arg1);
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_CreateFtdcTraderApi__SWIG_1___() {
  void * jresult ;
  CThostFtdcTraderApi *result = 0 ;
  
  result = (CThostFtdcTraderApi *)CThostFtdcTraderApi::CreateFtdcTraderApi();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_GetApiVersion___() {
  char * jresult ;
  char *result = 0 ;
  
  result = (char *)CThostFtdcTraderApi::GetApiVersion();
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_Release___(void * jarg1) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  (arg1)->Release();
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_Init___(void * jarg1) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  (arg1)->Init();
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_Join___(void * jarg1) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  result = (int)(arg1)->Join();
  jresult = result; 
  return jresult;
}


SWIGEXPORT char * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_GetTradingDay___(void * jarg1) {
  char * jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  char *result = 0 ;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  result = (char *)(arg1)->GetTradingDay();
  jresult = SWIG_csharp_string_callback((const char *)result); 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_RegisterFront___(void * jarg1, char * jarg2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (char *)jarg2; 
  (arg1)->RegisterFront(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_RegisterNameServer___(void * jarg1, char * jarg2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (char *)jarg2; 
  (arg1)->RegisterNameServer(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_RegisterFensUserInfo___(void * jarg1, void * jarg2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcFensUserInfoField *arg2 = (CThostFtdcFensUserInfoField *) 0 ;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcFensUserInfoField *)jarg2; 
  (arg1)->RegisterFensUserInfo(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_RegisterSpi___(void * jarg1, void * jarg2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcTraderSpi *arg2 = (CThostFtdcTraderSpi *) 0 ;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcTraderSpi *)jarg2; 
  (arg1)->RegisterSpi(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_SubscribePrivateTopic___(void * jarg1, int jarg2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  THOST_TE_RESUME_TYPE arg2 ;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (THOST_TE_RESUME_TYPE)jarg2; 
  (arg1)->SubscribePrivateTopic(arg2);
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_SubscribePublicTopic___(void * jarg1, int jarg2) {
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  THOST_TE_RESUME_TYPE arg2 ;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (THOST_TE_RESUME_TYPE)jarg2; 
  (arg1)->SubscribePublicTopic(arg2);
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqAuthenticate___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcReqAuthenticateField *arg2 = (CThostFtdcReqAuthenticateField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcReqAuthenticateField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqAuthenticate(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqUserLogin___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcReqUserLoginField *arg2 = (CThostFtdcReqUserLoginField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcReqUserLoginField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqUserLogin(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqUserLogout___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcUserLogoutField *arg2 = (CThostFtdcUserLogoutField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcUserLogoutField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqUserLogout(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqUserPasswordUpdate___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcUserPasswordUpdateField *arg2 = (CThostFtdcUserPasswordUpdateField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcUserPasswordUpdateField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqUserPasswordUpdate(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqTradingAccountPasswordUpdate___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcTradingAccountPasswordUpdateField *arg2 = (CThostFtdcTradingAccountPasswordUpdateField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcTradingAccountPasswordUpdateField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqTradingAccountPasswordUpdate(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqOrderInsert___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcInputOrderField *arg2 = (CThostFtdcInputOrderField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcInputOrderField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqOrderInsert(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqParkedOrderInsert___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcParkedOrderField *arg2 = (CThostFtdcParkedOrderField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcParkedOrderField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqParkedOrderInsert(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqParkedOrderAction___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcParkedOrderActionField *arg2 = (CThostFtdcParkedOrderActionField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcParkedOrderActionField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqParkedOrderAction(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqOrderAction___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcInputOrderActionField *arg2 = (CThostFtdcInputOrderActionField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcInputOrderActionField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqOrderAction(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQueryMaxOrderVolume___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQueryMaxOrderVolumeField *arg2 = (CThostFtdcQueryMaxOrderVolumeField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQueryMaxOrderVolumeField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQueryMaxOrderVolume(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqSettlementInfoConfirm___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcSettlementInfoConfirmField *arg2 = (CThostFtdcSettlementInfoConfirmField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcSettlementInfoConfirmField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqSettlementInfoConfirm(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqRemoveParkedOrder___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcRemoveParkedOrderField *arg2 = (CThostFtdcRemoveParkedOrderField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcRemoveParkedOrderField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqRemoveParkedOrder(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqRemoveParkedOrderAction___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcRemoveParkedOrderActionField *arg2 = (CThostFtdcRemoveParkedOrderActionField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcRemoveParkedOrderActionField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqRemoveParkedOrderAction(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqExecOrderInsert___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcInputExecOrderField *arg2 = (CThostFtdcInputExecOrderField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcInputExecOrderField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqExecOrderInsert(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqExecOrderAction___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcInputExecOrderActionField *arg2 = (CThostFtdcInputExecOrderActionField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcInputExecOrderActionField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqExecOrderAction(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqForQuoteInsert___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcInputForQuoteField *arg2 = (CThostFtdcInputForQuoteField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcInputForQuoteField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqForQuoteInsert(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQuoteInsert___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcInputQuoteField *arg2 = (CThostFtdcInputQuoteField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcInputQuoteField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQuoteInsert(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQuoteAction___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcInputQuoteActionField *arg2 = (CThostFtdcInputQuoteActionField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcInputQuoteActionField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQuoteAction(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqCombActionInsert___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcInputCombActionField *arg2 = (CThostFtdcInputCombActionField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcInputCombActionField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqCombActionInsert(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryOrder___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryOrderField *arg2 = (CThostFtdcQryOrderField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryOrderField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryOrder(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryTrade___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryTradeField *arg2 = (CThostFtdcQryTradeField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryTradeField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryTrade(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryInvestorPosition___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryInvestorPositionField *arg2 = (CThostFtdcQryInvestorPositionField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryInvestorPositionField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryInvestorPosition(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryTradingAccount___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryTradingAccountField *arg2 = (CThostFtdcQryTradingAccountField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryTradingAccountField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryTradingAccount(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryInvestor___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryInvestorField *arg2 = (CThostFtdcQryInvestorField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryInvestorField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryInvestor(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryTradingCode___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryTradingCodeField *arg2 = (CThostFtdcQryTradingCodeField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryTradingCodeField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryTradingCode(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryInstrumentMarginRate___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryInstrumentMarginRateField *arg2 = (CThostFtdcQryInstrumentMarginRateField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryInstrumentMarginRateField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryInstrumentMarginRate(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryInstrumentCommissionRate___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryInstrumentCommissionRateField *arg2 = (CThostFtdcQryInstrumentCommissionRateField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryInstrumentCommissionRateField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryInstrumentCommissionRate(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryExchange___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryExchangeField *arg2 = (CThostFtdcQryExchangeField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryExchangeField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryExchange(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryProduct___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryProductField *arg2 = (CThostFtdcQryProductField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryProductField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryProduct(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryInstrument___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryInstrumentField *arg2 = (CThostFtdcQryInstrumentField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryInstrumentField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryInstrument(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryDepthMarketData___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryDepthMarketDataField *arg2 = (CThostFtdcQryDepthMarketDataField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryDepthMarketDataField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryDepthMarketData(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQrySettlementInfo___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQrySettlementInfoField *arg2 = (CThostFtdcQrySettlementInfoField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQrySettlementInfoField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQrySettlementInfo(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryTransferBank___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryTransferBankField *arg2 = (CThostFtdcQryTransferBankField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryTransferBankField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryTransferBank(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryInvestorPositionDetail___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryInvestorPositionDetailField *arg2 = (CThostFtdcQryInvestorPositionDetailField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryInvestorPositionDetailField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryInvestorPositionDetail(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryNotice___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryNoticeField *arg2 = (CThostFtdcQryNoticeField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryNoticeField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryNotice(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQrySettlementInfoConfirm___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQrySettlementInfoConfirmField *arg2 = (CThostFtdcQrySettlementInfoConfirmField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQrySettlementInfoConfirmField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQrySettlementInfoConfirm(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryInvestorPositionCombineDetail___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryInvestorPositionCombineDetailField *arg2 = (CThostFtdcQryInvestorPositionCombineDetailField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryInvestorPositionCombineDetailField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryInvestorPositionCombineDetail(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryCFMMCTradingAccountKey___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryCFMMCTradingAccountKeyField *arg2 = (CThostFtdcQryCFMMCTradingAccountKeyField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryCFMMCTradingAccountKeyField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryCFMMCTradingAccountKey(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryEWarrantOffset___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryEWarrantOffsetField *arg2 = (CThostFtdcQryEWarrantOffsetField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryEWarrantOffsetField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryEWarrantOffset(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryInvestorProductGroupMargin___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryInvestorProductGroupMarginField *arg2 = (CThostFtdcQryInvestorProductGroupMarginField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryInvestorProductGroupMarginField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryInvestorProductGroupMargin(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryExchangeMarginRate___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryExchangeMarginRateField *arg2 = (CThostFtdcQryExchangeMarginRateField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryExchangeMarginRateField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryExchangeMarginRate(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryExchangeMarginRateAdjust___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryExchangeMarginRateAdjustField *arg2 = (CThostFtdcQryExchangeMarginRateAdjustField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryExchangeMarginRateAdjustField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryExchangeMarginRateAdjust(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryExchangeRate___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryExchangeRateField *arg2 = (CThostFtdcQryExchangeRateField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryExchangeRateField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryExchangeRate(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQrySecAgentACIDMap___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQrySecAgentACIDMapField *arg2 = (CThostFtdcQrySecAgentACIDMapField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQrySecAgentACIDMapField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQrySecAgentACIDMap(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryProductExchRate___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryProductExchRateField *arg2 = (CThostFtdcQryProductExchRateField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryProductExchRateField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryProductExchRate(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryOptionInstrTradeCost___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryOptionInstrTradeCostField *arg2 = (CThostFtdcQryOptionInstrTradeCostField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryOptionInstrTradeCostField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryOptionInstrTradeCost(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryOptionInstrCommRate___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryOptionInstrCommRateField *arg2 = (CThostFtdcQryOptionInstrCommRateField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryOptionInstrCommRateField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryOptionInstrCommRate(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryExecOrder___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryExecOrderField *arg2 = (CThostFtdcQryExecOrderField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryExecOrderField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryExecOrder(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryForQuote___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryForQuoteField *arg2 = (CThostFtdcQryForQuoteField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryForQuoteField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryForQuote(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryQuote___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryQuoteField *arg2 = (CThostFtdcQryQuoteField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryQuoteField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryQuote(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryCombInstrumentGuard___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryCombInstrumentGuardField *arg2 = (CThostFtdcQryCombInstrumentGuardField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryCombInstrumentGuardField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryCombInstrumentGuard(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryCombAction___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryCombActionField *arg2 = (CThostFtdcQryCombActionField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryCombActionField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryCombAction(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryTransferSerial___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryTransferSerialField *arg2 = (CThostFtdcQryTransferSerialField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryTransferSerialField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryTransferSerial(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryAccountregister___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryAccountregisterField *arg2 = (CThostFtdcQryAccountregisterField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryAccountregisterField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryAccountregister(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryContractBank___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryContractBankField *arg2 = (CThostFtdcQryContractBankField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryContractBankField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryContractBank(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryParkedOrder___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryParkedOrderField *arg2 = (CThostFtdcQryParkedOrderField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryParkedOrderField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryParkedOrder(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryParkedOrderAction___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryParkedOrderActionField *arg2 = (CThostFtdcQryParkedOrderActionField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryParkedOrderActionField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryParkedOrderAction(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryTradingNotice___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryTradingNoticeField *arg2 = (CThostFtdcQryTradingNoticeField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryTradingNoticeField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryTradingNotice(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryBrokerTradingParams___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryBrokerTradingParamsField *arg2 = (CThostFtdcQryBrokerTradingParamsField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryBrokerTradingParamsField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryBrokerTradingParams(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQryBrokerTradingAlgos___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQryBrokerTradingAlgosField *arg2 = (CThostFtdcQryBrokerTradingAlgosField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQryBrokerTradingAlgosField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQryBrokerTradingAlgos(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQueryCFMMCTradingAccountToken___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcQueryCFMMCTradingAccountTokenField *arg2 = (CThostFtdcQueryCFMMCTradingAccountTokenField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcQueryCFMMCTradingAccountTokenField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQueryCFMMCTradingAccountToken(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqFromBankToFutureByFuture___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcReqTransferField *arg2 = (CThostFtdcReqTransferField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcReqTransferField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqFromBankToFutureByFuture(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqFromFutureToBankByFuture___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcReqTransferField *arg2 = (CThostFtdcReqTransferField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcReqTransferField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqFromFutureToBankByFuture(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT int SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_ReqQueryBankAccountMoneyByFuture___(void * jarg1, void * jarg2, int jarg3) {
  int jresult ;
  CThostFtdcTraderApi *arg1 = (CThostFtdcTraderApi *) 0 ;
  CThostFtdcReqQueryAccountField *arg2 = (CThostFtdcReqQueryAccountField *) 0 ;
  int arg3 ;
  int result;
  
  arg1 = (CThostFtdcTraderApi *)jarg1; 
  arg2 = (CThostFtdcReqQueryAccountField *)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)(arg1)->ReqQueryBankAccountMoneyByFuture(arg2,arg3);
  jresult = result; 
  return jresult;
}


SWIGEXPORT void * SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_new_CThostFtdcTraderApi___() {
  void * jresult ;
  CThostFtdcTraderApi *result = 0 ;
  
  result = (CThostFtdcTraderApi *)new SwigDirector_CThostFtdcTraderApi();
  jresult = (void *)result; 
  return jresult;
}


SWIGEXPORT void SWIGSTDCALL CSharp_CTACSharpfCTPfTrade_CThostFtdcTraderApi_director_connect___(void *objarg, SwigDirector_CThostFtdcTraderApi::SWIG_Callback0_t callback0, SwigDirector_CThostFtdcTraderApi::SWIG_Callback1_t callback1, SwigDirector_CThostFtdcTraderApi::SWIG_Callback2_t callback2, SwigDirector_CThostFtdcTraderApi::SWIG_Callback3_t callback3, SwigDirector_CThostFtdcTraderApi::SWIG_Callback4_t callback4, SwigDirector_CThostFtdcTraderApi::SWIG_Callback5_t callback5, SwigDirector_CThostFtdcTraderApi::SWIG_Callback6_t callback6, SwigDirector_CThostFtdcTraderApi::SWIG_Callback7_t callback7, SwigDirector_CThostFtdcTraderApi::SWIG_Callback8_t callback8, SwigDirector_CThostFtdcTraderApi::SWIG_Callback9_t callback9, SwigDirector_CThostFtdcTraderApi::SWIG_Callback10_t callback10, SwigDirector_CThostFtdcTraderApi::SWIG_Callback11_t callback11, SwigDirector_CThostFtdcTraderApi::SWIG_Callback12_t callback12, SwigDirector_CThostFtdcTraderApi::SWIG_Callback13_t callback13, SwigDirector_CThostFtdcTraderApi::SWIG_Callback14_t callback14, SwigDirector_CThostFtdcTraderApi::SWIG_Callback15_t callback15, SwigDirector_CThostFtdcTraderApi::SWIG_Callback16_t callback16, SwigDirector_CThostFtdcTraderApi::SWIG_Callback17_t callback17, SwigDirector_CThostFtdcTraderApi::SWIG_Callback18_t callback18, SwigDirector_CThostFtdcTraderApi::SWIG_Callback19_t callback19, SwigDirector_CThostFtdcTraderApi::SWIG_Callback20_t callback20, SwigDirector_CThostFtdcTraderApi::SWIG_Callback21_t callback21, SwigDirector_CThostFtdcTraderApi::SWIG_Callback22_t callback22, SwigDirector_CThostFtdcTraderApi::SWIG_Callback23_t callback23, SwigDirector_CThostFtdcTraderApi::SWIG_Callback24_t callback24, SwigDirector_CThostFtdcTraderApi::SWIG_Callback25_t callback25, SwigDirector_CThostFtdcTraderApi::SWIG_Callback26_t callback26, SwigDirector_CThostFtdcTraderApi::SWIG_Callback27_t callback27, SwigDirector_CThostFtdcTraderApi::SWIG_Callback28_t callback28, SwigDirector_CThostFtdcTraderApi::SWIG_Callback29_t callback29, SwigDirector_CThostFtdcTraderApi::SWIG_Callback30_t callback30, SwigDirector_CThostFtdcTraderApi::SWIG_Callback31_t callback31, SwigDirector_CThostFtdcTraderApi::SWIG_Callback32_t callback32, SwigDirector_CThostFtdcTraderApi::SWIG_Callback33_t callback33, SwigDirector_CThostFtdcTraderApi::SWIG_Callback34_t callback34, SwigDirector_CThostFtdcTraderApi::SWIG_Callback35_t callback35, SwigDirector_CThostFtdcTraderApi::SWIG_Callback36_t callback36, SwigDirector_CThostFtdcTraderApi::SWIG_Callback37_t callback37, SwigDirector_CThostFtdcTraderApi::SWIG_Callback38_t callback38, SwigDirector_CThostFtdcTraderApi::SWIG_Callback39_t callback39, SwigDirector_CThostFtdcTraderApi::SWIG_Callback40_t callback40, SwigDirector_CThostFtdcTraderApi::SWIG_Callback41_t callback41, SwigDirector_CThostFtdcTraderApi::SWIG_Callback42_t callback42, SwigDirector_CThostFtdcTraderApi::SWIG_Callback43_t callback43, SwigDirector_CThostFtdcTraderApi::SWIG_Callback44_t callback44, SwigDirector_CThostFtdcTraderApi::SWIG_Callback45_t callback45, SwigDirector_CThostFtdcTraderApi::SWIG_Callback46_t callback46, SwigDirector_CThostFtdcTraderApi::SWIG_Callback47_t callback47, SwigDirector_CThostFtdcTraderApi::SWIG_Callback48_t callback48, SwigDirector_CThostFtdcTraderApi::SWIG_Callback49_t callback49, SwigDirector_CThostFtdcTraderApi::SWIG_Callback50_t callback50, SwigDirector_CThostFtdcTraderApi::SWIG_Callback51_t callback51, SwigDirector_CThostFtdcTraderApi::SWIG_Callback52_t callback52, SwigDirector_CThostFtdcTraderApi::SWIG_Callback53_t callback53, SwigDirector_CThostFtdcTraderApi::SWIG_Callback54_t callback54, SwigDirector_CThostFtdcTraderApi::SWIG_Callback55_t callback55, SwigDirector_CThostFtdcTraderApi::SWIG_Callback56_t callback56, SwigDirector_CThostFtdcTraderApi::SWIG_Callback57_t callback57, SwigDirector_CThostFtdcTraderApi::SWIG_Callback58_t callback58, SwigDirector_CThostFtdcTraderApi::SWIG_Callback59_t callback59, SwigDirector_CThostFtdcTraderApi::SWIG_Callback60_t callback60, SwigDirector_CThostFtdcTraderApi::SWIG_Callback61_t callback61, SwigDirector_CThostFtdcTraderApi::SWIG_Callback62_t callback62, SwigDirector_CThostFtdcTraderApi::SWIG_Callback63_t callback63, SwigDirector_CThostFtdcTraderApi::SWIG_Callback64_t callback64, SwigDirector_CThostFtdcTraderApi::SWIG_Callback65_t callback65, SwigDirector_CThostFtdcTraderApi::SWIG_Callback66_t callback66, SwigDirector_CThostFtdcTraderApi::SWIG_Callback67_t callback67, SwigDirector_CThostFtdcTraderApi::SWIG_Callback68_t callback68, SwigDirector_CThostFtdcTraderApi::SWIG_Callback69_t callback69, SwigDirector_CThostFtdcTraderApi::SWIG_Callback70_t callback70, SwigDirector_CThostFtdcTraderApi::SWIG_Callback71_t callback71, SwigDirector_CThostFtdcTraderApi::SWIG_Callback72_t callback72, SwigDirector_CThostFtdcTraderApi::SWIG_Callback73_t callback73) {
  CThostFtdcTraderApi *obj = (CThostFtdcTraderApi *)objarg;
  SwigDirector_CThostFtdcTraderApi *director = dynamic_cast<SwigDirector_CThostFtdcTraderApi *>(obj);
  if (director) {
    director->swig_connect_director(callback0, callback1, callback2, callback3, callback4, callback5, callback6, callback7, callback8, callback9, callback10, callback11, callback12, callback13, callback14, callback15, callback16, callback17, callback18, callback19, callback20, callback21, callback22, callback23, callback24, callback25, callback26, callback27, callback28, callback29, callback30, callback31, callback32, callback33, callback34, callback35, callback36, callback37, callback38, callback39, callback40, callback41, callback42, callback43, callback44, callback45, callback46, callback47, callback48, callback49, callback50, callback51, callback52, callback53, callback54, callback55, callback56, callback57, callback58, callback59, callback60, callback61, callback62, callback63, callback64, callback65, callback66, callback67, callback68, callback69, callback70, callback71, callback72, callback73);
  }
}


#ifdef __cplusplus
}
#endif

