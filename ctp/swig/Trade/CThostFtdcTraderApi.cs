//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace CTACSharp.CTP.Trade {

public class CThostFtdcTraderApi : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CThostFtdcTraderApi(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CThostFtdcTraderApi obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public static CThostFtdcTraderApi CreateFtdcTraderApi(string pszFlowPath) {
    global::System.IntPtr cPtr = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_CreateFtdcTraderApi__SWIG_0(pszFlowPath);
    CThostFtdcTraderApi ret = (cPtr == global::System.IntPtr.Zero) ? null : new CThostFtdcTraderApi(cPtr, false);
    return ret;
  }

  public static CThostFtdcTraderApi CreateFtdcTraderApi() {
    global::System.IntPtr cPtr = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_CreateFtdcTraderApi__SWIG_1();
    CThostFtdcTraderApi ret = (cPtr == global::System.IntPtr.Zero) ? null : new CThostFtdcTraderApi(cPtr, false);
    return ret;
  }

  public static string GetApiVersion() {
    string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_GetApiVersion();
    return ret;
  }

  public virtual void Release() {
    CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_Release(swigCPtr);
  }

  public virtual void Init() {
    CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_Init(swigCPtr);
  }

  public virtual int Join() {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_Join(swigCPtr);
    return ret;
  }

  public virtual string GetTradingDay() {
    string ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_GetTradingDay(swigCPtr);
    return ret;
  }

  public virtual void RegisterFront(string pszFrontAddress) {
    CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_RegisterFront(swigCPtr, pszFrontAddress);
  }

  public virtual void RegisterNameServer(string pszNsAddress) {
    CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_RegisterNameServer(swigCPtr, pszNsAddress);
  }

  public virtual void RegisterFensUserInfo(CThostFtdcFensUserInfoField pFensUserInfo) {
    CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_RegisterFensUserInfo(swigCPtr, CThostFtdcFensUserInfoField.getCPtr(pFensUserInfo));
  }

  public virtual void RegisterSpi(CThostFtdcTraderSpi pSpi) {
    CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_RegisterSpi(swigCPtr, CThostFtdcTraderSpi.getCPtr(pSpi));
  }

  public virtual void SubscribePrivateTopic(THOST_TE_RESUME_TYPE nResumeType) {
    CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_SubscribePrivateTopic(swigCPtr, (int)nResumeType);
  }

  public virtual void SubscribePublicTopic(THOST_TE_RESUME_TYPE nResumeType) {
    CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_SubscribePublicTopic(swigCPtr, (int)nResumeType);
  }

  public virtual int ReqAuthenticate(CThostFtdcReqAuthenticateField pReqAuthenticateField, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqAuthenticate(swigCPtr, CThostFtdcReqAuthenticateField.getCPtr(pReqAuthenticateField), nRequestID);
    return ret;
  }

  public virtual int ReqUserLogin(CThostFtdcReqUserLoginField pReqUserLoginField, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqUserLogin(swigCPtr, CThostFtdcReqUserLoginField.getCPtr(pReqUserLoginField), nRequestID);
    return ret;
  }

  public virtual int ReqUserLogout(CThostFtdcUserLogoutField pUserLogout, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqUserLogout(swigCPtr, CThostFtdcUserLogoutField.getCPtr(pUserLogout), nRequestID);
    return ret;
  }

  public virtual int ReqUserPasswordUpdate(CThostFtdcUserPasswordUpdateField pUserPasswordUpdate, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqUserPasswordUpdate(swigCPtr, CThostFtdcUserPasswordUpdateField.getCPtr(pUserPasswordUpdate), nRequestID);
    return ret;
  }

  public virtual int ReqTradingAccountPasswordUpdate(CThostFtdcTradingAccountPasswordUpdateField pTradingAccountPasswordUpdate, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqTradingAccountPasswordUpdate(swigCPtr, CThostFtdcTradingAccountPasswordUpdateField.getCPtr(pTradingAccountPasswordUpdate), nRequestID);
    return ret;
  }

  public virtual int ReqOrderInsert(CThostFtdcInputOrderField pInputOrder, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqOrderInsert(swigCPtr, CThostFtdcInputOrderField.getCPtr(pInputOrder), nRequestID);
    return ret;
  }

  public virtual int ReqParkedOrderInsert(CThostFtdcParkedOrderField pParkedOrder, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqParkedOrderInsert(swigCPtr, CThostFtdcParkedOrderField.getCPtr(pParkedOrder), nRequestID);
    return ret;
  }

  public virtual int ReqParkedOrderAction(CThostFtdcParkedOrderActionField pParkedOrderAction, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqParkedOrderAction(swigCPtr, CThostFtdcParkedOrderActionField.getCPtr(pParkedOrderAction), nRequestID);
    return ret;
  }

  public virtual int ReqOrderAction(CThostFtdcInputOrderActionField pInputOrderAction, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqOrderAction(swigCPtr, CThostFtdcInputOrderActionField.getCPtr(pInputOrderAction), nRequestID);
    return ret;
  }

  public virtual int ReqQueryMaxOrderVolume(CThostFtdcQueryMaxOrderVolumeField pQueryMaxOrderVolume, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQueryMaxOrderVolume(swigCPtr, CThostFtdcQueryMaxOrderVolumeField.getCPtr(pQueryMaxOrderVolume), nRequestID);
    return ret;
  }

  public virtual int ReqSettlementInfoConfirm(CThostFtdcSettlementInfoConfirmField pSettlementInfoConfirm, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqSettlementInfoConfirm(swigCPtr, CThostFtdcSettlementInfoConfirmField.getCPtr(pSettlementInfoConfirm), nRequestID);
    return ret;
  }

  public virtual int ReqRemoveParkedOrder(CThostFtdcRemoveParkedOrderField pRemoveParkedOrder, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqRemoveParkedOrder(swigCPtr, CThostFtdcRemoveParkedOrderField.getCPtr(pRemoveParkedOrder), nRequestID);
    return ret;
  }

  public virtual int ReqRemoveParkedOrderAction(CThostFtdcRemoveParkedOrderActionField pRemoveParkedOrderAction, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqRemoveParkedOrderAction(swigCPtr, CThostFtdcRemoveParkedOrderActionField.getCPtr(pRemoveParkedOrderAction), nRequestID);
    return ret;
  }

  public virtual int ReqExecOrderInsert(CThostFtdcInputExecOrderField pInputExecOrder, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqExecOrderInsert(swigCPtr, CThostFtdcInputExecOrderField.getCPtr(pInputExecOrder), nRequestID);
    return ret;
  }

  public virtual int ReqExecOrderAction(CThostFtdcInputExecOrderActionField pInputExecOrderAction, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqExecOrderAction(swigCPtr, CThostFtdcInputExecOrderActionField.getCPtr(pInputExecOrderAction), nRequestID);
    return ret;
  }

  public virtual int ReqForQuoteInsert(CThostFtdcInputForQuoteField pInputForQuote, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqForQuoteInsert(swigCPtr, CThostFtdcInputForQuoteField.getCPtr(pInputForQuote), nRequestID);
    return ret;
  }

  public virtual int ReqQuoteInsert(CThostFtdcInputQuoteField pInputQuote, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQuoteInsert(swigCPtr, CThostFtdcInputQuoteField.getCPtr(pInputQuote), nRequestID);
    return ret;
  }

  public virtual int ReqQuoteAction(CThostFtdcInputQuoteActionField pInputQuoteAction, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQuoteAction(swigCPtr, CThostFtdcInputQuoteActionField.getCPtr(pInputQuoteAction), nRequestID);
    return ret;
  }

  public virtual int ReqCombActionInsert(CThostFtdcInputCombActionField pInputCombAction, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqCombActionInsert(swigCPtr, CThostFtdcInputCombActionField.getCPtr(pInputCombAction), nRequestID);
    return ret;
  }

  public virtual int ReqQryOrder(CThostFtdcQryOrderField pQryOrder, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryOrder(swigCPtr, CThostFtdcQryOrderField.getCPtr(pQryOrder), nRequestID);
    return ret;
  }

  public virtual int ReqQryTrade(CThostFtdcQryTradeField pQryTrade, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryTrade(swigCPtr, CThostFtdcQryTradeField.getCPtr(pQryTrade), nRequestID);
    return ret;
  }

  public virtual int ReqQryInvestorPosition(CThostFtdcQryInvestorPositionField pQryInvestorPosition, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryInvestorPosition(swigCPtr, CThostFtdcQryInvestorPositionField.getCPtr(pQryInvestorPosition), nRequestID);
    return ret;
  }

  public virtual int ReqQryTradingAccount(CThostFtdcQryTradingAccountField pQryTradingAccount, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryTradingAccount(swigCPtr, CThostFtdcQryTradingAccountField.getCPtr(pQryTradingAccount), nRequestID);
    return ret;
  }

  public virtual int ReqQryInvestor(CThostFtdcQryInvestorField pQryInvestor, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryInvestor(swigCPtr, CThostFtdcQryInvestorField.getCPtr(pQryInvestor), nRequestID);
    return ret;
  }

  public virtual int ReqQryTradingCode(CThostFtdcQryTradingCodeField pQryTradingCode, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryTradingCode(swigCPtr, CThostFtdcQryTradingCodeField.getCPtr(pQryTradingCode), nRequestID);
    return ret;
  }

  public virtual int ReqQryInstrumentMarginRate(CThostFtdcQryInstrumentMarginRateField pQryInstrumentMarginRate, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryInstrumentMarginRate(swigCPtr, CThostFtdcQryInstrumentMarginRateField.getCPtr(pQryInstrumentMarginRate), nRequestID);
    return ret;
  }

  public virtual int ReqQryInstrumentCommissionRate(CThostFtdcQryInstrumentCommissionRateField pQryInstrumentCommissionRate, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryInstrumentCommissionRate(swigCPtr, CThostFtdcQryInstrumentCommissionRateField.getCPtr(pQryInstrumentCommissionRate), nRequestID);
    return ret;
  }

  public virtual int ReqQryExchange(CThostFtdcQryExchangeField pQryExchange, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryExchange(swigCPtr, CThostFtdcQryExchangeField.getCPtr(pQryExchange), nRequestID);
    return ret;
  }

  public virtual int ReqQryProduct(CThostFtdcQryProductField pQryProduct, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryProduct(swigCPtr, CThostFtdcQryProductField.getCPtr(pQryProduct), nRequestID);
    return ret;
  }

  public virtual int ReqQryInstrument(CThostFtdcQryInstrumentField pQryInstrument, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryInstrument(swigCPtr, CThostFtdcQryInstrumentField.getCPtr(pQryInstrument), nRequestID);
    return ret;
  }

  public virtual int ReqQryDepthMarketData(CThostFtdcQryDepthMarketDataField pQryDepthMarketData, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryDepthMarketData(swigCPtr, CThostFtdcQryDepthMarketDataField.getCPtr(pQryDepthMarketData), nRequestID);
    return ret;
  }

  public virtual int ReqQrySettlementInfo(CThostFtdcQrySettlementInfoField pQrySettlementInfo, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQrySettlementInfo(swigCPtr, CThostFtdcQrySettlementInfoField.getCPtr(pQrySettlementInfo), nRequestID);
    return ret;
  }

  public virtual int ReqQryTransferBank(CThostFtdcQryTransferBankField pQryTransferBank, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryTransferBank(swigCPtr, CThostFtdcQryTransferBankField.getCPtr(pQryTransferBank), nRequestID);
    return ret;
  }

  public virtual int ReqQryInvestorPositionDetail(CThostFtdcQryInvestorPositionDetailField pQryInvestorPositionDetail, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryInvestorPositionDetail(swigCPtr, CThostFtdcQryInvestorPositionDetailField.getCPtr(pQryInvestorPositionDetail), nRequestID);
    return ret;
  }

  public virtual int ReqQryNotice(CThostFtdcQryNoticeField pQryNotice, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryNotice(swigCPtr, CThostFtdcQryNoticeField.getCPtr(pQryNotice), nRequestID);
    return ret;
  }

  public virtual int ReqQrySettlementInfoConfirm(CThostFtdcQrySettlementInfoConfirmField pQrySettlementInfoConfirm, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQrySettlementInfoConfirm(swigCPtr, CThostFtdcQrySettlementInfoConfirmField.getCPtr(pQrySettlementInfoConfirm), nRequestID);
    return ret;
  }

  public virtual int ReqQryInvestorPositionCombineDetail(CThostFtdcQryInvestorPositionCombineDetailField pQryInvestorPositionCombineDetail, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryInvestorPositionCombineDetail(swigCPtr, CThostFtdcQryInvestorPositionCombineDetailField.getCPtr(pQryInvestorPositionCombineDetail), nRequestID);
    return ret;
  }

  public virtual int ReqQryCFMMCTradingAccountKey(CThostFtdcQryCFMMCTradingAccountKeyField pQryCFMMCTradingAccountKey, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryCFMMCTradingAccountKey(swigCPtr, CThostFtdcQryCFMMCTradingAccountKeyField.getCPtr(pQryCFMMCTradingAccountKey), nRequestID);
    return ret;
  }

  public virtual int ReqQryEWarrantOffset(CThostFtdcQryEWarrantOffsetField pQryEWarrantOffset, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryEWarrantOffset(swigCPtr, CThostFtdcQryEWarrantOffsetField.getCPtr(pQryEWarrantOffset), nRequestID);
    return ret;
  }

  public virtual int ReqQryInvestorProductGroupMargin(CThostFtdcQryInvestorProductGroupMarginField pQryInvestorProductGroupMargin, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryInvestorProductGroupMargin(swigCPtr, CThostFtdcQryInvestorProductGroupMarginField.getCPtr(pQryInvestorProductGroupMargin), nRequestID);
    return ret;
  }

  public virtual int ReqQryExchangeMarginRate(CThostFtdcQryExchangeMarginRateField pQryExchangeMarginRate, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryExchangeMarginRate(swigCPtr, CThostFtdcQryExchangeMarginRateField.getCPtr(pQryExchangeMarginRate), nRequestID);
    return ret;
  }

  public virtual int ReqQryExchangeMarginRateAdjust(CThostFtdcQryExchangeMarginRateAdjustField pQryExchangeMarginRateAdjust, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryExchangeMarginRateAdjust(swigCPtr, CThostFtdcQryExchangeMarginRateAdjustField.getCPtr(pQryExchangeMarginRateAdjust), nRequestID);
    return ret;
  }

  public virtual int ReqQryExchangeRate(CThostFtdcQryExchangeRateField pQryExchangeRate, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryExchangeRate(swigCPtr, CThostFtdcQryExchangeRateField.getCPtr(pQryExchangeRate), nRequestID);
    return ret;
  }

  public virtual int ReqQrySecAgentACIDMap(CThostFtdcQrySecAgentACIDMapField pQrySecAgentACIDMap, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQrySecAgentACIDMap(swigCPtr, CThostFtdcQrySecAgentACIDMapField.getCPtr(pQrySecAgentACIDMap), nRequestID);
    return ret;
  }

  public virtual int ReqQryProductExchRate(CThostFtdcQryProductExchRateField pQryProductExchRate, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryProductExchRate(swigCPtr, CThostFtdcQryProductExchRateField.getCPtr(pQryProductExchRate), nRequestID);
    return ret;
  }

  public virtual int ReqQryOptionInstrTradeCost(CThostFtdcQryOptionInstrTradeCostField pQryOptionInstrTradeCost, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryOptionInstrTradeCost(swigCPtr, CThostFtdcQryOptionInstrTradeCostField.getCPtr(pQryOptionInstrTradeCost), nRequestID);
    return ret;
  }

  public virtual int ReqQryOptionInstrCommRate(CThostFtdcQryOptionInstrCommRateField pQryOptionInstrCommRate, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryOptionInstrCommRate(swigCPtr, CThostFtdcQryOptionInstrCommRateField.getCPtr(pQryOptionInstrCommRate), nRequestID);
    return ret;
  }

  public virtual int ReqQryExecOrder(CThostFtdcQryExecOrderField pQryExecOrder, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryExecOrder(swigCPtr, CThostFtdcQryExecOrderField.getCPtr(pQryExecOrder), nRequestID);
    return ret;
  }

  public virtual int ReqQryForQuote(CThostFtdcQryForQuoteField pQryForQuote, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryForQuote(swigCPtr, CThostFtdcQryForQuoteField.getCPtr(pQryForQuote), nRequestID);
    return ret;
  }

  public virtual int ReqQryQuote(CThostFtdcQryQuoteField pQryQuote, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryQuote(swigCPtr, CThostFtdcQryQuoteField.getCPtr(pQryQuote), nRequestID);
    return ret;
  }

  public virtual int ReqQryCombInstrumentGuard(CThostFtdcQryCombInstrumentGuardField pQryCombInstrumentGuard, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryCombInstrumentGuard(swigCPtr, CThostFtdcQryCombInstrumentGuardField.getCPtr(pQryCombInstrumentGuard), nRequestID);
    return ret;
  }

  public virtual int ReqQryCombAction(CThostFtdcQryCombActionField pQryCombAction, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryCombAction(swigCPtr, CThostFtdcQryCombActionField.getCPtr(pQryCombAction), nRequestID);
    return ret;
  }

  public virtual int ReqQryTransferSerial(CThostFtdcQryTransferSerialField pQryTransferSerial, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryTransferSerial(swigCPtr, CThostFtdcQryTransferSerialField.getCPtr(pQryTransferSerial), nRequestID);
    return ret;
  }

  public virtual int ReqQryAccountregister(CThostFtdcQryAccountregisterField pQryAccountregister, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryAccountregister(swigCPtr, CThostFtdcQryAccountregisterField.getCPtr(pQryAccountregister), nRequestID);
    return ret;
  }

  public virtual int ReqQryContractBank(CThostFtdcQryContractBankField pQryContractBank, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryContractBank(swigCPtr, CThostFtdcQryContractBankField.getCPtr(pQryContractBank), nRequestID);
    return ret;
  }

  public virtual int ReqQryParkedOrder(CThostFtdcQryParkedOrderField pQryParkedOrder, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryParkedOrder(swigCPtr, CThostFtdcQryParkedOrderField.getCPtr(pQryParkedOrder), nRequestID);
    return ret;
  }

  public virtual int ReqQryParkedOrderAction(CThostFtdcQryParkedOrderActionField pQryParkedOrderAction, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryParkedOrderAction(swigCPtr, CThostFtdcQryParkedOrderActionField.getCPtr(pQryParkedOrderAction), nRequestID);
    return ret;
  }

  public virtual int ReqQryTradingNotice(CThostFtdcQryTradingNoticeField pQryTradingNotice, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryTradingNotice(swigCPtr, CThostFtdcQryTradingNoticeField.getCPtr(pQryTradingNotice), nRequestID);
    return ret;
  }

  public virtual int ReqQryBrokerTradingParams(CThostFtdcQryBrokerTradingParamsField pQryBrokerTradingParams, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryBrokerTradingParams(swigCPtr, CThostFtdcQryBrokerTradingParamsField.getCPtr(pQryBrokerTradingParams), nRequestID);
    return ret;
  }

  public virtual int ReqQryBrokerTradingAlgos(CThostFtdcQryBrokerTradingAlgosField pQryBrokerTradingAlgos, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQryBrokerTradingAlgos(swigCPtr, CThostFtdcQryBrokerTradingAlgosField.getCPtr(pQryBrokerTradingAlgos), nRequestID);
    return ret;
  }

  public virtual int ReqQueryCFMMCTradingAccountToken(CThostFtdcQueryCFMMCTradingAccountTokenField pQueryCFMMCTradingAccountToken, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQueryCFMMCTradingAccountToken(swigCPtr, CThostFtdcQueryCFMMCTradingAccountTokenField.getCPtr(pQueryCFMMCTradingAccountToken), nRequestID);
    return ret;
  }

  public virtual int ReqFromBankToFutureByFuture(CThostFtdcReqTransferField pReqTransfer, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqFromBankToFutureByFuture(swigCPtr, CThostFtdcReqTransferField.getCPtr(pReqTransfer), nRequestID);
    return ret;
  }

  public virtual int ReqFromFutureToBankByFuture(CThostFtdcReqTransferField pReqTransfer, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqFromFutureToBankByFuture(swigCPtr, CThostFtdcReqTransferField.getCPtr(pReqTransfer), nRequestID);
    return ret;
  }

  public virtual int ReqQueryBankAccountMoneyByFuture(CThostFtdcReqQueryAccountField pReqQueryAccount, int nRequestID) {
    int ret = CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_ReqQueryBankAccountMoneyByFuture(swigCPtr, CThostFtdcReqQueryAccountField.getCPtr(pReqQueryAccount), nRequestID);
    return ret;
  }

  public CThostFtdcTraderApi() : this(CTPTradeCppWrapperPINVOKE.new_CThostFtdcTraderApi(), true) {
    SwigDirectorConnect();
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("Release", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateCThostFtdcTraderApi_0(SwigDirectorRelease);
    if (SwigDerivedClassHasMethod("Init", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateCThostFtdcTraderApi_1(SwigDirectorInit);
    if (SwigDerivedClassHasMethod("Join", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateCThostFtdcTraderApi_2(SwigDirectorJoin);
    if (SwigDerivedClassHasMethod("GetTradingDay", swigMethodTypes3))
      swigDelegate3 = new SwigDelegateCThostFtdcTraderApi_3(SwigDirectorGetTradingDay);
    if (SwigDerivedClassHasMethod("RegisterFront", swigMethodTypes4))
      swigDelegate4 = new SwigDelegateCThostFtdcTraderApi_4(SwigDirectorRegisterFront);
    if (SwigDerivedClassHasMethod("RegisterNameServer", swigMethodTypes5))
      swigDelegate5 = new SwigDelegateCThostFtdcTraderApi_5(SwigDirectorRegisterNameServer);
    if (SwigDerivedClassHasMethod("RegisterFensUserInfo", swigMethodTypes6))
      swigDelegate6 = new SwigDelegateCThostFtdcTraderApi_6(SwigDirectorRegisterFensUserInfo);
    if (SwigDerivedClassHasMethod("RegisterSpi", swigMethodTypes7))
      swigDelegate7 = new SwigDelegateCThostFtdcTraderApi_7(SwigDirectorRegisterSpi);
    if (SwigDerivedClassHasMethod("SubscribePrivateTopic", swigMethodTypes8))
      swigDelegate8 = new SwigDelegateCThostFtdcTraderApi_8(SwigDirectorSubscribePrivateTopic);
    if (SwigDerivedClassHasMethod("SubscribePublicTopic", swigMethodTypes9))
      swigDelegate9 = new SwigDelegateCThostFtdcTraderApi_9(SwigDirectorSubscribePublicTopic);
    if (SwigDerivedClassHasMethod("ReqAuthenticate", swigMethodTypes10))
      swigDelegate10 = new SwigDelegateCThostFtdcTraderApi_10(SwigDirectorReqAuthenticate);
    if (SwigDerivedClassHasMethod("ReqUserLogin", swigMethodTypes11))
      swigDelegate11 = new SwigDelegateCThostFtdcTraderApi_11(SwigDirectorReqUserLogin);
    if (SwigDerivedClassHasMethod("ReqUserLogout", swigMethodTypes12))
      swigDelegate12 = new SwigDelegateCThostFtdcTraderApi_12(SwigDirectorReqUserLogout);
    if (SwigDerivedClassHasMethod("ReqUserPasswordUpdate", swigMethodTypes13))
      swigDelegate13 = new SwigDelegateCThostFtdcTraderApi_13(SwigDirectorReqUserPasswordUpdate);
    if (SwigDerivedClassHasMethod("ReqTradingAccountPasswordUpdate", swigMethodTypes14))
      swigDelegate14 = new SwigDelegateCThostFtdcTraderApi_14(SwigDirectorReqTradingAccountPasswordUpdate);
    if (SwigDerivedClassHasMethod("ReqOrderInsert", swigMethodTypes15))
      swigDelegate15 = new SwigDelegateCThostFtdcTraderApi_15(SwigDirectorReqOrderInsert);
    if (SwigDerivedClassHasMethod("ReqParkedOrderInsert", swigMethodTypes16))
      swigDelegate16 = new SwigDelegateCThostFtdcTraderApi_16(SwigDirectorReqParkedOrderInsert);
    if (SwigDerivedClassHasMethod("ReqParkedOrderAction", swigMethodTypes17))
      swigDelegate17 = new SwigDelegateCThostFtdcTraderApi_17(SwigDirectorReqParkedOrderAction);
    if (SwigDerivedClassHasMethod("ReqOrderAction", swigMethodTypes18))
      swigDelegate18 = new SwigDelegateCThostFtdcTraderApi_18(SwigDirectorReqOrderAction);
    if (SwigDerivedClassHasMethod("ReqQueryMaxOrderVolume", swigMethodTypes19))
      swigDelegate19 = new SwigDelegateCThostFtdcTraderApi_19(SwigDirectorReqQueryMaxOrderVolume);
    if (SwigDerivedClassHasMethod("ReqSettlementInfoConfirm", swigMethodTypes20))
      swigDelegate20 = new SwigDelegateCThostFtdcTraderApi_20(SwigDirectorReqSettlementInfoConfirm);
    if (SwigDerivedClassHasMethod("ReqRemoveParkedOrder", swigMethodTypes21))
      swigDelegate21 = new SwigDelegateCThostFtdcTraderApi_21(SwigDirectorReqRemoveParkedOrder);
    if (SwigDerivedClassHasMethod("ReqRemoveParkedOrderAction", swigMethodTypes22))
      swigDelegate22 = new SwigDelegateCThostFtdcTraderApi_22(SwigDirectorReqRemoveParkedOrderAction);
    if (SwigDerivedClassHasMethod("ReqExecOrderInsert", swigMethodTypes23))
      swigDelegate23 = new SwigDelegateCThostFtdcTraderApi_23(SwigDirectorReqExecOrderInsert);
    if (SwigDerivedClassHasMethod("ReqExecOrderAction", swigMethodTypes24))
      swigDelegate24 = new SwigDelegateCThostFtdcTraderApi_24(SwigDirectorReqExecOrderAction);
    if (SwigDerivedClassHasMethod("ReqForQuoteInsert", swigMethodTypes25))
      swigDelegate25 = new SwigDelegateCThostFtdcTraderApi_25(SwigDirectorReqForQuoteInsert);
    if (SwigDerivedClassHasMethod("ReqQuoteInsert", swigMethodTypes26))
      swigDelegate26 = new SwigDelegateCThostFtdcTraderApi_26(SwigDirectorReqQuoteInsert);
    if (SwigDerivedClassHasMethod("ReqQuoteAction", swigMethodTypes27))
      swigDelegate27 = new SwigDelegateCThostFtdcTraderApi_27(SwigDirectorReqQuoteAction);
    if (SwigDerivedClassHasMethod("ReqCombActionInsert", swigMethodTypes28))
      swigDelegate28 = new SwigDelegateCThostFtdcTraderApi_28(SwigDirectorReqCombActionInsert);
    if (SwigDerivedClassHasMethod("ReqQryOrder", swigMethodTypes29))
      swigDelegate29 = new SwigDelegateCThostFtdcTraderApi_29(SwigDirectorReqQryOrder);
    if (SwigDerivedClassHasMethod("ReqQryTrade", swigMethodTypes30))
      swigDelegate30 = new SwigDelegateCThostFtdcTraderApi_30(SwigDirectorReqQryTrade);
    if (SwigDerivedClassHasMethod("ReqQryInvestorPosition", swigMethodTypes31))
      swigDelegate31 = new SwigDelegateCThostFtdcTraderApi_31(SwigDirectorReqQryInvestorPosition);
    if (SwigDerivedClassHasMethod("ReqQryTradingAccount", swigMethodTypes32))
      swigDelegate32 = new SwigDelegateCThostFtdcTraderApi_32(SwigDirectorReqQryTradingAccount);
    if (SwigDerivedClassHasMethod("ReqQryInvestor", swigMethodTypes33))
      swigDelegate33 = new SwigDelegateCThostFtdcTraderApi_33(SwigDirectorReqQryInvestor);
    if (SwigDerivedClassHasMethod("ReqQryTradingCode", swigMethodTypes34))
      swigDelegate34 = new SwigDelegateCThostFtdcTraderApi_34(SwigDirectorReqQryTradingCode);
    if (SwigDerivedClassHasMethod("ReqQryInstrumentMarginRate", swigMethodTypes35))
      swigDelegate35 = new SwigDelegateCThostFtdcTraderApi_35(SwigDirectorReqQryInstrumentMarginRate);
    if (SwigDerivedClassHasMethod("ReqQryInstrumentCommissionRate", swigMethodTypes36))
      swigDelegate36 = new SwigDelegateCThostFtdcTraderApi_36(SwigDirectorReqQryInstrumentCommissionRate);
    if (SwigDerivedClassHasMethod("ReqQryExchange", swigMethodTypes37))
      swigDelegate37 = new SwigDelegateCThostFtdcTraderApi_37(SwigDirectorReqQryExchange);
    if (SwigDerivedClassHasMethod("ReqQryProduct", swigMethodTypes38))
      swigDelegate38 = new SwigDelegateCThostFtdcTraderApi_38(SwigDirectorReqQryProduct);
    if (SwigDerivedClassHasMethod("ReqQryInstrument", swigMethodTypes39))
      swigDelegate39 = new SwigDelegateCThostFtdcTraderApi_39(SwigDirectorReqQryInstrument);
    if (SwigDerivedClassHasMethod("ReqQryDepthMarketData", swigMethodTypes40))
      swigDelegate40 = new SwigDelegateCThostFtdcTraderApi_40(SwigDirectorReqQryDepthMarketData);
    if (SwigDerivedClassHasMethod("ReqQrySettlementInfo", swigMethodTypes41))
      swigDelegate41 = new SwigDelegateCThostFtdcTraderApi_41(SwigDirectorReqQrySettlementInfo);
    if (SwigDerivedClassHasMethod("ReqQryTransferBank", swigMethodTypes42))
      swigDelegate42 = new SwigDelegateCThostFtdcTraderApi_42(SwigDirectorReqQryTransferBank);
    if (SwigDerivedClassHasMethod("ReqQryInvestorPositionDetail", swigMethodTypes43))
      swigDelegate43 = new SwigDelegateCThostFtdcTraderApi_43(SwigDirectorReqQryInvestorPositionDetail);
    if (SwigDerivedClassHasMethod("ReqQryNotice", swigMethodTypes44))
      swigDelegate44 = new SwigDelegateCThostFtdcTraderApi_44(SwigDirectorReqQryNotice);
    if (SwigDerivedClassHasMethod("ReqQrySettlementInfoConfirm", swigMethodTypes45))
      swigDelegate45 = new SwigDelegateCThostFtdcTraderApi_45(SwigDirectorReqQrySettlementInfoConfirm);
    if (SwigDerivedClassHasMethod("ReqQryInvestorPositionCombineDetail", swigMethodTypes46))
      swigDelegate46 = new SwigDelegateCThostFtdcTraderApi_46(SwigDirectorReqQryInvestorPositionCombineDetail);
    if (SwigDerivedClassHasMethod("ReqQryCFMMCTradingAccountKey", swigMethodTypes47))
      swigDelegate47 = new SwigDelegateCThostFtdcTraderApi_47(SwigDirectorReqQryCFMMCTradingAccountKey);
    if (SwigDerivedClassHasMethod("ReqQryEWarrantOffset", swigMethodTypes48))
      swigDelegate48 = new SwigDelegateCThostFtdcTraderApi_48(SwigDirectorReqQryEWarrantOffset);
    if (SwigDerivedClassHasMethod("ReqQryInvestorProductGroupMargin", swigMethodTypes49))
      swigDelegate49 = new SwigDelegateCThostFtdcTraderApi_49(SwigDirectorReqQryInvestorProductGroupMargin);
    if (SwigDerivedClassHasMethod("ReqQryExchangeMarginRate", swigMethodTypes50))
      swigDelegate50 = new SwigDelegateCThostFtdcTraderApi_50(SwigDirectorReqQryExchangeMarginRate);
    if (SwigDerivedClassHasMethod("ReqQryExchangeMarginRateAdjust", swigMethodTypes51))
      swigDelegate51 = new SwigDelegateCThostFtdcTraderApi_51(SwigDirectorReqQryExchangeMarginRateAdjust);
    if (SwigDerivedClassHasMethod("ReqQryExchangeRate", swigMethodTypes52))
      swigDelegate52 = new SwigDelegateCThostFtdcTraderApi_52(SwigDirectorReqQryExchangeRate);
    if (SwigDerivedClassHasMethod("ReqQrySecAgentACIDMap", swigMethodTypes53))
      swigDelegate53 = new SwigDelegateCThostFtdcTraderApi_53(SwigDirectorReqQrySecAgentACIDMap);
    if (SwigDerivedClassHasMethod("ReqQryProductExchRate", swigMethodTypes54))
      swigDelegate54 = new SwigDelegateCThostFtdcTraderApi_54(SwigDirectorReqQryProductExchRate);
    if (SwigDerivedClassHasMethod("ReqQryOptionInstrTradeCost", swigMethodTypes55))
      swigDelegate55 = new SwigDelegateCThostFtdcTraderApi_55(SwigDirectorReqQryOptionInstrTradeCost);
    if (SwigDerivedClassHasMethod("ReqQryOptionInstrCommRate", swigMethodTypes56))
      swigDelegate56 = new SwigDelegateCThostFtdcTraderApi_56(SwigDirectorReqQryOptionInstrCommRate);
    if (SwigDerivedClassHasMethod("ReqQryExecOrder", swigMethodTypes57))
      swigDelegate57 = new SwigDelegateCThostFtdcTraderApi_57(SwigDirectorReqQryExecOrder);
    if (SwigDerivedClassHasMethod("ReqQryForQuote", swigMethodTypes58))
      swigDelegate58 = new SwigDelegateCThostFtdcTraderApi_58(SwigDirectorReqQryForQuote);
    if (SwigDerivedClassHasMethod("ReqQryQuote", swigMethodTypes59))
      swigDelegate59 = new SwigDelegateCThostFtdcTraderApi_59(SwigDirectorReqQryQuote);
    if (SwigDerivedClassHasMethod("ReqQryCombInstrumentGuard", swigMethodTypes60))
      swigDelegate60 = new SwigDelegateCThostFtdcTraderApi_60(SwigDirectorReqQryCombInstrumentGuard);
    if (SwigDerivedClassHasMethod("ReqQryCombAction", swigMethodTypes61))
      swigDelegate61 = new SwigDelegateCThostFtdcTraderApi_61(SwigDirectorReqQryCombAction);
    if (SwigDerivedClassHasMethod("ReqQryTransferSerial", swigMethodTypes62))
      swigDelegate62 = new SwigDelegateCThostFtdcTraderApi_62(SwigDirectorReqQryTransferSerial);
    if (SwigDerivedClassHasMethod("ReqQryAccountregister", swigMethodTypes63))
      swigDelegate63 = new SwigDelegateCThostFtdcTraderApi_63(SwigDirectorReqQryAccountregister);
    if (SwigDerivedClassHasMethod("ReqQryContractBank", swigMethodTypes64))
      swigDelegate64 = new SwigDelegateCThostFtdcTraderApi_64(SwigDirectorReqQryContractBank);
    if (SwigDerivedClassHasMethod("ReqQryParkedOrder", swigMethodTypes65))
      swigDelegate65 = new SwigDelegateCThostFtdcTraderApi_65(SwigDirectorReqQryParkedOrder);
    if (SwigDerivedClassHasMethod("ReqQryParkedOrderAction", swigMethodTypes66))
      swigDelegate66 = new SwigDelegateCThostFtdcTraderApi_66(SwigDirectorReqQryParkedOrderAction);
    if (SwigDerivedClassHasMethod("ReqQryTradingNotice", swigMethodTypes67))
      swigDelegate67 = new SwigDelegateCThostFtdcTraderApi_67(SwigDirectorReqQryTradingNotice);
    if (SwigDerivedClassHasMethod("ReqQryBrokerTradingParams", swigMethodTypes68))
      swigDelegate68 = new SwigDelegateCThostFtdcTraderApi_68(SwigDirectorReqQryBrokerTradingParams);
    if (SwigDerivedClassHasMethod("ReqQryBrokerTradingAlgos", swigMethodTypes69))
      swigDelegate69 = new SwigDelegateCThostFtdcTraderApi_69(SwigDirectorReqQryBrokerTradingAlgos);
    if (SwigDerivedClassHasMethod("ReqQueryCFMMCTradingAccountToken", swigMethodTypes70))
      swigDelegate70 = new SwigDelegateCThostFtdcTraderApi_70(SwigDirectorReqQueryCFMMCTradingAccountToken);
    if (SwigDerivedClassHasMethod("ReqFromBankToFutureByFuture", swigMethodTypes71))
      swigDelegate71 = new SwigDelegateCThostFtdcTraderApi_71(SwigDirectorReqFromBankToFutureByFuture);
    if (SwigDerivedClassHasMethod("ReqFromFutureToBankByFuture", swigMethodTypes72))
      swigDelegate72 = new SwigDelegateCThostFtdcTraderApi_72(SwigDirectorReqFromFutureToBankByFuture);
    if (SwigDerivedClassHasMethod("ReqQueryBankAccountMoneyByFuture", swigMethodTypes73))
      swigDelegate73 = new SwigDelegateCThostFtdcTraderApi_73(SwigDirectorReqQueryBankAccountMoneyByFuture);
    CTPTradeCppWrapperPINVOKE.CThostFtdcTraderApi_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3, swigDelegate4, swigDelegate5, swigDelegate6, swigDelegate7, swigDelegate8, swigDelegate9, swigDelegate10, swigDelegate11, swigDelegate12, swigDelegate13, swigDelegate14, swigDelegate15, swigDelegate16, swigDelegate17, swigDelegate18, swigDelegate19, swigDelegate20, swigDelegate21, swigDelegate22, swigDelegate23, swigDelegate24, swigDelegate25, swigDelegate26, swigDelegate27, swigDelegate28, swigDelegate29, swigDelegate30, swigDelegate31, swigDelegate32, swigDelegate33, swigDelegate34, swigDelegate35, swigDelegate36, swigDelegate37, swigDelegate38, swigDelegate39, swigDelegate40, swigDelegate41, swigDelegate42, swigDelegate43, swigDelegate44, swigDelegate45, swigDelegate46, swigDelegate47, swigDelegate48, swigDelegate49, swigDelegate50, swigDelegate51, swigDelegate52, swigDelegate53, swigDelegate54, swigDelegate55, swigDelegate56, swigDelegate57, swigDelegate58, swigDelegate59, swigDelegate60, swigDelegate61, swigDelegate62, swigDelegate63, swigDelegate64, swigDelegate65, swigDelegate66, swigDelegate67, swigDelegate68, swigDelegate69, swigDelegate70, swigDelegate71, swigDelegate72, swigDelegate73);
  }

  private bool SwigDerivedClassHasMethod(string methodName, global::System.Type[] methodTypes) {
    global::System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(CThostFtdcTraderApi));
    return hasDerivedMethod;
  }

  private void SwigDirectorRelease() {
    Release();
  }

  private void SwigDirectorInit() {
    Init();
  }

  private int SwigDirectorJoin() {
    return Join();
  }

  private string SwigDirectorGetTradingDay() {
    return GetTradingDay();
  }

  private void SwigDirectorRegisterFront(string pszFrontAddress) {
    RegisterFront(pszFrontAddress);
  }

  private void SwigDirectorRegisterNameServer(string pszNsAddress) {
    RegisterNameServer(pszNsAddress);
  }

  private void SwigDirectorRegisterFensUserInfo(global::System.IntPtr pFensUserInfo) {
    RegisterFensUserInfo((pFensUserInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcFensUserInfoField(pFensUserInfo, false));
  }

  private void SwigDirectorRegisterSpi(global::System.IntPtr pSpi) {
    RegisterSpi((pSpi == global::System.IntPtr.Zero) ? null : new CThostFtdcTraderSpi(pSpi, false));
  }

  private void SwigDirectorSubscribePrivateTopic(int nResumeType) {
    SubscribePrivateTopic((THOST_TE_RESUME_TYPE)nResumeType);
  }

  private void SwigDirectorSubscribePublicTopic(int nResumeType) {
    SubscribePublicTopic((THOST_TE_RESUME_TYPE)nResumeType);
  }

  private int SwigDirectorReqAuthenticate(global::System.IntPtr pReqAuthenticateField, int nRequestID) {
    return ReqAuthenticate((pReqAuthenticateField == global::System.IntPtr.Zero) ? null : new CThostFtdcReqAuthenticateField(pReqAuthenticateField, false), nRequestID);
  }

  private int SwigDirectorReqUserLogin(global::System.IntPtr pReqUserLoginField, int nRequestID) {
    return ReqUserLogin((pReqUserLoginField == global::System.IntPtr.Zero) ? null : new CThostFtdcReqUserLoginField(pReqUserLoginField, false), nRequestID);
  }

  private int SwigDirectorReqUserLogout(global::System.IntPtr pUserLogout, int nRequestID) {
    return ReqUserLogout((pUserLogout == global::System.IntPtr.Zero) ? null : new CThostFtdcUserLogoutField(pUserLogout, false), nRequestID);
  }

  private int SwigDirectorReqUserPasswordUpdate(global::System.IntPtr pUserPasswordUpdate, int nRequestID) {
    return ReqUserPasswordUpdate((pUserPasswordUpdate == global::System.IntPtr.Zero) ? null : new CThostFtdcUserPasswordUpdateField(pUserPasswordUpdate, false), nRequestID);
  }

  private int SwigDirectorReqTradingAccountPasswordUpdate(global::System.IntPtr pTradingAccountPasswordUpdate, int nRequestID) {
    return ReqTradingAccountPasswordUpdate((pTradingAccountPasswordUpdate == global::System.IntPtr.Zero) ? null : new CThostFtdcTradingAccountPasswordUpdateField(pTradingAccountPasswordUpdate, false), nRequestID);
  }

  private int SwigDirectorReqOrderInsert(global::System.IntPtr pInputOrder, int nRequestID) {
    return ReqOrderInsert((pInputOrder == global::System.IntPtr.Zero) ? null : new CThostFtdcInputOrderField(pInputOrder, false), nRequestID);
  }

  private int SwigDirectorReqParkedOrderInsert(global::System.IntPtr pParkedOrder, int nRequestID) {
    return ReqParkedOrderInsert((pParkedOrder == global::System.IntPtr.Zero) ? null : new CThostFtdcParkedOrderField(pParkedOrder, false), nRequestID);
  }

  private int SwigDirectorReqParkedOrderAction(global::System.IntPtr pParkedOrderAction, int nRequestID) {
    return ReqParkedOrderAction((pParkedOrderAction == global::System.IntPtr.Zero) ? null : new CThostFtdcParkedOrderActionField(pParkedOrderAction, false), nRequestID);
  }

  private int SwigDirectorReqOrderAction(global::System.IntPtr pInputOrderAction, int nRequestID) {
    return ReqOrderAction((pInputOrderAction == global::System.IntPtr.Zero) ? null : new CThostFtdcInputOrderActionField(pInputOrderAction, false), nRequestID);
  }

  private int SwigDirectorReqQueryMaxOrderVolume(global::System.IntPtr pQueryMaxOrderVolume, int nRequestID) {
    return ReqQueryMaxOrderVolume((pQueryMaxOrderVolume == global::System.IntPtr.Zero) ? null : new CThostFtdcQueryMaxOrderVolumeField(pQueryMaxOrderVolume, false), nRequestID);
  }

  private int SwigDirectorReqSettlementInfoConfirm(global::System.IntPtr pSettlementInfoConfirm, int nRequestID) {
    return ReqSettlementInfoConfirm((pSettlementInfoConfirm == global::System.IntPtr.Zero) ? null : new CThostFtdcSettlementInfoConfirmField(pSettlementInfoConfirm, false), nRequestID);
  }

  private int SwigDirectorReqRemoveParkedOrder(global::System.IntPtr pRemoveParkedOrder, int nRequestID) {
    return ReqRemoveParkedOrder((pRemoveParkedOrder == global::System.IntPtr.Zero) ? null : new CThostFtdcRemoveParkedOrderField(pRemoveParkedOrder, false), nRequestID);
  }

  private int SwigDirectorReqRemoveParkedOrderAction(global::System.IntPtr pRemoveParkedOrderAction, int nRequestID) {
    return ReqRemoveParkedOrderAction((pRemoveParkedOrderAction == global::System.IntPtr.Zero) ? null : new CThostFtdcRemoveParkedOrderActionField(pRemoveParkedOrderAction, false), nRequestID);
  }

  private int SwigDirectorReqExecOrderInsert(global::System.IntPtr pInputExecOrder, int nRequestID) {
    return ReqExecOrderInsert((pInputExecOrder == global::System.IntPtr.Zero) ? null : new CThostFtdcInputExecOrderField(pInputExecOrder, false), nRequestID);
  }

  private int SwigDirectorReqExecOrderAction(global::System.IntPtr pInputExecOrderAction, int nRequestID) {
    return ReqExecOrderAction((pInputExecOrderAction == global::System.IntPtr.Zero) ? null : new CThostFtdcInputExecOrderActionField(pInputExecOrderAction, false), nRequestID);
  }

  private int SwigDirectorReqForQuoteInsert(global::System.IntPtr pInputForQuote, int nRequestID) {
    return ReqForQuoteInsert((pInputForQuote == global::System.IntPtr.Zero) ? null : new CThostFtdcInputForQuoteField(pInputForQuote, false), nRequestID);
  }

  private int SwigDirectorReqQuoteInsert(global::System.IntPtr pInputQuote, int nRequestID) {
    return ReqQuoteInsert((pInputQuote == global::System.IntPtr.Zero) ? null : new CThostFtdcInputQuoteField(pInputQuote, false), nRequestID);
  }

  private int SwigDirectorReqQuoteAction(global::System.IntPtr pInputQuoteAction, int nRequestID) {
    return ReqQuoteAction((pInputQuoteAction == global::System.IntPtr.Zero) ? null : new CThostFtdcInputQuoteActionField(pInputQuoteAction, false), nRequestID);
  }

  private int SwigDirectorReqCombActionInsert(global::System.IntPtr pInputCombAction, int nRequestID) {
    return ReqCombActionInsert((pInputCombAction == global::System.IntPtr.Zero) ? null : new CThostFtdcInputCombActionField(pInputCombAction, false), nRequestID);
  }

  private int SwigDirectorReqQryOrder(global::System.IntPtr pQryOrder, int nRequestID) {
    return ReqQryOrder((pQryOrder == global::System.IntPtr.Zero) ? null : new CThostFtdcQryOrderField(pQryOrder, false), nRequestID);
  }

  private int SwigDirectorReqQryTrade(global::System.IntPtr pQryTrade, int nRequestID) {
    return ReqQryTrade((pQryTrade == global::System.IntPtr.Zero) ? null : new CThostFtdcQryTradeField(pQryTrade, false), nRequestID);
  }

  private int SwigDirectorReqQryInvestorPosition(global::System.IntPtr pQryInvestorPosition, int nRequestID) {
    return ReqQryInvestorPosition((pQryInvestorPosition == global::System.IntPtr.Zero) ? null : new CThostFtdcQryInvestorPositionField(pQryInvestorPosition, false), nRequestID);
  }

  private int SwigDirectorReqQryTradingAccount(global::System.IntPtr pQryTradingAccount, int nRequestID) {
    return ReqQryTradingAccount((pQryTradingAccount == global::System.IntPtr.Zero) ? null : new CThostFtdcQryTradingAccountField(pQryTradingAccount, false), nRequestID);
  }

  private int SwigDirectorReqQryInvestor(global::System.IntPtr pQryInvestor, int nRequestID) {
    return ReqQryInvestor((pQryInvestor == global::System.IntPtr.Zero) ? null : new CThostFtdcQryInvestorField(pQryInvestor, false), nRequestID);
  }

  private int SwigDirectorReqQryTradingCode(global::System.IntPtr pQryTradingCode, int nRequestID) {
    return ReqQryTradingCode((pQryTradingCode == global::System.IntPtr.Zero) ? null : new CThostFtdcQryTradingCodeField(pQryTradingCode, false), nRequestID);
  }

  private int SwigDirectorReqQryInstrumentMarginRate(global::System.IntPtr pQryInstrumentMarginRate, int nRequestID) {
    return ReqQryInstrumentMarginRate((pQryInstrumentMarginRate == global::System.IntPtr.Zero) ? null : new CThostFtdcQryInstrumentMarginRateField(pQryInstrumentMarginRate, false), nRequestID);
  }

  private int SwigDirectorReqQryInstrumentCommissionRate(global::System.IntPtr pQryInstrumentCommissionRate, int nRequestID) {
    return ReqQryInstrumentCommissionRate((pQryInstrumentCommissionRate == global::System.IntPtr.Zero) ? null : new CThostFtdcQryInstrumentCommissionRateField(pQryInstrumentCommissionRate, false), nRequestID);
  }

  private int SwigDirectorReqQryExchange(global::System.IntPtr pQryExchange, int nRequestID) {
    return ReqQryExchange((pQryExchange == global::System.IntPtr.Zero) ? null : new CThostFtdcQryExchangeField(pQryExchange, false), nRequestID);
  }

  private int SwigDirectorReqQryProduct(global::System.IntPtr pQryProduct, int nRequestID) {
    return ReqQryProduct((pQryProduct == global::System.IntPtr.Zero) ? null : new CThostFtdcQryProductField(pQryProduct, false), nRequestID);
  }

  private int SwigDirectorReqQryInstrument(global::System.IntPtr pQryInstrument, int nRequestID) {
    return ReqQryInstrument((pQryInstrument == global::System.IntPtr.Zero) ? null : new CThostFtdcQryInstrumentField(pQryInstrument, false), nRequestID);
  }

  private int SwigDirectorReqQryDepthMarketData(global::System.IntPtr pQryDepthMarketData, int nRequestID) {
    return ReqQryDepthMarketData((pQryDepthMarketData == global::System.IntPtr.Zero) ? null : new CThostFtdcQryDepthMarketDataField(pQryDepthMarketData, false), nRequestID);
  }

  private int SwigDirectorReqQrySettlementInfo(global::System.IntPtr pQrySettlementInfo, int nRequestID) {
    return ReqQrySettlementInfo((pQrySettlementInfo == global::System.IntPtr.Zero) ? null : new CThostFtdcQrySettlementInfoField(pQrySettlementInfo, false), nRequestID);
  }

  private int SwigDirectorReqQryTransferBank(global::System.IntPtr pQryTransferBank, int nRequestID) {
    return ReqQryTransferBank((pQryTransferBank == global::System.IntPtr.Zero) ? null : new CThostFtdcQryTransferBankField(pQryTransferBank, false), nRequestID);
  }

  private int SwigDirectorReqQryInvestorPositionDetail(global::System.IntPtr pQryInvestorPositionDetail, int nRequestID) {
    return ReqQryInvestorPositionDetail((pQryInvestorPositionDetail == global::System.IntPtr.Zero) ? null : new CThostFtdcQryInvestorPositionDetailField(pQryInvestorPositionDetail, false), nRequestID);
  }

  private int SwigDirectorReqQryNotice(global::System.IntPtr pQryNotice, int nRequestID) {
    return ReqQryNotice((pQryNotice == global::System.IntPtr.Zero) ? null : new CThostFtdcQryNoticeField(pQryNotice, false), nRequestID);
  }

  private int SwigDirectorReqQrySettlementInfoConfirm(global::System.IntPtr pQrySettlementInfoConfirm, int nRequestID) {
    return ReqQrySettlementInfoConfirm((pQrySettlementInfoConfirm == global::System.IntPtr.Zero) ? null : new CThostFtdcQrySettlementInfoConfirmField(pQrySettlementInfoConfirm, false), nRequestID);
  }

  private int SwigDirectorReqQryInvestorPositionCombineDetail(global::System.IntPtr pQryInvestorPositionCombineDetail, int nRequestID) {
    return ReqQryInvestorPositionCombineDetail((pQryInvestorPositionCombineDetail == global::System.IntPtr.Zero) ? null : new CThostFtdcQryInvestorPositionCombineDetailField(pQryInvestorPositionCombineDetail, false), nRequestID);
  }

  private int SwigDirectorReqQryCFMMCTradingAccountKey(global::System.IntPtr pQryCFMMCTradingAccountKey, int nRequestID) {
    return ReqQryCFMMCTradingAccountKey((pQryCFMMCTradingAccountKey == global::System.IntPtr.Zero) ? null : new CThostFtdcQryCFMMCTradingAccountKeyField(pQryCFMMCTradingAccountKey, false), nRequestID);
  }

  private int SwigDirectorReqQryEWarrantOffset(global::System.IntPtr pQryEWarrantOffset, int nRequestID) {
    return ReqQryEWarrantOffset((pQryEWarrantOffset == global::System.IntPtr.Zero) ? null : new CThostFtdcQryEWarrantOffsetField(pQryEWarrantOffset, false), nRequestID);
  }

  private int SwigDirectorReqQryInvestorProductGroupMargin(global::System.IntPtr pQryInvestorProductGroupMargin, int nRequestID) {
    return ReqQryInvestorProductGroupMargin((pQryInvestorProductGroupMargin == global::System.IntPtr.Zero) ? null : new CThostFtdcQryInvestorProductGroupMarginField(pQryInvestorProductGroupMargin, false), nRequestID);
  }

  private int SwigDirectorReqQryExchangeMarginRate(global::System.IntPtr pQryExchangeMarginRate, int nRequestID) {
    return ReqQryExchangeMarginRate((pQryExchangeMarginRate == global::System.IntPtr.Zero) ? null : new CThostFtdcQryExchangeMarginRateField(pQryExchangeMarginRate, false), nRequestID);
  }

  private int SwigDirectorReqQryExchangeMarginRateAdjust(global::System.IntPtr pQryExchangeMarginRateAdjust, int nRequestID) {
    return ReqQryExchangeMarginRateAdjust((pQryExchangeMarginRateAdjust == global::System.IntPtr.Zero) ? null : new CThostFtdcQryExchangeMarginRateAdjustField(pQryExchangeMarginRateAdjust, false), nRequestID);
  }

  private int SwigDirectorReqQryExchangeRate(global::System.IntPtr pQryExchangeRate, int nRequestID) {
    return ReqQryExchangeRate((pQryExchangeRate == global::System.IntPtr.Zero) ? null : new CThostFtdcQryExchangeRateField(pQryExchangeRate, false), nRequestID);
  }

  private int SwigDirectorReqQrySecAgentACIDMap(global::System.IntPtr pQrySecAgentACIDMap, int nRequestID) {
    return ReqQrySecAgentACIDMap((pQrySecAgentACIDMap == global::System.IntPtr.Zero) ? null : new CThostFtdcQrySecAgentACIDMapField(pQrySecAgentACIDMap, false), nRequestID);
  }

  private int SwigDirectorReqQryProductExchRate(global::System.IntPtr pQryProductExchRate, int nRequestID) {
    return ReqQryProductExchRate((pQryProductExchRate == global::System.IntPtr.Zero) ? null : new CThostFtdcQryProductExchRateField(pQryProductExchRate, false), nRequestID);
  }

  private int SwigDirectorReqQryOptionInstrTradeCost(global::System.IntPtr pQryOptionInstrTradeCost, int nRequestID) {
    return ReqQryOptionInstrTradeCost((pQryOptionInstrTradeCost == global::System.IntPtr.Zero) ? null : new CThostFtdcQryOptionInstrTradeCostField(pQryOptionInstrTradeCost, false), nRequestID);
  }

  private int SwigDirectorReqQryOptionInstrCommRate(global::System.IntPtr pQryOptionInstrCommRate, int nRequestID) {
    return ReqQryOptionInstrCommRate((pQryOptionInstrCommRate == global::System.IntPtr.Zero) ? null : new CThostFtdcQryOptionInstrCommRateField(pQryOptionInstrCommRate, false), nRequestID);
  }

  private int SwigDirectorReqQryExecOrder(global::System.IntPtr pQryExecOrder, int nRequestID) {
    return ReqQryExecOrder((pQryExecOrder == global::System.IntPtr.Zero) ? null : new CThostFtdcQryExecOrderField(pQryExecOrder, false), nRequestID);
  }

  private int SwigDirectorReqQryForQuote(global::System.IntPtr pQryForQuote, int nRequestID) {
    return ReqQryForQuote((pQryForQuote == global::System.IntPtr.Zero) ? null : new CThostFtdcQryForQuoteField(pQryForQuote, false), nRequestID);
  }

  private int SwigDirectorReqQryQuote(global::System.IntPtr pQryQuote, int nRequestID) {
    return ReqQryQuote((pQryQuote == global::System.IntPtr.Zero) ? null : new CThostFtdcQryQuoteField(pQryQuote, false), nRequestID);
  }

  private int SwigDirectorReqQryCombInstrumentGuard(global::System.IntPtr pQryCombInstrumentGuard, int nRequestID) {
    return ReqQryCombInstrumentGuard((pQryCombInstrumentGuard == global::System.IntPtr.Zero) ? null : new CThostFtdcQryCombInstrumentGuardField(pQryCombInstrumentGuard, false), nRequestID);
  }

  private int SwigDirectorReqQryCombAction(global::System.IntPtr pQryCombAction, int nRequestID) {
    return ReqQryCombAction((pQryCombAction == global::System.IntPtr.Zero) ? null : new CThostFtdcQryCombActionField(pQryCombAction, false), nRequestID);
  }

  private int SwigDirectorReqQryTransferSerial(global::System.IntPtr pQryTransferSerial, int nRequestID) {
    return ReqQryTransferSerial((pQryTransferSerial == global::System.IntPtr.Zero) ? null : new CThostFtdcQryTransferSerialField(pQryTransferSerial, false), nRequestID);
  }

  private int SwigDirectorReqQryAccountregister(global::System.IntPtr pQryAccountregister, int nRequestID) {
    return ReqQryAccountregister((pQryAccountregister == global::System.IntPtr.Zero) ? null : new CThostFtdcQryAccountregisterField(pQryAccountregister, false), nRequestID);
  }

  private int SwigDirectorReqQryContractBank(global::System.IntPtr pQryContractBank, int nRequestID) {
    return ReqQryContractBank((pQryContractBank == global::System.IntPtr.Zero) ? null : new CThostFtdcQryContractBankField(pQryContractBank, false), nRequestID);
  }

  private int SwigDirectorReqQryParkedOrder(global::System.IntPtr pQryParkedOrder, int nRequestID) {
    return ReqQryParkedOrder((pQryParkedOrder == global::System.IntPtr.Zero) ? null : new CThostFtdcQryParkedOrderField(pQryParkedOrder, false), nRequestID);
  }

  private int SwigDirectorReqQryParkedOrderAction(global::System.IntPtr pQryParkedOrderAction, int nRequestID) {
    return ReqQryParkedOrderAction((pQryParkedOrderAction == global::System.IntPtr.Zero) ? null : new CThostFtdcQryParkedOrderActionField(pQryParkedOrderAction, false), nRequestID);
  }

  private int SwigDirectorReqQryTradingNotice(global::System.IntPtr pQryTradingNotice, int nRequestID) {
    return ReqQryTradingNotice((pQryTradingNotice == global::System.IntPtr.Zero) ? null : new CThostFtdcQryTradingNoticeField(pQryTradingNotice, false), nRequestID);
  }

  private int SwigDirectorReqQryBrokerTradingParams(global::System.IntPtr pQryBrokerTradingParams, int nRequestID) {
    return ReqQryBrokerTradingParams((pQryBrokerTradingParams == global::System.IntPtr.Zero) ? null : new CThostFtdcQryBrokerTradingParamsField(pQryBrokerTradingParams, false), nRequestID);
  }

  private int SwigDirectorReqQryBrokerTradingAlgos(global::System.IntPtr pQryBrokerTradingAlgos, int nRequestID) {
    return ReqQryBrokerTradingAlgos((pQryBrokerTradingAlgos == global::System.IntPtr.Zero) ? null : new CThostFtdcQryBrokerTradingAlgosField(pQryBrokerTradingAlgos, false), nRequestID);
  }

  private int SwigDirectorReqQueryCFMMCTradingAccountToken(global::System.IntPtr pQueryCFMMCTradingAccountToken, int nRequestID) {
    return ReqQueryCFMMCTradingAccountToken((pQueryCFMMCTradingAccountToken == global::System.IntPtr.Zero) ? null : new CThostFtdcQueryCFMMCTradingAccountTokenField(pQueryCFMMCTradingAccountToken, false), nRequestID);
  }

  private int SwigDirectorReqFromBankToFutureByFuture(global::System.IntPtr pReqTransfer, int nRequestID) {
    return ReqFromBankToFutureByFuture((pReqTransfer == global::System.IntPtr.Zero) ? null : new CThostFtdcReqTransferField(pReqTransfer, false), nRequestID);
  }

  private int SwigDirectorReqFromFutureToBankByFuture(global::System.IntPtr pReqTransfer, int nRequestID) {
    return ReqFromFutureToBankByFuture((pReqTransfer == global::System.IntPtr.Zero) ? null : new CThostFtdcReqTransferField(pReqTransfer, false), nRequestID);
  }

  private int SwigDirectorReqQueryBankAccountMoneyByFuture(global::System.IntPtr pReqQueryAccount, int nRequestID) {
    return ReqQueryBankAccountMoneyByFuture((pReqQueryAccount == global::System.IntPtr.Zero) ? null : new CThostFtdcReqQueryAccountField(pReqQueryAccount, false), nRequestID);
  }

  public delegate void SwigDelegateCThostFtdcTraderApi_0();
  public delegate void SwigDelegateCThostFtdcTraderApi_1();
  public delegate int SwigDelegateCThostFtdcTraderApi_2();
  public delegate string SwigDelegateCThostFtdcTraderApi_3();
  public delegate void SwigDelegateCThostFtdcTraderApi_4(string pszFrontAddress);
  public delegate void SwigDelegateCThostFtdcTraderApi_5(string pszNsAddress);
  public delegate void SwigDelegateCThostFtdcTraderApi_6(global::System.IntPtr pFensUserInfo);
  public delegate void SwigDelegateCThostFtdcTraderApi_7(global::System.IntPtr pSpi);
  public delegate void SwigDelegateCThostFtdcTraderApi_8(int nResumeType);
  public delegate void SwigDelegateCThostFtdcTraderApi_9(int nResumeType);
  public delegate int SwigDelegateCThostFtdcTraderApi_10(global::System.IntPtr pReqAuthenticateField, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_11(global::System.IntPtr pReqUserLoginField, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_12(global::System.IntPtr pUserLogout, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_13(global::System.IntPtr pUserPasswordUpdate, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_14(global::System.IntPtr pTradingAccountPasswordUpdate, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_15(global::System.IntPtr pInputOrder, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_16(global::System.IntPtr pParkedOrder, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_17(global::System.IntPtr pParkedOrderAction, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_18(global::System.IntPtr pInputOrderAction, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_19(global::System.IntPtr pQueryMaxOrderVolume, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_20(global::System.IntPtr pSettlementInfoConfirm, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_21(global::System.IntPtr pRemoveParkedOrder, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_22(global::System.IntPtr pRemoveParkedOrderAction, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_23(global::System.IntPtr pInputExecOrder, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_24(global::System.IntPtr pInputExecOrderAction, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_25(global::System.IntPtr pInputForQuote, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_26(global::System.IntPtr pInputQuote, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_27(global::System.IntPtr pInputQuoteAction, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_28(global::System.IntPtr pInputCombAction, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_29(global::System.IntPtr pQryOrder, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_30(global::System.IntPtr pQryTrade, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_31(global::System.IntPtr pQryInvestorPosition, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_32(global::System.IntPtr pQryTradingAccount, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_33(global::System.IntPtr pQryInvestor, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_34(global::System.IntPtr pQryTradingCode, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_35(global::System.IntPtr pQryInstrumentMarginRate, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_36(global::System.IntPtr pQryInstrumentCommissionRate, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_37(global::System.IntPtr pQryExchange, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_38(global::System.IntPtr pQryProduct, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_39(global::System.IntPtr pQryInstrument, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_40(global::System.IntPtr pQryDepthMarketData, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_41(global::System.IntPtr pQrySettlementInfo, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_42(global::System.IntPtr pQryTransferBank, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_43(global::System.IntPtr pQryInvestorPositionDetail, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_44(global::System.IntPtr pQryNotice, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_45(global::System.IntPtr pQrySettlementInfoConfirm, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_46(global::System.IntPtr pQryInvestorPositionCombineDetail, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_47(global::System.IntPtr pQryCFMMCTradingAccountKey, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_48(global::System.IntPtr pQryEWarrantOffset, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_49(global::System.IntPtr pQryInvestorProductGroupMargin, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_50(global::System.IntPtr pQryExchangeMarginRate, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_51(global::System.IntPtr pQryExchangeMarginRateAdjust, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_52(global::System.IntPtr pQryExchangeRate, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_53(global::System.IntPtr pQrySecAgentACIDMap, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_54(global::System.IntPtr pQryProductExchRate, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_55(global::System.IntPtr pQryOptionInstrTradeCost, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_56(global::System.IntPtr pQryOptionInstrCommRate, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_57(global::System.IntPtr pQryExecOrder, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_58(global::System.IntPtr pQryForQuote, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_59(global::System.IntPtr pQryQuote, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_60(global::System.IntPtr pQryCombInstrumentGuard, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_61(global::System.IntPtr pQryCombAction, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_62(global::System.IntPtr pQryTransferSerial, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_63(global::System.IntPtr pQryAccountregister, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_64(global::System.IntPtr pQryContractBank, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_65(global::System.IntPtr pQryParkedOrder, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_66(global::System.IntPtr pQryParkedOrderAction, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_67(global::System.IntPtr pQryTradingNotice, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_68(global::System.IntPtr pQryBrokerTradingParams, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_69(global::System.IntPtr pQryBrokerTradingAlgos, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_70(global::System.IntPtr pQueryCFMMCTradingAccountToken, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_71(global::System.IntPtr pReqTransfer, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_72(global::System.IntPtr pReqTransfer, int nRequestID);
  public delegate int SwigDelegateCThostFtdcTraderApi_73(global::System.IntPtr pReqQueryAccount, int nRequestID);

  private SwigDelegateCThostFtdcTraderApi_0 swigDelegate0;
  private SwigDelegateCThostFtdcTraderApi_1 swigDelegate1;
  private SwigDelegateCThostFtdcTraderApi_2 swigDelegate2;
  private SwigDelegateCThostFtdcTraderApi_3 swigDelegate3;
  private SwigDelegateCThostFtdcTraderApi_4 swigDelegate4;
  private SwigDelegateCThostFtdcTraderApi_5 swigDelegate5;
  private SwigDelegateCThostFtdcTraderApi_6 swigDelegate6;
  private SwigDelegateCThostFtdcTraderApi_7 swigDelegate7;
  private SwigDelegateCThostFtdcTraderApi_8 swigDelegate8;
  private SwigDelegateCThostFtdcTraderApi_9 swigDelegate9;
  private SwigDelegateCThostFtdcTraderApi_10 swigDelegate10;
  private SwigDelegateCThostFtdcTraderApi_11 swigDelegate11;
  private SwigDelegateCThostFtdcTraderApi_12 swigDelegate12;
  private SwigDelegateCThostFtdcTraderApi_13 swigDelegate13;
  private SwigDelegateCThostFtdcTraderApi_14 swigDelegate14;
  private SwigDelegateCThostFtdcTraderApi_15 swigDelegate15;
  private SwigDelegateCThostFtdcTraderApi_16 swigDelegate16;
  private SwigDelegateCThostFtdcTraderApi_17 swigDelegate17;
  private SwigDelegateCThostFtdcTraderApi_18 swigDelegate18;
  private SwigDelegateCThostFtdcTraderApi_19 swigDelegate19;
  private SwigDelegateCThostFtdcTraderApi_20 swigDelegate20;
  private SwigDelegateCThostFtdcTraderApi_21 swigDelegate21;
  private SwigDelegateCThostFtdcTraderApi_22 swigDelegate22;
  private SwigDelegateCThostFtdcTraderApi_23 swigDelegate23;
  private SwigDelegateCThostFtdcTraderApi_24 swigDelegate24;
  private SwigDelegateCThostFtdcTraderApi_25 swigDelegate25;
  private SwigDelegateCThostFtdcTraderApi_26 swigDelegate26;
  private SwigDelegateCThostFtdcTraderApi_27 swigDelegate27;
  private SwigDelegateCThostFtdcTraderApi_28 swigDelegate28;
  private SwigDelegateCThostFtdcTraderApi_29 swigDelegate29;
  private SwigDelegateCThostFtdcTraderApi_30 swigDelegate30;
  private SwigDelegateCThostFtdcTraderApi_31 swigDelegate31;
  private SwigDelegateCThostFtdcTraderApi_32 swigDelegate32;
  private SwigDelegateCThostFtdcTraderApi_33 swigDelegate33;
  private SwigDelegateCThostFtdcTraderApi_34 swigDelegate34;
  private SwigDelegateCThostFtdcTraderApi_35 swigDelegate35;
  private SwigDelegateCThostFtdcTraderApi_36 swigDelegate36;
  private SwigDelegateCThostFtdcTraderApi_37 swigDelegate37;
  private SwigDelegateCThostFtdcTraderApi_38 swigDelegate38;
  private SwigDelegateCThostFtdcTraderApi_39 swigDelegate39;
  private SwigDelegateCThostFtdcTraderApi_40 swigDelegate40;
  private SwigDelegateCThostFtdcTraderApi_41 swigDelegate41;
  private SwigDelegateCThostFtdcTraderApi_42 swigDelegate42;
  private SwigDelegateCThostFtdcTraderApi_43 swigDelegate43;
  private SwigDelegateCThostFtdcTraderApi_44 swigDelegate44;
  private SwigDelegateCThostFtdcTraderApi_45 swigDelegate45;
  private SwigDelegateCThostFtdcTraderApi_46 swigDelegate46;
  private SwigDelegateCThostFtdcTraderApi_47 swigDelegate47;
  private SwigDelegateCThostFtdcTraderApi_48 swigDelegate48;
  private SwigDelegateCThostFtdcTraderApi_49 swigDelegate49;
  private SwigDelegateCThostFtdcTraderApi_50 swigDelegate50;
  private SwigDelegateCThostFtdcTraderApi_51 swigDelegate51;
  private SwigDelegateCThostFtdcTraderApi_52 swigDelegate52;
  private SwigDelegateCThostFtdcTraderApi_53 swigDelegate53;
  private SwigDelegateCThostFtdcTraderApi_54 swigDelegate54;
  private SwigDelegateCThostFtdcTraderApi_55 swigDelegate55;
  private SwigDelegateCThostFtdcTraderApi_56 swigDelegate56;
  private SwigDelegateCThostFtdcTraderApi_57 swigDelegate57;
  private SwigDelegateCThostFtdcTraderApi_58 swigDelegate58;
  private SwigDelegateCThostFtdcTraderApi_59 swigDelegate59;
  private SwigDelegateCThostFtdcTraderApi_60 swigDelegate60;
  private SwigDelegateCThostFtdcTraderApi_61 swigDelegate61;
  private SwigDelegateCThostFtdcTraderApi_62 swigDelegate62;
  private SwigDelegateCThostFtdcTraderApi_63 swigDelegate63;
  private SwigDelegateCThostFtdcTraderApi_64 swigDelegate64;
  private SwigDelegateCThostFtdcTraderApi_65 swigDelegate65;
  private SwigDelegateCThostFtdcTraderApi_66 swigDelegate66;
  private SwigDelegateCThostFtdcTraderApi_67 swigDelegate67;
  private SwigDelegateCThostFtdcTraderApi_68 swigDelegate68;
  private SwigDelegateCThostFtdcTraderApi_69 swigDelegate69;
  private SwigDelegateCThostFtdcTraderApi_70 swigDelegate70;
  private SwigDelegateCThostFtdcTraderApi_71 swigDelegate71;
  private SwigDelegateCThostFtdcTraderApi_72 swigDelegate72;
  private SwigDelegateCThostFtdcTraderApi_73 swigDelegate73;

  private static global::System.Type[] swigMethodTypes0 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes1 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes2 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes3 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes4 = new global::System.Type[] { typeof(string) };
  private static global::System.Type[] swigMethodTypes5 = new global::System.Type[] { typeof(string) };
  private static global::System.Type[] swigMethodTypes6 = new global::System.Type[] { typeof(CThostFtdcFensUserInfoField) };
  private static global::System.Type[] swigMethodTypes7 = new global::System.Type[] { typeof(CThostFtdcTraderSpi) };
  private static global::System.Type[] swigMethodTypes8 = new global::System.Type[] { typeof(THOST_TE_RESUME_TYPE) };
  private static global::System.Type[] swigMethodTypes9 = new global::System.Type[] { typeof(THOST_TE_RESUME_TYPE) };
  private static global::System.Type[] swigMethodTypes10 = new global::System.Type[] { typeof(CThostFtdcReqAuthenticateField), typeof(int) };
  private static global::System.Type[] swigMethodTypes11 = new global::System.Type[] { typeof(CThostFtdcReqUserLoginField), typeof(int) };
  private static global::System.Type[] swigMethodTypes12 = new global::System.Type[] { typeof(CThostFtdcUserLogoutField), typeof(int) };
  private static global::System.Type[] swigMethodTypes13 = new global::System.Type[] { typeof(CThostFtdcUserPasswordUpdateField), typeof(int) };
  private static global::System.Type[] swigMethodTypes14 = new global::System.Type[] { typeof(CThostFtdcTradingAccountPasswordUpdateField), typeof(int) };
  private static global::System.Type[] swigMethodTypes15 = new global::System.Type[] { typeof(CThostFtdcInputOrderField), typeof(int) };
  private static global::System.Type[] swigMethodTypes16 = new global::System.Type[] { typeof(CThostFtdcParkedOrderField), typeof(int) };
  private static global::System.Type[] swigMethodTypes17 = new global::System.Type[] { typeof(CThostFtdcParkedOrderActionField), typeof(int) };
  private static global::System.Type[] swigMethodTypes18 = new global::System.Type[] { typeof(CThostFtdcInputOrderActionField), typeof(int) };
  private static global::System.Type[] swigMethodTypes19 = new global::System.Type[] { typeof(CThostFtdcQueryMaxOrderVolumeField), typeof(int) };
  private static global::System.Type[] swigMethodTypes20 = new global::System.Type[] { typeof(CThostFtdcSettlementInfoConfirmField), typeof(int) };
  private static global::System.Type[] swigMethodTypes21 = new global::System.Type[] { typeof(CThostFtdcRemoveParkedOrderField), typeof(int) };
  private static global::System.Type[] swigMethodTypes22 = new global::System.Type[] { typeof(CThostFtdcRemoveParkedOrderActionField), typeof(int) };
  private static global::System.Type[] swigMethodTypes23 = new global::System.Type[] { typeof(CThostFtdcInputExecOrderField), typeof(int) };
  private static global::System.Type[] swigMethodTypes24 = new global::System.Type[] { typeof(CThostFtdcInputExecOrderActionField), typeof(int) };
  private static global::System.Type[] swigMethodTypes25 = new global::System.Type[] { typeof(CThostFtdcInputForQuoteField), typeof(int) };
  private static global::System.Type[] swigMethodTypes26 = new global::System.Type[] { typeof(CThostFtdcInputQuoteField), typeof(int) };
  private static global::System.Type[] swigMethodTypes27 = new global::System.Type[] { typeof(CThostFtdcInputQuoteActionField), typeof(int) };
  private static global::System.Type[] swigMethodTypes28 = new global::System.Type[] { typeof(CThostFtdcInputCombActionField), typeof(int) };
  private static global::System.Type[] swigMethodTypes29 = new global::System.Type[] { typeof(CThostFtdcQryOrderField), typeof(int) };
  private static global::System.Type[] swigMethodTypes30 = new global::System.Type[] { typeof(CThostFtdcQryTradeField), typeof(int) };
  private static global::System.Type[] swigMethodTypes31 = new global::System.Type[] { typeof(CThostFtdcQryInvestorPositionField), typeof(int) };
  private static global::System.Type[] swigMethodTypes32 = new global::System.Type[] { typeof(CThostFtdcQryTradingAccountField), typeof(int) };
  private static global::System.Type[] swigMethodTypes33 = new global::System.Type[] { typeof(CThostFtdcQryInvestorField), typeof(int) };
  private static global::System.Type[] swigMethodTypes34 = new global::System.Type[] { typeof(CThostFtdcQryTradingCodeField), typeof(int) };
  private static global::System.Type[] swigMethodTypes35 = new global::System.Type[] { typeof(CThostFtdcQryInstrumentMarginRateField), typeof(int) };
  private static global::System.Type[] swigMethodTypes36 = new global::System.Type[] { typeof(CThostFtdcQryInstrumentCommissionRateField), typeof(int) };
  private static global::System.Type[] swigMethodTypes37 = new global::System.Type[] { typeof(CThostFtdcQryExchangeField), typeof(int) };
  private static global::System.Type[] swigMethodTypes38 = new global::System.Type[] { typeof(CThostFtdcQryProductField), typeof(int) };
  private static global::System.Type[] swigMethodTypes39 = new global::System.Type[] { typeof(CThostFtdcQryInstrumentField), typeof(int) };
  private static global::System.Type[] swigMethodTypes40 = new global::System.Type[] { typeof(CThostFtdcQryDepthMarketDataField), typeof(int) };
  private static global::System.Type[] swigMethodTypes41 = new global::System.Type[] { typeof(CThostFtdcQrySettlementInfoField), typeof(int) };
  private static global::System.Type[] swigMethodTypes42 = new global::System.Type[] { typeof(CThostFtdcQryTransferBankField), typeof(int) };
  private static global::System.Type[] swigMethodTypes43 = new global::System.Type[] { typeof(CThostFtdcQryInvestorPositionDetailField), typeof(int) };
  private static global::System.Type[] swigMethodTypes44 = new global::System.Type[] { typeof(CThostFtdcQryNoticeField), typeof(int) };
  private static global::System.Type[] swigMethodTypes45 = new global::System.Type[] { typeof(CThostFtdcQrySettlementInfoConfirmField), typeof(int) };
  private static global::System.Type[] swigMethodTypes46 = new global::System.Type[] { typeof(CThostFtdcQryInvestorPositionCombineDetailField), typeof(int) };
  private static global::System.Type[] swigMethodTypes47 = new global::System.Type[] { typeof(CThostFtdcQryCFMMCTradingAccountKeyField), typeof(int) };
  private static global::System.Type[] swigMethodTypes48 = new global::System.Type[] { typeof(CThostFtdcQryEWarrantOffsetField), typeof(int) };
  private static global::System.Type[] swigMethodTypes49 = new global::System.Type[] { typeof(CThostFtdcQryInvestorProductGroupMarginField), typeof(int) };
  private static global::System.Type[] swigMethodTypes50 = new global::System.Type[] { typeof(CThostFtdcQryExchangeMarginRateField), typeof(int) };
  private static global::System.Type[] swigMethodTypes51 = new global::System.Type[] { typeof(CThostFtdcQryExchangeMarginRateAdjustField), typeof(int) };
  private static global::System.Type[] swigMethodTypes52 = new global::System.Type[] { typeof(CThostFtdcQryExchangeRateField), typeof(int) };
  private static global::System.Type[] swigMethodTypes53 = new global::System.Type[] { typeof(CThostFtdcQrySecAgentACIDMapField), typeof(int) };
  private static global::System.Type[] swigMethodTypes54 = new global::System.Type[] { typeof(CThostFtdcQryProductExchRateField), typeof(int) };
  private static global::System.Type[] swigMethodTypes55 = new global::System.Type[] { typeof(CThostFtdcQryOptionInstrTradeCostField), typeof(int) };
  private static global::System.Type[] swigMethodTypes56 = new global::System.Type[] { typeof(CThostFtdcQryOptionInstrCommRateField), typeof(int) };
  private static global::System.Type[] swigMethodTypes57 = new global::System.Type[] { typeof(CThostFtdcQryExecOrderField), typeof(int) };
  private static global::System.Type[] swigMethodTypes58 = new global::System.Type[] { typeof(CThostFtdcQryForQuoteField), typeof(int) };
  private static global::System.Type[] swigMethodTypes59 = new global::System.Type[] { typeof(CThostFtdcQryQuoteField), typeof(int) };
  private static global::System.Type[] swigMethodTypes60 = new global::System.Type[] { typeof(CThostFtdcQryCombInstrumentGuardField), typeof(int) };
  private static global::System.Type[] swigMethodTypes61 = new global::System.Type[] { typeof(CThostFtdcQryCombActionField), typeof(int) };
  private static global::System.Type[] swigMethodTypes62 = new global::System.Type[] { typeof(CThostFtdcQryTransferSerialField), typeof(int) };
  private static global::System.Type[] swigMethodTypes63 = new global::System.Type[] { typeof(CThostFtdcQryAccountregisterField), typeof(int) };
  private static global::System.Type[] swigMethodTypes64 = new global::System.Type[] { typeof(CThostFtdcQryContractBankField), typeof(int) };
  private static global::System.Type[] swigMethodTypes65 = new global::System.Type[] { typeof(CThostFtdcQryParkedOrderField), typeof(int) };
  private static global::System.Type[] swigMethodTypes66 = new global::System.Type[] { typeof(CThostFtdcQryParkedOrderActionField), typeof(int) };
  private static global::System.Type[] swigMethodTypes67 = new global::System.Type[] { typeof(CThostFtdcQryTradingNoticeField), typeof(int) };
  private static global::System.Type[] swigMethodTypes68 = new global::System.Type[] { typeof(CThostFtdcQryBrokerTradingParamsField), typeof(int) };
  private static global::System.Type[] swigMethodTypes69 = new global::System.Type[] { typeof(CThostFtdcQryBrokerTradingAlgosField), typeof(int) };
  private static global::System.Type[] swigMethodTypes70 = new global::System.Type[] { typeof(CThostFtdcQueryCFMMCTradingAccountTokenField), typeof(int) };
  private static global::System.Type[] swigMethodTypes71 = new global::System.Type[] { typeof(CThostFtdcReqTransferField), typeof(int) };
  private static global::System.Type[] swigMethodTypes72 = new global::System.Type[] { typeof(CThostFtdcReqTransferField), typeof(int) };
  private static global::System.Type[] swigMethodTypes73 = new global::System.Type[] { typeof(CThostFtdcReqQueryAccountField), typeof(int) };
}

}
